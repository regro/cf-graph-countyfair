{
  "bad": false,
  "new_version": "0.8.0",
  "new_version_attempt_ts": {
    "0.5.0": 1758369189.0,
    "0.6.0": 1758379989.0,
    "0.7.0": 1758113589.0
  },
  "new_version_attempts": {
    "0.5.0": 6,
    "0.6.0": 3,
    "0.7.0": 77
  },
  "new_version_errors": {
    "0.5.0": "We found a problem parsing the recipe for version '0.5.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 38, column 3:\n      home: https://captum.ai\n      ^ (line: 38), 'found duplicate key \"dev_url\" with value \"https://github.com/pytorch/captum\" (original value: \"https://github.com/pytorch/captum\")',   in \"<unicode string>\", line 55, column 3:\n      dev_url: https://github.com/pyto ... \n      ^ (line: 55), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
    "0.6.0": "We found a problem parsing the recipe for version '0.6.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 38, column 3:\n      home: https://captum.ai\n      ^ (line: 38), 'found duplicate key \"dev_url\" with value \"https://github.com/pytorch/captum\" (original value: \"https://github.com/pytorch/captum\")',   in \"<unicode string>\", line 55, column 3:\n      dev_url: https://github.com/pyto ... \n      ^ (line: 55), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 513, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 492, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
    "0.7.0": "bot error (<a href=\"https://github.com/regro/cf-scripts/actions/runs/12769811074\">bot CI job</a>): main:\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/container_cli.py\", line 119, in _run_bot_task\n    data = func(attrs=attrs, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/container_cli.py\", line 225, in _migrate_feedstock\n    data = run_migration_local(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/migration_runner.py\", line 251, in run_migration_local\n    data[\"migrate_return_value\"] = migrator.migrate(\n                                   ^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/migrators/version.py\", line 218, in migrate\n    raise VersionMigrationError(\nconda_forge_tick.migrators.version.VersionMigrationError: The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '0.7.0' to make sure they exist!\n\nWe also found the following errors:\n\n - We found a problem parsing the recipe for version '0.7.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 39, column 3:\n      home: https://captum.ai\n      ^ (line: 39), 'found duplicate key \"dev_url\" with value \"https://github.com/pytorch/captum\" (original value: \"https://github.com/pytorch/captum\")',   in \"<unicode string>\", line 56, column 3:\n      dev_url: https://github.com/pyto ... \n      ^ (line: 56), '\n                    To suppress this check see:\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\n                    by default when using the new API.\n                    ')\n\ntraceback:\n  File \"/opt/autotick-bot/conda_forge_tick/update_recipe/version.py\", line 661, in update_version\n    cmeta = CondaMetaYAML(raw_meta_yaml)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/recipe_parser/_parser.py\", line 597, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/main.py\", line 451, in load\n    return constructor.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 116, in get_single_data\n    return self.construct_document(node)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 125, in construct_document\n    for _dummy in generator:\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1482, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1371, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 147, in construct_object\n    data = self.construct_non_recursive_object(node)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1482, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1372, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 278, in check_mapping_key\n    raise DuplicateKeyError(*args)\n\n\n"
  }
}