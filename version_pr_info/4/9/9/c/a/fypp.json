{
  "bad": false,
  "new_version": "3.2",
  "new_version_attempts": {
    "3.1": 29,
    "3.2": 0
  },
  "new_version_errors": {
    "3.1": "We found a problem parsing the recipe for version '3.1': \n\nDuplicateKeyError('while constructing a mapping', <ruamel.yaml.error.StringMark object at 0x7f30e5707510>, 'found duplicate key \"commands\" with value \"[\\'pip check\\']\" (original value: \"[\\'fypp --help\\']\")', <ruamel.yaml.error.StringMark object at 0x7f30e57076d0>, '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 472, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 455, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 343, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 113, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1469, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 146, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1563, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 295, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
    "3.2": "The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '3.2' to make sure they exist!\n\nWe also found the following errors:\n\n - We found a problem parsing the recipe for version '3.2': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 28, column 3:\n      commands:\n      ^ (line: 28), 'found duplicate key \"commands\" with value \"[\\'pip check\\']\" (original value: \"[\\'fypp --help\\']\")',   in \"<unicode string>\", line 30, column 3:\n      commands:\n      ^ (line: 30), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/update_recipe/version.py\", line 411, in update_version\n    cmeta = CondaMetaYAML(raw_meta_yaml)\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 514, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/main.py\", line 451, in load\n    return constructor.get_single_data()\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 114, in get_single_data\n    return self.construct_document(node)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 123, in construct_document\n    for _dummy in generator:\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 1359, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 145, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 186, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 1470, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 1360, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.10/site-packages/ruamel/yaml/constructor.py\", line 276, in check_mapping_key\n    raise DuplicateKeyError(*args)\n\n"
  }
}