{
  "bad": false,
  "new_version": "1.11.3",
  "new_version_attempts": {
    "1.10.0": 1,
    "1.10.1": 1,
    "1.10.4": 10,
    "1.8.0": 1,
    "1.8.1": 1,
    "1.8.2": 1,
    "1.9.0": 1,
    "1.9.1": 1,
    "1.9.2": 1,
    "1.9.3": 1,
    "1.9.4": 1,
    "1.9.5": 1,
    "1.9.6": 1,
    "1.9.7": 1,
    "1.9.8": 1
  },
  "new_version_errors": {
    "1.10.4": "bot error (<a href=\"https://github.com/regro/cf-scripts/actions/runs/12349432477\">bot CI job</a>): main:\nError running 'conda-forge-tick-container migrate-feedstock --feedstock-name scanpy --default-branch main --existing-feedstock-node-attrs - --log-level info --kwargs {\n \"hash_type\": \"sha256\"\n}' in container - error VersionMigrationError raised:\n'The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '1.10.4' to make sure they exist!\n\nWe also found the following errors:\n\n - We found a problem parsing the recipe for version '1.10.4': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 50, column 3:\n      imports:\n      ^ (line: 50), 'found duplicate key \"commands\" with value \"[\\'python -c \\\\\\'import importlib.metadata as im; print(im.version(\"scanpy\"))\\\\\\'\\']\" (original value: \"[\\'scanpy\\']\")',   in \"<unicode string>\", line 56, column 3:\n      commands:\n      ^ (line: 56), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/opt/autotick-bot/conda_forge_tick/update_recipe/version.py\", line 661, in update_version\n    cmeta = CondaMetaYAML(raw_meta_yaml)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/recipe_parser/_parser.py\", line 597, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/main.py\", line 451, in load\n    return constructor.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 116, in get_single_data\n    return self.construct_document(node)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 125, in construct_document\n    for _dummy in generator:\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1476, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1365, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 147, in construct_object\n    data = self.construct_non_recursive_object(node)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 188, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1476, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 1366, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/ruamel/yaml/constructor.py\", line 278, in check_mapping_key\n    raise DuplicateKeyError(*args)\n\n'"
  }
}