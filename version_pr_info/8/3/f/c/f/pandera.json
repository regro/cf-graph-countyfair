{
  "bad": false,
  "new_version": "0.26.1",
  "new_version_attempts": {
    "0.10.0": 3,
    "0.10.1": 3,
    "0.11.0": 1,
    "0.12.0": 1,
    "0.13.1": 1,
    "0.13.2": 1,
    "0.13.3": 1,
    "0.13.4": 1,
    "0.14.0": 1,
    "0.14.2": 1,
    "0.14.3": 1,
    "0.14.4": 1,
    "0.14.5": 1,
    "0.15.0": 1,
    "0.15.1": 1,
    "0.15.2": 1,
    "0.16.0": 1,
    "0.16.1": 1,
    "0.17.0": 1,
    "0.17.1": 1,
    "0.17.2": 1,
    "0.18.0": 1,
    "0.18.1": 1,
    "0.18.2": 1,
    "0.18.3": 1,
    "0.19.0": 1,
    "0.19.1": 1,
    "0.19.2": 1,
    "0.19.3": 1,
    "0.4.0": 1,
    "0.4.1": 1,
    "0.4.2": 1,
    "0.4.3": 1,
    "0.4.4": 1,
    "0.4.5": 1,
    "0.5.0": 1,
    "0.5.1": 1,
    "0.6.0": 1,
    "0.6.1": 1,
    "0.6.2": 1,
    "0.6.3": 1,
    "0.6.4": 1,
    "0.6.5": 1,
    "0.7.0": 1,
    "0.7.1": 1,
    "0.7.2": 1,
    "0.8.0": 1,
    "0.8.1": 1,
    "0.9.0": 1
  },
  "new_version_errors": {
    "0.10.0": "We found a problem parsing the recipe for version '0.10.0': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n",
    "0.10.1": "We found a problem parsing the recipe for version '0.10.1': \n\nDuplicateKeyError('while constructing a mapping',   in \"<unicode string>\", line 16, column 5:\n      - name: pandera-base\n        ^ (line: 16), 'found duplicate key \"test\" with value \"ordereddict([(\\'imports\\', [\\'pandera\\'])])\" (original value: \"ordereddict([(\\'requires\\', [\\'pip\\']), (\\'imports\\', [\\'pandera\\']), (\\'commands\\', [\\'pip check\\'])])\")',   in \"<unicode string>\", line 45, column 5:\n        test:\n        ^ (line: 45), '\\n                    To suppress this check see:\\n                        http://yaml.readthedocs.io/en/latest/api.html#duplicate-keys\\n                    ', '                    Duplicate keys will become an error in future releases, and are errors\\n                    by default when using the new API.\\n                    ')\n\ntraceback:\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/migrators/version.py\", line 509, in migrate\n    cmeta = CondaMetaYAML(fp.read())\n  File \"/home/runner/work/autotick-bot/autotick-bot/cf-scripts/conda_forge_tick/recipe_parser/_parser.py\", line 494, in __init__\n    self.meta = self._parser.load(\"\".join(lines))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/main.py\", line 434, in load\n    return constructor.get_single_data()\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 121, in get_single_data\n    return self.construct_document(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 131, in construct_document\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1452, in construct_mapping\n    value = self.construct_object(value_node, deep=deep)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1561, in construct_yaml_seq\n    data.extend(self.construct_rt_sequence(node, data))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1293, in construct_rt_sequence\n    ret_val.append(self.construct_object(child, deep=deep))\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 154, in construct_object\n    data = self.construct_non_recursive_object(node)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 196, in construct_non_recursive_object\n    for _dummy in generator:\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1569, in construct_yaml_map\n    self.construct_mapping(node, data, deep=True)\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 1453, in construct_mapping\n    if self.check_mapping_key(node, key_node, maptyp, key, value):\n  File \"/usr/share/miniconda3/envs/run_env/lib/python3.9/site-packages/ruamel/yaml/constructor.py\", line 294, in check_mapping_key\n    raise DuplicateKeyError(*args)\n"
  }
}