{
  "tests.integer_error": {
    "__set__": true,
    "elements": [
      "tranquilizer"
    ]
  },
  "tests.integration": {
    "__set__": true,
    "elements": [
      "aloe",
      "climix",
      "dartpy",
      "fair-research-login",
      "globus-cli",
      "globus-compute-endpoint",
      "globus-sdk",
      "gpflow",
      "graypy",
      "great-expectations",
      "histolab",
      "inquirer",
      "lightwood",
      "looker-sdk",
      "neo4j-python-driver",
      "pdfstream",
      "quilt",
      "quilt3",
      "rivgraph",
      "small-text",
      "tabpy"
    ]
  },
  "tests.integration.advanced": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.advanced.test_array": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.advanced.test_custom_modules": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.advanced.test_text_input": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.advanced.test_timeseries": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_airline": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_analyze_dataset": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_categorical": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_cleaner": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_ensembles": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_jsonai": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_model_selection": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_qclassic": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_regression": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_save_and_load": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.basic.test_weird_target_dist": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.integration.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.classifiers.test_svm": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.conftest": {
    "__set__": true,
    "elements": [
      "climix",
      "fair-research-login",
      "globus-compute-endpoint",
      "neo4j-python-driver",
      "rivgraph"
    ]
  },
  "tests.integration.console_render": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.helper": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_basic": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_checkbox": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_confirm": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_editor": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_list": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_password": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.console_render.test_text": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.integration.endpoint": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.conftest": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_endpoint": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_endpoint_manager": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_gcengine_shell_functions": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_gcengine_strategy": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_interchange": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.endpoint.test_interchange_with_rabbit": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.high_throughput": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.high_throughput.test_gce_container": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.high_throughput.test_htex_regression": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.high_throughput.test_manager": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.high_throughput.test_worker_map": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.mock_executors": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.test_gcengine_retries": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.endpoint.executors.test_mpiengine": {
    "__set__": true,
    "elements": [
      "globus-compute-endpoint"
    ]
  },
  "tests.integration.examples": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_autocommit_transaction_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_basic_auth_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_connection_pool_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_connection_timeout_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_max_retry_time_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_secure_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_trust_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_config_unencrypted_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_custom_auth_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_custom_resolver_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_cypher_error_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_database_selection_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_driver_introduction_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_driver_lifecycle_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_hello_world_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_kerberos_auth_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_pass_bookmarks_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_read_write_transaction_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_result_consume_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_result_retain_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_service_unavailable_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_session_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.examples.test_transaction_function_example": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.helper": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.integ_test_base": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.io": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.small_text": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.classifiers.test_classification": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.classifiers.test_base": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.classifiers.test_kimcnn_embeddings": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.models": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.models.test_kimcnn": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.query_strategies.test_query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.query_strategies.test_query_strategy_bald": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.test_datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.test_model_selection": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.test_query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.pytorch.test_serialization": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.classifiers.test_classification": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.classifiers.test_setfit": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.query_strategies.test_dal": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.query_strategies.test_query_strategy_bald": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.test_datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.test_serialization": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.utils": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.integrations.transformers.utils.test_setfit": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.query_strategies.test_multi_label": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.query_strategies.test_query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.small_text.test_serialization": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.integration.test_arrow_server": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_auth": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_auth_client_flow": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.integration.test_autocommit": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_bolt_driver": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_bookmarking": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_chunked_logging": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.test_client_credentials_token_confidential_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.integration.test_client_refresh": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.integration.test_common_logging": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.test_confidential_client_flow": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.integration.test_core_types": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_custom_evaluate_timeout": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_debugging_fields": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.test_delta_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_deploy_and_evaluate_model": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_and_evaluate_model_auth_on": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_and_evaluate_model_ssl": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_model_ssl_off_auth_off": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_model_ssl_off_auth_on": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_model_ssl_on_auth_off": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_deploy_model_ssl_on_auth_on": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_directionality_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_dynamic_shapes": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.integration.test_errors_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_evaluate": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_explicit_tx": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_extra_fields": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.test_graph_types": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_gzip": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_im_utils_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_image_filters": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_indices": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.integration.test_jmespath_output": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.integration.test_joint_force_torque": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.integration.test_ln_utils_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_login": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.integration.test_main": {
    "__set__": true,
    "elements": [
      "pdfstream"
    ]
  },
  "tests.integration.test_mask_utils_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_masks": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_method_equivalence": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.integration.test_methods": {
    "__set__": true,
    "elements": [
      "looker-sdk"
    ]
  },
  "tests.integration.test_morphological_filters": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_native_client_flow": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.integration.test_neo4j_driver": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_netrc": {
    "__set__": true,
    "elements": [
      "looker-sdk"
    ]
  },
  "tests.integration.test_network_io_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_notebooks": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.integration.test_packages": {
    "__set__": true,
    "elements": [
      "quilt",
      "quilt3"
    ]
  },
  "tests.integration.test_pipelines": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_readme": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_refresh_token_auth_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.integration.test_result": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_result_data": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_result_graph": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_river_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_river_utils_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_scorer": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_simple": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.integration.test_slide": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_spatial_types": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_status_issue": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.integration.test_summary": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_synthetic_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_temporal_types": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_tile": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_tiler": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_tools": {
    "__set__": true,
    "elements": [
      "pdfstream"
    ]
  },
  "tests.integration.test_tx_functions": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.integration.test_url": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_url_ssl": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.integration.test_util": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.integration.test_verbosity_int": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.integration.test_workflows": {
    "__set__": true,
    "elements": [
      "quilt3"
    ]
  },
  "tests.integration.usage_statistics": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.integration.usage_statistics.instantiate_context_with_usage_statistics": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.integration.usage_statistics.test_integration_usage_statistics": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.integration_evaluation": {
    "__set__": true,
    "elements": [
      "marinvaders"
    ]
  },
  "tests.integration_test": {
    "__set__": true,
    "elements": [
      "llnl-sina"
    ]
  },
  "tests.integration_tests": {
    "__set__": true,
    "elements": [
      "explainerdashboard",
      "optuna"
    ]
  },
  "tests.integration_tests.allennlp_tests": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.allennlp_tests.test_allennlp": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.allennlp_tests.tiny_single_id": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.conftest": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.integration_tests.lightgbm_tuner_tests": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.lightgbm_tuner_tests.test_alias": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.lightgbm_tuner_tests.test_optimize": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_catalyst": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_chainer": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_chainermn": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_cma": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_customdashboards": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.integration_tests.test_dashboards": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.integration_tests.test_fastai": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_integration": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_keras": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_lightgbm": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_mlflow": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_mxnet": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_pytorch_ignite": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_pytorch_lightning": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_sampler": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_sklearn": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_skopt": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_skorch": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_tensorboard": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_tensorflow": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_tfkeras": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integration_tests.test_xgboost": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.integrations": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.examples": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.examples.test_driftbif_simulation": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.examples.test_har_dataset": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.examples.test_robot_execution_failures": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.test_full_pipeline": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.test_notebooks": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.integrations.test_relevant_feature_extraction": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.internals": {
    "__set__": true,
    "elements": [
      "fragmenstein"
    ]
  },
  "tests.interop": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.interop.test_adapter": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.interop.test_calls": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.interpolation": {
    "__set__": true,
    "elements": [
      "amset"
    ]
  },
  "tests.interpolation.test_interpolate": {
    "__set__": true,
    "elements": [
      "amset"
    ]
  }
}