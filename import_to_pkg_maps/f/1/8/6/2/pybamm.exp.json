{
  "pybamm.experiment": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.experiment": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.step": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.step._steps_util": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.step.base_step": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.step.step_termination": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiment.step.steps": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiments": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.experiments.experiment": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.array": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.averages": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.binary_operators": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.broadcasts": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.concatenations": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.exceptions": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.functions": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.independent_variable": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.input_parameter": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.interpolant": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.matrix": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.convert_to_casadi": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.evaluate": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.evaluate_julia": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.evaluate_python": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.jacobian": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.latexify": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.replace_symbols": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.serialise": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.simplify": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.operations.unpack_symbols": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.parameter": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.printing": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.printing.print_name": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.printing.sympy_overrides": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.scalar": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.state_vector": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.symbol": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.unary_operators": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.variable": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  },
  "pybamm.expression_tree.vector": {
    "__set__": true,
    "elements": [
      "pybamm"
    ]
  }
}