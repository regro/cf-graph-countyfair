{
  "reactivex._version": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.disposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.observable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.observer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.periodicscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.scheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.startable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.abc.subject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.booleandisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.compositedisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.disposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.multipleassignmentdisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.refcountdisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.scheduleddisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.serialdisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.disposable.singleassignmentdisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.basic": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.concurrency": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.constants": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.exceptions": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.priorityqueue": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.internal.utils": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.notification": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.amb": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.case": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.catch": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.combinelatest": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.concat": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.connectableobservable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.defer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.empty": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.forkjoin": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.fromcallback": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.fromfuture": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.fromiterable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.generate": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.generatewithrelativetime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.groupedobservable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.ifthen": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.interval": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.marbles": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.merge": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.never": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.observable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.onerrorresumenext": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.range": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.repeat": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.returnvalue": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.start": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.startasync": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.throw": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.timer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.toasync": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.using": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.withlatestfrom": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observable.zip": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observer.autodetachobserver": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observer.observeonobserver": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observer.observer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.observer.scheduledobserver": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._all": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._amb": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._asobservable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._average": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._buffer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._bufferwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._bufferwithtimeorcount": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._catch": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._combinelatest": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._concat": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._contains": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._count": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._debounce": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._defaultifempty": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._delay": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._delaysubscription": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._delaywithmapper": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._dematerialize": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._distinct": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._distinctuntilchanged": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._do": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._dowhile": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._elementatordefault": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._exclusive": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._expand": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._filter": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._finallyaction": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._find": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._first": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._firstordefault": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._flatmap": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._forkjoin": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._groupby": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._groupbyuntil": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._groupjoin": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._ignoreelements": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._isempty": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._join": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._last": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._lastordefault": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._map": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._materialize": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._max": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._maxby": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._merge": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._min": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._minby": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._multicast": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._observeon": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._onerrorresumenext": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._pairwise": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._partition": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._pluck": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._publish": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._publishvalue": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._reduce": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._repeat": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._replay": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._retry": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._sample": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._scan": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._sequenceequal": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._single": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._singleordefault": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skip": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skiplast": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skiplastwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skipuntil": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skipuntilwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skipwhile": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._skipwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._slice": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._some": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._startswith": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._subscribeon": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._sum": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._switchlatest": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._take": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takelast": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takelastbuffer": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takelastwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takeuntil": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takeuntilwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takewhile": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._takewithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._throttlefirst": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._timeinterval": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._timeout": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._timeoutwithmapper": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._timestamp": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._todict": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._tofuture": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._toiterable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._tomarbles": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._toset": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._whiledo": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._window": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._windowwithcount": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._windowwithtime": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._windowwithtimeorcount": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._withlatestfrom": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators._zip": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators.connectable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.operators.connectable._refcount": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.pipe": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.run": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.catchscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.currentthreadscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.asyncioscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.asynciothreadsafescheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.eventletscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.geventscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.ioloopscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloop.twistedscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.eventloopscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.historicalscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.immediatescheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop.gtkscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop.pygamescheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop.qtscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop.tkinterscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.mainloop.wxscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.newthreadscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.periodicscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.scheduleditem": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.scheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.threadpoolscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.timeoutscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.trampoline": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.trampolinescheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.scheduler.virtualtimescheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject.asyncsubject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject.behaviorsubject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject.innersubscription": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject.replaysubject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.subject.subject": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.coldobservable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.hotobservable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.marbles": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.mockdisposable": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.mockobserver": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.reactivetest": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.recorded": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.subscription": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.testing.testscheduler": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  },
  "reactivex.typing": {
    "__set__": true,
    "elements": [
      "reactivex"
    ]
  }
}