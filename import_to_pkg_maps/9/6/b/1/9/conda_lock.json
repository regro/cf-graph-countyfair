{
  "conda_lock": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.appdirs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.boltons": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.boltons.setutils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.boltons.timeutils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.cpuinfo": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.cpuinfo.cpuinfo": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.distro": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.frozendict": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.six": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz.compatibility": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz.dicttoolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz.itertoolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz.recipes": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.toolz.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm._main": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm._monitor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm._tqdm": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm._utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.asyncio": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.auto": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.cli": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.std": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda._vendor.tqdm.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.activate": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.collection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.decorators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.entity": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.ish": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.logz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.packaging": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.auxlib.type_coercion": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.base": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.base.constants": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.base.context": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.base.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.conda_argparse": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.find_commands": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_clean": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_compare": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_config": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_create": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_init": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_list": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_notices": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_pip": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_remove": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_rename": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_run": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_search": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.main_update": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.cli.python_api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common._logic": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common._os": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common._os.linux": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common._os.unix": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common._os.windows": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.configuration": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.constants": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.cuda": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.decorators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.disk": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.io": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.logic": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.path": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.pkg_formats": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.pkg_formats.python": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.serialize": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.signals": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.toposort": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.common.url": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.envs_manager": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.index": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.initialize": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.link": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.package_cache": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.package_cache_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.path_actions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.portability": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.prefix_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.solve": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.core.subdir_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.exports": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.anaconda_client": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.adapters": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.adapters.ftp": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.adapters.localfs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.adapters.s3": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.download": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.connection.session": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.create": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.delete": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.link": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.permissions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.read": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.test": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.disk.update": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.logging": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.gateways.subprocess": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.history": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.instructions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.lock": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.misc": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.channel": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.dist": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.enums": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.leased_path_entry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.match_spec": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.package_info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.prefix_graph": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.records": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.models.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices.cache": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices.core": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices.http": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices.types": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.notices.views": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.plan": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.resolve": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.cases": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.decorators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.fixtures": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.gateways": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.gateways.fixtures": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.integration": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.notices": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.notices.fixtures": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.notices.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.testing.solver_helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.trust": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.trust.constants": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.trust.signature_verification": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.conda.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.__version__": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.config": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.config.config": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.config.config_source": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.config.dict_config_source": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.config.file_config_source": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._config": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._funcs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._make": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._next_gen": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr._version_info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr.converters": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr.filters": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr.setters": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.attr.validators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._format": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._legacy_validators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._reflect": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._types": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema._validators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.benchmarks": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.benchmarks.issue232": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.benchmarks.json_schema_test_suite": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.cli": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.jsonschema.validators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.__pyinstaller": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.__pyinstaller.hook-lark": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.grammar": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.indenter": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.lark": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.lexer": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.load_grammar": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parse_tree_builder": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parser_frontends": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.cyk": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.earley": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.earley_common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.earley_forest": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.grammar_analysis": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.lalr_analysis": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.lalr_parser": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.lalr_puppet": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.parsers.xearley": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.reconstruct": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.reconstruct2": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.tools": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.tools.nearley": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.tools.serialize": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.tools.standalone": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.tree": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.lark.visitors": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.__about__": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging._structures": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging._typing": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.markers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.requirements": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.specifiers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.tags": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.packaging.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._checked_types": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._field_common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._immutable": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pbag": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pclass": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pdeque": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._plist": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pmap": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._precord": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pset": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._pvector": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._toolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent._transformations": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.pyrsistent.typing": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit._utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.container": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.items": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.parser": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.source": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.toml_char": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.toml_document": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core._vendor.tomlkit.toml_file": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.exceptions.base": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.factory": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.json": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.builder": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.builders": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.builders.builder": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.builders.sdist": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.builders.wheel": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.metadata": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.utils.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.utils.include": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.utils.module": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.masonry.utils.package_include": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.any_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.base_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.empty_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.multi_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.constraints.union_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.dependency": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.directory_dependency": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.file_dependency": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.project_package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.specification": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.url_dependency": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.utils.link": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.utils.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.packages.vcs_dependency": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.poetry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.pyproject": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.pyproject.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.pyproject.tables": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.pyproject.toml": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.empty_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.patterns": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.version_constraint": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.version_range": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.semver.version_union": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.spdx": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.spdx.license": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.spdx.updater": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.toml": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.toml.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.toml.file": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.utils._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.utils.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.utils.patterns": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.utils.toml_file": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.vcs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.vcs.git": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.base": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.grammars": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.legacy_version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.markers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.requirements": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.core.version.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.factory": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.inspection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.inspection.info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.authenticator": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.base_installer": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.chef": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.chooser": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.executor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.installer": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.noop_installer": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.operations": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.operations.install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.operations.operation": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.operations.uninstall": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.operations.update": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.installation.pip_installer": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.io": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.io.null_io": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.json": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.layouts": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.layouts.layout": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.layouts.src": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.layouts.standard": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.locations": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.masonry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.masonry.api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.masonry.builders": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.masonry.builders.editable": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.assignment": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.failure": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.incompatibility": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.incompatibility_cause": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.partial_solution": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.result": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.set_relation": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.solutions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.solutions.providers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.solutions.providers.python_requirement_solution_provider": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.solutions.solutions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.solutions.solutions.python_requirement_solution": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.term": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.mixology.version_solver": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.packages": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.packages.dependency_package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.packages.locker": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.packages.package_collection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.poetry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.puzzle": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.puzzle.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.puzzle.provider": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.puzzle.solver": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.base_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.installed_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.legacy_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.pool": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.pypi_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.remote_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.repositories.repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils._compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.appdirs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.env": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.exporter": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.extras": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.password_manager": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.patterns": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.utils.setup_reader": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock._vendor.poetry.version.version_selector": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.click_helpers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.conda_lock": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.conda_solver": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.errors": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.invoke_conda": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lockfile": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lockfile.v1": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lockfile.v1.models": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lockfile.v2prelim": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lockfile.v2prelim.models": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.lookup": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.models": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.models.channel": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.models.lock_spec": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.models.pip_repository": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.models.test_channel": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.pypi_solver": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.aggregation": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.conda_common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.environment_yaml": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.lockfile": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.meta_yaml": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.poetry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.pyproject_toml": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.src_parser.selectors": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.appdirs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.boltons": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.boltons.setutils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.boltons.timeutils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.cpuinfo": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.distro": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.frozendict": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz.compatibility": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz.dicttoolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz.itertoolz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz.recipes": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.toolz.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm._main": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm._monitor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm._tqdm": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm._utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.asyncio": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.auto": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.cli": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.contrib": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.contrib.concurrent": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.contrib.itertools": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.std": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.tqdm.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.urllib3": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.urllib3.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.urllib3.util": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda._vendor.urllib3.util.url": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.activate": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib._vendor": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib._vendor.boltons": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib._vendor.boltons.timeutils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib._vendor.five": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib._vendor.six": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.collection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.configuration": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.crypt": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.decorators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.deprecation": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.entity": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.factory": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.ish": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.logz": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.packaging": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.path": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.auxlib.type_coercion": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.base": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.base.constants": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.base.context": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.base.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.activate": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.conda_argparse": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.find_commands": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_clean": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_compare": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_config": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_create": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_help": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_init": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_list": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_pip": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_remove": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_run": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_search": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.main_update": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.parsers": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.cli.python_api": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common._logic": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common._os": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common._os.linux": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common._os.unix": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common._os.windows": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.configuration": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.constants": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.cuda": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.decorators": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.disk": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.io": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.logic": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.path": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.pkg_formats": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.pkg_formats.python": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.serialize": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.signals": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.toposort": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.common.url": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.compat": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.envs_manager": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.index": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.initialize": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.link": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.package_cache": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.package_cache_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.path_actions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.portability": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.prefix_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.solve": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.core.subdir_data": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.exports": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.anaconda_client": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.adapters": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.adapters.ftp": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.adapters.localfs": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.adapters.s3": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.download": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.connection.session": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.create": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.delete": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.link": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.permissions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.read": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.test": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.disk.update": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.logging": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.gateways.subprocess": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.history": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.install": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.instructions": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.lock": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.misc": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.channel": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.dist": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.enums": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.leased_path_entry": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.match_spec": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.package_info": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.prefix_graph": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.records": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.models.version": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.plan": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.resolve": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.vendor.conda.utils": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lock.virtual_package": {
    "__set__": true,
    "elements": [
      "conda-lock"
    ]
  },
  "conda_lockfiles": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles._version": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.conda_lock": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.conda_lock.v1": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.exceptions": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.load_yaml": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.plugin": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.rattler_lock": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.rattler_lock.v6": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.records_from_conda_urls": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  },
  "conda_lockfiles.validate_urls": {
    "__set__": true,
    "elements": [
      "conda-lockfiles"
    ]
  }
}