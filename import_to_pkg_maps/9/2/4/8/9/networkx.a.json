{
  "networkx.algorithms": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.clique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.clustering_coefficient": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.distance_measures": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.dominating_set": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.independent_set": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.maxcut": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.ramsey": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.steinertree": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_approx_clust_coeff": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_clique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_distance_measures": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_dominating_set": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_independent_set": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_maxcut": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_ramsey": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_steinertree": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_traveling_salesman": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_treewidth": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.tests.test_vertex_cover": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.traveling_salesman": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.treewidth": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.approximation.vertex_cover": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.correlation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.mixing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.neighbor_degree": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.pairs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.base_test": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.test_connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.test_correlation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.test_mixing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.test_neighbor_degree": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.assortativity.tests.test_pairs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.asteroidal": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.basic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.cluster": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.covering": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.edgelist": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.extendability": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.generators": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.matrix": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.projection": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.redundancy": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.spectral": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_basic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_cluster": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_covering": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_edgelist": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_extendability": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_generators": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_matrix": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_project": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_redundancy": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bipartite.tests.test_spectral_bipartivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.block": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.boundary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.bridges": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.betweenness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.betweenness_subset": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.closeness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.communicability_alg": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.current_flow_betweenness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.current_flow_betweenness_subset": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.current_flow_closeness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.degree_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.dispersion": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.eigenvector": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.flow_matrix": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.group": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.harmonic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.katz": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.laplacian": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.load": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.percolation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.reaching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.second_order": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.subgraph_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_betweenness_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_closeness_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_current_flow_closeness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_degree_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_dispersion": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_eigenvector_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_group": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_harmonic_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_katz_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_laplacian_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_load_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_percolation_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_reaching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_second_order_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_subgraph": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_trophic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.tests.test_voterank": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.trophic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.centrality.voterank_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.chains": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.chordal": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.chordal.chordal_alg": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.clique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.cluster": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.coloring": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.coloring.equitable_coloring": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.coloring.greedy_coloring": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.coloring.greedy_coloring_with_interchange": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.coloring.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.coloring.tests.test_coloring": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.communicability_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.asyn_fluid": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.asyn_fluidc": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.community.asyn_lpa": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.community.centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.community_generators": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.community.community_utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.kclique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.kernighan_lin": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.label_propagation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.louvain": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.lukes": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.modularity_max": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.quality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_asyn_fluid": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_centrality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_kclique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_kernighan_lin": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_label_propagation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_louvain": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_lukes": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_modularity_max": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_quality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.community.tests.test_utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.attracting": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.biconnected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.semiconnected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.strongly_connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_attracting": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_biconnected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_semiconnected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_strongly_connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.tests.test_weakly_connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.components.weakly_connected": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.cuts": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.disjoint_paths": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.edge_augmentation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.edge_kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.kcutsets": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.stoerwagner": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_connectivity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_cuts": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_disjoint_paths": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_edge_augmentation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_edge_kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_kcomponents": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_kcutsets": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.tests.test_stoer_wagner": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.connectivity.utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.core": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.covering": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.cuts": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.cycles": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.d_separation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.dag": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.distance_measures": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.distance_regular": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.dominance": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.dominating": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.efficiency": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.efficiency_measures": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.euler": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.boykovkolmogorov": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.capacityscaling": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.dinitz_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.edmondskarp": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.gomory_hu": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.maxflow": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.mincost": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.networksimplex": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.preflowpush": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.shortestaugmentingpath": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests.test_gomory_hu": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests.test_maxflow": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests.test_maxflow_large_graph": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests.test_mincost": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.tests.test_networksimplex": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.flow.utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.graph_hashing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.graphical": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.hierarchy": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.hybrid": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isolate": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.ismags": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.isomorph": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.isomorphvf2": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.matchhelpers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.temporalisomorphvf2": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_ismags": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_isomorphism": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_isomorphvf2": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_match_helpers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_temporalisomorphvf2": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_tree_isomorphism": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_vf2pp": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_vf2pp_helpers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tests.test_vf2userfunc": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.tree_isomorphism": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.vf2pp": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.isomorphism.vf2userfunc": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis.hits_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis.pagerank_alg": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis.tests.test_hits": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_analysis.tests.test_pagerank": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.link_prediction": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.lowest_common_ancestors": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.minors": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.minors.contraction": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.mis": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.moral": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.mst": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.hmn": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.lgc": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.tests": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.tests.test_harmonic_function": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.tests.test_local_and_global_consistency": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.node_classification.utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.non_randomness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.all": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.binary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.product": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.tests.test_all": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.tests.test_binary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.tests.test_product": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.tests.test_unary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.operators.unary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.planar_drawing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.planarity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.polynomials": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.reciprocity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.regular": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.richclub": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.astar": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.dense": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.generic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_astar": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_dense": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_dense_numpy": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_generic": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_unweighted": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.tests.test_weighted": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.unweighted": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.shortest_paths.weighted": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.similarity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.simple_paths": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.smallworld": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.smetric": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.sparsifiers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.structuralholes": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.summarization": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.swap": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_asteroidal": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_boundary": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_bridges": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_chains": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_chordal": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_clique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_cluster": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_communicability": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_core": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_covering": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_cuts": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_cycles": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_d_separation": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_dag": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_distance_measures": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_distance_regular": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_dominance": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_dominating": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_efficiency": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_euler": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_graph_hashing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_graphical": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_hierarchy": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_hybrid": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_isolate": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_link_prediction": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_lowest_common_ancestors": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_matching": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_max_weight_clique": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_minors": {
    "__set__": true,
    "elements": [
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_mis": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_moral": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_node_classification": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_node_classification_deprecations": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_non_randomness": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_planar_drawing": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_planarity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_polynomials": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_reciprocity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_regular": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_richclub": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_similarity": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_simple_paths": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_smallworld": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_smetric": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_sparsifiers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_structuralholes": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_summarization": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_swap": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_threshold": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_time_dependent": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_tournament": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_triads": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_vitality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_voronoi": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_walks": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tests.test_wiener": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.threshold": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.time_dependent": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tournament": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.beamsearch": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.breadth_first_search": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.depth_first_search": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.edgebfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.edgedfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests.test_beamsearch": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests.test_bfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests.test_dfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests.test_edgebfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.traversal.tests.test_edgedfs": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.branchings": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.coding": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.decomposition": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.mst": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.operations": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.recognition": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_branchings": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_coding": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_decomposition": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_mst": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_operations": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.tree.tests.test_recognition": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.triads": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.vitality": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.voronoi": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.walks": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.algorithms.wiener": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  }
}