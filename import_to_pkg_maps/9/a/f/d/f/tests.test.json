{
  "tests.TestCQGI": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestCQSelectors": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestCadObjects": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestCadQuery": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestExporters": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestImporters": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestLogging": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.TestWorkplanes": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "tests.test": {
    "__set__": true,
    "elements": [
      "benchmark-4dn",
      "biothings_client",
      "dtw",
      "jaws",
      "python-fsutil",
      "rabpro"
    ]
  },
  "tests.test-confluence-attach": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test7": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.testDlm": {
    "__set__": true,
    "elements": [
      "pydlm"
    ]
  },
  "tests.test_000_PrepareDb": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_001_ConnDb": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_002_ConnDbUncatalogedConn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_003_NumAffectedRows": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_004_ConnWrongUserPwd": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_005_ConnBadUserBadPwd": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_006_ConnPassingOpts": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_007_pConnPassingOpts": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_008_ColumnInfo": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_010_UpdateRowCount": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_011_DeleteRowCount": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_012_KeysetDrivenCursorSelect01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_013_KeysetDrivenCursorSelect02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_014_KeysetDrivenCursorNegativeRow": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_015_InsertDeleteRowCount_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_016_InsertDeleteRowCount_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_017_selectRowcountPrefetchSTMTOpt": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_018_selectRowcountPrefetchSetOpt": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_019_selectRowcountPrefetchPrepOpt": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_020_RollbackDelete": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_021_CommitDelete": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_022_RollbackInsert": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_023_ColumnPrivileges": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_024_ForeignKeys": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_025_PrimaryKeys": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_030_Result": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_031_ResultIndexPosition": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_032_ResultIndexName": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_033_ResultOutSequenceColumn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_034_FetchAssoc": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_035_FetchRow_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_036_FetchRow_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_037_FetchRowIndexPos": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_038_FetchRowIndexPosNested_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_039_FetchRowIndexPosNested_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_03a_ResultNonExistCol": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_040_FetchTuple": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_041_FetchTupleMany_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_042_FetchTupleMany_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_043_FetchTupleMany_03": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_044_FetchTupleMany_04": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_045_FetchTupleBinaryData_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_046_FetchTupleMany_05": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_047_FetchTupleMany_06": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_048_FetchTupleBinaryData_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_049_InsertNoneParam": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_050_AutocommitStatus": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_051_SetAutocommit_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_052_SetAutocommit_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_053_AttrThruConn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_054_CursorType": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_060_Tables_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_061_Tables_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_062_Tables_03": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_063_Tables_04": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_064_Tables_05": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_065_FilterTableName": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_066_TableObjects": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_070_Close": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_071_CloseSuccess": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_080_ConnWrongDbAlias": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_081_ConnWrongUser": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_082_ConnWrongPwd": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_090_ConnmsgWrongDbAlias": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_091_ConnmsgWrongUser": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_092_ConnmsgWrongPwd": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_100_SelectDeleteInsertFieldCount": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_1010_to_1020": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_101_InsertDeleteFieldCount": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_102_NumFieldsSelect_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_103_NumFieldsSelect_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_110_FieldNum": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_111_FieldNumAddCol": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_112_FieldNumDiffCaseColNames": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_113_DateTest": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_114_NumericTest_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_115_NumericTest_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_116_ConnActive": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_120_FieldName": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_121_FieldNameAddCol": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_122_FieldNameDiffCaseColNames": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_123_FieldNamePos_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_124_FieldNamePos_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_125_FieldNamePos_03": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_130_PrepExecuteSelectStmt": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_131_PrepareExecuteSelectStatementParams": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_132_ExecuteStatementArrayMultipleParams": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_133_ExecuteLongInputParams": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_140_BindParamSelectStmt": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_141_BindParamSelectStmtMultipleParams_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_142_BindParamSelectStmtMultipleParams_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_143_BindParamInsertStmtNoneParam": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_144_BindParamInsertStmtPARAM_FILE": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_145_BindRetrieveNoneEmptyString": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_146_CallSPINAndOUTParams": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_147_PrepareWithWrongType": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_148_CallSPDiffBindPattern_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_150_FetchAssocSelect_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_151_FetchAssocSelect_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_152_FetchAssocSelect_03": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_153_FetchAssocSelect_04": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_154_AllFetches": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_155_FetchAssocSelect_05": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_156_FetchAssocNestedSelects_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_157_FetchAssocScrollableCursor_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_157a_FetchAssocWithoutScrollableCursorErr": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_157b_FetchAssocScrollableCursor_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_158_FetchAssocNestedSelects_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_159_FetchAssocSeveralRows_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_159a_FetchAssocSeveralRows_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_160_FetchBoth": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_161_FetchBothNestedSelects_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_162_FetchBothNestedSelects_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_180_StmtErrMsg": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_190_ColumnsTable_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_191_ColumnsTable_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_195_InsertRetrieveXMLData_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_196_InsertRetrieveXMLData_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_197_StatisticsIndexes": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_1D_ale": {
    "__set__": true,
    "elements": [
      "pyale"
    ]
  },
  "tests.test_1_xlsx": {
    "__set__": true,
    "elements": [
      "sheet2dict"
    ]
  },
  "tests.test_1st_system": {
    "__set__": true,
    "elements": [
      "andes",
      "ltbams"
    ]
  },
  "tests.test_200_MultipleRsltsetsUniformColDefs": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_2010_to_2110": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_2010_to_2310": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_201_MultipleRsltsetsDiffColDefs": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_210_FieldDisplaySize_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_211_FieldDisplaySize_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_212_FieldDisplaySize_03": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_213_FieldDisplaySize_04": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_220_PersistentConn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_221_100PersistentConns": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_230_FieldTypePos": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_231_FieldTypeName": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_232_FieldTypePosName": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_240_FieldWidthPosName_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_241_FieldWidthPosName_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_250_FreeResult_01": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_251_FreeResult_02": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_260_FetchTupleMany_07": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_261_FetchObjectAccess": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_264_InsertRetrieveBIGINTTypeColumn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_265_NoAffectedRows": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_2D_ale": {
    "__set__": true,
    "elements": [
      "pyale"
    ]
  },
  "tests.test_2_csv": {
    "__set__": true,
    "elements": [
      "sheet2dict"
    ]
  },
  "tests.test_2nd_order_grads": {
    "__set__": true,
    "elements": [
      "theano-pymc"
    ]
  },
  "tests.test_300_ServerInfo": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_310_ClientInfo": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_311_InsertSelectDeleteNumLiterals": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_3_xlsx": {
    "__set__": true,
    "elements": [
      "sheet2dict"
    ]
  },
  "tests.test_52949_TestSPIntVarcharXml": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_6528_ScopingProblemBindParam": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_6561_InsertNULLValues": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_6755_ExtraNULLChar_ResultCLOBCol": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_6792_FieldTypeRetStrDatetimeTimestamp": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_AudioClips": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_BaseTransform": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_Basic": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_BicgJacobi": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_Budget": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_BudgetAccountant": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_COREG": {
    "__set__": true,
    "elements": [
      "arosics"
    ]
  },
  "tests.test_COREG_LOCAL": {
    "__set__": true,
    "elements": [
      "arosics"
    ]
  },
  "tests.test_Collection": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_CompareTargetMolecule": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_Coumpound_setters": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_CustomSource": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_Descriptor": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_DoppelTestError": {
    "__set__": true,
    "elements": [
      "doppel-cli"
    ]
  },
  "tests.test_FasterRCNN": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_GOES": {
    "__set__": true,
    "elements": [
      "goes2go"
    ]
  },
  "tests.test_GbibClean": {
    "__set__": true,
    "elements": [
      "goosebib"
    ]
  },
  "tests.test_IO": {
    "__set__": true,
    "elements": [
      "open3spn2"
    ]
  },
  "tests.test_IOH_benchmarking": {
    "__set__": true,
    "elements": [
      "iohexperimenter"
    ]
  },
  "tests.test_IOH_function": {
    "__set__": true,
    "elements": [
      "iohexperimenter"
    ]
  },
  "tests.test_IOH_logger": {
    "__set__": true,
    "elements": [
      "iohexperimenter"
    ]
  },
  "tests.test_ImageSequenceClip": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_InsertRetrieveDateTimeTypeColumn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_IoU": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_JmaCsvCatalog": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_LoadingErrorException": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_Material": {
    "__set__": true,
    "elements": [
      "neutronics_material_maker"
    ]
  },
  "tests.test_Material_from_mixture": {
    "__set__": true,
    "elements": [
      "neutronics_material_maker"
    ]
  },
  "tests.test_Math": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_MathVector": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_MeasureSearch": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_Molecule": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_MoleculeSet": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_Multmaterial": {
    "__set__": true,
    "elements": [
      "neutronics_material_maker"
    ]
  },
  "tests.test_Mumps": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_Mutation": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_Noise2VoidDataGenerator": {
    "__set__": true,
    "elements": [
      "n2v"
    ]
  },
  "tests.test_Noise2VoidDataWrapper": {
    "__set__": true,
    "elements": [
      "n2v"
    ]
  },
  "tests.test_PR": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_Pardiso": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_Project": {
    "__set__": true,
    "elements": [
      "peppy"
    ]
  },
  "tests.test_Qinit": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_Scipy": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_Sensor": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_SeqLike": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SeqLikeAccessor": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SeqLike_alignment": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SeqLike_conversion_to_numerical": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SeqLike_magic_methods": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SeqLike_to_other_seq_formats": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SequenceLike": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_SimilarityMeasure": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_SimilarityMeasureValueErrors": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_TaskManager": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_TextClip": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_ToolTip": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_Triangle": {
    "__set__": true,
    "elements": [
      "pymatsolver",
      "pymatsolver-base"
    ]
  },
  "tests.test_VideoClip": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_VideoFileClip": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_Videos": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_WaterNetworkAnalysis": {
    "__set__": true,
    "elements": [
      "waternetworkanalysis"
    ]
  },
  "tests.test___init__": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test___main__": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test__env": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test__missing_optional_modules": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_aaSeqLike_ntSeqLike": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_abi": {
    "__set__": true,
    "elements": [
      "goes2go"
    ]
  },
  "tests.test_abspath": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_accel": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_accent": {
    "__set__": true,
    "elements": [
      "gruut-ipa"
    ]
  },
  "tests.test_accept": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_accessor": {
    "__set__": true,
    "elements": [
      "extract_model",
      "py-cordex"
    ]
  },
  "tests.test_accessors": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_account": {
    "__set__": true,
    "elements": [
      "o365"
    ]
  },
  "tests.test_accuracy": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_action": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_actions": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_active_cells": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_active_space": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_activitysim": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_actual_docstrings": {
    "__set__": true,
    "elements": [
      "mktestdocs"
    ]
  },
  "tests.test_adaptation": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_adapters": {
    "__set__": true,
    "elements": [
      "erdantic"
    ]
  },
  "tests.test_adaptive": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_adaptiveHistogram": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_add": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_addressing": {
    "__set__": true,
    "elements": [
      "andes",
      "ltbams"
    ]
  },
  "tests.test_adlfs": {
    "__set__": true,
    "elements": [
      "planetary-computer"
    ]
  },
  "tests.test_admin": {
    "__set__": true,
    "elements": [
      "wagtail-review"
    ]
  },
  "tests.test_advanced": {
    "__set__": true,
    "elements": [
      "markdownify"
    ]
  },
  "tests.test_adversary": {
    "__set__": true,
    "elements": [
      "artificial-adversary"
    ]
  },
  "tests.test_ae": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_affinities": {
    "__set__": true,
    "elements": [
      "fasttsne"
    ]
  },
  "tests.test_aggregation": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_aggregator": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_aio_subprocess": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.test_ale": {
    "__set__": true,
    "elements": [
      "pyale"
    ]
  },
  "tests.test_alg": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_algorithms": {
    "__set__": true,
    "elements": [
      "chebfun"
    ]
  },
  "tests.test_align": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_all": {
    "__set__": true,
    "elements": [
      "marinvaders",
      "pyet",
      "stemflow",
      "ukpopulation"
    ]
  },
  "tests.test_all_notebooks": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_all_sets": {
    "__set__": true,
    "elements": [
      "e3sm_diags"
    ]
  },
  "tests.test_an": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_analysis": {
    "__set__": true,
    "elements": [
      "plonk",
      "shakenbreak"
    ]
  },
  "tests.test_analysis_functions": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_analysis_input_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_input_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_list_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_list_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_status_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_status_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_submission_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analysis_submission_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_analyze": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_andes": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_andes_mats": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_angle_calculations": {
    "__set__": true,
    "elements": [
      "drawarrow"
    ]
  },
  "tests.test_animation": {
    "__set__": true,
    "elements": [
      "plonk"
    ]
  },
  "tests.test_animations": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_ann": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_annotation_vector": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_annotations": {
    "__set__": true,
    "elements": [
      "pyannote.core"
    ]
  },
  "tests.test_anon": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_anypath": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_apache_conf": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_api": {
    "__set__": true,
    "elements": [
      "flask-restplus",
      "jhub-client",
      "marinvaders",
      "markdown-it-py",
      "nb_cron",
      "pastel",
      "pygeoapi",
      "pyinfra",
      "quilt",
      "quilt3",
      "tomlkit"
    ]
  },
  "tests.test_api.test_api": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_arguments": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_command": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_config": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_deploys": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_facts": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_host": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_inventory": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_operations": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_api_util": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_api.test_main": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_api.test_token": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_api_dump": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_api_handler": {
    "__set__": true,
    "elements": [
      "pythx"
    ]
  },
  "tests.test_api_ogr_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_apidoc": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_app": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-text-ckeditor",
      "flask_simplelogin",
      "labelme",
      "localtileserver",
      "sanic",
      "sigpy"
    ]
  },
  "tests.test_app.admin": {
    "__set__": true,
    "elements": [
      "djangocms-text-ckeditor"
    ]
  },
  "tests.test_app.cms_plugins": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-text-ckeditor"
    ]
  },
  "tests.test_app.forms": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-text-ckeditor"
    ]
  },
  "tests.test_app.migrations": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field"
    ]
  },
  "tests.test_app.migrations.0001_initial": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field"
    ]
  },
  "tests.test_app.models": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-text-ckeditor"
    ]
  },
  "tests.test_app_settings": {
    "__set__": true,
    "elements": [
      "django-controlcenter"
    ]
  },
  "tests.test_application": {
    "__set__": true,
    "elements": [
      "magicgui",
      "msal",
      "tranquilizer",
      "web.py"
    ]
  },
  "tests.test_approximations": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_apps": {
    "__set__": true,
    "elements": [
      "afwizard",
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_cfg": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_cfg.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_cfg_groups": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_cfg_groups.conf": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_cfg_groups.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_config_with_free_group": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_config_with_free_group.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_custom_launcher": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_custom_launcher.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_split_cfg": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_with_split_cfg.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_without_config": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.app_without_config.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.interpolating_dir_hydra_to_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.interpolating_dir_hydra_to_app.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.sweep_complex_defaults": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_apps.sweep_complex_defaults.my_app": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_architectures": {
    "__set__": true,
    "elements": [
      "nir"
    ]
  },
  "tests.test_archive": {
    "__set__": true,
    "elements": [
      "pytmc"
    ]
  },
  "tests.test_areadetector": {
    "__set__": true,
    "elements": [
      "recordwhat"
    ]
  },
  "tests.test_arg_tool": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_args": {
    "__set__": true,
    "elements": [
      "markdownify"
    ]
  },
  "tests.test_argument_parser": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_armillary": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_array": {
    "__set__": true,
    "elements": [
      "intake-accumulo",
      "intake-astro"
    ]
  },
  "tests.test_artifacts": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_asgi": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_asm": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_asprs": {
    "__set__": true,
    "elements": [
      "afwizard"
    ]
  },
  "tests.test_assets": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_astropy": {
    "__set__": true,
    "elements": [
      "hickle"
    ]
  },
  "tests.test_astropy_epochs": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_async_cursor": {
    "__set__": true,
    "elements": [
      "pyathena"
    ]
  },
  "tests.test_async_query": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_async_result": {
    "__set__": true,
    "elements": [
      "mpire"
    ]
  },
  "tests.test_async_retry": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_async_tx": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_asyncio_client": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_atmosphere": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_atom": {
    "__set__": true,
    "elements": [
      "crystals"
    ]
  },
  "tests.test_atom_number": {
    "__set__": true,
    "elements": [
      "xymol"
    ]
  },
  "tests.test_atomlist": {
    "__set__": true,
    "elements": [
      "atom"
    ]
  },
  "tests.test_attacks": {
    "__set__": true,
    "elements": [
      "artificial-adversary"
    ]
  },
  "tests.test_augmentation": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_auth": {
    "__set__": true,
    "elements": [
      "conda-store-server"
    ]
  },
  "tests.test_auth_login_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_auth_login_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_auth_logout_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_auth_logout_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_auth_refresh_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_auth_refresh_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_authenticate": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_authentication": {
    "__set__": true,
    "elements": [
      "pydrill"
    ]
  },
  "tests.test_authority": {
    "__set__": true,
    "elements": [
      "msal"
    ]
  },
  "tests.test_auto": {
    "__set__": true,
    "elements": [
      "pytermgui",
      "spec2nii"
    ]
  },
  "tests.test_auto_ext": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_autodiscover": {
    "__set__": true,
    "elements": [
      "django-versatileimagefield"
    ]
  },
  "tests.test_autodiscover.versatileimagefield": {
    "__set__": true,
    "elements": [
      "django-versatileimagefield"
    ]
  },
  "tests.test_autoflow": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_autograd": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_autoreload": {
    "__set__": true,
    "elements": [
      "plum-dispatch"
    ]
  },
  "tests.test_autouri_localize": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_autouri_lock": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_availability_api": {
    "__set__": true,
    "elements": [
      "waybackpy"
    ]
  },
  "tests.test_avalanche_classification_dataset": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_avalanche_dataset": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_awq_compatibility_generation": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_aws": {
    "__set__": true,
    "elements": [
      "awacs"
    ]
  },
  "tests.test_aws_iam_policies": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_axisorder": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_azure_specific": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_backend": {
    "__set__": true,
    "elements": [
      "artifacts-keyring",
      "kbatch",
      "verta"
    ]
  },
  "tests.test_backends": {
    "__set__": true,
    "elements": [
      "magicgui"
    ]
  },
  "tests.test_backwards_compatibility": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_bad_commands_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_compile_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_cryptography_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_defusedxml_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_dl_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_duo_client_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_eval_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_exec_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_gl_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_hashlib_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_input_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_itsdangerous_kwarg_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_marshal_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_n_sp": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_bad_onelogin_kwarg_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_onelogin_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_os_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_pickle_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_popen2_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_pycrypto_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_random_generator_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_re_catastrophic_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_request": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_bad_requests_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_shelve_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_ssl_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_subprocess_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_sys_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_tarfile_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_tempfile_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_urllib3_kwarg_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_urllib3_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_xml_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_xmlrpc_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_xmlsec_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_yaml_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bad_zipfile_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_bar": {
    "__set__": true,
    "elements": [
      "dexplot"
    ]
  },
  "tests.test_bar_charts": {
    "__set__": true,
    "elements": [
      "bar_chart_race"
    ]
  },
  "tests.test_bart": {
    "__set__": true,
    "elements": [
      "pymc-bart"
    ]
  },
  "tests.test_base": {
    "__set__": true,
    "elements": [
      "atlassian-python-api",
      "awacs",
      "codext",
      "crccheck",
      "crystals",
      "django-controlcenter",
      "django-filebrowser",
      "embetter",
      "erdantic",
      "mpl_plotter",
      "pathy",
      "pyvista-xarray",
      "sanic",
      "vectorbt"
    ]
  },
  "tests.test_basePDF": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_base_class_erosion_model_boundary_handers": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_erosion_model_inputs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_erosion_model_misc": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_erosion_model_output_writers": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_erosion_model_outputs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_erosion_model_run": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_stochastic_erosion_model": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_class_two_lithology_base": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_dataclasses": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.test_base_embed": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_base_level_capture_node_baselevel_handler": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_level_generic_function_baselevel_handler": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_level_not_core_node_baselevel_handler": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_level_precip_changer": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_level_single_node_baselevel_handler": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_base_protocol": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_base_recipe": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_base_url": {
    "__set__": true,
    "elements": [
      "pyradios"
    ]
  },
  "tests.test_baselines": {
    "__set__": true,
    "elements": [
      "molsets"
    ]
  },
  "tests.test_baseposelist": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_basic": {
    "__set__": true,
    "elements": [
      "aiomysql",
      "disk-objectstore",
      "histogrammar",
      "igl",
      "markdownify",
      "pampy",
      "pygments",
      "scvelo",
      "torch-optimizer"
    ]
  },
  "tests.test_basic_api": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_basic_launcher": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_basic_regression": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_basic_s3": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_basic_types_utils": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_basics": {
    "__set__": true,
    "elements": [
      "globus-cli",
      "openfisca-france",
      "pygml"
    ]
  },
  "tests.test_basin_stats": {
    "__set__": true,
    "elements": [
      "rabpro"
    ]
  },
  "tests.test_basisset_data": {
    "__set__": true,
    "elements": [
      "aiida-gaussian-datatypes"
    ]
  },
  "tests.test_batch": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "cellpy"
    ]
  },
  "tests.test_batch_run": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_batchrunner": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_batchrunnerMP": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_bdsim": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_beam": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_benchmark": {
    "__set__": true,
    "elements": [
      "disk-objectstore",
      "typhos"
    ]
  },
  "tests.test_benchmarks": {
    "__set__": true,
    "elements": [
      "blackjax",
      "ltbams"
    ]
  },
  "tests.test_bertopic": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_bias": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_bibtex": {
    "__set__": true,
    "elements": [
      "goosebib",
      "pygments"
    ]
  },
  "tests.test_bigint": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_binary_field": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_bindings": {
    "__set__": true,
    "elements": [
      "metview-python"
    ]
  },
  "tests.test_binnedloss": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_binnedpdf": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_binning": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_biologics": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_biomech_model": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_biomech_model_lower_limbs": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_biplots": {
    "__set__": true,
    "elements": [
      "emperor"
    ]
  },
  "tests.test_bitbucket_cloud": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_bitbucket_cloud_oo": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_bitbucket_server": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_bitbucket_server_oo": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_bl_scrunch": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_black": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_blackjax_smc": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_block": {
    "__set__": true,
    "elements": [
      "andes",
      "sigpy"
    ]
  },
  "tests.test_blockdiagram": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_blocking_client": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_blueprint_copy": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_blueprint_group": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_blueprints": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_bndfun": {
    "__set__": true,
    "elements": [
      "chebfun"
    ]
  },
  "tests.test_bool_field": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_boosting_models": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_bootstrap": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_bopdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_boron": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_boron_isotopes": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_bounds": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_box": {
    "__set__": true,
    "elements": [
      "dexplot",
      "jesth"
    ]
  },
  "tests.test_breakpoint": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_broadcasting": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_browser": {
    "__set__": true,
    "elements": [
      "web.py"
    ]
  },
  "tests.test_bruker": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_bsi": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_bucket": {
    "__set__": true,
    "elements": [
      "quilt",
      "quilt3"
    ]
  },
  "tests.test_build": {
    "__set__": true,
    "elements": [
      "ablog",
      "bamnostic",
      "tomlkit"
    ]
  },
  "tests.test_build_api": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_builder": {
    "__set__": true,
    "elements": [
      "platformio"
    ]
  },
  "tests.test_builds": {
    "__set__": true,
    "elements": [
      "python-barcode"
    ]
  },
  "tests.test_bulk": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_bulk_inserts": {
    "__set__": true,
    "elements": [
      "aiomysql"
    ]
  },
  "tests.test_bytes_and_string_lists": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_bytescollection": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_c_api_etk": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_c_api_jet_plume": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_c_api_overpressure": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_c_api_phys": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_c_api_qra": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_cache": {
    "__set__": true,
    "elements": [
      "omnipath",
      "pyessv",
      "pystac",
      "suds-jurko",
      "typhos",
      "xpersist",
      "zfit"
    ]
  },
  "tests.test_cache_manager": {
    "__set__": true,
    "elements": [
      "cachy"
    ]
  },
  "tests.test_cacheable_pdf": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_caching": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_calc": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_calc_n_coarse_chan": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_calcload": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_calculation_node": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.test_calculator": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_calibration": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_callbacks": {
    "__set__": true,
    "elements": [
      "deepforest",
      "glymur",
      "mols2grid"
    ]
  },
  "tests.test_cameraconfig": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_canopy": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_capabilities": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_caper_labels": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_caper_wdl_parser": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_caper_workflow_opts": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_capture_controller": {
    "__set__": true,
    "elements": [
      "pymagewell"
    ]
  },
  "tests.test_carbon": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_case": {
    "__set__": true,
    "elements": [
      "andes",
      "ltbams"
    ]
  },
  "tests.test_catalog": {
    "__set__": true,
    "elements": [
      "daops",
      "intake-iris",
      "intake-xarray",
      "pycsep",
      "pystac",
      "xcube-smos"
    ]
  },
  "tests.test_catalog.test_intake": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_catalog.test_util": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_catalyst": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_catboost_classifier": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_catboost_regression": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_cats_only": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_cbsyst": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_cdfread": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_cdfread_rle": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_cdfwrite": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_cdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_cdx_api": {
    "__set__": true,
    "elements": [
      "waybackpy"
    ]
  },
  "tests.test_cdx_snapshot": {
    "__set__": true,
    "elements": [
      "waybackpy"
    ]
  },
  "tests.test_cdx_utils": {
    "__set__": true,
    "elements": [
      "waybackpy"
    ]
  },
  "tests.test_cell": {
    "__set__": true,
    "elements": [
      "plottable"
    ]
  },
  "tests.test_cell_metadata": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_cell_readers": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_cellpy": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_cellpy_cmd": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_cellpy_splitting": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_cells": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_celltree": {
    "__set__": true,
    "elements": [
      "numba_celltree"
    ]
  },
  "tests.test_centerline": {
    "__set__": true,
    "elements": [
      "sed-plume"
    ]
  },
  "tests.test_cesm": {
    "__set__": true,
    "elements": [
      "intake-esm"
    ]
  },
  "tests.test_cevae": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_cfm": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_cg": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_chain": {
    "__set__": true,
    "elements": [
      "phasespace"
    ]
  },
  "tests.test_changeable": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_characters": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_charts": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_chebfun": {
    "__set__": true,
    "elements": [
      "chebfun"
    ]
  },
  "tests.test_chebtech": {
    "__set__": true,
    "elements": [
      "chebfun"
    ]
  },
  "tests.test_check": {
    "__set__": true,
    "elements": [
      "model-index"
    ]
  },
  "tests.test_check_bounds": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_check_epsilon_delta": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_check_random_state": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_checks": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_checksum": {
    "__set__": true,
    "elements": [
      "crccheck"
    ]
  },
  "tests.test_checksums": {
    "__set__": true,
    "elements": [
      "python-barcode"
    ]
  },
  "tests.test_chemex": {
    "__set__": true,
    "elements": [
      "chemex"
    ]
  },
  "tests.test_chgcar": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_chunk_grid": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_cifar100_benchmarks": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_cifar10_benchmarks": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_cinema": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_circular_imports": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_class": {
    "__set__": true,
    "elements": [
      "mktestdocs"
    ]
  },
  "tests.test_classbasedview": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_classes": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_classical_all": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classical_ancient": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classical_herd": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classical_names": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classical_person": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classical_zero": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_classification": {
    "__set__": true,
    "elements": [
      "medcam"
    ]
  },
  "tests.test_classification.resnet_test": {
    "__set__": true,
    "elements": [
      "medcam"
    ]
  },
  "tests.test_classifier_base": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_classifier_explainer": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_classify": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_cleaning": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_clexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_cli": {
    "__set__": true,
    "elements": [
      "afwizard",
      "aiida-gaussian-datatypes",
      "andes",
      "biom-format",
      "birdy",
      "compaction",
      "csv-diff",
      "cx_freeze",
      "daops",
      "erdantic",
      "explainerdashboard",
      "flask-security-too",
      "goosehdf5",
      "hookee",
      "jupytext",
      "ltbams",
      "markdown-it-py",
      "model-index",
      "mofchecker",
      "nbgitpuller-link",
      "openamundsen",
      "optuna",
      "pathy",
      "plotext",
      "pyinfra",
      "pyopenrivercam",
      "pyremo",
      "pystac-client",
      "quilt",
      "quilt3",
      "sanic",
      "saws",
      "sed-plume",
      "shakenbreak",
      "typhos",
      "ultralytics",
      "verta",
      "waybackpy"
    ]
  },
  "tests.test_cli.test_add_metadata": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_cli": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli.test_cli_deploy": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli.test_cli_exceptions": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli.test_cli_util": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli.test_context_objects": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli.test_endpoint": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_cli.test_registry": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_cli.test_repository": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_cli.test_show_install_info": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_subset_table": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_summarize_table": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_table_converter": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_table_normalizer": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_uc_processor": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.test_validate_table": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_cli.util": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_cli_logger": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_cli_run": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_cli_server_client_gcp": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_cli_utils": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_client": {
    "__set__": true,
    "elements": [
      "birdy",
      "cloudpathlib",
      "kbatch",
      "kylinpy",
      "localtileserver",
      "msal",
      "notion-client",
      "pystac-client",
      "pythx",
      "server-thread",
      "servicestack",
      "stanza",
      "yarg"
    ]
  },
  "tests.test_client_auth": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_client_cache": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_client_connection": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_exceptions": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_fingerprint": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_it": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_client_proto": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_request": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_resource_it": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_client_response": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_rest": {
    "__set__": true,
    "elements": [
      "localtileserver"
    ]
  },
  "tests.test_client_session": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_tool_name_middleware": {
    "__set__": true,
    "elements": [
      "pythx"
    ]
  },
  "tests.test_client_unit": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_client_utils": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_client_ws": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_client_ws_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_clientinfo": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_clients": {
    "__set__": true,
    "elements": [
      "pathy"
    ]
  },
  "tests.test_climatology": {
    "__set__": true,
    "elements": [
      "esmlab"
    ]
  },
  "tests.test_clip": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_clip_to_bounds": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_clip_to_norm": {
    "__set__": true,
    "elements": [
      "diffprivlib"
    ]
  },
  "tests.test_clock": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_cloud": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_cloud_resource": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_cloudflare": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_cloudflare_calls": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_cloudiness": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_cloudpath_file_io": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_cloudpath_instantiation": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_cloudpath_internal": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_cloudpath_manipulation": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_cloudpath_upload_copy": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_cluster": {
    "__set__": true,
    "elements": [
      "anyscale",
      "ncar-jobqueue"
    ]
  },
  "tests.test_cluster_compute": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_cluster_env": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_clustering": {
    "__set__": true,
    "elements": [
      "pycircstat"
    ]
  },
  "tests.test_cmap": {
    "__set__": true,
    "elements": [
      "plottable"
    ]
  },
  "tests.test_cmark_spec": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_cmark_spec.test_spec": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_cmdline": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_cmip": {
    "__set__": true,
    "elements": [
      "intake-esm"
    ]
  },
  "tests.test_cmip5": {
    "__set__": true,
    "elements": [
      "intake-cmip"
    ]
  },
  "tests.test_cmor": {
    "__set__": true,
    "elements": [
      "py-cordex",
      "pyremo"
    ]
  },
  "tests.test_cmreshandler": {
    "__set__": true,
    "elements": [
      "cmreshandler"
    ]
  },
  "tests.test_cmresserializer": {
    "__set__": true,
    "elements": [
      "cmreshandler"
    ]
  },
  "tests.test_codeblock": {
    "__set__": true,
    "elements": [
      "mktestdocs"
    ]
  },
  "tests.test_codecs": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_codegen": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_codestream": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_codon_tables": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_coefficient": {
    "__set__": true,
    "elements": [
      "openfisca-france"
    ]
  },
  "tests.test_coffee": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_collection": {
    "__set__": true,
    "elements": [
      "fiona",
      "pystac"
    ]
  },
  "tests.test_collection_client": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_collection_crs": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_collection_legacy": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_collections": {
    "__set__": true,
    "elements": [
      "model-index",
      "nr.types"
    ]
  },
  "tests.test_colors": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_colour_specification_box": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_column": {
    "__set__": true,
    "elements": [
      "sparkypandy"
    ]
  },
  "tests.test_column_def": {
    "__set__": true,
    "elements": [
      "plottable"
    ]
  },
  "tests.test_columns": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_combine": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_combine_data": {
    "__set__": true,
    "elements": [
      "metocean-api"
    ]
  },
  "tests.test_combined": {
    "__set__": true,
    "elements": [
      "portalocker"
    ]
  },
  "tests.test_combiners": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_combustor": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_comcat": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_command_bdist_appimage": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_bdist_deb": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_bdist_dmg": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_bdist_mac": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_bdist_msi": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_bdist_rpm": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_build": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_build_exe": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_build_exe_excludes": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_install": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_install_exe": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_command_line": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_command_line_tool": {
    "__set__": true,
    "elements": [
      "remove_dagmc_tags"
    ]
  },
  "tests.test_commandline": {
    "__set__": true,
    "elements": [
      "pytmc"
    ]
  },
  "tests.test_commandline_entrypoint": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_commands": {
    "__set__": true,
    "elements": [
      "django-filebrowser",
      "saws"
    ]
  },
  "tests.test_common": {
    "__set__": true,
    "elements": [
      "codext",
      "flask-security-too",
      "gw-sklearn-xarray",
      "intake-esm",
      "scikit-lego"
    ]
  },
  "tests.test_common.test_basics": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_common.test_transformerselectormixin": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_common_data": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_common_metadata": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_comms": {
    "__set__": true,
    "elements": [
      "mpire"
    ]
  },
  "tests.test_compaction": {
    "__set__": true,
    "elements": [
      "compaction"
    ]
  },
  "tests.test_compare": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_compare_R": {
    "__set__": true,
    "elements": [
      "omnipath"
    ]
  },
  "tests.test_compare_logs": {
    "__set__": true,
    "elements": [
      "felling"
    ]
  },
  "tests.test_compare_voyager": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_comparison": {
    "__set__": true,
    "elements": [
      "mpl_plotter"
    ]
  },
  "tests.test_compat": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_compilation": {
    "__set__": true,
    "elements": [
      "blackjax",
      "dbt",
      "python-constraint2"
    ]
  },
  "tests.test_compile": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_compiler": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_completer": {
    "__set__": true,
    "elements": [
      "saws"
    ]
  },
  "tests.test_completion": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_component": {
    "__set__": true,
    "elements": [
      "compaction",
      "unifhy"
    ]
  },
  "tests.test_component_activity": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_components": {
    "__set__": true,
    "elements": [
      "bdsim",
      "yggdrasil"
    ]
  },
  "tests.test_compose": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_compositing": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_compound_crs": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_compounds": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_compressor": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "pyturbo"
    ]
  },
  "tests.test_compressor_aero": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_compressor_geom": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_compute": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_con_utils": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_concurrency": {
    "__set__": true,
    "elements": [
      "disk-objectstore",
      "verta"
    ]
  },
  "tests.test_concurrency.run_functions": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_concurrency.test_concurrency": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_concurrent": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.test_conda": {
    "__set__": true,
    "elements": [
      "conda-docker"
    ]
  },
  "tests.test_conditionals": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_conditions": {
    "__set__": true,
    "elements": [
      "awacs"
    ]
  },
  "tests.test_conf_loader": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_config": {
    "__set__": true,
    "elements": [
      "aesara",
      "aiobotocore",
      "andes",
      "btrack",
      "docker-map",
      "flask_simplelogin",
      "fps",
      "glymur",
      "gpflow",
      "hookee",
      "intake-esm",
      "ioos_qc",
      "jupytab-server",
      "lux-api",
      "magpylib",
      "mmsegmentation",
      "openamundsen",
      "pygeoapi",
      "pylama",
      "pypythia",
      "pytermgui",
      "sanic",
      "theano-pymc",
      "verta",
      "yggdrasil"
    ]
  },
  "tests.test_config_manager": {
    "__set__": true,
    "elements": [
      "jupyter_server"
    ]
  },
  "tests.test_config_search_path": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_configuration": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_configure_felling": {
    "__set__": true,
    "elements": [
      "felling"
    ]
  },
  "tests.test_confirmable": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_confluence_advanced_mode": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_confluence_attach": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_conformance": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_connect": {
    "__set__": true,
    "elements": [
      "anyscale",
      "edgedb-python",
      "pymonetdb"
    ]
  },
  "tests.test_connect_helpers": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_connect_timeout": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_connection": {
    "__set__": true,
    "elements": [
      "aiomysql",
      "o365",
      "pymapd",
      "pyomniscidb",
      "webdavclient3"
    ]
  },
  "tests.test_connections": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_connectivity": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_connector": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_connectors": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_ansible": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_chroot": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_docker": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_dockerssh": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_local": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_mech": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_ssh": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_sshuserclient": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_terraform": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_util": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_vagrant": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_connectors.test_winrm": {
    "__set__": true,
    "elements": [
      "pyinfra"
    ]
  },
  "tests.test_console": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_constants": {
    "__set__": true,
    "elements": [
      "djangocms-frontend",
      "dydx-v3-python",
      "openskill",
      "sanic",
      "tifftools"
    ]
  },
  "tests.test_constraint": {
    "__set__": true,
    "elements": [
      "python-constraint2",
      "zfit"
    ]
  },
  "tests.test_constraints": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_container": {
    "__set__": true,
    "elements": [
      "disk-objectstore"
    ]
  },
  "tests.test_content": {
    "__set__": true,
    "elements": [
      "pdfme"
    ]
  },
  "tests.test_contentsmanager": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_context": {
    "__set__": true,
    "elements": [
      "docker-map",
      "kit4dl"
    ]
  },
  "tests.test_context_processors": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_contextmanager": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_control": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_controlcharacters": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_controls": {
    "__set__": true,
    "elements": [
      "mpl-interactions"
    ]
  },
  "tests.test_conv": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_conventions": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_conversion": {
    "__set__": true,
    "elements": [
      "crystals",
      "xugrid"
    ]
  },
  "tests.test_conversions": {
    "__set__": true,
    "elements": [
      "markdownify"
    ]
  },
  "tests.test_convert": {
    "__set__": true,
    "elements": [
      "dataframe_image",
      "decaylanguage"
    ]
  },
  "tests.test_convert_observable": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_converter": {
    "__set__": true,
    "elements": [
      "jesth",
      "yodatools"
    ]
  },
  "tests.test_converter.test_input": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converter.test_input.test_excel": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converter.test_input.test_yamlInput": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converter.test_output": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converter.test_output.test_dbOutput": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converter.test_output.test_yamlOutput": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_converters": {
    "__set__": true,
    "elements": [
      "birdy",
      "radioactivedecay"
    ]
  },
  "tests.test_convertf": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_cookiejar": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_cookies": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_coordinates": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_copying": {
    "__set__": true,
    "elements": [
      "goosehdf5"
    ]
  },
  "tests.test_cordex": {
    "__set__": true,
    "elements": [
      "py-cordex"
    ]
  },
  "tests.test_core": {
    "__set__": true,
    "elements": [
      "binary",
      "birch",
      "dask-geopandas",
      "dask_groupby",
      "edgetest",
      "emperor",
      "flox",
      "gpflow",
      "kbatch",
      "matrixprofile",
      "mesmerize-core",
      "pylama",
      "spectate",
      "weldx"
    ]
  },
  "tests.test_core50": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_core_field_functions": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_core_functions": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_core_instances": {
    "__set__": true,
    "elements": [
      "adagio"
    ]
  },
  "tests.test_coregion": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_corpus_dictionary": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_correctness": {
    "__set__": true,
    "elements": [
      "fasttsne"
    ]
  },
  "tests.test_cors": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_counterfactual_explanations": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_counterfactual_unit_selection": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_countmin": {
    "__set__": true,
    "elements": [
      "sketchnu"
    ]
  },
  "tests.test_cpp": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_craiyon": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_crawler": {
    "__set__": true,
    "elements": [
      "thredds_crawler"
    ]
  },
  "tests.test_crc": {
    "__set__": true,
    "elements": [
      "crccheck"
    ]
  },
  "tests.test_createDropDB": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_create_catalog": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_create_lots_of_arrows": {
    "__set__": true,
    "elements": [
      "drawarrow"
    ]
  },
  "tests.test_create_precipitator": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_create_rating": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.test_create_runoff_generator": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_create_task": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_createdbNX": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_creating": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_credentials": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_cromwell": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_cromwell_backend": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_cromwell_metadata": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_cromwell_rest_api": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_crs": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_crystal": {
    "__set__": true,
    "elements": [
      "crystals",
      "pygments"
    ]
  },
  "tests.test_csep1_evaluations": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_csound": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_csrf": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_csv__formatter": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_csv__provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_csv_diff": {
    "__set__": true,
    "elements": [
      "csv-diff"
    ]
  },
  "tests.test_ctrl": {
    "__set__": true,
    "elements": [
      "avalanche-lib",
      "ctrl-benchmark"
    ]
  },
  "tests.test_cube_source": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_cuda": {
    "__set__": true,
    "elements": [
      "ultralytics"
    ]
  },
  "tests.test_cuda_setup_evaluator": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_cueq": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_cursor": {
    "__set__": true,
    "elements": [
      "aiomysql",
      "pyathena",
      "pymapd",
      "pyomniscidb"
    ]
  },
  "tests.test_cursor_interruptions": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_cursortype": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_curve": {
    "__set__": true,
    "elements": [
      "burau"
    ]
  },
  "tests.test_curve_geometries": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_custom": {
    "__set__": true,
    "elements": [
      "autodynatrace"
    ]
  },
  "tests.test_custom_converter": {
    "__set__": true,
    "elements": [
      "markdownify"
    ]
  },
  "tests.test_custom_options": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_custom_request": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_custom_streams": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_cv": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_cycore": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_cyrilic_client_it": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_dae_names": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_daops": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_dashboard": {
    "__set__": true,
    "elements": [
      "explainerdashboard",
      "optuna"
    ]
  },
  "tests.test_dashboard_dumps": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_dashboards": {
    "__set__": true,
    "elements": [
      "django-controlcenter"
    ]
  },
  "tests.test_data": {
    "__set__": true,
    "elements": [
      "aiida-castep",
      "biom-format",
      "deepforest",
      "dice-ml",
      "foundry_ml",
      "goes2go",
      "hydrofunctions",
      "mofchecker",
      "pygments",
      "pymace",
      "pymc-base",
      "uncertainty-toolbox",
      "unifhy",
      "vectorbt",
      "xugrid",
      "zfit"
    ]
  },
  "tests.test_data_arrays": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_data_checker": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_data_conversion": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_data_generators": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox"
    ]
  },
  "tests.test_data_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_data_interface.test_base_data_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_data_interface.test_private_data_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_data_interface.test_public_data_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_data_no_nulls_cpu": {
    "__set__": true,
    "elements": [
      "pymapd"
    ]
  },
  "tests.test_data_no_nulls_gpu": {
    "__set__": true,
    "elements": [
      "pymapd"
    ]
  },
  "tests.test_data_object": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_data_objects": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_data_paths": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_data_transfer": {
    "__set__": true,
    "elements": [
      "quilt",
      "quilt3"
    ]
  },
  "tests.test_data_types": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_data_utils": {
    "__set__": true,
    "elements": [
      "pydeck"
    ]
  },
  "tests.test_data_validation": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_data_validations": {
    "__set__": true,
    "elements": [
      "responsibleai"
    ]
  },
  "tests.test_database": {
    "__set__": true,
    "elements": [
      "ezyrb",
      "mofchecker",
      "rse",
      "shared"
    ]
  },
  "tests.test_dataclass": {
    "__set__": true,
    "elements": [
      "pampy"
    ]
  },
  "tests.test_dataclasses": {
    "__set__": true,
    "elements": [
      "aiida-core",
      "erdantic"
    ]
  },
  "tests.test_datacollector": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_datafiles_install": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_datafiles_paths": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_dataframe": {
    "__set__": true,
    "elements": [
      "intake-accumulo",
      "intake-astro",
      "jupytab",
      "sparkypandy"
    ]
  },
  "tests.test_dataframes": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_dataholders": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_dataloader": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_dataloader.test_ui": {
    "__set__": true,
    "elements": [
      "yodatools"
    ]
  },
  "tests.test_dataloaders": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_datamodule": {
    "__set__": true,
    "elements": [
      "kit4dl"
    ]
  },
  "tests.test_dataseries": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset": {
    "__set__": true,
    "elements": [
      "afwizard",
      "deepforest",
      "e3sm_diags",
      "larch",
      "metview-python",
      "mikeio",
      "pandora-geno",
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_anomalous": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_binning": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_grid": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_implementations": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_dataset_implementations.test_dataset_implementations": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_dataset_index": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_io": {
    "__set__": true,
    "elements": [
      "pyvista-xarray"
    ]
  },
  "tests.test_dataset_preserve_attributes": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_symops": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_dataset_versioning": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_dataset_versioning.conftest": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_dataset_versioning.test_dataset": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_dataset_versioning.test_dataset_version": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_datasets": {
    "__set__": true,
    "elements": [
      "causalml",
      "esmlab",
      "extract_model",
      "graspy",
      "gw-sklearn-xarray",
      "jacqq",
      "matrixprofile",
      "oddt",
      "python-flair",
      "scikit-lego",
      "verta"
    ]
  },
  "tests.test_datasets_biomedical": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_datasources": {
    "__set__": true,
    "elements": [
      "pygrametl",
      "yodapy"
    ]
  },
  "tests.test_datasources.test_datasources": {
    "__set__": true,
    "elements": [
      "yodapy"
    ]
  },
  "tests.test_datasources.test_ooi": {
    "__set__": true,
    "elements": [
      "yodapy"
    ]
  },
  "tests.test_datasources.test_ooi.test_helpers": {
    "__set__": true,
    "elements": [
      "yodapy"
    ]
  },
  "tests.test_datasources.test_ooi.test_ooi": {
    "__set__": true,
    "elements": [
      "yodapy"
    ]
  },
  "tests.test_datastore": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_datastructure": {
    "__set__": true,
    "elements": [
      "aiida-castep"
    ]
  },
  "tests.test_date_time": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_dates": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_datetime": {
    "__set__": true,
    "elements": [
      "edgedb-python",
      "fiona"
    ]
  },
  "tests.test_db": {
    "__set__": true,
    "elements": [
      "web.py"
    ]
  },
  "tests.test_db_parsimonious": {
    "__set__": true,
    "elements": [
      "recordwhat"
    ]
  },
  "tests.test_db_to_sqlite": {
    "__set__": true,
    "elements": [
      "db-to-sqlite"
    ]
  },
  "tests.test_dbapi2": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_dbd_parsimonious": {
    "__set__": true,
    "elements": [
      "recordwhat"
    ]
  },
  "tests.test_dbimporters": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.test_dbreader": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_dcm2bids": {
    "__set__": true,
    "elements": [
      "dcm2bids"
    ]
  },
  "tests.test_dcm2niix": {
    "__set__": true,
    "elements": [
      "dcm2bids"
    ]
  },
  "tests.test_dctypes": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_deallocate": {
    "__set__": true,
    "elements": [
      "pymapd"
    ]
  },
  "tests.test_dec_full": {
    "__set__": true,
    "elements": [
      "decaylanguage"
    ]
  },
  "tests.test_decaydata": {
    "__set__": true,
    "elements": [
      "radioactivedecay"
    ]
  },
  "tests.test_decaylanguage": {
    "__set__": true,
    "elements": [
      "decaylanguage"
    ]
  },
  "tests.test_decfloat": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_decimal": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_decisiontrees": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_deckgl_widget": {
    "__set__": true,
    "elements": [
      "pydeck"
    ]
  },
  "tests.test_decompose": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_decorator": {
    "__set__": true,
    "elements": [
      "napkin",
      "tranquilizer"
    ]
  },
  "tests.test_decorators": {
    "__set__": true,
    "elements": [
      "django-filebrowser",
      "pycircstat",
      "reciprocalspaceship",
      "stanza"
    ]
  },
  "tests.test_dedoppler": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_deepforest": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_default": {
    "__set__": true,
    "elements": [
      "embetter"
    ]
  },
  "tests.test_default_casters": {
    "__set__": true,
    "elements": [
      "birch"
    ]
  },
  "tests.test_default_utils": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_defaults": {
    "__set__": true,
    "elements": [
      "django-hosts",
      "magpylib"
    ]
  },
  "tests.test_definitions": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_definitions.test_expectations": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_deleting": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_demo": {
    "__set__": true,
    "elements": [
      "numba_celltree"
    ]
  },
  "tests.test_densities": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_dep_parser": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_dependencies": {
    "__set__": true,
    "elements": [
      "birdy",
      "responsibleai",
      "zfit"
    ]
  },
  "tests.test_dependency_instances": {
    "__set__": true,
    "elements": [
      "adagio"
    ]
  },
  "tests.test_dependency_resolution": {
    "__set__": true,
    "elements": [
      "docker-map"
    ]
  },
  "tests.test_deploy": {
    "__set__": true,
    "elements": [
      "qhub"
    ]
  },
  "tests.test_deployment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_depparse": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_depparse_data": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_deprecated": {
    "__set__": true,
    "elements": [
      "jupyter-packaging",
      "optuna"
    ]
  },
  "tests.test_deprecated_field": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_deprecation": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_deprecations": {
    "__set__": true,
    "elements": [
      "magicgui",
      "redframes"
    ]
  },
  "tests.test_deriv_hamilt": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_descriptive": {
    "__set__": true,
    "elements": [
      "pycircstat"
    ]
  },
  "tests.test_descriptors": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_designer": {
    "__set__": true,
    "elements": [
      "pcdswidgets",
      "typhos"
    ]
  },
  "tests.test_detect": {
    "__set__": true,
    "elements": [
      "reacnetgenerator"
    ]
  },
  "tests.test_detected_issues_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_detected_issues_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_detector": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_detectors": {
    "__set__": true,
    "elements": [
      "tsod"
    ]
  },
  "tests.test_determinism": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_device": {
    "__set__": true,
    "elements": [
      "pymagewell"
    ]
  },
  "tests.test_df_cache": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_df_image": {
    "__set__": true,
    "elements": [
      "dataframe_image"
    ]
  },
  "tests.test_dfs0": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_dfs1": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_dfs2": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_dfs3": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_dfsu": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_dfsu_plot": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_diagnostics": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_dialect": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_dice": {
    "__set__": true,
    "elements": [
      "blimpy",
      "dice-ml"
    ]
  },
  "tests.test_dice_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_dice_KD": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_dice_genetic": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_dice_pytorch": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_dice_random": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_dice_tensorflow": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dice_interface.test_explainer_base": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_dict": {
    "__set__": true,
    "elements": [
      "pampy",
      "pysentiment2"
    ]
  },
  "tests.test_dict_tool": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_dictcursor": {
    "__set__": true,
    "elements": [
      "aiomysql"
    ]
  },
  "tests.test_dictionary_output": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_digit_version": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_dimensionality": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_dimensions": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_directionality": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_discovery": {
    "__set__": true,
    "elements": [
      "intake-parquet",
      "intake-spark",
      "intake-xarray"
    ]
  },
  "tests.test_discrete": {
    "__set__": true,
    "elements": [
      "andes",
      "bdsim"
    ]
  },
  "tests.test_display": {
    "__set__": true,
    "elements": [
      "dphtools",
      "lux-api",
      "magpylib",
      "typhos"
    ]
  },
  "tests.test_display_matplotlib": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_display_plotly": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_display_pyvista": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_display_utility": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_displays": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_distance_metrics": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_distances": {
    "__set__": true,
    "elements": [
      "gruut-ipa"
    ]
  },
  "tests.test_distortions": {
    "__set__": true,
    "elements": [
      "shakenbreak"
    ]
  },
  "tests.test_distributions": {
    "__set__": true,
    "elements": [
      "optuna",
      "pycircstat"
    ]
  },
  "tests.test_dive_numbers": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_django": {
    "__set__": true,
    "elements": [
      "autodynatrace"
    ]
  },
  "tests.test_dlm_perturbation": {
    "__set__": true,
    "elements": [
      "theseus-ai"
    ]
  },
  "tests.test_dmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_dmd_modes_tuner": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_dmdbase": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_dmdc": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_dmdoperator": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_dns_import_export": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_dns_records": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_doc": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_docker_image": {
    "__set__": true,
    "elements": [
      "python-docker"
    ]
  },
  "tests.test_doclets": {
    "__set__": true,
    "elements": [
      "sphinx-js"
    ]
  },
  "tests.test_docs": {
    "__set__": true,
    "elements": [
      "db-to-sqlite",
      "embetter",
      "magicgui",
      "memo",
      "plateau",
      "scikit-partial"
    ]
  },
  "tests.test_docstrings": {
    "__set__": true,
    "elements": [
      "human-learn",
      "pyomeca",
      "redframes"
    ]
  },
  "tests.test_doctests": {
    "__set__": true,
    "elements": [
      "python-constraint2"
    ]
  },
  "tests.test_doctor": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_document": {
    "__set__": true,
    "elements": [
      "jesth",
      "pygls",
      "shared"
    ]
  },
  "tests.test_document_store": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_documentation_code_blocks": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_domain": {
    "__set__": true,
    "elements": [
      "py-cordex",
      "pyremo"
    ]
  },
  "tests.test_doscar": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_dossier": {
    "__set__": true,
    "elements": [
      "shared"
    ]
  },
  "tests.test_dotnet": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_downloader": {
    "__set__": true,
    "elements": [
      "omnipath"
    ]
  },
  "tests.test_draw_utils": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_drawarrow": {
    "__set__": true,
    "elements": [
      "drawarrow"
    ]
  },
  "tests.test_drift_removal": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "xmip"
    ]
  },
  "tests.test_driver_options": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_drivers": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_drop_each_atom": {
    "__set__": true,
    "elements": [
      "xymol"
    ]
  },
  "tests.test_drop_each_bond": {
    "__set__": true,
    "elements": [
      "xymol"
    ]
  },
  "tests.test_drvsupport": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_dsamp": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_dualquaternion": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_dummy": {
    "__set__": true,
    "elements": [
      "loadskernel"
    ]
  },
  "tests.test_dump": {
    "__set__": true,
    "elements": [
      "goosehdf5",
      "tifftools"
    ]
  },
  "tests.test_dump_n_load": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_dupe_columns": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_dynamic_routes": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_dynamodb": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_easyplot": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_ec2": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "awacs"
    ]
  },
  "tests.test_ecmwf": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_edit_handlers": {
    "__set__": true,
    "elements": [
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.test_edmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_edr": {
    "__set__": true,
    "elements": [
      "panedr"
    ]
  },
  "tests.test_eigenval": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_elaborate": {
    "__set__": true,
    "elements": [
      "pampy"
    ]
  },
  "tests.test_elasticsearch__provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_elliptics": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_em": {
    "__set__": true,
    "elements": [
      "extract_model"
    ]
  },
  "tests.test_email": {
    "__set__": true,
    "elements": [
      "felling"
    ]
  },
  "tests.test_embedding": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_embedding_comparison": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_embeddings": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_en": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_en_phonemizer": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_en_tokenizer": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_encode": {
    "__set__": true,
    "elements": [
      "poster"
    ]
  },
  "tests.test_encoders": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_encoding": {
    "__set__": true,
    "elements": [
      "fiona",
      "globus-cli"
    ]
  },
  "tests.test_end2end": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_end_to_end": {
    "__set__": true,
    "elements": [
      "kotsu",
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_endless_cl_sim": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_endpoint": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_endpoint.test_endpoint": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_endpoint.test_kafka": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_endpoint.test_resources": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_energies": {
    "__set__": true,
    "elements": [
      "open3spn2"
    ]
  },
  "tests.test_energy_lowering_distortions": {
    "__set__": true,
    "elements": [
      "shakenbreak"
    ]
  },
  "tests.test_engine": {
    "__set__": true,
    "elements": [
      "ultralytics"
    ]
  },
  "tests.test_english_pipeline": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_ensembles": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_entangled": {
    "__set__": true,
    "elements": [
      "django-entangled"
    ]
  },
  "tests.test_entities": {
    "__set__": true,
    "elements": [
      "flask-security-too",
      "openfisca-france",
      "verta"
    ]
  },
  "tests.test_enum": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_enum_serialization": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_env": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_environment": {
    "__set__": true,
    "elements": [
      "deepforest",
      "rocketpy"
    ]
  },
  "tests.test_environment_analysis": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_eo": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_ephemeris": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_epochs": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_equality": {
    "__set__": true,
    "elements": [
      "awacs"
    ]
  },
  "tests.test_erd": {
    "__set__": true,
    "elements": [
      "erdantic"
    ]
  },
  "tests.test_err": {
    "__set__": true,
    "elements": [
      "biom-format"
    ]
  },
  "tests.test_error_generation": {
    "__set__": true,
    "elements": [
      "swot_simulator"
    ]
  },
  "tests.test_error_utils": {
    "__set__": true,
    "elements": [
      "swot_simulator"
    ]
  },
  "tests.test_error_warning": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_errorpages": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_errors": {
    "__set__": true,
    "elements": [
      "edgedb-python",
      "flask-restplus",
      "rivgraph"
    ]
  },
  "tests.test_escape_magics": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_escaping": {
    "__set__": true,
    "elements": [
      "markdownify"
    ]
  },
  "tests.test_esri_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_estimation": {
    "__set__": true,
    "elements": [
      "lifelines"
    ]
  },
  "tests.test_estimators": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_basics": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_deadzone": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_demographic_parity": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_equal_opportunity": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_gmm_naive_bayes": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_imbalanced_linear_regression": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_lad_regression": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_lowess": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_mixture_classifier": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_mixture_detector": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_neighbor_classifier": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_pca_reconstruction": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_probweight_regression": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_quantile_regression": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_randomregressor": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_estimators.test_umap_reconstruction": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_eum": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_evaluate": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_evaluation": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_evaluation.test_evaluation_content_based": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_evaluation.test_evaluation_coselection": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_evaluation.test_evaluation_rouge": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_evaluations": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_evaluator": {
    "__set__": true,
    "elements": [
      "pyxel-sim",
      "xopt"
    ]
  },
  "tests.test_evapotranspiration": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_event": {
    "__set__": true,
    "elements": [
      "pymagewell"
    ]
  },
  "tests.test_event_series": {
    "__set__": true,
    "elements": [
      "pycircstat"
    ]
  },
  "tests.test_eventlog": {
    "__set__": true,
    "elements": [
      "jupyter_telemetry"
    ]
  },
  "tests.test_events": {
    "__set__": true,
    "elements": [
      "magicgui"
    ]
  },
  "tests.test_eventstreams": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_evolution": {
    "__set__": true,
    "elements": [
      "plonk"
    ]
  },
  "tests.test_example": {
    "__set__": true,
    "elements": [
      "orbit-ml",
      "trio-aiohttp"
    ]
  },
  "tests.test_examplefiles": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_examples": {
    "__set__": true,
    "elements": [
      "awacs",
      "btrack",
      "disk-objectstore",
      "klongpy",
      "larch",
      "localtileserver",
      "mesa",
      "model-index",
      "moviepy",
      "platformio",
      "point_cloud_utils"
    ]
  },
  "tests.test_exception": {
    "__set__": true,
    "elements": [
      "mythx-models",
      "overpy"
    ]
  },
  "tests.test_exceptions": {
    "__set__": true,
    "elements": [
      "hydrofunctions",
      "magpylib",
      "pymonetdb",
      "responsibleai",
      "sanic",
      "webdavclient3",
      "yarg"
    ]
  },
  "tests.test_exceptions_handler": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_excitations": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_excitations_to_wires": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_executables": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_execute": {
    "__set__": true,
    "elements": [
      "afwizard",
      "jhub-client",
      "pymonetdb"
    ]
  },
  "tests.test_execute_many": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_execution": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_executor": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_executor_shell": {
    "__set__": true,
    "elements": [
      "qme"
    ]
  },
  "tests.test_executor_slurm": {
    "__set__": true,
    "elements": [
      "qme"
    ]
  },
  "tests.test_expectations": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_experimental": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.test_experimentrun": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_artifacts": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_attributes": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_deployment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_environment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_log_code": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_experimentrun.test_requirements": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_explorer": {
    "__set__": true,
    "elements": [
      "ultralytics"
    ]
  },
  "tests.test_export": {
    "__set__": true,
    "elements": [
      "lux-api",
      "zarr-tools"
    ]
  },
  "tests.test_export_csv": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_export_models": {
    "__set__": true,
    "elements": [
      "n2v"
    ]
  },
  "tests.test_exporters": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_exports": {
    "__set__": true,
    "elements": [
      "ultralytics"
    ]
  },
  "tests.test_exposed_pil_image": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_ext_integration": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_extended": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_extension": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_extensions": {
    "__set__": true,
    "elements": [
      "pymdown-extensions",
      "pystac-client"
    ]
  },
  "tests.test_extensions.test_details": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_extensions.test_extensions_base": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_extensions.test_highlight": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_extensions.test_inlinehilite": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_extensions.test_pathconverter": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_extensions.test_slugs": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_extensions.test_superfences": {
    "__set__": true,
    "elements": [
      "pymdown-extensions"
    ]
  },
  "tests.test_external": {
    "__set__": true,
    "elements": [
      "ablog"
    ]
  },
  "tests.test_external_force": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_externalsource": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_extra": {
    "__set__": true,
    "elements": [
      "deepgram-sdk",
      "grayskull",
      "soupsieve"
    ]
  },
  "tests.test_extra.test_attribute": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_extra.test_contains": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_extra.test_custom": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_extra.test_defined": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_extra_suite": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_extract_data": {
    "__set__": true,
    "elements": [
      "metocean-api"
    ]
  },
  "tests.test_extraction": {
    "__set__": true,
    "elements": [
      "imagedataextractor"
    ]
  },
  "tests.test_ezc3d": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_ezhil": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_factory": {
    "__set__": true,
    "elements": [
      "grayskull",
      "magicgui",
      "pyessv"
    ]
  },
  "tests.test_fan_module": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_fan_module_geom": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_fancy_repr": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_fast": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_fast_lazy_gaussian": {
    "__set__": true,
    "elements": [
      "tt-sketch"
    ]
  },
  "tests.test_fastai": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_fastvsnormal": {
    "__set__": true,
    "elements": [
      "dtw"
    ]
  },
  "tests.test_fbdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_feature": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_feature_manager": {
    "__set__": true,
    "elements": [
      "pygls"
    ]
  },
  "tests.test_feature_metadata": {
    "__set__": true,
    "elements": [
      "responsibleai"
    ]
  },
  "tests.test_features": {
    "__set__": true,
    "elements": [
      "causalml",
      "gpflow",
      "gruut-ipa",
      "pyannote.core"
    ]
  },
  "tests.test_fetching": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_ffmpeg_reader": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_field_cylinder": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_field_defaults": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_field_functions": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_fields": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-frontend",
      "djangocms-icon",
      "flask-restplus"
    ]
  },
  "tests.test_fields_mask": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_fil2h5": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_file": {
    "__set__": true,
    "elements": [
      "pathy"
    ]
  },
  "tests.test_file_cache": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_file_handler": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_file_namers": {
    "__set__": true,
    "elements": [
      "clisops"
    ]
  },
  "tests.test_file_processing": {
    "__set__": true,
    "elements": [
      "muttlib"
    ]
  },
  "tests.test_file_source": {
    "__set__": true,
    "elements": [
      "intake-geopandas"
    ]
  },
  "tests.test_file_system": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_file_wrapper": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_filefinder": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_fileio": {
    "__set__": true,
    "elements": [
      "orsopy",
      "radioactivedecay"
    ]
  },
  "tests.test_fileio.test_base": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio.test_data_source": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio.test_model_language": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio.test_orso": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio.test_reduction": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio.test_schema": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_fileio_read_csv_c3d": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_fileio_read_other_formats": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_fileio_write": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_files": {
    "__set__": true,
    "elements": [
      "jupyter_server",
      "mdv"
    ]
  },
  "tests.test_filesystem": {
    "__set__": true,
    "elements": [
      "qme"
    ]
  },
  "tests.test_filesystem_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_filetransfer": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_filetree": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_filetree.test_query": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_filetree.test_read": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_filetree.test_registration": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_filetree.test_template": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_filter": {
    "__set__": true,
    "elements": [
      "afwizard",
      "emperor"
    ]
  },
  "tests.test_filterbank_voyager": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_filtering": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_find_command": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_find_map": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_find_stylename": {
    "__set__": true,
    "elements": [
      "drawarrow"
    ]
  },
  "tests.test_finder": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_finetuners": {
    "__set__": true,
    "elements": [
      "embetter"
    ]
  },
  "tests.test_fingerprint": {
    "__set__": true,
    "elements": [
      "prolif"
    ]
  },
  "tests.test_fingerprints": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_fio_bounds": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_calc": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_cat": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_collect": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_distrib": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_dump": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_filter": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_info": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_load": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_ls": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_fio_rm": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_first": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_fit": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_fit_validation": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_fitfuncs": {
    "__set__": true,
    "elements": [
      "dphtools"
    ]
  },
  "tests.test_fitresult": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_fixes_applied": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_fixtures": {
    "__set__": true,
    "elements": [
      "db-to-sqlite",
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_flags": {
    "__set__": true,
    "elements": [
      "pymapvbvd"
    ]
  },
  "tests.test_flake8": {
    "__set__": true,
    "elements": [
      "yt_astro_analysis"
    ]
  },
  "tests.test_flask_compress": {
    "__set__": true,
    "elements": [
      "flask-compress"
    ]
  },
  "tests.test_flight": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_flight_data_importer": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_flo_functions": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_flowcontrol_streams": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_fmnist_benckmarks": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_focal_correlations": {
    "__set__": true,
    "elements": [
      "focal-stats"
    ]
  },
  "tests.test_focal_function": {
    "__set__": true,
    "elements": [
      "focal-stats"
    ]
  },
  "tests.test_focal_statistics": {
    "__set__": true,
    "elements": [
      "focal-stats"
    ]
  },
  "tests.test_focus_entity": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_folium": {
    "__set__": true,
    "elements": [
      "localtileserver"
    ]
  },
  "tests.test_font": {
    "__set__": true,
    "elements": [
      "plottable"
    ]
  },
  "tests.test_footnote": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_footnote.test_fixtures": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_footnote.test_footnote": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_forecast": {
    "__set__": true,
    "elements": [
      "muttlib",
      "pycsep"
    ]
  },
  "tests.test_form": {
    "__set__": true,
    "elements": [
      "web.py"
    ]
  },
  "tests.test_format": {
    "__set__": true,
    "elements": [
      "emperor"
    ]
  },
  "tests.test_formats": {
    "__set__": true,
    "elements": [
      "jupytext",
      "quilt",
      "quilt3"
    ]
  },
  "tests.test_formatter": {
    "__set__": true,
    "elements": [
      "pyathena"
    ]
  },
  "tests.test_formatters": {
    "__set__": true,
    "elements": [
      "plottable"
    ]
  },
  "tests.test_formatting": {
    "__set__": true,
    "elements": [
      "kit4dl"
    ]
  },
  "tests.test_formdata": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_forward_dynamics": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_foundations": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_foundry": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_foundry_cache": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_foundry_components": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_foundry_dataset": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_foundry_gha": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_fourier": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_fr": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_fr_phonemizer": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_frame": {
    "__set__": true,
    "elements": [
      "pymagewell"
    ]
  },
  "tests.test_frames": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_freezer": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_from_clipboard": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_from_dalle": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_from_file": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_from_image_object": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_from_stable_diffusion": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_from_url": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_front_matter": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_front_matter.test_fixtures": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_frontend": {
    "__set__": true,
    "elements": [
      "wagtail-review"
    ]
  },
  "tests.test_func": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_func_chainer": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_func_utils": {
    "__set__": true,
    "elements": [
      "pymc-base"
    ]
  },
  "tests.test_function": {
    "__set__": true,
    "elements": [
      "jupytab",
      "rocketpy"
    ]
  },
  "tests.test_functional": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_functional_interface": {
    "__set__": true,
    "elements": [
      "starfile"
    ]
  },
  "tests.test_functions": {
    "__set__": true,
    "elements": [
      "arcjetcv",
      "bdsim",
      "flask-restless",
      "nptyping",
      "streamable"
    ]
  },
  "tests.test_functions.test_get_type": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_functions.test_py_type": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_functor_pdf": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_fx": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_g2p": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_gas_generator": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_gateway": {
    "__set__": true,
    "elements": [
      "jupyter_server"
    ]
  },
  "tests.test_gcmt": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_gcp_managed_setup_utils": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_gcp_utils": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_gcp_verification": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_gcsuri": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_gdrive": {
    "__set__": true,
    "elements": [
      "muttlib"
    ]
  },
  "tests.test_ge_pfile": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_ge_pfile_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_gefs": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_gemgis": {
    "__set__": true,
    "elements": [
      "gemgis"
    ]
  },
  "tests.test_general_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_generate": {
    "__set__": true,
    "elements": [
      "phasespace"
    ]
  },
  "tests.test_generate_datasets": {
    "__set__": true,
    "elements": [
      "lifelines"
    ]
  },
  "tests.test_generated": {
    "__set__": true,
    "elements": [
      "codext"
    ]
  },
  "tests.test_generation": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_generator": {
    "__set__": true,
    "elements": [
      "swagger-django-generator",
      "xopt"
    ]
  },
  "tests.test_generic": {
    "__set__": true,
    "elements": [
      "aiida-core",
      "mikeio",
      "mpl-interactions",
      "nr.types",
      "vectorbt",
      "xclim"
    ]
  },
  "tests.test_generic_geom": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_genericmotor": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_geo": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_coord_grid": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_coord_trafo": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_map_info": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_projection": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_vector": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo.test_vector.test_geometry": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_geo_utils": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_geoarray": {
    "__set__": true,
    "elements": [
      "geoarray"
    ]
  },
  "tests.test_geofile": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileinfo": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileops_singlelayer": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileops_singlelayer_gpd": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileops_singlelayer_ogr": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileops_singlelayer_sql": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofileops_twolayers": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geofiletype": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geohash": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_geojson": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_geojson_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_geom3d": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_geometry": {
    "__set__": true,
    "elements": [
      "fiona",
      "mofchecker",
      "weldx"
    ]
  },
  "tests.test_geometry_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geometry_utils": {
    "__set__": true,
    "elements": [
      "movingpandas",
      "numba_celltree"
    ]
  },
  "tests.test_geoops": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geoops_gpd": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geoops_sql": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geopackage": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_georss": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_geoseries_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_geotiff": {
    "__set__": true,
    "elements": [
      "python-geotiff"
    ]
  },
  "tests.test_getBH_dict": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_getBH_interfaces": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_getBH_level2": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_getBHv": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_gfile": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_gfs": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_github_recipes": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_gliders": {
    "__set__": true,
    "elements": [
      "ioos_qc"
    ]
  },
  "tests.test_glm": {
    "__set__": true,
    "elements": [
      "goes2go"
    ]
  },
  "tests.test_global_structure": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_globals": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_gns": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_golden_rules": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_goofit": {
    "__set__": true,
    "elements": [
      "decaylanguage"
    ]
  },
  "tests.test_governance": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_gpcca": {
    "__set__": true,
    "elements": [
      "pygpcca"
    ]
  },
  "tests.test_gplvm": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_gpr": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_gpu": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_graceful_shutdown": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_gradient": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_grammar": {
    "__set__": true,
    "elements": [
      "guidance"
    ]
  },
  "tests.test_graph": {
    "__set__": true,
    "elements": [
      "bionc",
      "pgraph-python",
      "zfit"
    ]
  },
  "tests.test_greedy": {
    "__set__": true,
    "elements": [
      "greedy"
    ]
  },
  "tests.test_grid": {
    "__set__": true,
    "elements": [
      "memo",
      "mesa"
    ]
  },
  "tests.test_grid_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_gridcal": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_gridded_output": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_grids": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "gridtest",
      "xmip"
    ]
  },
  "tests.test_gridtest": {
    "__set__": true,
    "elements": [
      "gridtest"
    ]
  },
  "tests.test_group": {
    "__set__": true,
    "elements": [
      "aiida-gaussian-datatypes",
      "andes",
      "ltbams"
    ]
  },
  "tests.test_group_creation_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_creation_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_data_middleware": {
    "__set__": true,
    "elements": [
      "pythx"
    ]
  },
  "tests.test_group_list_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_list_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_operation_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_operation_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_status_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_group_status_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_groupby": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_gs_specific": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_guessing": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_gui": {
    "__set__": true,
    "elements": [
      "loadskernel"
    ]
  },
  "tests.test_guppi": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_h3pandas": {
    "__set__": true,
    "elements": [
      "h3pandas"
    ]
  },
  "tests.test_h52fil": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_h5diag": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_h5py": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_handler": {
    "__set__": true,
    "elements": [
      "tranquilizer"
    ]
  },
  "tests.test_handler_annotations": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_hankeldmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_harness": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_has_field": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_has_field_many": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_hash": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_hashes": {
    "__set__": true,
    "elements": [
      "sketchnu"
    ]
  },
  "tests.test_hashing": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_havok": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_header": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_headers": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_heavy": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_heavyhitters": {
    "__set__": true,
    "elements": [
      "sketchnu"
    ]
  },
  "tests.test_helper": {
    "__set__": true,
    "elements": [
      "aiida-castep",
      "geofileops",
      "moviepy"
    ]
  },
  "tests.test_helper_method": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_helpers": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "awacs",
      "cellpy",
      "dice-ml",
      "djangocms-frontend",
      "dlint",
      "hydrofunctions",
      "localtileserver",
      "mikeio",
      "mpl-interactions",
      "notion-client",
      "plottable",
      "pytermgui",
      "sanic",
      "sketchnu"
    ]
  },
  "tests.test_helpers.test_bad_builtin_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_helpers.test_bad_kwarg_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_helpers.test_bad_module_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_helpers.test_bad_module_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_helpers.test_bad_name_attribute_use": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_hessian": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_hf_state": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_hickle": {
    "__set__": true,
    "elements": [
      "hickle"
    ]
  },
  "tests.test_hickle_helpers": {
    "__set__": true,
    "elements": [
      "hickle"
    ]
  },
  "tests.test_hierarchical_clustering": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_high_level_generators": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_highlight_markup_literal": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_hilbert_distance": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_histogram_approximation": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_histograms": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_hmc": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_hocon_string": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_hodmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_homegenous_transform": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_hook": {
    "__set__": true,
    "elements": [
      "edgetest-conda",
      "edgetest-pip-tools"
    ]
  },
  "tests.test_hookee_manager": {
    "__set__": true,
    "elements": [
      "hookee"
    ]
  },
  "tests.test_hookee_manager_edges": {
    "__set__": true,
    "elements": [
      "hookee"
    ]
  },
  "tests.test_horizon": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_hrrr": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_html_formatter": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_html_parser": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_http": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_http_alt_svc": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_http_exceptions": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_http_parser": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_http_session": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_http_writer": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_https_download": {
    "__set__": true,
    "elements": [
      "foundry_ml"
    ]
  },
  "tests.test_httpurl": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_huge_message": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_huggingface": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_huggingface_model": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_human_text": {
    "__set__": true,
    "elements": [
      "csv-diff"
    ]
  },
  "tests.test_hybrid36": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_hybridmotor": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_hydra": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_hydrofunctions": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_hydrogen_orientation": {
    "__set__": true,
    "elements": [
      "conservedwatersearch"
    ]
  },
  "tests.test_hyperloglog": {
    "__set__": true,
    "elements": [
      "sketchnu"
    ]
  },
  "tests.test_hyperparameter": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_iam": {
    "__set__": true,
    "elements": [
      "awacs"
    ]
  },
  "tests.test_ica": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_icons": {
    "__set__": true,
    "elements": [
      "pcdswidgets"
    ]
  },
  "tests.test_idce": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_ideal_gas": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_identify_alphabet": {
    "__set__": true,
    "elements": [
      "seqlike"
    ]
  },
  "tests.test_ifelse": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_ifp": {
    "__set__": true,
    "elements": [
      "prolif"
    ]
  },
  "tests.test_im_utils": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_image": {
    "__set__": true,
    "elements": [
      "intake-xarray",
      "magicgui"
    ]
  },
  "tests.test_images": {
    "__set__": true,
    "elements": [
      "model-index"
    ]
  },
  "tests.test_import": {
    "__set__": true,
    "elements": [
      "dbt",
      "dtw",
      "model-index",
      "panda3d_viewer",
      "python-utils",
      "rse"
    ]
  },
  "tests.test_import_namespace": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_importance": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.test_imported_enums": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_imports": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "glidertools",
      "optuna",
      "paradict"
    ]
  },
  "tests.test_imports_util": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_imputation": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_in_out": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_incar": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_incremental": {
    "__set__": true,
    "elements": [
      "sphinx-js"
    ]
  },
  "tests.test_indent": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_indent_long": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_indent_options": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_indent_texindent": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_index": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_indexer": {
    "__set__": true,
    "elements": [
      "metview-python"
    ]
  },
  "tests.test_indicator_helpers": {
    "__set__": true,
    "elements": [
      "technical"
    ]
  },
  "tests.test_indicators": {
    "__set__": true,
    "elements": [
      "technical",
      "vectorbt"
    ]
  },
  "tests.test_indicators_generic": {
    "__set__": true,
    "elements": [
      "technical"
    ]
  },
  "tests.test_indices": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_inertial_paramaters": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_inflections": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_ingv_rcmt_reader_csv": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_ingv_readers": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_inherit": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_inheritance": {
    "__set__": true,
    "elements": [
      "django-entangled"
    ]
  },
  "tests.test_init": {
    "__set__": true,
    "elements": [
      "anyscale",
      "pygrametl",
      "python-barcode",
      "qhub",
      "sphinx-js"
    ]
  },
  "tests.test_initial_point": {
    "__set__": true,
    "elements": [
      "pymc-base"
    ]
  },
  "tests.test_inlet_module": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_inline": {
    "__set__": true,
    "elements": [
      "mdv"
    ]
  },
  "tests.test_inline_pronunciations": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_ino2cpp": {
    "__set__": true,
    "elements": [
      "platformio"
    ]
  },
  "tests.test_input": {
    "__set__": true,
    "elements": [
      "docker-map",
      "propka",
      "shakenbreak"
    ]
  },
  "tests.test_input_checks": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_input_output": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_input_parameters": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_inputs": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_insights": {
    "__set__": true,
    "elements": [
      "mpire"
    ]
  },
  "tests.test_inspect": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_inspection_utils": {
    "__set__": true,
    "elements": [
      "pandera",
      "pandera-core"
    ]
  },
  "tests.test_install": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_installation": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_int_mats": {
    "__set__": true,
    "elements": [
      "pfapack"
    ]
  },
  "tests.test_intake_es": {
    "__set__": true,
    "elements": [
      "intake-elasticsearch"
    ]
  },
  "tests.test_intake_iris": {
    "__set__": true,
    "elements": [
      "intake-iris"
    ]
  },
  "tests.test_intake_xarray": {
    "__set__": true,
    "elements": [
      "intake-xarray"
    ]
  },
  "tests.test_integraiton": {
    "__set__": true,
    "elements": [
      "condorpy"
    ]
  },
  "tests.test_integrate": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_integration": {
    "__set__": true,
    "elements": [
      "cmyt",
      "edgetest",
      "fiona",
      "hydra-core",
      "loadskernel",
      "mpl_plotter",
      "panelaero",
      "pangeo-forge-recipes",
      "pymapd",
      "pyomniscidb",
      "python-docker",
      "spectrumdevice",
      "vizlo"
    ]
  },
  "tests.test_integration_cfg": {
    "__set__": true,
    "elements": [
      "edgetest"
    ]
  },
  "tests.test_integration_toml": {
    "__set__": true,
    "elements": [
      "edgetest"
    ]
  },
  "tests.test_integrations": {
    "__set__": true,
    "elements": [
      "anyscale",
      "cloudpathlib",
      "pytmc",
      "ultralytics",
      "verta"
    ]
  },
  "tests.test_integrators": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_interactions": {
    "__set__": true,
    "elements": [
      "oddt",
      "omnipath",
      "prolif"
    ]
  },
  "tests.test_interceptor": {
    "__set__": true,
    "elements": [
      "mastercard-oauth1-signer"
    ]
  },
  "tests.test_interchange": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_interestingness": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_interface": {
    "__set__": true,
    "elements": [
      "edgetest",
      "mols2grid",
      "nr.types",
      "pyessv"
    ]
  },
  "tests.test_interface_cfg": {
    "__set__": true,
    "elements": [
      "edgetest"
    ]
  },
  "tests.test_interface_toml": {
    "__set__": true,
    "elements": [
      "edgetest"
    ]
  },
  "tests.test_interop": {
    "__set__": true,
    "elements": [
      "klongpy",
      "ltbams"
    ]
  },
  "tests.test_interp": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_interpolate": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_interpolation": {
    "__set__": true,
    "elements": [
      "mikeio",
      "plonk"
    ]
  },
  "tests.test_inventory": {
    "__set__": true,
    "elements": [
      "radioactivedecay"
    ]
  },
  "tests.test_inverse_dynamics": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_io": {
    "__set__": true,
    "elements": [
      "amset",
      "btrack",
      "graspy",
      "kit4dl",
      "ltbams",
      "matrixprofile",
      "py-tools-ds",
      "redframes",
      "shakenbreak",
      "xopt"
    ]
  },
  "tests.test_io.test_raster": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_io.test_raster.test_gdal": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_io_manager": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_io_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_ipc": {
    "__set__": true,
    "elements": [
      "pymapd"
    ]
  },
  "tests.test_ips": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_ipygany": {
    "__set__": true,
    "elements": [
      "ipygany"
    ]
  },
  "tests.test_ipynb_to_R": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_ipynb_to_py": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_ipynb_to_rmd": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_ir": {
    "__set__": true,
    "elements": [
      "nir",
      "sphinx-js"
    ]
  },
  "tests.test_irc_formatter": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_is_ground": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_is_initialized": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_is_stale": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_is_valid": {
    "__set__": true,
    "elements": [
      "pyfonts"
    ]
  },
  "tests.test_isocolor": {
    "__set__": true,
    "elements": [
      "ipygany"
    ]
  },
  "tests.test_issue114": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_issue_11": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_issue_69": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_issues": {
    "__set__": true,
    "elements": [
      "aiomysql",
      "moviepy"
    ]
  },
  "tests.test_it": {
    "__set__": true,
    "elements": [
      "awslogs"
    ]
  },
  "tests.test_item": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_item_collection": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_item_search": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_items": {
    "__set__": true,
    "elements": [
      "pyrobuf",
      "tomlkit"
    ]
  },
  "tests.test_iterable": {
    "__set__": true,
    "elements": [
      "pampy"
    ]
  },
  "tests.test_iterators": {
    "__set__": true,
    "elements": [
      "streamable"
    ]
  },
  "tests.test_ivlearner": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_java": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_javascript": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_jira": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_jmrui": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_job": {
    "__set__": true,
    "elements": [
      "condorpy"
    ]
  },
  "tests.test_job_output": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_join": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_joint_angles": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_joints": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_journals": {
    "__set__": true,
    "elements": [
      "goosebib"
    ]
  },
  "tests.test_jp2box": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_jp2box_jpx": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_jp2box_uuid": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_jp2box_xml": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_jp2k": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_json": {
    "__set__": true,
    "elements": [
      "overpy"
    ]
  },
  "tests.test_json_decoding": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_json_encoding": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_jsonapi": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_creating_resources": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_deleting_resources": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_document_structure": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_fetching_data": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_server_responsibilities": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_updating_relationships": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonapi.test_updating_resources": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsondate": {
    "__set__": true,
    "elements": [
      "jsondate"
    ]
  },
  "tests.test_jsonpatch": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_jsonserviceclient": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_julia": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_jumper": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_jupytext_errors": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_k_neighbors_regressor": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_kde_funcs": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_ke3_service": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_ke4_model_source": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_ke4_service": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_keep_alive_timeout": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_keras": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_keras_retinanet": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_kerns": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_keys": {
    "__set__": true,
    "elements": [
      "saws"
    ]
  },
  "tests.test_kgtests": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_kim_convergence": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_batch": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_outlier": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_scale": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats_beta_dist": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats_nonnormal_test": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats_normal_test": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats_s_normal_dist": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_stats_t_dist": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_timeseries": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_timeseries_equilibration_length": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_ucl": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_convergence.test_ucl_mser_m": {
    "__set__": true,
    "elements": [
      "kim-convergence"
    ]
  },
  "tests.test_kim_edn": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_comment": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_decode": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_default": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_dump": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_encode_basestring_ascii": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_enum": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_fail": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_float": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_indent": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_pass1": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_pass2": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_pass3": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_recursion": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_scanstring": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_edn.test_unicode": {
    "__set__": true,
    "elements": [
      "kim-edn",
      "kim_edn"
    ]
  },
  "tests.test_kim_property": {
    "__set__": true,
    "elements": [
      "kim-property",
      "kim_property"
    ]
  },
  "tests.test_kim_property.test_create": {
    "__set__": true,
    "elements": [
      "kim-property"
    ]
  },
  "tests.test_kim_property.test_definition": {
    "__set__": true,
    "elements": [
      "kim-property",
      "kim_property"
    ]
  },
  "tests.test_kim_property.test_destroy": {
    "__set__": true,
    "elements": [
      "kim-property"
    ]
  },
  "tests.test_kim_property.test_instance": {
    "__set__": true,
    "elements": [
      "kim-property",
      "kim_property"
    ]
  },
  "tests.test_kim_property.test_kim_property": {
    "__set__": true,
    "elements": [
      "kim-property",
      "kim_property"
    ]
  },
  "tests.test_kim_property.test_modify": {
    "__set__": true,
    "elements": [
      "kim-property"
    ]
  },
  "tests.test_kim_property.test_numeric": {
    "__set__": true,
    "elements": [
      "kim-property",
      "kim_property"
    ]
  },
  "tests.test_kim_property.test_pickle": {
    "__set__": true,
    "elements": [
      "kim-property"
    ]
  },
  "tests.test_kinbot": {
    "__set__": true,
    "elements": [
      "kinbot"
    ]
  },
  "tests.test_kitem": {
    "__set__": true,
    "elements": [
      "dsms-sdk"
    ]
  },
  "tests.test_kldiv": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_knitr_spin": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_known_bugs": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_known_good": {
    "__set__": true,
    "elements": [
      "andes",
      "ltbams"
    ]
  },
  "tests.test_kotlin": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_kpoints": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_kylin_service": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_kylin_types": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_kylinpy": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_l10n": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_label": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_labels": {
    "__set__": true,
    "elements": [
      "python-flair",
      "vectorbt"
    ]
  },
  "tests.test_ladybugs": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_lambda": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_lando": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_lang": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_language_model": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_language_server": {
    "__set__": true,
    "elements": [
      "pygls"
    ]
  },
  "tests.test_laplace": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_lastools": {
    "__set__": true,
    "elements": [
      "afwizard"
    ]
  },
  "tests.test_latent_class": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_latent_gaussian": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_latentdistributiontest": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_latentpositiontest": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_latex_formatter": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_lattice": {
    "__set__": true,
    "elements": [
      "crystals"
    ]
  },
  "tests.test_laue": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_launcher": {
    "__set__": true,
    "elements": [
      "swot_simulator"
    ]
  },
  "tests.test_layer": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_layerstyles": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_layout": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_layouts": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_leaflet": {
    "__set__": true,
    "elements": [
      "localtileserver"
    ]
  },
  "tests.test_legacy_load": {
    "__set__": true,
    "elements": [
      "hickle"
    ]
  },
  "tests.test_lemmatizer": {
    "__set__": true,
    "elements": [
      "python-flair",
      "stanza"
    ]
  },
  "tests.test_level1": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_active": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_at_rule": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_class": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_comments": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_descendant": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_escapes": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_id": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_link": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_list": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_pseudo_class": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_pseudo_element": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level1.test_visited": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_attribute": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_first_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_focus": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_hover": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_lang": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_next_sibling": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level2.test_universal_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_attribute": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_checked": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_disabled": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_empty": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_enabled": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_first_of_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_last_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_last_of_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_namespace": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_not": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_nth_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_nth_last_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_nth_last_of_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_nth_of_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_only_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_only_of_type": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_root": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_subsequent_sibling": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level3.test_target": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_any_link": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_attribute": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_current": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_default": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_dir": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_focus_visible": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_focus_within": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_future": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_has": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_host": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_host_context": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_in_range": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_indeterminate": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_is": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_lang": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_local_link": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_matches": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_not": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_nth_child": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_optional": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_out_of_range": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_past": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_paused": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_placeholder_shown": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_playing": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_read_only": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_read_write": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_required": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_scope": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_target_within": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_user_invalid": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_level4.test_where": {
    "__set__": true,
    "elements": [
      "soupsieve"
    ]
  },
  "tests.test_lexers_other": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_lgbm": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_lib": {
    "__set__": true,
    "elements": [
      "edgetest",
      "propka",
      "pyale",
      "xyzservices"
    ]
  },
  "tests.test_library": {
    "__set__": true,
    "elements": [
      "afwizard",
      "model-index"
    ]
  },
  "tests.test_libtiff": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_lifespan": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_lightning": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_likelihoods": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_limit": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_linalg": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_line": {
    "__set__": true,
    "elements": [
      "dexplot"
    ]
  },
  "tests.test_linear": {
    "__set__": true,
    "elements": [
      "ezyrb",
      "larch"
    ]
  },
  "tests.test_linear4bit": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_linear8bitlt": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_linear_diffusion": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_linear_model": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_linearmodel": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_link": {
    "__set__": true,
    "elements": [
      "nbgitpuller-link",
      "pystac"
    ]
  },
  "tests.test_linker": {
    "__set__": true,
    "elements": [
      "dbt"
    ]
  },
  "tests.test_linop": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_lint": {
    "__set__": true,
    "elements": [
      "nbsmoke",
      "pytmc"
    ]
  },
  "tests.test_lint_magics": {
    "__set__": true,
    "elements": [
      "nbsmoke"
    ]
  },
  "tests.test_lint_magics_hv": {
    "__set__": true,
    "elements": [
      "nbsmoke"
    ]
  },
  "tests.test_linters": {
    "__set__": true,
    "elements": [
      "pylama"
    ]
  },
  "tests.test_liquidmotor": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_listing": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_lists": {
    "__set__": true,
    "elements": [
      "markdownify",
      "pyrobuf"
    ]
  },
  "tests.test_ln_utils": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_load": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_load_font": {
    "__set__": true,
    "elements": [
      "pyfonts"
    ]
  },
  "tests.test_load_local": {
    "__set__": true,
    "elements": [
      "aiomysql"
    ]
  },
  "tests.test_load_multiple": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_loaders": {
    "__set__": true,
    "elements": [
      "pymapd"
    ]
  },
  "tests.test_local": {
    "__set__": true,
    "elements": [
      "cloudpathlib",
      "shakenbreak"
    ]
  },
  "tests.test_local_structure": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_locking": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_locks": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_log": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_log_code": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_logdensities": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_logger": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_loggers": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_logging": {
    "__set__": true,
    "elements": [
      "daops",
      "optuna",
      "sanic"
    ]
  },
  "tests.test_logo": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_logutils": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_loki_logger_handler": {
    "__set__": true,
    "elements": [
      "loki-logger-handler"
    ]
  },
  "tests.test_loop": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_loss": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_machine_info": {
    "__set__": true,
    "elements": [
      "mache"
    ]
  },
  "tests.test_magicgui": {
    "__set__": true,
    "elements": [
      "magicgui"
    ]
  },
  "tests.test_magpyVector": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_mailbox": {
    "__set__": true,
    "elements": [
      "o365"
    ]
  },
  "tests.test_main": {
    "__set__": true,
    "elements": [
      "deepforest",
      "dvclive",
      "enstat",
      "goosempl",
      "jupyter-packaging",
      "mesa",
      "mikeio",
      "regressio",
      "sumy",
      "tifftools",
      "tranquilizer"
    ]
  },
  "tests.test_maintainence": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_maintenance": {
    "__set__": true,
    "elements": [
      "platformio"
    ]
  },
  "tests.test_makegif": {
    "__set__": true,
    "elements": [
      "stemflow"
    ]
  },
  "tests.test_manager": {
    "__set__": true,
    "elements": [
      "flask-restless",
      "server-thread"
    ]
  },
  "tests.test_manual": {
    "__set__": true,
    "elements": [
      "codext"
    ]
  },
  "tests.test_manually": {
    "__set__": true,
    "elements": [
      "python-barcode"
    ]
  },
  "tests.test_mapi": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_mapi_uri": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_mapping": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_maps_ordereddict": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.test_markdown": {
    "__set__": true,
    "elements": [
      "mktestdocs",
      "model-index"
    ]
  },
  "tests.test_markdown_lexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_marker": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_marker_casadi": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_markov_draftjs": {
    "__set__": true,
    "elements": [
      "markov_draftjs"
    ]
  },
  "tests.test_marquez_client": {
    "__set__": true,
    "elements": [
      "marquez-python"
    ]
  },
  "tests.test_marquez_clients": {
    "__set__": true,
    "elements": [
      "marquez-python"
    ]
  },
  "tests.test_marshalling": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_mase": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_mask": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_mass2": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_mass_matrix": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_match": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_match_fils": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_math": {
    "__set__": true,
    "elements": [
      "markdown-it-py",
      "pycsep",
      "pymc-base",
      "zfit"
    ]
  },
  "tests.test_math.test_math": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_maths": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_matp": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_mds": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_mean_functions": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_meanfield": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_measurement": {
    "__set__": true,
    "elements": [
      "weldx"
    ]
  },
  "tests.test_memfile": {
    "__set__": true,
    "elements": [
      "memo"
    ]
  },
  "tests.test_memlist": {
    "__set__": true,
    "elements": [
      "memo"
    ]
  },
  "tests.test_memory": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_memoryfile": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_merge_from": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_mesh": {
    "__set__": true,
    "elements": [
      "mikeio",
      "xrd_simulator"
    ]
  },
  "tests.test_meshkernel_utils": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_message": {
    "__set__": true,
    "elements": [
      "o365",
      "pyrobuf"
    ]
  },
  "tests.test_message_field_types": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_message_init_kwargs": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_message_with_colon_at_end": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_message_with_no_fields": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_meta": {
    "__set__": true,
    "elements": [
      "fiona",
      "nr.types",
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_confusion_balancer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_decay_estimator": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_estimatortransformer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_grouped_model": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_grouped_predictor": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_grouped_transformer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_outlier_classifier": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_outlier_remover": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_regression_outlier": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_subjective_classifier": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_thresholder": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta.test_zero_inflated_regressor": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_meta_learners": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_metadata": {
    "__set__": true,
    "elements": [
      "autouri",
      "flask-restless",
      "geoarray",
      "openfisca-france",
      "verta"
    ]
  },
  "tests.test_metadata_filter": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_meteo": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_meteo_input": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_method_equivalence": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_methods": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_metrics": {
    "__set__": true,
    "elements": [
      "avalanche-lib",
      "blackjax",
      "kit4dl",
      "molsets",
      "oddt",
      "pydrill",
      "scikit-lego",
      "uncertainty-toolbox"
    ]
  },
  "tests.test_metrics.test_correlation_score": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_metrics.test_equal_opportunity": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_metrics.test_p_percent": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_metrics.test_subset_metric": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_metrics_accuracy": {
    "__set__": true,
    "elements": [
      "uncertainty-toolbox"
    ]
  },
  "tests.test_metrics_calibration": {
    "__set__": true,
    "elements": [
      "uncertainty-toolbox"
    ]
  },
  "tests.test_metrics_scoring_rule": {
    "__set__": true,
    "elements": [
      "uncertainty-toolbox"
    ]
  },
  "tests.test_metview": {
    "__set__": true,
    "elements": [
      "metview-python"
    ]
  },
  "tests.test_mex": {
    "__set__": true,
    "elements": [
      "msal"
    ]
  },
  "tests.test_middleware": {
    "__set__": true,
    "elements": [
      "django-hosts",
      "sanic"
    ]
  },
  "tests.test_middlewares": {
    "__set__": true,
    "elements": [
      "tinydb"
    ]
  },
  "tests.test_migrations": {
    "__set__": true,
    "elements": [
      "djangocms-admin-style",
      "djangocms-attributes-field",
      "djangocms-frontend",
      "djangocms-history",
      "djangocms-icon",
      "djangocms-picture",
      "djangocms-style"
    ]
  },
  "tests.test_minimizer": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_mirror": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_misc": {
    "__set__": true,
    "elements": [
      "flask-security-too",
      "gemgis",
      "gpflow",
      "jesth",
      "magpylib",
      "moviepy",
      "omnipath",
      "platformio",
      "shared",
      "trio-asyncio",
      "trio_asyncio",
      "xdmfwrite_h5py"
    ]
  },
  "tests.test_missing_plotly": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_mixer_fluid": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_mixer_shaft": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_mixins": {
    "__set__": true,
    "elements": [
      "kit4dl"
    ]
  },
  "tests.test_mktestdocs": {
    "__set__": true,
    "elements": [
      "mktestdocs"
    ]
  },
  "tests.test_mlconjug": {
    "__set__": true,
    "elements": [
      "mlconjug3"
    ]
  },
  "tests.test_mmcv": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_mnist_benckmarks": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_mock": {
    "__set__": true,
    "elements": [
      "aiida-castep"
    ]
  },
  "tests.test_model": {
    "__set__": true,
    "elements": [
      "deepforest",
      "dice-ml",
      "fiona",
      "flask-restplus",
      "gpflow",
      "ltbams",
      "lume-model",
      "mesa",
      "openamundsen",
      "plasmaboundaries",
      "pyessv",
      "pymc-base",
      "stemflow",
      "unifhy"
    ]
  },
  "tests.test_model5": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_model_basicCh": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicChRt_and_basicChRtTh": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicChSa": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicDd": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicDdHy": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicDdRt": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicDdSt": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicDdVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicHyRt": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicHySa": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicHyVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicHy_and_basicHySt": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicRtSa_basicSa_basicSaVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicRtTh": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicRtVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicSaVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicStVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicSt_basicStTh": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicTh": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicThVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_basicVs": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_model_builder": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_model_creation": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_model_graph": {
    "__set__": true,
    "elements": [
      "pymc-base"
    ]
  },
  "tests.test_model_group": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_model_interface": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_model_interface.test_base_model": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_model_interface.test_keras_tensorflow_model": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_model_interface.test_pytorch_model": {
    "__set__": true,
    "elements": [
      "dice-ml"
    ]
  },
  "tests.test_model_registry": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_model_registry.test_model": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_model_registry.test_model_base": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_model_registry.test_model_version": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_model_registry.test_standard_model": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_model_selection": {
    "__set__": true,
    "elements": [
      "gw-sklearn-xarray",
      "piecewise-regression",
      "scikit-lego",
      "stemflow"
    ]
  },
  "tests.test_model_selection.test_grouptimeseriessplit": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_model_selection.test_klusterfold": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_model_selection.test_timegapsplit": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_model_serializer": {
    "__set__": true,
    "elements": [
      "responsibleai"
    ]
  },
  "tests.test_model_set": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_modelhandler": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_modeline": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_models": {
    "__set__": true,
    "elements": [
      "avalanche-lib",
      "bertopic",
      "btrack",
      "django-tinymce",
      "djangocms-icon",
      "djangocms-picture",
      "djangocms-style",
      "graspy",
      "mmsegmentation",
      "oddt",
      "pymace",
      "pymt",
      "python-flair",
      "sumy",
      "wagtail-review"
    ]
  },
  "tests.test_models.test_backbones": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_beit": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_bisenetv1": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_bisenetv2": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_blocks": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_cgnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_clip_text_encoder": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_erfnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_fast_scnn": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_hrnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_icnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_mae": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_mit": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_mobilenet_v3": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_mscan": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_pidnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_resnest": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_resnet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_resnext": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_stdc": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_swin": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_timm_backbone": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_twins": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_unet": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_vit": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.test_vpd": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_backbones.utils": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_data_preprocessor": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_dom": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_models.test_forward": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_ann_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_apc_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_aspp_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_cc_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_decode_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_dm_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_dnl_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_dpt_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_ema_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_fcn_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_gc_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_ham_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_isa_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_lraspp_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_mask2former_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_maskformer_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_nl_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_ocr_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_pidnet_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_psa_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_psp_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_san_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_segformer_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_segmenter_mask_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_setr_mla_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_setr_up_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_uper_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.test_vpd_depth_head": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_heads.utils": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_feature2pyramid": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_fpn": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_ic_neck": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_jpu": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_mla_neck": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_necks.test_multilevel_neck": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.test_cascade_encoder_decoder": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.test_depth_estimator": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.test_encoder_decoder": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.test_multimodal_encoder_decoder": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.test_seg_tta_model": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_segmentors.utils": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_tf": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_models.test_utils": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_utils.test_embed": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models.test_utils.test_shape_convert": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_models_accuracy": {
    "__set__": true,
    "elements": [
      "pyprocessmacro"
    ]
  },
  "tests.test_module": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_modulefinder": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_modules": {
    "__set__": true,
    "elements": [
      "bitsandbytes",
      "pymace",
      "xclim"
    ]
  },
  "tests.test_mofchecker": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_molecular_container": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_molecular_hamiltonian": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_molecule": {
    "__set__": true,
    "elements": [
      "prolif"
    ]
  },
  "tests.test_molgrid": {
    "__set__": true,
    "elements": [
      "mols2grid"
    ]
  },
  "tests.test_mollweide": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_monetize": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_mongo_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_monitor": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "gpflow"
    ]
  },
  "tests.test_morton_distance": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_motd": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_motion": {
    "__set__": true,
    "elements": [
      "pytmc",
      "xrd_simulator"
    ]
  },
  "tests.test_mpdist": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_mpi": {
    "__set__": true,
    "elements": [
      "xopt"
    ]
  },
  "tests.test_mpx": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_mrdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_mrs": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_base": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_basis": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_core": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_fitting": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_ima": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_image": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_io": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_mrsdata": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_processing": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_rda": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_siemens": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_mrs.test_twix": {
    "__set__": true,
    "elements": [
      "suspect"
    ]
  },
  "tests.test_msa": {
    "__set__": true,
    "elements": [
      "pypythia"
    ]
  },
  "tests.test_mturk": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_muggeo": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_multi_client_it": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_multi_serve": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_multiclass": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_multiconxn": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_multiline": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_multioutput": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_multioutput_features": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_multipart": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_multipart_helpers": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_multiple": {
    "__set__": true,
    "elements": [
      "baycomp"
    ]
  },
  "tests.test_multiprocessing": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_multiprocessing_logging": {
    "__set__": true,
    "elements": [
      "multiprocessing-logging"
    ]
  },
  "tests.test_multitask": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_multitasking": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_multithreading": {
    "__set__": true,
    "elements": [
      "aimsim"
    ]
  },
  "tests.test_mvc": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.mock": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_base": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_dict": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_events": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_list": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_object": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvc.test_set": {
    "__set__": true,
    "elements": [
      "spectate"
    ]
  },
  "tests.test_mvdetectors": {
    "__set__": true,
    "elements": [
      "tsod"
    ]
  },
  "tests.test_mwt_expander": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_myst_block": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_myst_block.test_fixtures": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_myst_role": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_myst_role.test_fixtures": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_myst_role.test_role": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_n2v_utils": {
    "__set__": true,
    "elements": [
      "n2v"
    ]
  },
  "tests.test_na2nc": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_na_file": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_na_file_1001": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_named_routes": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_namedparams": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_namedtuple": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_namedtuples": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_namers": {
    "__set__": true,
    "elements": [
      "django-filebrowser"
    ]
  },
  "tests.test_namespace": {
    "__set__": true,
    "elements": [
      "dlint",
      "flask-restplus"
    ]
  },
  "tests.test_nan": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_natural_axis_template": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_coordinates": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_coordinates_casadi": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_segment": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_segment_casadi": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_vectors": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_velocities": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_natural_velocities_casadi": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_nb_enfants": {
    "__set__": true,
    "elements": [
      "openfisca-france"
    ]
  },
  "tests.test_nb_run": {
    "__set__": true,
    "elements": [
      "jupytab-server"
    ]
  },
  "tests.test_nb_subproc_thread": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_nbextension_path": {
    "__set__": true,
    "elements": [
      "pydeck"
    ]
  },
  "tests.test_nbody_decay": {
    "__set__": true,
    "elements": [
      "phasespace"
    ]
  },
  "tests.test_nbsmoke": {
    "__set__": true,
    "elements": [
      "nbsmoke"
    ]
  },
  "tests.test_nc2csv": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_nc2na": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_nc_mt_scenario": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_nc_sit_scenario": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_ner_tagger": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_nested_issue55": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_network_io": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_network_utils": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_next_breakpoint": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_nextset": {
    "__set__": true,
    "elements": [
      "aiomysql"
    ]
  },
  "tests.test_ni_sit_scenario": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_nifti_options": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_njobs": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_nl_1": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_nlp": {
    "__set__": true,
    "elements": [
      "texthero"
    ]
  },
  "tests.test_nnnl": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_nnshift": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_nocache_middleware": {
    "__set__": true,
    "elements": [
      "pythx"
    ]
  },
  "tests.test_node": {
    "__set__": true,
    "elements": [
      "condorpy"
    ]
  },
  "tests.test_nodes": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.test_non_counting_layer": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_normalisation": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_not_vanilla_options": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_notebook": {
    "__set__": true,
    "elements": [
      "birdy",
      "nb_cron"
    ]
  },
  "tests.test_notebookapp": {
    "__set__": true,
    "elements": [
      "nbclassic"
    ]
  },
  "tests.test_notebooks": {
    "__set__": true,
    "elements": [
      "dice-ml",
      "gpflow",
      "histogrammar"
    ]
  },
  "tests.test_notinstalled": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_nozzle": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_nuclide": {
    "__set__": true,
    "elements": [
      "radioactivedecay"
    ]
  },
  "tests.test_numba": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_numeric": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_numeric.test_array": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_numeric.test_vector": {
    "__set__": true,
    "elements": [
      "py-tools-ds"
    ]
  },
  "tests.test_numerical": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_numerical_optimizer": {
    "__set__": true,
    "elements": [
      "xopt"
    ]
  },
  "tests.test_numerical_stability": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_numpy": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_numwords": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_oauth": {
    "__set__": true,
    "elements": [
      "mastercard-oauth1-signer",
      "oauth2"
    ]
  },
  "tests.test_oauth_ext": {
    "__set__": true,
    "elements": [
      "mastercard-oauth1-signer"
    ]
  },
  "tests.test_obj_BaseGeo": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_BaseGeo_v4motion": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Box": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Circular": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Collection": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Collection_child_parent": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Collection_v4motion": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Cuboid": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Cylinder": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_CylinderSegment": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Dipole": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Facet": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Line": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Loop": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Sensor": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Sphere": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Tetrahedron": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_Triangle": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_TriangularMesh": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_obj_models": {
    "__set__": true,
    "elements": [
      "arcjetcv"
    ]
  },
  "tests.test_object_creation": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_objectiveclexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_observable": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_observatory": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_ocv_relax": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_ode_solver": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_ogh": {
    "__set__": true,
    "elements": [
      "ogh"
    ]
  },
  "tests.test_ogr_capabilities": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_csv_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_esrijson_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_gpkg_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_shapefile_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_sql_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_ogr_sqlite_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_ogr_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_ogr_wfs_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_oid": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_omni": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_omodel": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_oms": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_onboarding": {
    "__set__": true,
    "elements": [
      "dydx-v3-python"
    ]
  },
  "tests.test_one_particle": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_oneof": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_online_resources": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_opals": {
    "__set__": true,
    "elements": [
      "afwizard"
    ]
  },
  "tests.test_open": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_open_file_detection": {
    "__set__": true,
    "elements": [
      "pytest-openfiles"
    ]
  },
  "tests.test_openapi": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_openers": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_openjp2": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_opensimplex": {
    "__set__": true,
    "elements": [
      "opensimplex"
    ]
  },
  "tests.test_operations": {
    "__set__": true,
    "elements": [
      "tinydb",
      "zfit"
    ]
  },
  "tests.test_optdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_optics": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_optim": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_optimizer": {
    "__set__": true,
    "elements": [
      "torch-optimizer"
    ]
  },
  "tests.test_optimizer_with_nn": {
    "__set__": true,
    "elements": [
      "torch-optimizer"
    ]
  },
  "tests.test_optimizers": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox",
      "blackjax",
      "gpflow",
      "keras-radam"
    ]
  },
  "tests.test_options": {
    "__set__": true,
    "elements": [
      "omnipath",
      "pydrill",
      "pyxel-sim",
      "saws",
      "tifftools"
    ]
  },
  "tests.test_orchestrate": {
    "__set__": true,
    "elements": [
      "plurmy"
    ]
  },
  "tests.test_ordinal": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.test_organization": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_orthology": {
    "__set__": true,
    "elements": [
      "omnipath"
    ]
  },
  "tests.test_other": {
    "__set__": true,
    "elements": [
      "bertopic",
      "spec2nii"
    ]
  },
  "tests.test_other_func": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_outcar": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_output": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_output_utils": {
    "__set__": true,
    "elements": [
      "clisops"
    ]
  },
  "tests.test_overlay": {
    "__set__": true,
    "elements": [
      "movingpandas"
    ]
  },
  "tests.test_package": {
    "__set__": true,
    "elements": [
      "pydmd",
      "yarg"
    ]
  },
  "tests.test_package_api": {
    "__set__": true,
    "elements": [
      "doppel-cli"
    ]
  },
  "tests.test_package_collection": {
    "__set__": true,
    "elements": [
      "doppel-cli"
    ]
  },
  "tests.test_package_functions": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_package_rename": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_page": {
    "__set__": true,
    "elements": [
      "wagtail-accessibility",
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.test_paired_paths": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_pairwise_dist": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_palaeoB": {
    "__set__": true,
    "elements": [
      "cbsyst"
    ]
  },
  "tests.test_pandapower": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_pandas": {
    "__set__": true,
    "elements": [
      "emperor",
      "lux-api",
      "oddt"
    ]
  },
  "tests.test_pandas_coverage": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_pandas_cursor": {
    "__set__": true,
    "elements": [
      "pyathena"
    ]
  },
  "tests.test_pandas_histogrammar": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_pandora": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_panel": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_panes": {
    "__set__": true,
    "elements": [
      "mpl_plotter"
    ]
  },
  "tests.test_param": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_param_validation": {
    "__set__": true,
    "elements": [
      "torch-optimizer"
    ]
  },
  "tests.test_paramdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_parameter": {
    "__set__": true,
    "elements": [
      "ezyrb",
      "zfit"
    ]
  },
  "tests.test_parameter_helper": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_parameterdict": {
    "__set__": true,
    "elements": [
      "modelparameters"
    ]
  },
  "tests.test_parameters": {
    "__set__": true,
    "elements": [
      "modelparameters",
      "openfisca-france"
    ]
  },
  "tests.test_parametric": {
    "__set__": true,
    "elements": [
      "plum-dispatch"
    ]
  },
  "tests.test_params": {
    "__set__": true,
    "elements": [
      "mpire"
    ]
  },
  "tests.test_parse": {
    "__set__": true,
    "elements": [
      "biom-format",
      "emperor",
      "recordwhat",
      "yarg"
    ]
  },
  "tests.test_parse_config": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_parse_identifiers": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_parser": {
    "__set__": true,
    "elements": [
      "aiida-castep",
      "guidance",
      "jesth",
      "lux-api",
      "pydifact",
      "pyrobuf",
      "pytermgui",
      "tomlkit"
    ]
  },
  "tests.test_parser.test_field_validity": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_parser.test_map_field": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_parser.test_missing_lbraces": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_parser.test_oneof": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_parser.test_syntax": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_parser_custom": {
    "__set__": true,
    "elements": [
      "rse"
    ]
  },
  "tests.test_parser_github": {
    "__set__": true,
    "elements": [
      "rse"
    ]
  },
  "tests.test_parser_gitlab": {
    "__set__": true,
    "elements": [
      "rse"
    ]
  },
  "tests.test_parser_name": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_parser_template": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_parser_zenodo": {
    "__set__": true,
    "elements": [
      "rse"
    ]
  },
  "tests.test_parsers": {
    "__set__": true,
    "elements": [
      "crystals",
      "sphinx-js"
    ]
  },
  "tests.test_parsing": {
    "__set__": true,
    "elements": [
      "pytmc",
      "starfile"
    ]
  },
  "tests.test_partial_integration": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_particle_number_obs": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_passwordless": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_pastel": {
    "__set__": true,
    "elements": [
      "pastel"
    ]
  },
  "tests.test_patches": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_path": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_path_or_fobj": {
    "__set__": true,
    "elements": [
      "tifftools"
    ]
  },
  "tests.test_pathfinder": {
    "__set__": true,
    "elements": [
      "blackjax",
      "pymc-extras"
    ]
  },
  "tests.test_paths": {
    "__set__": true,
    "elements": [
      "afwizard",
      "andes",
      "goosehdf5",
      "jupyter_server",
      "ltbams"
    ]
  },
  "tests.test_pattern": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_patterns": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_payload": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "flask-restplus"
    ]
  },
  "tests.test_payload_too_large": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_pdal": {
    "__set__": true,
    "elements": [
      "afwizard"
    ]
  },
  "tests.test_pdf_bifurgauss": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_cauchy": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_cb": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_chisquared": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_conditional": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_fftconv": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_gamma": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_gaussexptail": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_generalizedgauss": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_johnsonsu": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_kde": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_normal": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_poisson": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_polynomials": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_qgauss": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_studentt": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_sumpdf": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_template": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdf_voigt": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pdfs": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_pec": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_peft_conversion": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_pep8": {
    "__set__": true,
    "elements": [
      "isofit",
      "jupytext"
    ]
  },
  "tests.test_perf": {
    "__set__": true,
    "elements": [
      "xopt"
    ]
  },
  "tests.test_performance": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_perllexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_permissions": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.conftest": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.test_lazy_lists": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.test_sharing_old": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.test_visibility_api": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.test_visibility_e2e": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_permissions.test_workspace": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_persistence": {
    "__set__": true,
    "elements": [
      "magicgui",
      "tsod"
    ]
  },
  "tests.test_pfaffian": {
    "__set__": true,
    "elements": [
      "pfapack"
    ]
  },
  "tests.test_pflow_matpower": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_pfs": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_pgbart": {
    "__set__": true,
    "elements": [
      "pymc-bart"
    ]
  },
  "tests.test_phase": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_philips_data_list": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_philips_dicom": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_philips_dicom_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_philips_sdat_spar": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_philips_sdat_spar_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_phone": {
    "__set__": true,
    "elements": [
      "gruut-ipa"
    ]
  },
  "tests.test_phonemes": {
    "__set__": true,
    "elements": [
      "gruut-ipa"
    ]
  },
  "tests.test_php": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_phys_api": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_phys_flame": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_phys_fluid": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_phys_overpressure": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_phys_utils": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_physics": {
    "__set__": true,
    "elements": [
      "glidertools",
      "phasespace",
      "pyremo"
    ]
  },
  "tests.test_physics_consistency": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_pickle": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_pickle_unpickle_theano_fn": {
    "__set__": true,
    "elements": [
      "theano-pymc"
    ]
  },
  "tests.test_pickling": {
    "__set__": true,
    "elements": [
      "prolif"
    ]
  },
  "tests.test_pidmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_pipelines": {
    "__set__": true,
    "elements": [
      "explainerdashboard",
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_pipelining": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_pivoted_cholesky": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_pl_si": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_placeholder": {
    "__set__": true,
    "elements": [
      "bamnostic"
    ]
  },
  "tests.test_placeholders": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_plaintext_parser": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_planisphere": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_planner": {
    "__set__": true,
    "elements": [
      "o365"
    ]
  },
  "tests.test_platform": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_plbvfu1": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_plist_items": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_plot": {
    "__set__": true,
    "elements": [
      "glidertools",
      "graspy",
      "typhos",
      "xugrid",
      "xymol"
    ]
  },
  "tests.test_plots": {
    "__set__": true,
    "elements": [
      "pycsep",
      "radioactivedecay",
      "rocketpy"
    ]
  },
  "tests.test_plotter": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_plotting": {
    "__set__": true,
    "elements": [
      "bertopic",
      "blimpy",
      "lifelines",
      "muttlib",
      "pandora-geno",
      "shakenbreak"
    ]
  },
  "tests.test_plotting.test_approximate": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_bar": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_documents": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_dynamic": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_heatmap": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_term_rank": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plotting.test_topics": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_plugin": {
    "__set__": true,
    "elements": [
      "pyls-memestra"
    ]
  },
  "tests.test_plugin_interface": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_plugin_manager": {
    "__set__": true,
    "elements": [
      "hookee"
    ]
  },
  "tests.test_plugins": {
    "__set__": true,
    "elements": [
      "djangocms-attributes-field",
      "djangocms-icon",
      "djangocms-picture",
      "djangocms-style",
      "great-expectations"
    ]
  },
  "tests.test_plugins.fake_actions": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_plugins.fake_configs": {
    "__set__": true,
    "elements": [
      "great-expectations"
    ]
  },
  "tests.test_plume": {
    "__set__": true,
    "elements": [
      "sed-plume"
    ]
  },
  "tests.test_plurmy": {
    "__set__": true,
    "elements": [
      "plurmy"
    ]
  },
  "tests.test_pod": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_podae": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_poi_data": {
    "__set__": true,
    "elements": [
      "tesspy"
    ]
  },
  "tests.test_point_output": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_policy": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_policy_kwargs": {
    "__set__": true,
    "elements": [
      "docker-map"
    ]
  },
  "tests.test_polycrystal": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_pool": {
    "__set__": true,
    "elements": [
      "aiomysql",
      "mpire"
    ]
  },
  "tests.test_popfinder": {
    "__set__": true,
    "elements": [
      "popfinder"
    ]
  },
  "tests.test_porosity_error": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_port": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_port.test_fixtures": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_port.test_references": {
    "__set__": true,
    "elements": [
      "markdown-it-py"
    ]
  },
  "tests.test_portfolio": {
    "__set__": true,
    "elements": [
      "vectorbt"
    ]
  },
  "tests.test_pos": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_poscar": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_pose2d": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_pose3d": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_positioner": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_post": {
    "__set__": true,
    "elements": [
      "jupyter_to_medium"
    ]
  },
  "tests.test_postgresql_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_posthocs": {
    "__set__": true,
    "elements": [
      "scikit-posthocs"
    ]
  },
  "tests.test_postlist": {
    "__set__": true,
    "elements": [
      "ablog"
    ]
  },
  "tests.test_postman": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_postprocessing": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "xmip"
    ]
  },
  "tests.test_pp_metview": {
    "__set__": true,
    "elements": [
      "metview-python"
    ]
  },
  "tests.test_praat": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_pre_v32": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_precip": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_precip_changer": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_predict": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_predictor": {
    "__set__": true,
    "elements": [
      "pypythia"
    ]
  },
  "tests.test_prepare": {
    "__set__": true,
    "elements": [
      "bar_chart_race",
      "pymonetdb",
      "sanic"
    ]
  },
  "tests.test_prepare_resources": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_preproc": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_preprocess": {
    "__set__": true,
    "elements": [
      "deepforest",
      "matrixprofile",
      "pymace"
    ]
  },
  "tests.test_preprocessing": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "gw-sklearn-xarray",
      "openfisca-france",
      "py-cordex",
      "scikit-lego",
      "texthero",
      "xmip"
    ]
  },
  "tests.test_preprocessing.test_columncapper": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_columndropper": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_columnselector": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_dictmapper": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_identitytransformer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_informationfilter": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_interval_encoder": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_orthogonal_transformer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_outlier_remover": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_pandastypeselector": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_patsy_transformer": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_randomadder": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing.test_repeatingbasisfunction": {
    "__set__": true,
    "elements": [
      "scikit-lego"
    ]
  },
  "tests.test_preprocessing_cloud": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "xmip"
    ]
  },
  "tests.test_preserve_empty_cells": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_presets": {
    "__set__": true,
    "elements": [
      "mpl_plotter"
    ]
  },
  "tests.test_pretrain": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_preview_font": {
    "__set__": true,
    "elements": [
      "pyfonts"
    ]
  },
  "tests.test_printing": {
    "__set__": true,
    "elements": [
      "aesara",
      "glymur",
      "pymc-base",
      "pymc-extras",
      "theano-pymc"
    ]
  },
  "tests.test_prior_from_trace": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_priors": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_privateMath": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_privy": {
    "__set__": true,
    "elements": [
      "privy"
    ]
  },
  "tests.test_prms": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.test_problem": {
    "__set__": true,
    "elements": [
      "python-constraint2"
    ]
  },
  "tests.test_process_file": {
    "__set__": true,
    "elements": [
      "exifread"
    ]
  },
  "tests.test_processing": {
    "__set__": true,
    "elements": [
      "glidertools"
    ]
  },
  "tests.test_processing_algebra": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_filter": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_interp": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_marker": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_misc": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_rt": {
    "__set__": true,
    "elements": [
      "pyomeca"
    ]
  },
  "tests.test_processing_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_profile": {
    "__set__": true,
    "elements": [
      "fiona",
      "plonk"
    ]
  },
  "tests.test_profiler": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_profiles": {
    "__set__": true,
    "elements": [
      "pydrill"
    ]
  },
  "tests.test_profiling": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_prog": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_program": {
    "__set__": true,
    "elements": [
      "guidance"
    ]
  },
  "tests.test_project": {
    "__set__": true,
    "elements": [
      "anyscale",
      "pytmc"
    ]
  },
  "tests.test_project_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_project_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_projectconf": {
    "__set__": true,
    "elements": [
      "platformio"
    ]
  },
  "tests.test_promotion": {
    "__set__": true,
    "elements": [
      "plum-dispatch"
    ]
  },
  "tests.test_pronunciation": {
    "__set__": true,
    "elements": [
      "gruut-ipa"
    ]
  },
  "tests.test_propensity": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_properties": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_property_checking_middleware": {
    "__set__": true,
    "elements": [
      "pythx"
    ]
  },
  "tests.test_proposal": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_props": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_proto": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_protobuf": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_protocol": {
    "__set__": true,
    "elements": [
      "o365",
      "pygls"
    ]
  },
  "tests.test_protonate": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_protos": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_providers": {
    "__set__": true,
    "elements": [
      "xyzservices"
    ]
  },
  "tests.test_prox": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_proxy": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "nr.types"
    ]
  },
  "tests.test_proxy_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_prsint": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_pseudo_data": {
    "__set__": true,
    "elements": [
      "aiida-gaussian-datatypes"
    ]
  },
  "tests.test_psse_parser": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_psycopg": {
    "__set__": true,
    "elements": [
      "autodynatrace"
    ]
  },
  "tests.test_ptr": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_public": {
    "__set__": true,
    "elements": [
      "dydx-v3-python"
    ]
  },
  "tests.test_publicMath": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_pulse_generator": {
    "__set__": true,
    "elements": [
      "spectrumdevice"
    ]
  },
  "tests.test_pwd": {
    "__set__": true,
    "elements": [
      "inflect"
    ]
  },
  "tests.test_py_base": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_pydantic": {
    "__set__": true,
    "elements": [
      "erdantic",
      "xopt"
    ]
  },
  "tests.test_pydrill_setup": {
    "__set__": true,
    "elements": [
      "pydrill"
    ]
  },
  "tests.test_pylexique": {
    "__set__": true,
    "elements": [
      "pylexique"
    ]
  },
  "tests.test_pypi": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_pyplot": {
    "__set__": true,
    "elements": [
      "mpl-interactions"
    ]
  },
  "tests.test_pyprojroot": {
    "__set__": true,
    "elements": [
      "pyprojroot"
    ]
  },
  "tests.test_pyremo": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_pyreportjasper": {
    "__set__": true,
    "elements": [
      "pyreportjasper"
    ]
  },
  "tests.test_pyrootutils": {
    "__set__": true,
    "elements": [
      "pyrootutils"
    ]
  },
  "tests.test_pystac_api": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_pystardb": {
    "__set__": true,
    "elements": [
      "pystardb"
    ]
  },
  "tests.test_pysyncrosim": {
    "__set__": true,
    "elements": [
      "pysyncrosim"
    ]
  },
  "tests.test_pytensorf": {
    "__set__": true,
    "elements": [
      "pymc-base"
    ]
  },
  "tests.test_pytest_plugin": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_python": {
    "__set__": true,
    "elements": [
      "pygments",
      "ultralytics"
    ]
  },
  "tests.test_python_api": {
    "__set__": true,
    "elements": [
      "remove_dagmc_tags"
    ]
  },
  "tests.test_python_sphinx_wagtail_theme": {
    "__set__": true,
    "elements": [
      "sphinx-wagtail-theme"
    ]
  },
  "tests.test_python_utils": {
    "__set__": true,
    "elements": [
      "python-utils"
    ]
  },
  "tests.test_pythonize": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_pytorch": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_q4": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_qartod": {
    "__set__": true,
    "elements": [
      "ioos_qc"
    ]
  },
  "tests.test_qartod_performance": {
    "__set__": true,
    "elements": [
      "ioos_qc"
    ]
  },
  "tests.test_qbasiclexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_qmnl": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_qra_analysis": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_blends": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_consequence": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_effects": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_fatalities": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_ignition_probs": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_pipe_size": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_positions": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_probits": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_qra_risk": {
    "__set__": true,
    "elements": [
      "hyram"
    ]
  },
  "tests.test_quadrature": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_quantization": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_quasiqueue": {
    "__set__": true,
    "elements": [
      "quasiqueue"
    ]
  },
  "tests.test_quaternion": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_queries": {
    "__set__": true,
    "elements": [
      "tinydb"
    ]
  },
  "tests.test_query": {
    "__set__": true,
    "elements": [
      "omnipath",
      "pydrill",
      "verta"
    ]
  },
  "tests.test_quick_test": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_quickle": {
    "__set__": true,
    "elements": [
      "quickle"
    ]
  },
  "tests.test_r": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_r_squared": {
    "__set__": true,
    "elements": [
      "piecewise-regression"
    ]
  },
  "tests.test_race_cond": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_radar_returning_csv": {
    "__set__": true,
    "elements": [
      "cloudflare"
    ]
  },
  "tests.test_radiation": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_radio_browser": {
    "__set__": true,
    "elements": [
      "pyradios"
    ]
  },
  "tests.test_radio_facets": {
    "__set__": true,
    "elements": [
      "pyradios"
    ]
  },
  "tests.test_radionuclide": {
    "__set__": true,
    "elements": [
      "radioactivedecay"
    ]
  },
  "tests.test_radius_neighbors_regressor": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_random": {
    "__set__": true,
    "elements": [
      "phasespace"
    ]
  },
  "tests.test_random_seed": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_random_signal": {
    "__set__": true,
    "elements": [
      "swot_simulator"
    ]
  },
  "tests.test_randomforest_explainer": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_rap": {
    "__set__": true,
    "elements": [
      "herbie-data"
    ]
  },
  "tests.test_raster": {
    "__set__": true,
    "elements": [
      "gemgis"
    ]
  },
  "tests.test_raster_input": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_rasterio_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_rate": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.test_rating": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.test_raxmlng": {
    "__set__": true,
    "elements": [
      "pypythia"
    ]
  },
  "tests.test_raxmlng_parser": {
    "__set__": true,
    "elements": [
      "pypythia"
    ]
  },
  "tests.test_ray_version_checker": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_rdatasets": {
    "__set__": true,
    "elements": [
      "rdatasets"
    ]
  },
  "tests.test_rdf": {
    "__set__": true,
    "elements": [
      "rdfpy"
    ]
  },
  "tests.test_rdkitfixer": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_rdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_reacnetgen": {
    "__set__": true,
    "elements": [
      "reacnetgenerator"
    ]
  },
  "tests.test_read": {
    "__set__": true,
    "elements": [
      "pymapvbvd"
    ]
  },
  "tests.test_read_all_py": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_drivers": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_read_incomplete_rmd": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_lzw_tiff": {
    "__set__": true,
    "elements": [
      "n2v"
    ]
  },
  "tests.test_read_simple_R": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_bare": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_hydrogen": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_ipynb": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_julia": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_markdown": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_percent": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_python": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_rmd": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_scheme": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_simple_sphinx": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_read_structure": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_read_tiff": {
    "__set__": true,
    "elements": [
      "tifftools"
    ]
  },
  "tests.test_read_write_round_trip": {
    "__set__": true,
    "elements": [
      "starfile"
    ]
  },
  "tests.test_readjs": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_readme": {
    "__set__": true,
    "elements": [
      "redframes",
      "streamable",
      "tifftools"
    ]
  },
  "tests.test_readwrite": {
    "__set__": true,
    "elements": [
      "nir"
    ]
  },
  "tests.test_rebuild_vrts": {
    "__set__": true,
    "elements": [
      "rabpro"
    ]
  },
  "tests.test_recalibration": {
    "__set__": true,
    "elements": [
      "uncertainty-toolbox"
    ]
  },
  "tests.test_rechunking": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_recipe_item": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_recognise": {
    "__set__": true,
    "elements": [
      "goosebib"
    ]
  },
  "tests.test_record": {
    "__set__": true,
    "elements": [
      "aesara",
      "pytmc",
      "recordwhat",
      "theano-pymc"
    ]
  },
  "tests.test_record_links": {
    "__set__": true,
    "elements": [
      "recordwhat"
    ]
  },
  "tests.test_records": {
    "__set__": true,
    "elements": [
      "vectorbt"
    ]
  },
  "tests.test_recoverable": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_recreateDB": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_rectilinear": {
    "__set__": true,
    "elements": [
      "pyvista-xarray"
    ]
  },
  "tests.test_redact": {
    "__set__": true,
    "elements": [
      "db-to-sqlite"
    ]
  },
  "tests.test_redirect": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_reducedordermodel": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_reduction": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_reduction.test_merge": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_reflectbitorder": {
    "__set__": true,
    "elements": [
      "crccheck"
    ]
  },
  "tests.test_reformat": {
    "__set__": true,
    "elements": [
      "goosebib"
    ]
  },
  "tests.test_regex": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_regex_tokenizer": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_regexlexer": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_regexopt": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_regimes": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_regionmask": {
    "__set__": true,
    "elements": [
      "cmip6_preprocessing",
      "intake-geopandas",
      "xmip"
    ]
  },
  "tests.test_regions": {
    "__set__": true,
    "elements": [
      "py-cordex",
      "pycsep"
    ]
  },
  "tests.test_register_schema": {
    "__set__": true,
    "elements": [
      "jupyter_telemetry"
    ]
  },
  "tests.test_registerable": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_registration": {
    "__set__": true,
    "elements": [
      "kotsu"
    ]
  },
  "tests.test_registry": {
    "__set__": true,
    "elements": [
      "python-docker",
      "xpersist"
    ]
  },
  "tests.test_regression": {
    "__set__": true,
    "elements": [
      "pycircstat"
    ]
  },
  "tests.test_regression_base": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_regression_explainer": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_regressions": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_regrid": {
    "__set__": true,
    "elements": [
      "esmlab"
    ]
  },
  "tests.test_regular_grid": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_relation_classifier": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_relational": {
    "__set__": true,
    "elements": [
      "qme"
    ]
  },
  "tests.test_release": {
    "__set__": true,
    "elements": [
      "yarg"
    ]
  },
  "tests.test_reloader": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_remo_ds": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_remote": {
    "__set__": true,
    "elements": [
      "intake-xarray",
      "localtileserver"
    ]
  },
  "tests.test_remote_cache": {
    "__set__": true,
    "elements": [
      "intake-geopandas"
    ]
  },
  "tests.test_remove": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_render": {
    "__set__": true,
    "elements": [
      "qhub"
    ]
  },
  "tests.test_renderer": {
    "__set__": true,
    "elements": [
      "jesth"
    ]
  },
  "tests.test_repacking": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_repeated_enum": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_reply_handling": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_report": {
    "__set__": true,
    "elements": [
      "dvclive",
      "edgetest",
      "ltbams",
      "pyreportjasper",
      "server-thread"
    ]
  },
  "tests.test_reporters": {
    "__set__": true,
    "elements": [
      "doppel-cli"
    ]
  },
  "tests.test_reporting": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_repository": {
    "__set__": true,
    "elements": [
      "cachy"
    ]
  },
  "tests.test_repr": {
    "__set__": true,
    "elements": [
      "andes",
      "ltbams"
    ]
  },
  "tests.test_representation": {
    "__set__": true,
    "elements": [
      "bertopic",
      "texthero"
    ]
  },
  "tests.test_representation.test_get": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_representation.test_labels": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_representation.test_representations": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_reqparse": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_request": {
    "__set__": true,
    "elements": [
      "ooipy",
      "overpy",
      "sanic"
    ]
  },
  "tests.test_request_cancel": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_request_construction": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_request_data": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_request_stream": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_requests": {
    "__set__": true,
    "elements": [
      "omnipath",
      "sanic"
    ]
  },
  "tests.test_requirements": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_res1d": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_resampling": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_residues": {
    "__set__": true,
    "elements": [
      "prolif"
    ]
  },
  "tests.test_resolvable": {
    "__set__": true,
    "elements": [
      "plum-dispatch"
    ]
  },
  "tests.test_resolver": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_resolvers": {
    "__set__": true,
    "elements": [
      "django-hosts"
    ]
  },
  "tests.test_resource": {
    "__set__": true,
    "elements": [
      "tranquilizer"
    ]
  },
  "tests.test_resource_analysis": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_resourcerelease": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_resourcereleasedemo": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_resources": {
    "__set__": true,
    "elements": [
      "pcmdi_metrics",
      "saws"
    ]
  },
  "tests.test_response": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "flask-security-too",
      "sanic"
    ]
  },
  "tests.test_response_timeout": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_restapi": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.test_result": {
    "__set__": true,
    "elements": [
      "overpy"
    ]
  },
  "tests.test_result_set": {
    "__set__": true,
    "elements": [
      "pyathena"
    ]
  },
  "tests.test_result_way": {
    "__set__": true,
    "elements": [
      "overpy"
    ]
  },
  "tests.test_results_set": {
    "__set__": true,
    "elements": [
      "pymapd",
      "pyomniscidb"
    ]
  },
  "tests.test_resultset": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_retangled": {
    "__set__": true,
    "elements": [
      "django-entangled"
    ]
  },
  "tests.test_retinanet": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_returns": {
    "__set__": true,
    "elements": [
      "vectorbt"
    ]
  },
  "tests.test_revolvingdoor": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_rfc3339": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_rfc64_tin": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_rfc822": {
    "__set__": true,
    "elements": [
      "pyproject-metadata"
    ]
  },
  "tests.test_riccati": {
    "__set__": true,
    "elements": [
      "riccati"
    ]
  },
  "tests.test_river_utils": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_rmd_to_ipynb": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_robustness": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_rocket": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_rolling": {
    "__set__": true,
    "elements": [
      "focal-stats"
    ]
  },
  "tests.test_root_imports": {
    "__set__": true,
    "elements": [
      "jesth",
      "shared"
    ]
  },
  "tests.test_rootcling": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_rop": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_rotations": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_route_def": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_routes": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_routine": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_rsmq": {
    "__set__": true,
    "elements": [
      "pyrsmq"
    ]
  },
  "tests.test_rt_libradtran": {
    "__set__": true,
    "elements": [
      "isofit"
    ]
  },
  "tests.test_rtf_formatter": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_rtn_dcopf": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_rtn_ed": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_rtn_pflow": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_rtn_rted": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_rtn_uc": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_ruby": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_run": {
    "__set__": true,
    "elements": [
      "e3sm_diags",
      "kotsu",
      "nbsmoke",
      "propka"
    ]
  },
  "tests.test_run_app": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_run_length": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_run_train": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_runner": {
    "__set__": true,
    "elements": [
      "memo",
      "yggdrasil"
    ]
  },
  "tests.test_runtime_env": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_runtime_udf": {
    "__set__": true,
    "elements": [
      "pymapd",
      "pyomniscidb"
    ]
  },
  "tests.test_s2_obs": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_s3": {
    "__set__": true,
    "elements": [
      "anyscale",
      "awacs"
    ]
  },
  "tests.test_s3_specific": {
    "__set__": true,
    "elements": [
      "cloudpathlib"
    ]
  },
  "tests.test_s3uri": {
    "__set__": true,
    "elements": [
      "autouri"
    ]
  },
  "tests.test_saferound": {
    "__set__": true,
    "elements": [
      "iteround"
    ]
  },
  "tests.test_sample": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_sampler": {
    "__set__": true,
    "elements": [
      "mmsegmentation"
    ]
  },
  "tests.test_sampling": {
    "__set__": true,
    "elements": [
      "blackjax",
      "zfit"
    ]
  },
  "tests.test_save_api": {
    "__set__": true,
    "elements": [
      "waybackpy"
    ]
  },
  "tests.test_save_multiple": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_saver": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_saws": {
    "__set__": true,
    "elements": [
      "saws"
    ]
  },
  "tests.test_scaffold": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_scalebar_detection": {
    "__set__": true,
    "elements": [
      "imagedataextractor"
    ]
  },
  "tests.test_scaled_euclid_dist": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_scaler": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_scaling": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_scanf": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_scatter": {
    "__set__": true,
    "elements": [
      "dexplot"
    ]
  },
  "tests.test_scatterer": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_scattering_unit": {
    "__set__": true,
    "elements": [
      "xrd_simulator"
    ]
  },
  "tests.test_scenarios": {
    "__set__": true,
    "elements": [
      "openfisca-france"
    ]
  },
  "tests.test_schedulefree": {
    "__set__": true,
    "elements": [
      "pymace"
    ]
  },
  "tests.test_schema": {
    "__set__": true,
    "elements": [
      "edgetest",
      "fiona",
      "llama-index",
      "qhub",
      "xcube-smos",
      "yggdrasil"
    ]
  },
  "tests.test_schema_geom": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_scipy": {
    "__set__": true,
    "elements": [
      "hickle"
    ]
  },
  "tests.test_scoring": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_scram": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_scrimp": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_scripts": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_atlasq_list_summary": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_atlasq_ohi": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_atlasq_query": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_fsl_apply_x5": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_fsl_convert_x5": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_fsl_ents": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_imglob": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_immv_imcp": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_scripts.test_resample_image": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_sd": {
    "__set__": true,
    "elements": [
      "napkin"
    ]
  },
  "tests.test_sd_frag": {
    "__set__": true,
    "elements": [
      "napkin"
    ]
  },
  "tests.test_search": {
    "__set__": true,
    "elements": [
      "quilt",
      "quilt3"
    ]
  },
  "tests.test_section": {
    "__set__": true,
    "elements": [
      "jesth"
    ]
  },
  "tests.test_sections": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_segment": {
    "__set__": true,
    "elements": [
      "pyannote.core",
      "pydifact"
    ]
  },
  "tests.test_segmentation": {
    "__set__": true,
    "elements": [
      "afwizard",
      "arcjetcv",
      "medcam"
    ]
  },
  "tests.test_segmentation.smp_test": {
    "__set__": true,
    "elements": [
      "medcam"
    ]
  },
  "tests.test_segmentation.unet_seg_dataset": {
    "__set__": true,
    "elements": [
      "medcam"
    ]
  },
  "tests.test_segmentation.unet_seg_test": {
    "__set__": true,
    "elements": [
      "medcam"
    ]
  },
  "tests.test_segmentcollection": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_sel2d": {
    "__set__": true,
    "elements": [
      "extract_model"
    ]
  },
  "tests.test_select": {
    "__set__": true,
    "elements": [
      "mols2grid"
    ]
  },
  "tests.test_select_dimension": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_semaphore": {
    "__set__": true,
    "elements": [
      "redis-semaphore"
    ]
  },
  "tests.test_semgrex": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_sensitivity": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_sensorthings_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_sentence": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_sequence_tagger": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_serialization": {
    "__set__": true,
    "elements": [
      "auto_gptq",
      "flask-restless",
      "pangeo-forge-recipes",
      "servicestack"
    ]
  },
  "tests.test_serialization_utilities": {
    "__set__": true,
    "elements": [
      "responsibleai"
    ]
  },
  "tests.test_serialize": {
    "__set__": true,
    "elements": [
      "jupyter_server"
    ]
  },
  "tests.test_serializer": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_serializers": {
    "__set__": true,
    "elements": [
      "xpersist"
    ]
  },
  "tests.test_series": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_server": {
    "__set__": true,
    "elements": [
      "poster",
      "server-thread"
    ]
  },
  "tests.test_server_events": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_server_heartbeat": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_server_loop": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_server_misc": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_server_request": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_server_start": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_serverapp": {
    "__set__": true,
    "elements": [
      "jupyter_server"
    ]
  },
  "tests.test_service": {
    "__set__": true,
    "elements": [
      "ltbams"
    ]
  },
  "tests.test_servicedesk": {
    "__set__": true,
    "elements": [
      "atlassian-python-api"
    ]
  },
  "tests.test_services": {
    "__set__": true,
    "elements": [
      "andes",
      "yggdrasil"
    ]
  },
  "tests.test_session": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "fiona",
      "gpflow",
      "quilt",
      "quilt3",
      "web.py"
    ]
  },
  "tests.test_set": {
    "__set__": true,
    "elements": [
      "tifftools"
    ]
  },
  "tests.test_set_decoded_components": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_setgetOption": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_settings": {
    "__set__": true,
    "elements": [
      "chebfun",
      "django-filebrowser",
      "django-versatileimagefield",
      "djangocms-frontend",
      "planetary-computer",
      "pydeck",
      "vectorbt"
    ]
  },
  "tests.test_settings_attr": {
    "__set__": true,
    "elements": [
      "django-pwa"
    ]
  },
  "tests.test_setup": {
    "__set__": true,
    "elements": [
      "blimpy",
      "optimade",
      "orbit-ml"
    ]
  },
  "tests.test_setup_commands": {
    "__set__": true,
    "elements": [
      "stitchm"
    ]
  },
  "tests.test_severity_enum": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_sg": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_shaft": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_shakenbreak": {
    "__set__": true,
    "elements": [
      "shakenbreak"
    ]
  },
  "tests.test_shape": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_shapely": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_sharded_loading": {
    "__set__": true,
    "elements": [
      "auto_gptq"
    ]
  },
  "tests.test_sharing": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_shell": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_shift": {
    "__set__": true,
    "elements": [
      "ezyrb"
    ]
  },
  "tests.test_show_versions": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.test_shtab": {
    "__set__": true,
    "elements": [
      "shtab"
    ]
  },
  "tests.test_side_effects": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_sidecar": {
    "__set__": true,
    "elements": [
      "dcm2bids"
    ]
  },
  "tests.test_siemens_dicom": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_siemens_mrsi_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_siemens_rda": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_siemens_special_data": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_siemens_svs_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_sign_assets": {
    "__set__": true,
    "elements": [
      "planetary-computer"
    ]
  },
  "tests.test_signal": {
    "__set__": true,
    "elements": [
      "mpire",
      "typhos"
    ]
  },
  "tests.test_signal_handlers": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_signals": {
    "__set__": true,
    "elements": [
      "sanic",
      "vectorbt"
    ]
  },
  "tests.test_signature": {
    "__set__": true,
    "elements": [
      "magicgui",
      "plum-dispatch"
    ]
  },
  "tests.test_signed_integer": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_signer": {
    "__set__": true,
    "elements": [
      "mastercard-oauth1-signer"
    ]
  },
  "tests.test_signing": {
    "__set__": true,
    "elements": [
      "planetary-computer"
    ]
  },
  "tests.test_sigproc": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_similar": {
    "__set__": true,
    "elements": [
      "keras-radam"
    ]
  },
  "tests.test_simple": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_simple_detachment_limited": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_simple_subclass": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_simplify": {
    "__set__": true,
    "elements": [
      "flake8-simplify"
    ]
  },
  "tests.test_sims": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_sims_corr": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_simulate": {
    "__set__": true,
    "elements": [
      "jhub-client"
    ]
  },
  "tests.test_simulation": {
    "__set__": true,
    "elements": [
      "plonk"
    ]
  },
  "tests.test_single": {
    "__set__": true,
    "elements": [
      "baycomp"
    ]
  },
  "tests.test_single_card": {
    "__set__": true,
    "elements": [
      "spectrumdevice"
    ]
  },
  "tests.test_single_channel": {
    "__set__": true,
    "elements": [
      "spectrumdevice"
    ]
  },
  "tests.test_single_file_stac": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_singlefile": {
    "__set__": true,
    "elements": [
      "model-index"
    ]
  },
  "tests.test_singularity": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_sinks": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_sites": {
    "__set__": true,
    "elements": [
      "django-filebrowser",
      "django-hosts"
    ]
  },
  "tests.test_sjoin": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_sketching_matrix": {
    "__set__": true,
    "elements": [
      "tt-sketch"
    ]
  },
  "tests.test_skimp": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_skip_remote_data": {
    "__set__": true,
    "elements": [
      "pytest-remotedata"
    ]
  },
  "tests.test_sklearn": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_skorch_models": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_slddb": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_converters": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_dbcreation": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_dbmaterial": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_elements": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_formula": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_material": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slddb.test_webapi": {
    "__set__": true,
    "elements": [
      "orsopy"
    ]
  },
  "tests.test_slice": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_slicing": {
    "__set__": true,
    "elements": [
      "glymur",
      "pymapvbvd"
    ]
  },
  "tests.test_sliding_window": {
    "__set__": true,
    "elements": [
      "pandora-geno"
    ]
  },
  "tests.test_smarty": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_smc": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_smc_ess": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_smuserlist": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_snap": {
    "__set__": true,
    "elements": [
      "plonk",
      "xugrid"
    ]
  },
  "tests.test_snapshot": {
    "__set__": true,
    "elements": [
      "andes",
      "ezyrb"
    ]
  },
  "tests.test_snapshot_util": {
    "__set__": true,
    "elements": [
      "anyscale"
    ]
  },
  "tests.test_snapshots": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_snippets": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_snow": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_sns": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_socketblocker": {
    "__set__": true,
    "elements": [
      "pytest-remotedata"
    ]
  },
  "tests.test_socrata_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_solidmotor": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_solutions": {
    "__set__": true,
    "elements": [
      "ultralytics"
    ]
  },
  "tests.test_solver": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_solvers": {
    "__set__": true,
    "elements": [
      "python-constraint2"
    ]
  },
  "tests.test_some_not_in_set": {
    "__set__": true,
    "elements": [
      "python-constraint2"
    ]
  },
  "tests.test_sort": {
    "__set__": true,
    "elements": [
      "emperor"
    ]
  },
  "tests.test_sorting": {
    "__set__": true,
    "elements": [
      "extract_model"
    ]
  },
  "tests.test_source": {
    "__set__": true,
    "elements": [
      "intake-avro",
      "intake-parquet"
    ]
  },
  "tests.test_sourcecode": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_sources": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_space": {
    "__set__": true,
    "elements": [
      "mesa",
      "unifhy",
      "zfit"
    ]
  },
  "tests.test_space_0": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_spacy_model": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_spark": {
    "__set__": true,
    "elements": [
      "intake-spark"
    ]
  },
  "tests.test_spark_histogrammar": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_sparknlp_model": {
    "__set__": true,
    "elements": [
      "nlptest"
    ]
  },
  "tests.test_sparkypandy": {
    "__set__": true,
    "elements": [
      "sparkypandy"
    ]
  },
  "tests.test_spatial": {
    "__set__": true,
    "elements": [
      "bdsim",
      "mikeio",
      "oddt",
      "pycsep"
    ]
  },
  "tests.test_spatial_partitioning": {
    "__set__": true,
    "elements": [
      "dask-geopandas"
    ]
  },
  "tests.test_spatialite": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_spatialvector": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_spdmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_spec": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.test_specs": {
    "__set__": true,
    "elements": [
      "adagio"
    ]
  },
  "tests.test_spectral_embed": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_sph": {
    "__set__": true,
    "elements": [
      "plonk"
    ]
  },
  "tests.test_sphere": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_spheremap": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_splines": {
    "__set__": true,
    "elements": [
      "pymc-extras"
    ]
  },
  "tests.test_split": {
    "__set__": true,
    "elements": [
      "tifftools"
    ]
  },
  "tests.test_split_rules": {
    "__set__": true,
    "elements": [
      "pymc-bart"
    ]
  },
  "tests.test_sql": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_sql_source": {
    "__set__": true,
    "elements": [
      "intake-geopandas"
    ]
  },
  "tests.test_sqla_types": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_sqlalchemy_athena": {
    "__set__": true,
    "elements": [
      "pyathena"
    ]
  },
  "tests.test_sqlite_geopackage_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_sqlite_phonemizer": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_sqlite_userdefined": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_sqlite_util": {
    "__set__": true,
    "elements": [
      "geofileops"
    ]
  },
  "tests.test_sqs": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_sscursor": {
    "__set__": true,
    "elements": [
      "aiomysql"
    ]
  },
  "tests.test_ssml": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_stac_api_io": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_stac_api_object": {
    "__set__": true,
    "elements": [
      "pystac-client"
    ]
  },
  "tests.test_stac_io": {
    "__set__": true,
    "elements": [
      "pystac",
      "pystac-client"
    ]
  },
  "tests.test_stack": {
    "__set__": true,
    "elements": [
      "pastel"
    ]
  },
  "tests.test_standard_metadata": {
    "__set__": true,
    "elements": [
      "pyproject-metadata"
    ]
  },
  "tests.test_star_hub": {
    "__set__": true,
    "elements": [
      "spectrumdevice"
    ]
  },
  "tests.test_stars": {
    "__set__": true,
    "elements": [
      "uranography"
    ]
  },
  "tests.test_stat_dist": {
    "__set__": true,
    "elements": [
      "pygpcca"
    ]
  },
  "tests.test_state": {
    "__set__": true,
    "elements": [
      "docker-map",
      "edgedb-python"
    ]
  },
  "tests.test_stateplane": {
    "__set__": true,
    "elements": [
      "stateplane"
    ]
  },
  "tests.test_static": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_station": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_statistics": {
    "__set__": true,
    "elements": [
      "esmlab",
      "lifelines",
      "matrixprofile"
    ]
  },
  "tests.test_stats": {
    "__set__": true,
    "elements": [
      "metocean-stats",
      "pycsep"
    ]
  },
  "tests.test_status": {
    "__set__": true,
    "elements": [
      "typhos"
    ]
  },
  "tests.test_stax": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_stemmers": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_step_size": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_stix": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_stomp": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_storage": {
    "__set__": true,
    "elements": [
      "pangeo-forge-recipes",
      "pydrill"
    ]
  },
  "tests.test_storages": {
    "__set__": true,
    "elements": [
      "tinydb"
    ]
  },
  "tests.test_store": {
    "__set__": true,
    "elements": [
      "kotsu",
      "xcube-smos"
    ]
  },
  "tests.test_str": {
    "__set__": true,
    "elements": [
      "model-index"
    ]
  },
  "tests.test_strategy": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_stream": {
    "__set__": true,
    "elements": [
      "nr.types",
      "parsevasp",
      "streamable"
    ]
  },
  "tests.test_streamflow": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_streaming": {
    "__set__": true,
    "elements": [
      "poster"
    ]
  },
  "tests.test_streamio": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_streams": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_strict_check": {
    "__set__": true,
    "elements": [
      "pytest-remotedata"
    ]
  },
  "tests.test_stringparser": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_struct": {
    "__set__": true,
    "elements": [
      "quickle"
    ]
  },
  "tests.test_structs": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.test_structure": {
    "__set__": true,
    "elements": [
      "dcm2bids"
    ]
  },
  "tests.test_structured": {
    "__set__": true,
    "elements": [
      "nr.types",
      "pyvista-xarray"
    ]
  },
  "tests.test_structured_utils": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.test_structures": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_study": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.test_study_entity": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_study_point": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_study_statistic": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_stuf": {
    "__set__": true,
    "elements": [
      "stuf"
    ]
  },
  "tests.test_style": {
    "__set__": true,
    "elements": [
      "metview-python",
      "pastel"
    ]
  },
  "tests.test_styles": {
    "__set__": true,
    "elements": [
      "pytermgui"
    ]
  },
  "tests.test_sub_models": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_sub_models.test_cluster": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_sub_models.test_dim_reduction": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_sub_models.test_embeddings": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_sub_models.test_mmr": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_subset": {
    "__set__": true,
    "elements": [
      "xclim"
    ]
  },
  "tests.test_subspacedmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_substitute": {
    "__set__": true,
    "elements": [
      "gridtest"
    ]
  },
  "tests.test_subtypes": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_suds": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_suffix_tree": {
    "__set__": true,
    "elements": [
      "sphinx-js"
    ]
  },
  "tests.test_suite": {
    "__set__": true,
    "elements": [
      "klongpy",
      "typhos"
    ]
  },
  "tests.test_suite_file": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_summaries": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.test_summarize_mtz_dtypes": {
    "__set__": true,
    "elements": [
      "reciprocalspaceship"
    ]
  },
  "tests.test_summarizers": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_edmundson": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_kl": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_lex_rank": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_lsa": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_luhn": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_luhn_sentence_rating": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_random": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_reduction": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_sum_basic": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summarizers.test_text_rank": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_summary_writer": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox"
    ]
  },
  "tests.test_sumtype": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.test_supercell": {
    "__set__": true,
    "elements": [
      "crystals"
    ]
  },
  "tests.test_surface": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_svd": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "tests.test_svs": {
    "__set__": true,
    "elements": [
      "pymapvbvd"
    ]
  },
  "tests.test_sw_extras": {
    "__set__": true,
    "elements": [
      "oceans"
    ]
  },
  "tests.test_swagger": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_swagger_utils": {
    "__set__": true,
    "elements": [
      "flask-restplus"
    ]
  },
  "tests.test_symmetry": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.test_sync": {
    "__set__": true,
    "elements": [
      "trio-asyncio",
      "trio_asyncio"
    ]
  },
  "tests.test_sync_query": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_sync_retry": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_sync_tx": {
    "__set__": true,
    "elements": [
      "edgedb-python"
    ]
  },
  "tests.test_syntax_v1": {
    "__set__": true,
    "elements": [
      "pydifact"
    ]
  },
  "tests.test_sys_fn": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_sys_fn_db": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_sys_fn_ipc": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_sys_fn_timer": {
    "__set__": true,
    "elements": [
      "klongpy"
    ]
  },
  "tests.test_sz_obs": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_table": {
    "__set__": true,
    "elements": [
      "biom-format",
      "magicgui",
      "pdfme",
      "plottable"
    ]
  },
  "tests.test_table_source": {
    "__set__": true,
    "elements": [
      "kylinpy"
    ]
  },
  "tests.test_tables": {
    "__set__": true,
    "elements": [
      "markdownify",
      "py-cordex",
      "tinydb"
    ]
  },
  "tests.test_tagged_cache": {
    "__set__": true,
    "elements": [
      "cachy"
    ]
  },
  "tests.test_tagger": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_tailing_slash_client_it": {
    "__set__": true,
    "elements": [
      "webdavclient3"
    ]
  },
  "tests.test_tank": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_tarcisBug": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_target": {
    "__set__": true,
    "elements": [
      "gw-sklearn-xarray",
      "pymonetdb"
    ]
  },
  "tests.test_tars": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_tasks": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_tax_rates": {
    "__set__": true,
    "elements": [
      "openfisca-france"
    ]
  },
  "tests.test_tcp_helpers": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_tds_resume": {
    "__set__": true,
    "elements": [
      "andes"
    ]
  },
  "tests.test_team_rating": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.test_teams": {
    "__set__": true,
    "elements": [
      "o365"
    ]
  },
  "tests.test_techstacks": {
    "__set__": true,
    "elements": [
      "servicestack"
    ]
  },
  "tests.test_telemetry": {
    "__set__": true,
    "elements": [
      "quilt3"
    ]
  },
  "tests.test_tempeh": {
    "__set__": true,
    "elements": [
      "tempeh"
    ]
  },
  "tests.test_temperature": {
    "__set__": true,
    "elements": [
      "pyet",
      "xclim"
    ]
  },
  "tests.test_tempered_smc": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_template": {
    "__set__": true,
    "elements": [
      "web.py"
    ]
  },
  "tests.test_template_tag_meta": {
    "__set__": true,
    "elements": [
      "django-pwa"
    ]
  },
  "tests.test_templates": {
    "__set__": true,
    "elements": [
      "condorpy",
      "xrd_simulator"
    ]
  },
  "tests.test_templatetags": {
    "__set__": true,
    "elements": [
      "django-controlcenter",
      "django-filebrowser",
      "django-hosts"
    ]
  },
  "tests.test_temporal": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_temporary": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_tensor": {
    "__set__": true,
    "elements": [
      "tt-sketch"
    ]
  },
  "tests.test_terminal": {
    "__set__": true,
    "elements": [
      "jupyter_server"
    ]
  },
  "tests.test_terminal_formatter": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_terrain": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_tessellation": {
    "__set__": true,
    "elements": [
      "tesspy"
    ]
  },
  "tests.test_tessellation_functions": {
    "__set__": true,
    "elements": [
      "tesspy"
    ]
  },
  "tests.test_test_client_port": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_test_utils": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_testing": {
    "__set__": true,
    "elements": [
      "sparkypandy",
      "sphinx-js"
    ]
  },
  "tests.test_tests": {
    "__set__": true,
    "elements": [
      "pycircstat"
    ]
  },
  "tests.test_tex": {
    "__set__": true,
    "elements": [
      "goosebib"
    ]
  },
  "tests.test_texplain_example1": {
    "__set__": true,
    "elements": [
      "texplain"
    ]
  },
  "tests.test_text": {
    "__set__": true,
    "elements": [
      "embetter",
      "pdfme"
    ]
  },
  "tests.test_text_classifier": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_text_processor": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_text_regressor": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_text_to_phonemes": {
    "__set__": true,
    "elements": [
      "gruut"
    ]
  },
  "tests.test_textfmts": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_textnets": {
    "__set__": true,
    "elements": [
      "textnets"
    ]
  },
  "tests.test_tfext": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_tfrecords": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "tests.test_theseus_layer": {
    "__set__": true,
    "elements": [
      "theseus-ai"
    ]
  },
  "tests.test_threads": {
    "__set__": true,
    "elements": [
      "pydrill"
    ]
  },
  "tests.test_thresh": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_tie_point_grid": {
    "__set__": true,
    "elements": [
      "arosics"
    ]
  },
  "tests.test_tiff2jp2": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_time": {
    "__set__": true,
    "elements": [
      "mesa",
      "unifhy"
    ]
  },
  "tests.test_time_series": {
    "__set__": true,
    "elements": [
      "plonk"
    ]
  },
  "tests.test_time_slice": {
    "__set__": true,
    "elements": [
      "jacqq"
    ]
  },
  "tests.test_time_utilities": {
    "__set__": true,
    "elements": [
      "pycsep"
    ]
  },
  "tests.test_timeinfo": {
    "__set__": true,
    "elements": [
      "xcube-smos"
    ]
  },
  "tests.test_timeline": {
    "__set__": true,
    "elements": [
      "pyannote.core",
      "pymt"
    ]
  },
  "tests.test_timeout_logic": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_timezone": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_timing": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_tinydb": {
    "__set__": true,
    "elements": [
      "tinydb"
    ]
  },
  "tests.test_tinydb_catalogue_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_tinydb_manager_for_parallel_requests": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_tinyimagenet": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.test_tls": {
    "__set__": true,
    "elements": [
      "pymonetdb",
      "sanic"
    ]
  },
  "tests.test_to_file": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_to_html_file": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_to_terminal": {
    "__set__": true,
    "elements": [
      "ascii_magic"
    ]
  },
  "tests.test_token": {
    "__set__": true,
    "elements": [
      "pydifact",
      "pygments"
    ]
  },
  "tests.test_token_cache": {
    "__set__": true,
    "elements": [
      "msal"
    ]
  },
  "tests.test_tokenize_data": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_tokenize_sentence": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_tokenize_utils": {
    "__set__": true,
    "elements": [
      "stanza"
    ]
  },
  "tests.test_tokenizer": {
    "__set__": true,
    "elements": [
      "pydifact",
      "stanza"
    ]
  },
  "tests.test_tokenizers": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_toml_document": {
    "__set__": true,
    "elements": [
      "tomlkit"
    ]
  },
  "tests.test_toml_file": {
    "__set__": true,
    "elements": [
      "python-constraint2",
      "tomlkit"
    ]
  },
  "tests.test_toml_spec_tests": {
    "__set__": true,
    "elements": [
      "tomlkit"
    ]
  },
  "tests.test_toml_tests": {
    "__set__": true,
    "elements": [
      "tomlkit"
    ]
  },
  "tests.test_toolbar": {
    "__set__": true,
    "elements": [
      "saws"
    ]
  },
  "tests.test_toolkit": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_tools": {
    "__set__": true,
    "elements": [
      "moviepy",
      "pymace",
      "reacnetgenerator",
      "yggdrasil"
    ]
  },
  "tests.test_tools_matrix": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_tools_vector": {
    "__set__": true,
    "elements": [
      "rocketpy"
    ]
  },
  "tests.test_top_k_discords": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_top_k_motifs": {
    "__set__": true,
    "elements": [
      "matrixprofile"
    ]
  },
  "tests.test_topic_representation": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_topojson": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_tornado": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_touchup": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_tqdm": {
    "__set__": true,
    "elements": [
      "magicgui"
    ]
  },
  "tests.test_tracing": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_track_packages": {
    "__set__": true,
    "elements": [
      "grayskull"
    ]
  },
  "tests.test_trackable": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_tracker": {
    "__set__": true,
    "elements": [
      "btrack"
    ]
  },
  "tests.test_tracklets": {
    "__set__": true,
    "elements": [
      "btrack"
    ]
  },
  "tests.test_trainer": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_traits": {
    "__set__": true,
    "elements": [
      "jupyter_telemetry"
    ]
  },
  "tests.test_trajectory": {
    "__set__": true,
    "elements": [
      "blackjax",
      "movingpandas"
    ]
  },
  "tests.test_transactions": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_transcription": {
    "__set__": true,
    "elements": [
      "deepgram-sdk"
    ]
  },
  "tests.test_transect": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_transfers": {
    "__set__": true,
    "elements": [
      "bdsim"
    ]
  },
  "tests.test_transform": {
    "__set__": true,
    "elements": [
      "fiona",
      "fslpy",
      "py-cordex"
    ]
  },
  "tests.test_transform.test_affine": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_transform.test_flirt": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_transform.test_fnirt": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_transform.test_nonlinear": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_transform.test_x5": {
    "__set__": true,
    "elements": [
      "fslpy"
    ]
  },
  "tests.test_transformation_matrix": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_transformations": {
    "__set__": true,
    "elements": [
      "weldx"
    ]
  },
  "tests.test_transforms": {
    "__set__": true,
    "elements": [
      "gpflow",
      "pangeo-forge-recipes"
    ]
  },
  "tests.test_transport": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_transport_http": {
    "__set__": true,
    "elements": [
      "suds-jurko"
    ]
  },
  "tests.test_tree": {
    "__set__": true,
    "elements": [
      "dlint",
      "pymc-bart"
    ]
  },
  "tests.test_trial": {
    "__set__": true,
    "elements": [
      "optuna"
    ]
  },
  "tests.test_triang": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_tridiag": {
    "__set__": true,
    "elements": [
      "openamundsen"
    ]
  },
  "tests.test_triton": {
    "__set__": true,
    "elements": [
      "bitsandbytes"
    ]
  },
  "tests.test_trust_notebook": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_trusted_context_connect": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_trusted_context_pconnect": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_tsne": {
    "__set__": true,
    "elements": [
      "fasttsne"
    ]
  },
  "tests.test_tt_gmres": {
    "__set__": true,
    "elements": [
      "tt-sketch"
    ]
  },
  "tests.test_turbine": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_turbofan": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_turbofan_geom": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_turbofan_weight": {
    "__set__": true,
    "elements": [
      "pyturbo"
    ]
  },
  "tests.test_tutorial": {
    "__set__": true,
    "elements": [
      "pyremo"
    ]
  },
  "tests.test_tutorials": {
    "__set__": true,
    "elements": [
      "hydra-core"
    ]
  },
  "tests.test_twist": {
    "__set__": true,
    "elements": [
      "spatialmath-python"
    ]
  },
  "tests.test_twisted": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_twisted.test_inlinecallbacks_yield_statement": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_twisted.test_returnvalue_in_inlinecallbacks": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_twisted.test_yield_return_statement": {
    "__set__": true,
    "elements": [
      "dlint"
    ]
  },
  "tests.test_twix": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_two_factor": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_two_particle": {
    "__set__": true,
    "elements": [
      "pennylane-qchem"
    ]
  },
  "tests.test_type": {
    "__set__": true,
    "elements": [
      "lux-api",
      "plum-dispatch"
    ]
  },
  "tests.test_type_hints": {
    "__set__": true,
    "elements": [
      "redframes"
    ]
  },
  "tests.test_typed_lists": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_typedoc": {
    "__set__": true,
    "elements": [
      "sphinx-js"
    ]
  },
  "tests.test_types": {
    "__set__": true,
    "elements": [
      "magicgui",
      "nptyping",
      "tranquilizer"
    ]
  },
  "tests.test_types.test_bool": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_complex": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_datetime64": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_hashed_subscriptable_type": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_ndarray": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_number": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_object": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_structured_type": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_subarray_type": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_timedelta64": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_types.test_unicode": {
    "__set__": true,
    "elements": [
      "nptyping"
    ]
  },
  "tests.test_typing": {
    "__set__": true,
    "elements": [
      "erdantic",
      "hydrofunctions",
      "pampy"
    ]
  },
  "tests.test_udf": {
    "__set__": true,
    "elements": [
      "pymonetdb"
    ]
  },
  "tests.test_ugrid1d": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_ugrid2d": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_ugrid_dataset": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_ugrid_io": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_ui": {
    "__set__": true,
    "elements": [
      "chebfun"
    ]
  },
  "tests.test_uih": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_uih_orientation": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_ultimate_examples": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_ultimate_inverse_kinematics": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_ultimate_inverse_kinematics_heatmap": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.test_uncertain_conditional": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_unicode": {
    "__set__": true,
    "elements": [
      "fiona",
      "inflect",
      "jupytext",
      "pymonetdb"
    ]
  },
  "tests.test_unicode_strings": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_unified_signin": {
    "__set__": true,
    "elements": [
      "flask-security-too"
    ]
  },
  "tests.test_unistring": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_units": {
    "__set__": true,
    "elements": [
      "modelparameters",
      "pymt",
      "yggdrasil"
    ]
  },
  "tests.test_unix_socket": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_unknown_field": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_unpack": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_updates": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.test_updating": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_updatingrelationship": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_uplift_trees": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_uris": {
    "__set__": true,
    "elements": [
      "pygls"
    ]
  },
  "tests.test_url_building": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_url_for": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_url_for_static": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_urldispatch": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_usersettableparam": {
    "__set__": true,
    "elements": [
      "mesa"
    ]
  },
  "tests.test_usgs_rdb": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_using_api": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_ustrid": {
    "__set__": true,
    "elements": [
      "ustrid"
    ]
  },
  "tests.test_utf8": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_util": {
    "__set__": true,
    "elements": [
      "amset",
      "anyscale",
      "biom-format",
      "borb",
      "dlint",
      "emperor",
      "hookee",
      "jupytab",
      "klongpy",
      "napkin",
      "ncar-jobqueue",
      "pdpipe",
      "plum-dispatch",
      "pygeoapi",
      "pygments",
      "pymc-base",
      "quilt",
      "quilt3",
      "recordwhat",
      "sigpy",
      "streamable",
      "technical",
      "yodatools"
    ]
  },
  "tests.test_util_manipulation": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_util_methods": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_utilities": {
    "__set__": true,
    "elements": [
      "chebfun",
      "deepforest",
      "localtileserver",
      "rocketpy",
      "spindry"
    ]
  },
  "tests.test_utility": {
    "__set__": true,
    "elements": [
      "magpylib",
      "weldx"
    ]
  },
  "tests.test_utility_functions": {
    "__set__": true,
    "elements": [
      "jupyter-packaging"
    ]
  },
  "tests.test_utility_spec": {
    "__set__": true,
    "elements": [
      "larch"
    ]
  },
  "tests.test_utils": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox",
      "aiida-castep",
      "airflow",
      "artificial-adversary",
      "baycomp",
      "bertopic",
      "birdy",
      "blimpy",
      "btrack",
      "causalml",
      "clisops",
      "cmip6_preprocessing",
      "cmyt",
      "conservedwatersearch",
      "disk-objectstore",
      "django-controlcenter",
      "django-hosts",
      "dphtools",
      "dsms-sdk",
      "edgetest",
      "embetter",
      "extract_model",
      "flask-restplus",
      "flask-security-too",
      "gemgis",
      "graspy",
      "grayskull",
      "guidance",
      "gw-sklearn-xarray",
      "hydra-core",
      "ioos_qc",
      "jupyter_server",
      "llama-index",
      "lume-model",
      "lux-api",
      "marquez-python",
      "mastercard-oauth1-signer",
      "matrixprofile",
      "metview-python",
      "modelparameters",
      "mofchecker",
      "mols2grid",
      "mpire",
      "muttlib",
      "neutronics_material_maker",
      "numba_celltree",
      "oddt",
      "onnx-caffe2",
      "pangeo-forge-recipes",
      "prolif",
      "pycircstat",
      "pygpcca",
      "pypythia",
      "pyradios",
      "pyremo",
      "pyrsmq",
      "pysentiment2",
      "pystac",
      "python-flair",
      "rabpro",
      "radioactivedecay",
      "responsibleai",
      "rtfde",
      "sanic",
      "stanza",
      "stuf",
      "sumy",
      "tinydb",
      "tomlkit",
      "torch-optimizer",
      "typhos",
      "uncertainty-toolbox",
      "unifhy",
      "vectorbt",
      "verta",
      "waybackpy",
      "web.py",
      "xclim",
      "xcube-smos",
      "xmip",
      "xopt",
      "xrd_simulator",
      "yodapy"
    ]
  },
  "tests.test_utils.fake_datetime": {
    "__set__": true,
    "elements": [
      "airflow"
    ]
  },
  "tests.test_utils.test_arg_handler": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_clock": {
    "__set__": true,
    "elements": [
      "unifhy"
    ]
  },
  "tests.test_utils.test_compass": {
    "__set__": true,
    "elements": [
      "unifhy"
    ]
  },
  "tests.test_utils.test_compat": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_utils.test_exchanger": {
    "__set__": true,
    "elements": [
      "unifhy"
    ]
  },
  "tests.test_utils.test_file_utils": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_histogram": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_http_session": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_main_utils": {
    "__set__": true,
    "elements": [
      "rtfde"
    ]
  },
  "tests.test_utils.test_pagination": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_pip_requirements": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_record": {
    "__set__": true,
    "elements": [
      "unifhy"
    ]
  },
  "tests.test_utils.test_state": {
    "__set__": true,
    "elements": [
      "unifhy"
    ]
  },
  "tests.test_utils.test_time_utils": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_utils.test_unicode_compatible_class": {
    "__set__": true,
    "elements": [
      "sumy"
    ]
  },
  "tests.test_utils.test_utils": {
    "__set__": true,
    "elements": [
      "sumy",
      "verta"
    ]
  },
  "tests.test_utils.utils": {
    "__set__": true,
    "elements": [
      "rtfde"
    ]
  },
  "tests.test_utils_typing": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.test_uturn": {
    "__set__": true,
    "elements": [
      "blackjax"
    ]
  },
  "tests.test_v32": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_v33": {
    "__set__": true,
    "elements": [
      "pygml"
    ]
  },
  "tests.test_validate": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_validation": {
    "__set__": true,
    "elements": [
      "flask-restless"
    ]
  },
  "tests.test_validation_01": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_validation_02": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.test_validator": {
    "__set__": true,
    "elements": [
      "jesth"
    ]
  },
  "tests.test_value_optimization": {
    "__set__": true,
    "elements": [
      "causalml"
    ]
  },
  "tests.test_value_resolution": {
    "__set__": true,
    "elements": [
      "docker-map"
    ]
  },
  "tests.test_var_units": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_variables": {
    "__set__": true,
    "elements": [
      "lume-model"
    ]
  },
  "tests.test_varian": {
    "__set__": true,
    "elements": [
      "spec2nii"
    ]
  },
  "tests.test_variational": {
    "__set__": true,
    "elements": [
      "gpflow"
    ]
  },
  "tests.test_variations": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_variations.test_class": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_variations.test_dynamic": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_variations.test_hierarchy": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_varint_encoding": {
    "__set__": true,
    "elements": [
      "pyrobuf"
    ]
  },
  "tests.test_varprodmd": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_varys": {
    "__set__": true,
    "elements": [
      "varys"
    ]
  },
  "tests.test_vector": {
    "__set__": true,
    "elements": [
      "edgedb-python",
      "gemgis"
    ]
  },
  "tests.test_vector_algebra": {
    "__set__": true,
    "elements": [
      "propka"
    ]
  },
  "tests.test_vector_pipeline": {
    "__set__": true,
    "elements": [
      "rabpro"
    ]
  },
  "tests.test_vectorizers": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_vectorizers.test_ctfidf": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_vectorizers.test_online_cv": {
    "__set__": true,
    "elements": [
      "bertopic"
    ]
  },
  "tests.test_velocimetry": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_verify": {
    "__set__": true,
    "elements": [
      "nbsmoke"
    ]
  },
  "tests.test_version": {
    "__set__": true,
    "elements": [
      "afwizard",
      "aiobotocore",
      "dcm2bids",
      "fiona",
      "geofileops",
      "jupyter_server",
      "propka",
      "pystac",
      "sigpy"
    ]
  },
  "tests.test_version_request": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_version_response": {
    "__set__": true,
    "elements": [
      "mythx-models"
    ]
  },
  "tests.test_versioning": {
    "__set__": true,
    "elements": [
      "sanic",
      "verta"
    ]
  },
  "tests.test_versioning.test_code": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_versioning.test_configuration": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_versioning.test_dataset": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_versioning.test_environment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_versioning.test_repository": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.test_versions": {
    "__set__": true,
    "elements": [
      "awslogs",
      "django-filebrowser"
    ]
  },
  "tests.test_vfs": {
    "__set__": true,
    "elements": [
      "fiona"
    ]
  },
  "tests.test_vhosts": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_video": {
    "__set__": true,
    "elements": [
      "pyopenrivercam"
    ]
  },
  "tests.test_videotools": {
    "__set__": true,
    "elements": [
      "moviepy"
    ]
  },
  "tests.test_view": {
    "__set__": true,
    "elements": [
      "django-pwa"
    ]
  },
  "tests.test_views": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "sanic"
    ]
  },
  "tests.test_virtualscreening": {
    "__set__": true,
    "elements": [
      "oddt"
    ]
  },
  "tests.test_vis": {
    "__set__": true,
    "elements": [
      "lux-api"
    ]
  },
  "tests.test_vision": {
    "__set__": true,
    "elements": [
      "embetter"
    ]
  },
  "tests.test_visitor": {
    "__set__": true,
    "elements": [
      "streamable"
    ]
  },
  "tests.test_visual": {
    "__set__": true,
    "elements": [
      "python-flair"
    ]
  },
  "tests.test_visual_regression": {
    "__set__": true,
    "elements": [
      "sphinx-wagtail-theme"
    ]
  },
  "tests.test_visualization": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox",
      "gemgis",
      "mesa",
      "optuna",
      "plonk",
      "texthero",
      "weldx"
    ]
  },
  "tests.test_visualize": {
    "__set__": true,
    "elements": [
      "deepforest",
      "matrixprofile"
    ]
  },
  "tests.test_viz": {
    "__set__": true,
    "elements": [
      "uncertainty-toolbox"
    ]
  },
  "tests.test_vocs": {
    "__set__": true,
    "elements": [
      "xopt"
    ]
  },
  "tests.test_voronoi": {
    "__set__": true,
    "elements": [
      "xugrid"
    ]
  },
  "tests.test_voyager_data_load": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_vs_mag2": {
    "__set__": true,
    "elements": [
      "magpylib"
    ]
  },
  "tests.test_vsa_aeff": {
    "__set__": true,
    "elements": [
      "terrainbento"
    ]
  },
  "tests.test_vsi": {
    "__set__": true,
    "elements": [
      "localtileserver"
    ]
  },
  "tests.test_vue_widget": {
    "__set__": true,
    "elements": [
      "ipyvue"
    ]
  },
  "tests.test_waiter": {
    "__set__": true,
    "elements": [
      "aiobotocore"
    ]
  },
  "tests.test_walk": {
    "__set__": true,
    "elements": [
      "rivgraph"
    ]
  },
  "tests.test_warn": {
    "__set__": true,
    "elements": [
      "ibm_db"
    ]
  },
  "tests.test_warnings": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_warp": {
    "__set__": true,
    "elements": [
      "ipygany"
    ]
  },
  "tests.test_water_clustering": {
    "__set__": true,
    "elements": [
      "conservedwatersearch"
    ]
  },
  "tests.test_waterfall": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_waterfall2": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_waterwatch": {
    "__set__": true,
    "elements": [
      "hydrofunctions"
    ]
  },
  "tests.test_wavelet": {
    "__set__": true,
    "elements": [
      "sigpy"
    ]
  },
  "tests.test_wdl_parser": {
    "__set__": true,
    "elements": [
      "caper"
    ]
  },
  "tests.test_web": {
    "__set__": true,
    "elements": [
      "gemgis"
    ]
  },
  "tests.test_web_app": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_cli": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_exceptions": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_log": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_middleware": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_request": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_request_handler": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_response": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_runner": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_sendfile": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_sendfile_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_server": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_urldispatcher": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_websocket": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_web_websocket_functional": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_websocket_handshake": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_websocket_parser": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_websocket_writer": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_websockets": {
    "__set__": true,
    "elements": [
      "sanic"
    ]
  },
  "tests.test_weights": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_welding_util": {
    "__set__": true,
    "elements": [
      "weldx"
    ]
  },
  "tests.test_whiley": {
    "__set__": true,
    "elements": [
      "pygments"
    ]
  },
  "tests.test_widget": {
    "__set__": true,
    "elements": [
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.test_widgets": {
    "__set__": true,
    "elements": [
      "afwizard",
      "django-tinymce",
      "djangocms-attributes-field",
      "magicgui",
      "typhos"
    ]
  },
  "tests.test_widgets_charts": {
    "__set__": true,
    "elements": [
      "django-controlcenter"
    ]
  },
  "tests.test_widgets_core": {
    "__set__": true,
    "elements": [
      "django-controlcenter"
    ]
  },
  "tests.test_widgets_simple": {
    "__set__": true,
    "elements": [
      "django-controlcenter"
    ]
  },
  "tests.test_windows": {
    "__set__": true,
    "elements": [
      "focal-stats"
    ]
  },
  "tests.test_windows_manifest": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_winmsvcr": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_winversioninfo": {
    "__set__": true,
    "elements": [
      "cx_freeze"
    ]
  },
  "tests.test_worker": {
    "__set__": true,
    "elements": [
      "aiohttp"
    ]
  },
  "tests.test_workflow": {
    "__set__": true,
    "elements": [
      "condorpy"
    ]
  },
  "tests.test_workflows": {
    "__set__": true,
    "elements": [
      "quilt3"
    ]
  },
  "tests.test_workspace": {
    "__set__": true,
    "elements": [
      "pygls"
    ]
  },
  "tests.test_wps_caps": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_client": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_climatology_esp": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_climpred_hindcast_verification": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_era5": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_forecast_evaluation": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_forecast_flood_risk": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_forecast_graphs": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_generic_raster_subset": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_generic_shape_properties": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_generic_terrain_analysis": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_generic_zonal_stats": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_graph_fit": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_graph_tsstats": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_hindcast": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_hydrobasins_shape_selection": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_nalcms_zonal_stats": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_nrcan_daily": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_objective_functions": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_ostrich_gr4j_cemaneige": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_ostrich_hbv_ec": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_ostrich_hmets": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_ostrich_mohyse": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven_gr4j_cemaneige": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven_hbv_ec": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven_hmets": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven_mohyse": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_raven_multi_model": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_realtime_forecast": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wps_regionalization": {
    "__set__": true,
    "elements": [
      "raven-wps"
    ]
  },
  "tests.test_wrapper": {
    "__set__": true,
    "elements": [
      "otwrapy",
      "waybackpy"
    ]
  },
  "tests.test_write": {
    "__set__": true,
    "elements": [
      "fiona",
      "tomlkit"
    ]
  },
  "tests.test_write_does_not_modify_notebook": {
    "__set__": true,
    "elements": [
      "jupytext"
    ]
  },
  "tests.test_write_tiff": {
    "__set__": true,
    "elements": [
      "tifftools"
    ]
  },
  "tests.test_write_to_fil": {
    "__set__": true,
    "elements": [
      "blimpy"
    ]
  },
  "tests.test_writers": {
    "__set__": true,
    "elements": [
      "crystals",
      "pangeo-forge-recipes",
      "python-barcode"
    ]
  },
  "tests.test_writing": {
    "__set__": true,
    "elements": [
      "pystac",
      "starfile"
    ]
  },
  "tests.test_writing_tiles": {
    "__set__": true,
    "elements": [
      "glymur"
    ]
  },
  "tests.test_wsgi": {
    "__set__": true,
    "elements": [
      "web.py"
    ]
  },
  "tests.test_wstrust": {
    "__set__": true,
    "elements": [
      "msal"
    ]
  },
  "tests.test_xarray": {
    "__set__": true,
    "elements": [
      "daops",
      "dask_groupby",
      "flox"
    ]
  },
  "tests.test_xarray.test_xarray_aggregation": {
    "__set__": true,
    "elements": [
      "daops"
    ]
  },
  "tests.test_xarray_netcdf_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_xarray_reader_writer": {
    "__set__": true,
    "elements": [
      "cdflib"
    ]
  },
  "tests.test_xarray_utils": {
    "__set__": true,
    "elements": [
      "nappy"
    ]
  },
  "tests.test_xarray_zarr_provider": {
    "__set__": true,
    "elements": [
      "pygeoapi"
    ]
  },
  "tests.test_xgboost": {
    "__set__": true,
    "elements": [
      "dvclive"
    ]
  },
  "tests.test_xgboost_explainer": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_xgboost_treeviz": {
    "__set__": true,
    "elements": [
      "explainerdashboard"
    ]
  },
  "tests.test_xml": {
    "__set__": true,
    "elements": [
      "overpy"
    ]
  },
  "tests.test_xml_collector": {
    "__set__": true,
    "elements": [
      "pytmc"
    ]
  },
  "tests.test_xml_event": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_xml_obj": {
    "__set__": true,
    "elements": [
      "pytmc"
    ]
  },
  "tests.test_xml_regular": {
    "__set__": true,
    "elements": [
      "parsevasp"
    ]
  },
  "tests.test_xns11": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_xopt": {
    "__set__": true,
    "elements": [
      "xopt"
    ]
  },
  "tests.test_xsum": {
    "__set__": true,
    "elements": [
      "xsum"
    ]
  },
  "tests.test_xsum.test_xsum": {
    "__set__": true,
    "elements": [
      "xsum"
    ]
  },
  "tests.test_xyinput": {
    "__set__": true,
    "elements": [
      "pydmd"
    ]
  },
  "tests.test_xyz": {
    "__set__": true,
    "elements": [
      "mikeio"
    ]
  },
  "tests.test_yamlfile": {
    "__set__": true,
    "elements": [
      "yggdrasil"
    ]
  },
  "tests.test_yml_head": {
    "__set__": true,
    "elements": [
      "model-index"
    ]
  },
  "tests.test_z": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_z_numpy": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_z_random": {
    "__set__": true,
    "elements": [
      "zfit"
    ]
  },
  "tests.test_zeopp": {
    "__set__": true,
    "elements": [
      "mofchecker"
    ]
  },
  "tests.testalternative": {
    "__set__": true,
    "elements": [
      "pyet"
    ]
  },
  "tests.testapp": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "wagtail-accessibility",
      "wagtail-dynamic-dropdown",
      "wagtail-word"
    ]
  },
  "tests.testapp.admin": {
    "__set__": true,
    "elements": [
      "django-tinymce"
    ]
  },
  "tests.testapp.apps": {
    "__set__": true,
    "elements": [
      "wagtail-accessibility"
    ]
  },
  "tests.testapp.core": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.core.migrations": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.core.tests": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.dynamic_functions": {
    "__set__": true,
    "elements": [
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.testapp.manage": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.migrations": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "wagtail-accessibility",
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.testapp.migrations.0001_initial": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "wagtail-accessibility",
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.testapp.migrations.0002_create_simplepage": {
    "__set__": true,
    "elements": [
      "wagtail-accessibility"
    ]
  },
  "tests.testapp.migrations.0002_testmodel": {
    "__set__": true,
    "elements": [
      "django-tinymce"
    ]
  },
  "tests.testapp.models": {
    "__set__": true,
    "elements": [
      "django-tinymce",
      "wagtail-accessibility",
      "wagtail-dynamic-dropdown"
    ]
  },
  "tests.testapp.testapp": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.testapp.asgi": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.testapp.settings": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.testapp.urls": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testapp.testapp.wsgi": {
    "__set__": true,
    "elements": [
      "wagtail-word"
    ]
  },
  "tests.testavro": {
    "__set__": true,
    "elements": [
      "scrapy-contrib-bigexporters"
    ]
  },
  "tests.testbasic": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.testcarrierdata": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testcarrierdata.data0": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testcase": {
    "__set__": true,
    "elements": [
      "hookee"
    ]
  },
  "tests.testdata": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_800": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_882": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_979": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AD": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AE": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AM": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AO": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AR": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_AU": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_BB": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_BR": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_BS": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_BY": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_CA": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_CC": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_CN": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_CX": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_DE": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_FR": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_GB": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_GG": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_IT": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_JP": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_KR": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_MX": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_NZ": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_PL": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_RE": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_RU": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_SE": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_SG": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_TA": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_US": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_UZ": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testdata.region_YT": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testfao56": {
    "__set__": true,
    "elements": [
      "pyet"
    ]
  },
  "tests.testgeodata": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testgeodata.data0": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testgpu": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.testing": {
    "__set__": true,
    "elements": [
      "sphinx-js"
    ]
  },
  "tests.testing_utilities": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.testitem": {
    "__set__": true,
    "elements": [
      "scrapy-contrib-bigexporters"
    ]
  },
  "tests.testmetadatatest": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testmeteo": {
    "__set__": true,
    "elements": [
      "pyet"
    ]
  },
  "tests.testnumpy": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.testorc": {
    "__set__": true,
    "elements": [
      "scrapy-contrib-bigexporters"
    ]
  },
  "tests.testparquet": {
    "__set__": true,
    "elements": [
      "scrapy-contrib-bigexporters"
    ]
  },
  "tests.testrootcling": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.tests": {
    "__set__": true,
    "elements": [
      "django-versatileimagefield",
      "fancylog",
      "ffx",
      "micrometa",
      "moviepy",
      "neurokit2",
      "openmichrom",
      "plantcv",
      "portalocker",
      "rabpro",
      "wagtail-experiments"
    ]
  },
  "tests.tests.test_DUMMY": {
    "__set__": true,
    "elements": [
      "fancylog"
    ]
  },
  "tests.tests.test_micrometa": {
    "__set__": true,
    "elements": [
      "micrometa"
    ]
  },
  "tests.tests.test_tools": {
    "__set__": true,
    "elements": [
      "micrometa"
    ]
  },
  "tests.tests_authorization": {
    "__set__": true,
    "elements": [
      "crossref_commons_py"
    ]
  },
  "tests.tests_bio": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_complexity": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_data": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_default": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_adversarial_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_ahp_lif_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_boolean_state": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_dropout": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_exp_smooth_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_exp_syn": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_exp_syn_exodus": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_exp_syn_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_exp_syn_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_ffwd_stack": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_filter_bank": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_graph_base": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_graph_modules": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_graph_tracing": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_graph_utils": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_import": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_instant": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_jax_loss": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif_bitshift_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif_neuron_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif_sinabs": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_lif_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_linear": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_linear_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_modules": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_param_transformer": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_parameters": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_quantize": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_rate": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_rate_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_residual": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_samna_readout": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_sequential": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_softmax_jax": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_standard_dynamics": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_surrogate_gradients": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_synnet": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_timedmodule": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_timeseries": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_torch_loss": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_torch_module": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_torch_transform": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_updown_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_wavesense_torch": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_default.test_xylosim_v2": {
    "__set__": true,
    "elements": [
      "rockpool"
    ]
  },
  "tests.tests_ecg": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_ecg_delineate": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_ecg_findpeaks": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_eda": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_eeg": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_electronic_structure": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_electronic_structure.test_optics": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_emg": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_eog": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_epochs": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_events": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_for_travis": {
    "__set__": true,
    "elements": [
      "cellpy"
    ]
  },
  "tests.tests_hrv": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_http_utils": {
    "__set__": true,
    "elements": [
      "crossref_commons_py"
    ]
  },
  "tests.tests_io": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_io.test_castep": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_io.test_questaal": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_microstates": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_phonon": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_phonon.test_phonopy": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_plotting": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_plotting.test_band_plotter": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_plotting.test_dos_plotter": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_ppg": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_rsp": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_sampling": {
    "__set__": true,
    "elements": [
      "crossref_commons_py"
    ]
  },
  "tests.tests_signal": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_signal_fixpeaks": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_stats": {
    "__set__": true,
    "elements": [
      "neurokit2"
    ]
  },
  "tests.tests_symmetry": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_symmetry.test_bradcrack_kpath": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_symmetry.test_custom_kpath": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_symmetry.test_pymatgen_kpath": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_symmetry.test_seekpath_kpath": {
    "__set__": true,
    "elements": [
      "sumo"
    ]
  },
  "tests.tests_utils": {
    "__set__": true,
    "elements": [
      "crossref_commons_py"
    ]
  },
  "tests.testspec": {
    "__set__": true,
    "elements": [
      "histogrammar"
    ]
  },
  "tests.testtzdata": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  },
  "tests.testtzdata.data0": {
    "__set__": true,
    "elements": [
      "phonenumbers"
    ]
  }
}