{
  "onnxmltools": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common._apply_operation": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common._container": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common._registration": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common._topology": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.case_insensitive_dict": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.data_types": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.interface": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.onnx_ex": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.shape_calculator": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.tree_ensemble": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.common.utils": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.ArrayFeatureExtractor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.DictVectorizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.FeatureVectorizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.GLMClassifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.GLMRegressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.Identity": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.Imputer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.Normalizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.OneHotEncoder": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.SVC": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.SVR": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.Scaler": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.TensorToLabel": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.TensorToProbabilityMap": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.TreeEnsemble": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Activation": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Add": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Average": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.BatchNorm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Bias": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.BidirectionalLSTM": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Concat": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Convolution": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Crop": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Dot": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Embed": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Flatten": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.GRU": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.ImageScaler": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.InnerProduct": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.L2Normalize": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.LRN": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.LSTM": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.LoadConstant": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.LoadConstantND": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Max": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.MeanImage": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.MeanVarianceNorm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Min": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Multiply": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Pad": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Permute": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Pool": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Reduce": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.ReorganizeData": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Reshape": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.ReshapeStatic": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Scale": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.SequenceRepeat": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.SimpleRNN": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Slice": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Softmax": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Split": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.UnaryFunction": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.operator_converters.neural_network.Upsample": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.ArrayFeatureExtractor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.Classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.DictVectorizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.FeatureVectorizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.Identity": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.OneHotEncoder": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.Regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.TensorToLabel": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.TensorToProbabilityMap": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.BatchNorm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.BidirectionalLSTM": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Concat": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Convolution": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Crop": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Dot": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Embed": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Flatten": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.GRU": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.IdentityFloat": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.InnerProduct": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.LSTM": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.LoadConstant": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.LoadConstantND": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Merge": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Pad": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Permute": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Pool": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Reduce": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.ReorganizeData": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Reshape": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.ReshapeStatic": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.SequenceRepeat": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Slice": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Split": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.coreml.shape_calculators.neural_network.Upsample": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o.operator_converters.h2o": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o.shape_calculators": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.h2o.shape_calculators.h2otreemojo": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.operator_converters.SVMConverter": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.shape_calculators": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.shape_calculators.Classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.libsvm.shape_calculators.Regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.operator_converters.LightGbm": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.shape_calculators": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.shape_calculators.Classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.lightgbm.shape_calculators.Regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.main": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.aft_survival_regression": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.binarizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.bucketed_random_projection_lsh": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.bucketizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.chi_sq_selector": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.common": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.count_vectorizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.dct": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.decision_tree_classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.decision_tree_regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.element_wise_product": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.gbt_classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.imputer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.index_to_string": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.k_means": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.linear_classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.linear_regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.min_hash_lsh": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.mlp_classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.naive_bayes": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.normalizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.one_vs_rest": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.onehot_encoder": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.pca": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.polynomial_expansion": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.random_forest_classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.random_forest_regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.scaler": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.stop_words_remover": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.string_indexer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.tokenizer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.tree_ensemble_common": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.tree_helper": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.vector_assembler": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.vector_indexer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.vector_slicer": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.operator_converters.word2vec": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.ops_input_output": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.ops_names": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.sparkml.utils": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost._parse": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.common": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.convert": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.operator_converters": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.operator_converters.XGBoost": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.shape_calculators": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.shape_calculators.Classifier": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.convert.xgboost.shape_calculators.Regressor": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.proto": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.float16_converter": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.main": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.tests_dl_helper": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.tests_helper": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.utils_backend": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.utils_backend_onnxruntime": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  },
  "onnxmltools.utils.visualize": {
    "__set__": true,
    "elements": [
      "onnxmltools"
    ]
  }
}