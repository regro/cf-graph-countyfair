{
  "contracts.backported": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.docstring_parsing": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.enabling": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.inspection": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.interface": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.arithmetic": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.array": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.array_ops": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.attributes": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.comparison": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.compositions": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.dicts": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.dummy": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.extensions": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.files": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.isinstance_imp": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.lists": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.map": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.miscellaneous_aliases": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.scoped_variables": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.separate_context": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.seq": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.sets": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.simple_values": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.strings": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.suggester": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.tuple": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.types_misc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.library.variables": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.main": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.main_actual": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.metaclass": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.pyparsing_utils": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.syntax": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.test_registrar": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.array_extended_test": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.friendliness_statistics": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.arithmetic_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.array_elements_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.array_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.attr_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.comparison_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.compositions_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.dicts_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.dummy_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.extensions_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.files_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.isinstance_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.lists_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.map_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.miscellaneous_aliases_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.separate_context_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.seq_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.simple_values_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.strings_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.test_scoped_variables": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.tuple_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.types_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.library.variables_tc": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_class_contracts": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_decorator": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_docstring_parsing": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_idioms": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_meta": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_multiple": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_new_contract": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_particulars": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_pickling": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_simple": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.test_unicode_literals": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.testing.utils": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.useful_contracts": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.useful_contracts.numbers": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.useful_contracts.numpy_specific": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  },
  "contracts.utils": {
    "__set__": true,
    "elements": [
      "pycontracts"
    ]
  }
}