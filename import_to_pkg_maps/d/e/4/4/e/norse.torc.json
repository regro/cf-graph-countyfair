{
  "norse.torch": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.coba_lif_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.lif_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.lif_mc_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.lif_mc_refrac_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.lif_refrac_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.lsnn_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.test": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.test.test_lif_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.test.test_lif_refrac_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.adjoint.test.test_lsnn_adjoint": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.coba_lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.correlation_sensor": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.decode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.encode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.filter": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.heaviside": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.iaf": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.izhikevich": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.leaky_integrator": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.leaky_integrator_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_adex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_adex_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_correlation": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_ex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_mc": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_mc_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lif_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lift": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.logical": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.lsnn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.receptive_field": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.regularization": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.reset": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.spikes_to_times_decoder": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.stdp": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.stdp_sensor": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.superspike": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_coba_lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_decode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_encode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_exp_filter": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_heaviside": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_iaf": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_izhikevich": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_leaky_integrator": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_leaky_integrator_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_adex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_adex_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_ex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_mc": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_mc_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lif_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lift": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_logical": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_lsnn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_receptive_field": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_regularization": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_spikes_to_times_decoder": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_stdp": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_stdp_sensor": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_superspike": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_threshold": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.test.test_tsodyks_makram": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.threshold": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.functional.tsodyks_makram": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.conv": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.mobilenet": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.test": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.test.test_conv": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.test.test_mobilenet": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.test.test_vgg": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.models.vgg": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.coba_lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.conv": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.encode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.exp_filter": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.iaf": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.izhikevich": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.leaky_integrator": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.leaky_integrator_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_adex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_adex_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_correlation": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_ex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_mc": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_mc_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lif_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lift": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.lsnn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.receptive_field": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.regularization": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.sequential": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.snn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.spikes_to_times_decoder": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_coba": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_conv": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_encode": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_exp_filter": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_iaf": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_izhikevich": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_leaky_integrator": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_leaky_integrator_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_adex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_adex_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_box": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_correlation": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_ex": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_mc": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_mc_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lif_refrac": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lift": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_lsnn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_receptive_field": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_regularization": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_sequential": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_snn": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_spikes_to_times_decoder": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.module.test.test_training": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.clone": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.export_nir": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.import_nir": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.plot": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.plot.plot": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.pytree": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.state": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.tensorboard": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.tensorboard.tensorboard": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.test": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.test.test_nir_export": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.test.test_nir_import": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.test.test_pytree": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  },
  "norse.torch.utils.test.test_tensorboard": {
    "__set__": true,
    "elements": [
      "norse"
    ]
  }
}