{
  "tests.util": {
    "__set__": true,
    "elements": [
      "dartpy",
      "deeptime",
      "exonote",
      "h3pandas",
      "herbie-data",
      "intake-elasticsearch",
      "intake-iris",
      "intake-spark",
      "intake-xarray",
      "openskill",
      "plum-dispatch",
      "pyathena",
      "pygeoapi",
      "pygml",
      "pymonetdb",
      "quacc",
      "recordwhat",
      "shared"
    ]
  },
  "tests.util.conftest": {
    "__set__": true,
    "elements": [
      "quacc"
    ]
  },
  "tests.util.test_atoms": {
    "__set__": true,
    "elements": [
      "quacc"
    ]
  },
  "tests.util.test_calc": {
    "__set__": true,
    "elements": [
      "quacc"
    ]
  },
  "tests.util.test_data": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_decorator": {
    "__set__": true,
    "elements": [
      "h3pandas"
    ]
  },
  "tests.util.test_decorators": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_ladder_pairs": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_pop_analysis": {
    "__set__": true,
    "elements": [
      "quacc"
    ]
  },
  "tests.util.test_pytorch": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_quantity_statistics": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_rankings": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_score": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_shapely": {
    "__set__": true,
    "elements": [
      "h3pandas"
    ]
  },
  "tests.util.test_slabs": {
    "__set__": true,
    "elements": [
      "quacc"
    ]
  },
  "tests.util.test_sparse_utils": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_types": {
    "__set__": true,
    "elements": [
      "deeptime"
    ]
  },
  "tests.util.test_unwind": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_util_a": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_util_c": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.util.test_util_sum_q": {
    "__set__": true,
    "elements": [
      "openskill"
    ]
  },
  "tests.utilities": {
    "__set__": true,
    "elements": [
      "chebfun",
      "djangocms-frontend",
      "mchammer",
      "pygrametl",
      "spindry"
    ]
  },
  "tests.utilities.test_models": {
    "__set__": true,
    "elements": [
      "djangocms-frontend"
    ]
  },
  "tests.utilities.test_plugins": {
    "__set__": true,
    "elements": [
      "djangocms-frontend"
    ]
  },
  "tests.utilities.test_utilities": {
    "__set__": true,
    "elements": [
      "mchammer"
    ]
  },
  "tests.utils": {
    "__set__": true,
    "elements": [
      "adversarial-robustness-toolbox",
      "aiida-castep",
      "aiida-core",
      "aiocache",
      "airflow",
      "alive-progress",
      "baycomp",
      "bionc",
      "biothings_client",
      "conda-recipe-manager",
      "crystals",
      "deepchecks",
      "django-cryptography-django5",
      "dpu-utils",
      "erdantic",
      "esmlab",
      "extract_model",
      "genestboost",
      "globus-compute-endpoint",
      "guidance",
      "intake-avro",
      "intake-parquet",
      "iohexperimenter",
      "ipygany",
      "jupyter-packaging",
      "jupyter_server",
      "jupytext",
      "kit4dl",
      "klongpy",
      "landlab",
      "lightwood",
      "maml",
      "mf2",
      "modelbase",
      "mpire",
      "mvt",
      "nr.types",
      "oddt",
      "parsevasp",
      "pdfme",
      "pdfstream",
      "plantcv",
      "plateau",
      "polyfempy",
      "pyannote.core",
      "pybtex",
      "pyessv",
      "pymc-extras",
      "pynsee",
      "pyomeca",
      "pyoos",
      "pystac",
      "pyswarms",
      "python-benedict",
      "quilt",
      "quilt3",
      "small-text",
      "starfile",
      "sumy",
      "superset",
      "torch-optimizer",
      "triad",
      "trio-asyncio",
      "trio_asyncio",
      "tyssue",
      "vectorbt",
      "verta",
      "xcube_geodb",
      "xplique",
      "xyzspaces"
    ]
  },
  "tests.utils.archives": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.utils.compression": {
    "__set__": true,
    "elements": [
      "airflow"
    ]
  },
  "tests.utils.configuration": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.utils.conftest": {
    "__set__": true,
    "elements": [
      "plantcv"
    ]
  },
  "tests.utils.convert_examples": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.crypto": {
    "__set__": true,
    "elements": [
      "django-cryptography-django5"
    ]
  },
  "tests.utils.crypto.tests": {
    "__set__": true,
    "elements": [
      "django-cryptography-django5"
    ]
  },
  "tests.utils.cryptography": {
    "__set__": true,
    "elements": [
      "conda-recipe-manager"
    ]
  },
  "tests.utils.cryptography.test_hashing": {
    "__set__": true,
    "elements": [
      "conda-recipe-manager"
    ]
  },
  "tests.utils.data_generation": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.utils.datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.utils.dates": {
    "__set__": true,
    "elements": [
      "airflow"
    ]
  },
  "tests.utils.decorators": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.decorators.conftest": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.decorators.test_decorators": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.dispatcher_examples": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.dispatcher_examples.examples": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.dispatcher_examples.invalid": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.functions": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.functions.conftest": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.functions.test_singleobj_bounds": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.functions.test_singleobj_dims": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.functions.test_singleobj_return": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.functions.test_singleobj_returndims": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.gradients_test": {
    "__set__": true,
    "elements": [
      "genestboost"
    ]
  },
  "tests.utils.metrics_test": {
    "__set__": true,
    "elements": [
      "deepchecks"
    ]
  },
  "tests.utils.misc": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.utils.models_test": {
    "__set__": true,
    "elements": [
      "deepchecks"
    ]
  },
  "tests.utils.object_factory": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.utils.plotters": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.plotters.conftest": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.plotters.test_plotters": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.processes": {
    "__set__": true,
    "elements": [
      "aiida-core"
    ]
  },
  "tests.utils.search": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.search.conftest": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.search.test_gridsearch": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.search.test_randomsearch": {
    "__set__": true,
    "elements": [
      "pyswarms"
    ]
  },
  "tests.utils.simple_models_test": {
    "__set__": true,
    "elements": [
      "deepchecks"
    ]
  },
  "tests.utils.stac_io_mock": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.utils.test_assertion": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_cases": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.utils.test_cells": {
    "__set__": true,
    "elements": [
      "alive-progress"
    ]
  },
  "tests.utils.test_chunkwriter": {
    "__set__": true,
    "elements": [
      "dpu-utils"
    ]
  },
  "tests.utils.test_class_extension": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_cli": {
    "__set__": true,
    "elements": [
      "plantcv"
    ]
  },
  "tests.utils.test_convert": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_converters": {
    "__set__": true,
    "elements": [
      "plateau"
    ]
  },
  "tests.utils.test_count_repeats": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_data_conversion": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_data_split": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_dct_ops": {
    "__set__": true,
    "elements": [
      "pdfstream"
    ]
  },
  "tests.utils.test_decorators": {
    "__set__": true,
    "elements": [
      "landlab",
      "tyssue"
    ]
  },
  "tests.utils.test_dispatcher": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_distance_from_divide": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_flow__distance": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_funcdef": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.utils.test_function": {
    "__set__": true,
    "elements": [
      "nr.types"
    ]
  },
  "tests.utils.test_halo": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_hash": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_iter": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_iterators": {
    "__set__": true,
    "elements": [
      "dpu-utils"
    ]
  },
  "tests.utils.test_json": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_json2csv": {
    "__set__": true,
    "elements": [
      "plantcv"
    ]
  },
  "tests.utils.test_jupyter": {
    "__set__": true,
    "elements": [
      "pdfstream"
    ]
  },
  "tests.utils.test_lammps": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_matrix": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_neighbor_node_array": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_pandas": {
    "__set__": true,
    "elements": [
      "plateau"
    ]
  },
  "tests.utils.test_pandas_like": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_plotting": {
    "__set__": true,
    "elements": [
      "modelbase"
    ]
  },
  "tests.utils.test_preprocessing": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_pyarrow": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_pyarrow_convert": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_pynsee_utils": {
    "__set__": true,
    "elements": [
      "pynsee"
    ]
  },
  "tests.utils.test_rename": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_return_grid": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_richpath": {
    "__set__": true,
    "elements": [
      "dpu-utils"
    ]
  },
  "tests.utils.test_sample_images": {
    "__set__": true,
    "elements": [
      "plantcv"
    ]
  },
  "tests.utils.test_schema": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_signal_processing": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_source_tracking_algorithm": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_stable_priority_queue": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_stats": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_store": {
    "__set__": true,
    "elements": [
      "plateau"
    ]
  },
  "tests.utils.test_string": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_string_utils": {
    "__set__": true,
    "elements": [
      "deepchecks"
    ]
  },
  "tests.utils.test_structured_grid": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.test_tabulate_bayes_classes": {
    "__set__": true,
    "elements": [
      "plantcv"
    ]
  },
  "tests.utils.test_tempfile": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_threading": {
    "__set__": true,
    "elements": [
      "triad"
    ]
  },
  "tests.utils.test_time": {
    "__set__": true,
    "elements": [
      "esmlab"
    ]
  },
  "tests.utils.test_timing": {
    "__set__": true,
    "elements": [
      "alive-progress"
    ]
  },
  "tests.utils.test_type_util": {
    "__set__": true,
    "elements": [
      "python-benedict"
    ]
  },
  "tests.utils.test_typing": {
    "__set__": true,
    "elements": [
      "conda-recipe-manager"
    ]
  },
  "tests.utils.test_utils": {
    "__set__": true,
    "elements": [
      "tyssue",
      "xyzspaces"
    ]
  },
  "tests.utils.test_value_profile": {
    "__set__": true,
    "elements": [
      "maml"
    ]
  },
  "tests.utils.test_warppers": {
    "__set__": true,
    "elements": [
      "pdfstream"
    ]
  },
  "tests.utils.test_watershed": {
    "__set__": true,
    "elements": [
      "landlab"
    ]
  },
  "tests.utils.testing": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.utils.timing": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.utils.validator": {
    "__set__": true,
    "elements": [
      "pystac"
    ]
  },
  "tests.utils_assert": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.utils_constant_forward_dynamics": {
    "__set__": true,
    "elements": [
      "bionc"
    ]
  },
  "tests.utils_factory": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.utils_model": {
    "__set__": true,
    "elements": [
      "pyessv"
    ]
  },
  "tests.utils_test": {
    "__set__": true,
    "elements": [
      "llnl-sina"
    ]
  },
  "tests.utils_tests": {
    "__set__": true,
    "elements": [
      "labelme",
      "superset"
    ]
  },
  "tests.utils_tests.test_draw": {
    "__set__": true,
    "elements": [
      "labelme"
    ]
  },
  "tests.utils_tests.test_image": {
    "__set__": true,
    "elements": [
      "labelme"
    ]
  },
  "tests.utils_tests.test_shape": {
    "__set__": true,
    "elements": [
      "labelme"
    ]
  },
  "tests.utils_tests.util": {
    "__set__": true,
    "elements": [
      "labelme"
    ]
  }
}