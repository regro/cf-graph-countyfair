{
  "airflow_provider_openmetadata": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.hooks": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.hooks.openmetadata": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.backend": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.callback": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.config": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.config.commons": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.config.loader": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.config.providers": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.operator": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.runner": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.status": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.utils": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  },
  "airflow_provider_openmetadata.lineage.xlets": {
    "__set__": true,
    "elements": [
      "openmetadata-ingestion"
    ]
  }
}