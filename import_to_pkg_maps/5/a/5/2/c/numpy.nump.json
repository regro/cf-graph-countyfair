{
  "numpy.numpy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.__config__": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._configtool": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._add_newdocs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._add_newdocs_scalars": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._asarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._dtype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._dtype_ctypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._exceptions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._internal": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._machar": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._methods": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._multiarray_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._multiarray_umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._operand_flag_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._rational_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._simd": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._string_helpers": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._struct_ufunc_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._type_aliases": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._ufunc_config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core._umath_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.arrayprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.cversions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.defchararray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.einsumfunc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.fromnumeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.getlimits": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.memmap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.multiarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.numeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.numerictypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.overrides": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.records": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.strings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests._locales": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests._natype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test__exceptions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_abc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_argparse": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_array_coercion": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_array_interface": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_arraymethod": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_arrayobject": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_arrayprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_casting_floatingpoint_errors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_casting_unittests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_conversion_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_cpu_dispatcher": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_cpu_features": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_custom_dtypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_cython": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_datetime": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_defchararray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_deprecations": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_dlpack": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_dtype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_einsum": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_errstate": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_extint128": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_getlimits": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_half": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_hashtable": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_indexerrors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_indexing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_item_selection": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_limited_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_longdouble": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_machar": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_mem_overlap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_mem_policy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_memmap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_multiarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_nditer": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_nep50_promotions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_numeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_numerictypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_overrides": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_print": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_protocols": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_records": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalar_ctors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalar_methods": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalarbuffer": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalarinherit": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalarmath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_scalarprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_simd": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_simd_module": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_stringdtype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_strings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_ufunc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_umath_accuracy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_umath_complex": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.tests.test_unicode": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._core.umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._distributor_init": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._expired_attrs_2_0": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._globals": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._pyinstaller": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._pyinstaller.hook-numpy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._pyinstaller.pyinstaller-smoke": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._pyinstaller.test_pyinstaller": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._pytesttester": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._add_docstring": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._array_like": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._char_codes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._dtype_like": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._extended_precision": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._generic_alias": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._nbit": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._nested_sequence": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._scalars": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing._shape": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._typing.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._utils._convertions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._utils._inspect": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._utils._pep440": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy._version": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._array_object": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._constants": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._creation_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._data_type_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._dtypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._elementwise_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._indexing_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._manipulation_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._searching_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._set_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._sorting_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._statistical_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._typing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api._utility_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_array_object": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_creation_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_data_type_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_elementwise_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_indexing_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_manipulation_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_set_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_sorting_functions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.array_api.tests.test_validation": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.char": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat._inspect": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat._pep440": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat.py3k": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.compat.tests.test_compat": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.conftest": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._add_newdocs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._add_newdocs_scalars": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._asarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._dtype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._dtype_ctypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._exceptions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._internal": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._machar": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._methods": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._multiarray_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._multiarray_umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._operand_flag_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._rational_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._simd": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._string_helpers": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._struct_ufunc_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._type_aliases": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._ufunc_config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._umath_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core._utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.arrayprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.cversions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.defchararray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.einsumfunc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.fromnumeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.generate_numpy_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.getlimits": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.machar": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.memmap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.multiarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.numeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.numerictypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.overrides": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.records": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.setup_common": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests._locales": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test__exceptions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_abc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_argparse": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_array_coercion": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_array_interface": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_arraymethod": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_arrayprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_casting_floatingpoint_errors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_casting_unittests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_conversion_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_cpu_dispatcher": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_cpu_features": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_custom_dtypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_cython": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_datetime": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_defchararray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_deprecations": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_dlpack": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_dtype": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_einsum": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_errstate": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_extint128": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_getlimits": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_half": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_hashtable": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_indexerrors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_indexing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_item_selection": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_limited_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_longdouble": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_machar": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_mem_overlap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_mem_policy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_memmap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_multiarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_nditer": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_nep50_promotions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_numeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_numerictypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_numpy_2_0_compat": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_overrides": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_print": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_protocols": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_records": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalar_ctors": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalar_methods": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalarbuffer": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalarinherit": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalarmath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_scalarprint": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_simd": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_simd_module": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_strings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_ufunc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_umath_accuracy": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_umath_complex": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.tests.test_unicode": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.core.umath_tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ctypeslib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.__config__": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils._shell_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.armccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.ccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.ccompiler_opt": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.autodist": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.bdist_rpm": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build_clib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build_ext": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build_py": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build_scripts": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.build_src": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.config_compiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.develop": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.egg_info": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.install": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.install_clib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.install_data": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.install_headers": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.command.sdist": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.conv_template": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.core": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.cpuinfo": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.exec_command": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.extension": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.absoft": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.arm": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.compaq": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.environment": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.fujitsu": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.g95": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.gnu": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.hpux": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.ibm": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.intel": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.lahey": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.mips": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.nag": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.none": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.nv": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.pathf95": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.pg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.sun": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fcompiler.vast": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.from_template": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.fujitsuccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.intelccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.lib2def": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.line_endings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.log": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.mingw32ccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.misc_util": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.msvc9compiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.msvccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.npy_pkg_config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.numpy_distribution": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.pathccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.system_info": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_build_ext": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_ccompiler_opt": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_ccompiler_opt_conf": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_exec_command": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_fcompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_fcompiler_gnu": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_fcompiler_intel": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_fcompiler_nagfor": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_from_template": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_log": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_mingw32ccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_misc_util": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_npy_pkg_config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_shell_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.test_system_info": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.tests.utilities": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.distutils.unixccompiler": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.doc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.doc.constants": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.doc.ufuncs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.dtypes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.dual": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.exceptions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.__version__": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._backends": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._backends._backend": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._backends._distutils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._backends._meson": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._isocbind": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py._src_pyf": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.auxfuncs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.capi_maps": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.cb_rules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.cfuncs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.common_rules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.crackfortran": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.diagnose": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.f2py2e": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.f2py_testing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.f90mod_rules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.func2subr": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.rules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.symbolic": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_abstract_interface": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_array_from_pyobj": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_assumed_shape": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_block_docstring": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_callback": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_character": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_common": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_compile_function": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_crackfortran": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_data": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_docs": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_f2cmap": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_f2py2e": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_isoc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_kind": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_mixed": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_module_doc": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_modules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_parameter": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_pyf_src": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_quoted_character": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_return_character": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_return_complex": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_return_integer": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_return_logical": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_return_real": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_semicolon_split": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_size": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_string": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_symbolic": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.test_value_attrspec": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.tests.util": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.f2py.use_rules": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft._helper": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft._pocketfft": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft._pocketfft_internal": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft._pocketfft_umath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft.helper": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft.tests.test_helper": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.fft.tests.test_pocketfft": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._array_utils_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._arraypad_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._arraysetops_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._arrayterator_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._datasource": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._function_base_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._histograms_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._index_tricks_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._iotools": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._nanfunctions_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._npyio_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._polynomial_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._scimath_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._shape_base_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._stride_tricks_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._twodim_base_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._type_check_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._ufunclike_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._user_array_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._utils_impl": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib._version": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.array_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.arraypad": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.arraysetops": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.arrayterator": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.format": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.histograms": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.index_tricks": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.introspect": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.mixins": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.nanfunctions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.npyio": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.polynomial": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.recfunctions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.scimath": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.stride_tricks": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test__datasource": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test__iotools": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test__version": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_array_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_arraypad": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_arraysetops": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_arrayterator": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_financial_expired": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_format": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_function_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_histograms": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_index_tricks": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_io": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_loadtxt": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_mixins": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_nanfunctions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_packbits": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_polynomial": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_recfunctions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_shape_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_stride_tricks": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_twodim_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_type_check": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_ufunclike": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.tests.test_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.twodim_base": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.type_check": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.ufunclike": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.user_array": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.lib.utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg._linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg._umath_linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.lapack_lite": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.tests.test_build": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.tests.test_deprecations": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.tests.test_linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.linalg.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.bench": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.core": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.extras": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.mrecords": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_arrayobject": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_core": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_deprecations": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_extras": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_mrecords": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_old_ma": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.tests.test_subclassing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.testutils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.ma.timer_comparison": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matlib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.defmatrix": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_defmatrix": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_interaction": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_masked_matrix": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_matrix_linalg": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_multiarray": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_numeric": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.matrixlib.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial._polybase": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.chebyshev": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.hermite": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.hermite_e": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.laguerre": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.legendre": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.polynomial": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.polyutils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_chebyshev": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_classes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_hermite": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_hermite_e": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_laguerre": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_legendre": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_polynomial": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_polyutils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_printing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.polynomial.tests.test_symbol": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._bounded_integers": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._common": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._generator": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._mt19937": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._pcg64": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._philox": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._pickle": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random._sfc64": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.bit_generator": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.mtrand": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.data": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_direct": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_extending": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_generator_mt19937": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_generator_mt19937_regressions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_random": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_randomstate": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_randomstate_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_regression": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_seed_sequence": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.random.tests.test_smoke": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.rec": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.strings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.decorators": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.extbuild": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.noseclasses": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.nosetester": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.parameterized": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing._private.utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.overrides": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.print_coercion_tables": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.tests.test_doctesting": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.tests.test_utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.testing.utils": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test__all__": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_configtool": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_ctypeslib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_lazyloading": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_matlib": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_numpy_config": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_numpy_version": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_public_api": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_reloading": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_scripts": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.tests.test_warnings": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._add_docstring": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._array_like": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._callable": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._char_codes": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._dtype_like": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._extended_precision": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._generic_alias": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._nbit": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._nested_sequence": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._scalars": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing._shape": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.mypy_plugin": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.setup": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests.test_generic_alias": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests.test_isfile": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests.test_runtime": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests.test_typing": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.typing.tests.test_typing_extensions": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  },
  "numpy.numpy.version": {
    "__set__": true,
    "elements": [
      "crocoddyl"
    ]
  }
}