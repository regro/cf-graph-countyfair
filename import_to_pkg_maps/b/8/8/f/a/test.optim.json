{
  "Test.Optimizer": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "Test.Optimizer.test_qgt_itersolve": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "Test.Optimizer.test_qgt_logic": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "Test.Optimizer.test_qgt_solvers": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "Test.Optimizer.test_sr_api": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optim": {
    "__set__": true,
    "elements": [
      "botorch",
      "gpytorch"
    ]
  },
  "test.optim.test_initializers": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_ngd": {
    "__set__": true,
    "elements": [
      "gpytorch"
    ]
  },
  "test.optim.test_numpy_converter": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_optimize": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_parameter_constraints": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_random_restart_optimization": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_stopping": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim.test_utils": {
    "__set__": true,
    "elements": [
      "botorch"
    ]
  },
  "test.optim_adam_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_adamw_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_composite_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_constant_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_cosine_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_linear_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_multi_step_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_polynomial_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_step_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_step_with_fixed_gamma_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_param_scheduler_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_rmsprop_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_rmsprop_tf_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optim_sgd_test": {
    "__set__": true,
    "elements": [
      "classy_vision"
    ]
  },
  "test.optimizer": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optimizer.test_complex_valued": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optimizer.test_qgt_itersolve": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optimizer.test_qgt_logic": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optimizer.test_qgt_solvers": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  },
  "test.optimizer.test_sr_api": {
    "__set__": true,
    "elements": [
      "netket"
    ]
  }
}