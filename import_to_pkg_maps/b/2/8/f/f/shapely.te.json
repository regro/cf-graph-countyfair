{
  "shapely.testing": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.common": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_collection": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_coords": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_decimal": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_emptiness": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_equality": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_format": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_geometry_base": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_hash": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_linestring": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_multi": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_multilinestring": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_multipoint": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_multipolygon": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_point": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.geometry.test_polygon": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.conftest": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_affinity": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_box": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_buffer": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_cga": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_clip_by_rect": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_create_inconsistent_dimensionality": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_delaunay": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_empty_polygons": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_equality": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_geointerface": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_invalid_geometries": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_linear_referencing": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_linemerge": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_locale": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_make_valid": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_mapping": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_minimum_clearance": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_ndarrays": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_nearest": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_operations": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_operators": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_orient": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_parallel_offset": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_persist": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_pickle": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_polygonize": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_polylabel": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_predicates": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_prepared": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_products_z": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_shape": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_shared_paths": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_singularity": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_snap": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_split": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_substring": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_svg": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_transform": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_union": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_validation": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_vectorized": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_voronoi_diagram": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_wkb": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.test_wkt": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.legacy.threading_test": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_constructive": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_coordinates": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_creation": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_creation_indices": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_geometry": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_io": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_linear": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_measurement": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_misc": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_plotting": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_predicates": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_ragged_array": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_set_operations": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_strtree": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  },
  "shapely.tests.test_testing": {
    "__set__": true,
    "elements": [
      "shapely"
    ]
  }
}