{
  "ray.data._default_config": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._expression_evaluator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.actor_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.actor_autoscaler.autoscaling_actor_pool": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.actor_autoscaler.base_actor_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.actor_autoscaler.default_actor_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.aggregate": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.arrow_block": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.arrow_ops": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.arrow_ops.transform_polars": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.arrow_ops.transform_pyarrow": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.arrow_serialization": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.batcher": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_batching": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_batching.block_batching": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_batching.interfaces": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_batching.iter_batches": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_batching.util": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_builder": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.block_list": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.bulk_dataset_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.cluster_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.cluster_autoscaler.base_cluster_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.cluster_autoscaler.default_cluster_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.collections": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.compute": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.dataset_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.dataset_iterator.dataset_iterator_impl": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.dataset_iterator.pipelined_dataset_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.dataset_iterator.stream_split_dataset_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.dataset_logger": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.audio_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.avro_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.bigquery_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.bigquery_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.binary_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.clickhouse_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.clickhouse_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.csv_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.csv_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.databricks_uc_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.delta_sharing_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.hudi_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.huggingface_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.iceberg_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.iceberg_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.image_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.image_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.json_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.json_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.lance_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.lance_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.mcap_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.mongo_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.mongo_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.numpy_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.numpy_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.parquet_bulk_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.parquet_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.parquet_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.range_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.sql_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.sql_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.text_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.tfrecords_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.tfrecords_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.torch_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.uc_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.unity_catalog_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.video_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.webdataset_datasink": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.datasource.webdataset_datasource": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.delegating_block_builder": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.equalize": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.autoscaler.autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.autoscaler.autoscaling_actor_pool": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.autoscaler.default_autoscaler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.autoscaling_requester": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy.backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy.concurrency_cap_backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy.downstream_capacity_backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy.resource_budget_backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.backpressure_policy.streaming_output_backpressure_policy": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.bulk_executor": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.bundle_queue": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.bundle_queue.bundle_queue": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.bundle_queue.fifo_bundle_queue": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.callbacks": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.callbacks.insert_issue_detectors": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.dataset_state": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.execution_callback": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.common": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.execution_options": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.executor": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.op_runtime_metrics": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.physical_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.ref_bundle": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.task_context": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.interfaces.transform_fn": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.legacy_compat": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.node_trackers": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.node_trackers.actor_location": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.actor_pool_map_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.aggregate_num_rows": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.all_to_all_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.base_physical_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.hash_aggregate": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.hash_shuffle": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.input_data_buffer": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.join": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.limit_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.map_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.map_transformer": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.output_splitter": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.sub_progress": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.task_pool_map_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.union_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.operators.zip_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.progress_manager": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.resource_manager": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.streaming_executor": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.streaming_executor_state": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.execution.util": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.fast_repartition": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.detectors": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.detectors.hanging_detector": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.detectors.hash_shuffle_detector": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.detectors.high_memory_detector": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.issue_detector": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.issue_detector_configuration": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.issue_detection.issue_detector_manager": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.iterator.iterator_impl": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.iterator.pipelined_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.iterator.stream_split_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.lazy_block_list": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logging": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.logical_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.logical_plan": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.optimizer": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.physical_plan": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.plan": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.interfaces.source_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.all_to_all_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.count_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.from_arrow_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.from_items_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.from_numpy_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.from_operators": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.from_pandas_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.input_data_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.join_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.limit_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.map_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.n_ary_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.one_to_one_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.read_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.streaming_split_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.operators.write_operator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.optimizers": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules._user_provided_optimizer_rules": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.configure_map_task_memory": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.inherit_batch_format": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.inherit_target_max_block_size": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.limit_pushdown": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.operator_fusion": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.projection_pushdown": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.randomize_blocks": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.set_read_parallelism": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.split_read_output_blocks": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.rules.zero_copy_map_fusion": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.ruleset": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.logical.util": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.memory_tracing": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.metadata_exporter": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.null_aggregate": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.numpy_support": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.operator_event_exporter": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.output_buffer": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.pandas_block": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.pipeline_executor": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.pipelined_dataset_iterator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.plan": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.aggregate": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.aggregate_task_spec": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.interfaces": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.pull_based_shuffle_task_scheduler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.push_based_shuffle_task_scheduler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.shuffle_task_spec": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.sort_task_spec": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.exchange.split_repartition_task_scheduler": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.filter": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.flat_map": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.map_batches": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.map_rows": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_all_to_all_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_download_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_expression": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_expression.expression_evaluator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_expression.expression_visitors": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_from_arrow_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_from_items_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_from_numpy_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_from_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_from_pandas_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_input_data_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_limit_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_map_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_read_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_udf_map_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.plan_write_op": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.planner": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.random_shuffle": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.randomize_blocks": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.repartition": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.sort": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.planner.write": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.progress_bar": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.push_based_shuffle": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.remote_fn": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.row": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.savemode": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.shuffle": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.shuffle_and_partition": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.simple_block": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.size_estimator": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.sort": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.split": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.stage_impl": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.stats": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.table_block": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.torch_iterable_dataset": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  },
  "ray.data._internal.util": {
    "__set__": true,
    "elements": [
      "ray-core"
    ]
  }
}