{
  "tests.unit": {
    "__set__": true,
    "elements": [
      "aloe",
      "climix",
      "dartpy",
      "docarray",
      "fair-research-login",
      "globus-cli",
      "globus-sdk",
      "google-cloud-appengine-logging",
      "google-cloud-bigquery",
      "google-cloud-monitoring",
      "google-cloud-recommendations-ai",
      "google-cloud-resource-manager",
      "graypy",
      "hcloud",
      "histolab",
      "inquirer",
      "jupyterlab-git",
      "literalai",
      "neo4j-python-driver",
      "pyproprop",
      "python-gitlab",
      "qpd",
      "readchar",
      "redisgraph-py",
      "serverlessrepo",
      "small-text",
      "tabpy"
    ]
  },
  "tests.unit.actions": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.actions.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.actions.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.actions.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.array": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_content": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_embed": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_empty": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_eval_class": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_getset": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_group": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_io": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_magic": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_match": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_parallel": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_plot": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_reduce": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_sample": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_text": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.mixins.test_traverse": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.test_advance_indexing": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.test_construct": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.test_from_to_bytes": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.test_ravel_unravel": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.array.test_sequence": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.certificates": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.certificates.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.certificates.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.certificates.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.collision": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.collision.test_collision": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.common": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.common.test_logging": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.common.test_stopwatch": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.common.test_string": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.common.test_uri": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.conftest": {
    "__set__": true,
    "elements": [
      "fair-research-login",
      "hcloud",
      "python-gitlab",
      "serverlessrepo"
    ]
  },
  "tests.unit.constraint": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.constraint.test_constraint": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.core": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.core.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.core.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.data": {
    "__set__": true,
    "elements": [
      "histolab",
      "neo4j-python-driver"
    ]
  },
  "tests.unit.data.test_data": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.data.test_packing": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.datacenters": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.datacenters.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.datacenters.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.document": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_converters": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_docdata": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_feature_hashing": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_io": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_namedscore": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_ndarray": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_pickle": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_porting": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_protobuf": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_repr_str": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.document.test_summary": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.dynamics": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_aspect": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_body_node": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_inertia": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_inverse_kinematics": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_joint": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_meta_skeleton": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_simple_frame": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.dynamics.test_skeleton": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.features": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.features.steps": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.filters": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.filters.test_image_filters": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.filters.test_morphological_filters": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.filters.test_util": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.firewalls": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.firewalls.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.firewalls.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.firewalls.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.floating_ips": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.floating_ips.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.floating_ips.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.floating_ips.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.gapic": {
    "__set__": true,
    "elements": [
      "google-cloud-appengine-logging",
      "google-cloud-recommendations-ai",
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.appengine_logging_v1": {
    "__set__": true,
    "elements": [
      "google-cloud-appengine-logging"
    ]
  },
  "tests.unit.gapic.appengine_logging_v1.test_appengine_logging_v1": {
    "__set__": true,
    "elements": [
      "google-cloud-appengine-logging"
    ]
  },
  "tests.unit.gapic.recommendationengine_v1beta1": {
    "__set__": true,
    "elements": [
      "google-cloud-recommendations-ai"
    ]
  },
  "tests.unit.gapic.recommendationengine_v1beta1.test_catalog_service": {
    "__set__": true,
    "elements": [
      "google-cloud-recommendations-ai"
    ]
  },
  "tests.unit.gapic.recommendationengine_v1beta1.test_prediction_api_key_registry": {
    "__set__": true,
    "elements": [
      "google-cloud-recommendations-ai"
    ]
  },
  "tests.unit.gapic.recommendationengine_v1beta1.test_prediction_service": {
    "__set__": true,
    "elements": [
      "google-cloud-recommendations-ai"
    ]
  },
  "tests.unit.gapic.recommendationengine_v1beta1.test_user_event_service": {
    "__set__": true,
    "elements": [
      "google-cloud-recommendations-ai"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_folders": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_organizations": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_projects": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_tag_bindings": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_tag_keys": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.gapic.resourcemanager_v3.test_tag_values": {
    "__set__": true,
    "elements": [
      "google-cloud-resource-manager"
    ]
  },
  "tests.unit.helper": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.unit.helpers": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.helpers.test_labels": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.images": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.images.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.images.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.images.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.index_functions": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.index_functions.conftest": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.index_functions.test_index_functions": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.index_functions.test_percentile_functions": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.index_functions.test_support": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.io": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.conftest": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_class_bolt": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_class_bolt3": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_class_bolt4x0": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_class_bolt4x1": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_class_bolt4x2": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_direct": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.io.test_routing": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.isos": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.isos.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.isos.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.isos.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancer_types": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancer_types.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancer_types.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancers": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancers.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancers.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.load_balancers.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.locations": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.locations.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.locations.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.math": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.math.test_random": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.mixins": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.mixins.test_meta_mixins": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.mixins.test_mixin_methods": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.mixins.test_object_mixins_attributes": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.mocks": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.unit.networks": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.networks.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.networks.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.networks.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.objects": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.conftest": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_appearance": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_applications": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_audit_events": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_badges": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_bridges": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_commits": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_deploy_tokens": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_deployments": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_environments": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_groups": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_hooks": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_issues": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_job_artifacts": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_jobs": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_keys": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_members": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_merge_request_pipelines": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_merge_requests": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_mro": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_packages": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_personal_access_tokens": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_pipeline_schedules": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_pipelines": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_project_access_tokens": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_project_import_export": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_project_merge_request_approvals": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_project_statistics": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_projects": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_releases": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_remote_mirrors": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_repositories": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_resource_label_events": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_resource_milestone_events": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_resource_state_events": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_runners": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_services": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_snippets": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_submodules": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_todos": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_users": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.objects.test_variables": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.optimizer": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.optimizer.test_optimizer": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.options": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.options.test_options": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.options.test_processed_property_with_option": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.placement_groups": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.placement_groups.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.placement_groups.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.placement_groups.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.primary_ips": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.primary_ips.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.primary_ips.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.primary_ips.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.processed_property": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_cast": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_compare": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_default": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_general": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_iterable": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_optimisable": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_option": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_parse_kwargs": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_post_method": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_read_only": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_str_format": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.processed_property.test_type_repr_error_msg": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.qpd": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd._parser": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd._parser.test_sql": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd._parser.test_utils": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd._parser.test_visitors": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd.test_dataframe": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd.test_specs": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd.test_workflow": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_dask": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_dask.test_engine": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_dask.test_sql": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_pandas": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_pandas.test_engine": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_pandas.test_sql": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_ray": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_ray.test_engine": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_ray.test_sql": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_test": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.qpd_test.test_utils": {
    "__set__": true,
    "elements": [
      "qpd"
    ]
  },
  "tests.unit.server_tests": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_config": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_endpoint_file_manager": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_endpoint_handler": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_endpoints_handler": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_evaluation_plane_handler": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_pwd_file": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_tests.test_service_info_handler": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.server_types": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.server_types.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.server_types.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.servers": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.servers.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.servers.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.servers.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.simulation": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.simulation.test_world": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.small_text": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.classifiers.test_classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.classifiers.test_factories": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.conftest": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.data": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.data.test_dataset_construction": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.data.test_datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.data.test_datatset_views": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.data.test_sampling": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.initialization": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.initialization.test_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.classifiers.test_base": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.classifiers.test_factories": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.classifiers.test_kimcnn": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.models": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.models.test_kimcnn": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.test_dataset_construction": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.test_datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.test_imports": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.test_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.test_utils": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.utils": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.utils.test_data": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.utils.test_labels": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.utils.test_loss": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.pytorch.utils.test_misc": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.classifiers": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.classifiers.test_classification": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.classifiers.test_factories": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.classifiers.test_setfit": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.test_dataset_construction": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.test_datasets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.test_imports": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.utils": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.integrations.transformers.utils.test_classification": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies.test_base": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies.test_bayesian": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies.test_coresets": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies.test_multi_label": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.query_strategies.test_strategies": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria.test_base": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria.test_change": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria.test_kappa": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria.test_uncertainty": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.stopping_criteria.test_utility": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.test_active_learner": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.test_base": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.test_imports": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.test_version": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.training": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.training.test_early_stopping": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.training.test_metrics": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.training.test_model_selection": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_annotations": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_classification": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_clustering": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_data": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_datetime": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_labels": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.small_text.utils.test_logging": {
    "__set__": true,
    "elements": [
      "small-text"
    ]
  },
  "tests.unit.ssh_keys": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.ssh_keys.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.ssh_keys.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.ssh_keys.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.test_ExcludeFilter": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.unit.test_GELFRabbitHandler": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.unit.test__dataframe": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test__helpers": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery"
    ]
  },
  "tests.unit.test__http": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery",
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_access_token_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_activation_response": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_addressing": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_api": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_application_metadata": {
    "__set__": true,
    "elements": [
      "serverlessrepo"
    ]
  },
  "tests.unit.test_application_policy": {
    "__set__": true,
    "elements": [
      "serverlessrepo"
    ]
  },
  "tests.unit.test_auth_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_base": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.test_base_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_basic_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_bookmark_commands": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_branch": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_cache": {
    "__set__": true,
    "elements": [
      "literalai"
    ]
  },
  "tests.unit.test_chunking": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.unit.test_cli": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.test_client": {
    "__set__": true,
    "elements": [
      "fair-research-login",
      "google-cloud-bigquery",
      "google-cloud-monitoring",
      "hcloud"
    ]
  },
  "tests.unit.test_client_credentials_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_clone": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_code_handler": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.unit.test_codegen": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_compositions": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_conf": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_confidential_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_config": {
    "__set__": true,
    "elements": [
      "globus-sdk",
      "jupyterlab-git",
      "python-gitlab"
    ]
  },
  "tests.unit.test_config_loading": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_data": {
    "__set__": true,
    "elements": [
      "globus-sdk",
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_dataset": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery"
    ]
  },
  "tests.unit.test_delegate_proxy": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_diff": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_edge": {
    "__set__": true,
    "elements": [
      "redisgraph-py"
    ]
  },
  "tests.unit.test_endpoint_create": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_endpoint_update": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_exc": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_exceptions": {
    "__set__": true,
    "elements": [
      "histolab",
      "neo4j-python-driver",
      "python-gitlab"
    ]
  },
  "tests.unit.test_fs": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_get_identities": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_git": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_gitlab": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.test_gitlab_auth": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.test_gitlab_http_methods": {
    "__set__": true,
    "elements": [
      "python-gitlab"
    ]
  },
  "tests.unit.test_graph": {
    "__set__": true,
    "elements": [
      "redisgraph-py"
    ]
  },
  "tests.unit.test_group": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_handler": {
    "__set__": true,
    "elements": [
      "graypy"
    ]
  },
  "tests.unit.test_handlers": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_hcloud": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.test_import_neo4j": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_job": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery"
    ]
  },
  "tests.unit.test_key": {
    "__set__": true,
    "elements": [
      "readchar"
    ]
  },
  "tests.unit.test_label": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_language_fr": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_language_ptbr": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_language_ru": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_local_server": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.unit.test_login_command": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_main": {
    "__set__": true,
    "elements": [
      "climix"
    ]
  },
  "tests.unit.test_masks": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_metric": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_named_iterable": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.test_native_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_node": {
    "__set__": true,
    "elements": [
      "redisgraph-py"
    ]
  },
  "tests.unit.test_null_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_oauth2_authorization_code": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_oauth2_native_app": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_one_use_option": {
    "__set__": true,
    "elements": [
      "globus-cli"
    ]
  },
  "tests.unit.test_paging": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_parser": {
    "__set__": true,
    "elements": [
      "aloe",
      "serverlessrepo"
    ]
  },
  "tests.unit.test_path": {
    "__set__": true,
    "elements": [
      "redisgraph-py"
    ]
  },
  "tests.unit.test_permission_helper": {
    "__set__": true,
    "elements": [
      "serverlessrepo"
    ]
  },
  "tests.unit.test_placeholder": {
    "__set__": true,
    "elements": [
      "docarray"
    ]
  },
  "tests.unit.test_prompt": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.unit.test_publish": {
    "__set__": true,
    "elements": [
      "serverlessrepo"
    ]
  },
  "tests.unit.test_pushpull": {
    "__set__": true,
    "elements": [
      "jupyterlab-git"
    ]
  },
  "tests.unit.test_query": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery",
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_query_result": {
    "__set__": true,
    "elements": [
      "redisgraph-py"
    ]
  },
  "tests.unit.test_question": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.unit.test_readkey": {
    "__set__": true,
    "elements": [
      "readchar"
    ]
  },
  "tests.unit.test_record": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_refresh_token_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_registry": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_renewing_authorizer": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_resource": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_response": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_scenario_parsing": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_schema": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery"
    ]
  },
  "tests.unit.test_scorer": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_security": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.test_slide": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_step_parsing": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_storage_classes": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.unit.test_storage_tools": {
    "__set__": true,
    "elements": [
      "fair-research-login"
    ]
  },
  "tests.unit.test_str_format_function": {
    "__set__": true,
    "elements": [
      "pyproprop"
    ]
  },
  "tests.unit.test_strings": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_table": {
    "__set__": true,
    "elements": [
      "google-cloud-bigquery"
    ]
  },
  "tests.unit.test_testing": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_theme": {
    "__set__": true,
    "elements": [
      "inquirer"
    ]
  },
  "tests.unit.test_tile": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_tiler": {
    "__set__": true,
    "elements": [
      "histolab"
    ]
  },
  "tests.unit.test_timeseries": {
    "__set__": true,
    "elements": [
      "google-cloud-monitoring"
    ]
  },
  "tests.unit.test_token_response": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_tools": {
    "__set__": true,
    "elements": [
      "aloe"
    ]
  },
  "tests.unit.test_transfer_client": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_transfer_client_manager": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_transfer_client_shared": {
    "__set__": true,
    "elements": [
      "globus-sdk"
    ]
  },
  "tests.unit.test_types": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver",
      "python-gitlab"
    ]
  },
  "tests.unit.test_util": {
    "__set__": true,
    "elements": [
      "histolab",
      "redisgraph-py"
    ]
  },
  "tests.unit.test_utils": {
    "__set__": true,
    "elements": [
      "aloe",
      "pyproprop",
      "python-gitlab"
    ]
  },
  "tests.unit.time": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_clock": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_clocktime": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_date": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_datetime": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_duration": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_hydration": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.time.test_time": {
    "__set__": true,
    "elements": [
      "neo4j-python-driver"
    ]
  },
  "tests.unit.tools_tests": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.tools_tests.test_client": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.tools_tests.test_rest": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.tools_tests.test_rest_object": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.tools_tests.test_schema": {
    "__set__": true,
    "elements": [
      "tabpy"
    ]
  },
  "tests.unit.utils": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.utils.test_dart_loader": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.utils.test_mjcf_parser": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.utils.test_sdf_parser": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.utils.test_skel_parser": {
    "__set__": true,
    "elements": [
      "dartpy"
    ]
  },
  "tests.unit.volumes": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.volumes.conftest": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.volumes.test_client": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit.volumes.test_domain": {
    "__set__": true,
    "elements": [
      "hcloud"
    ]
  },
  "tests.unit_tests": {
    "__set__": true,
    "elements": [
      "lightwood",
      "param_persist",
      "verta",
      "vizlo"
    ]
  },
  "tests.unit_tests.agents": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.agents.sqlalchemy_agent": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.agents.sqlalchemy_agent.conftest": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.agents.sqlalchemy_agent.test_sqlalchemy_agent": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.agents.test_base_agent": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.conftest": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.custom_modules": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.custom_modules.conftest": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.custom_modules.test_custom_modules_util": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.data": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.data.test_imputers": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.data.test_transform_ts": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.deployment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.deployment.test_build": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.deployment.test_build_scan": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.deployment.test_deployed_model": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.deployment.test_endpoint": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.encoder": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.audio": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.audio.test_mfcc": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.categorical": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.categorical.test_autoencoder": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.categorical.test_binary": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.categorical.test_multihot": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.categorical.test_onehot": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.date": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.date.test_datetime": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.identity": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.identity.test_identity": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.images": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.images.test_img_2_vec": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.numeric": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.numeric.test_numeric": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text.test_pretrained": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text.test_rnn": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text.test_short": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text.test_tfidf": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.text.test_vocab": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.time_series": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.time_series.test_timeseries_rnn": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.encoder.time_series.test_transformer": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.environment": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.environment.test_python": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.helpers": {
    "__set__": true,
    "elements": [
      "lightwood"
    ]
  },
  "tests.unit_tests.pipeline": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.pipeline.test_step_handler": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.registry": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.registry.conftest": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.registry.test_check_model_dependencies": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.registry.test_model_dependencies": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.registry.test_registered_model_version": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.sqlalchemy_data_models": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.sqlalchemy_data_models.conftest": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.sqlalchemy_data_models.test_instance_model": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.sqlalchemy_data_models.test_param_model": {
    "__set__": true,
    "elements": [
      "param_persist"
    ]
  },
  "tests.unit_tests.strategies": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.test_deployed_model": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.test_endpoint": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.test_endpoint_class": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.test_runtime": {
    "__set__": true,
    "elements": [
      "verta"
    ]
  },
  "tests.unit_tests.test_solving": {
    "__set__": true,
    "elements": [
      "vizlo"
    ]
  },
  "tests.unit_tests.test_transformation": {
    "__set__": true,
    "elements": [
      "vizlo"
    ]
  },
  "tests.unit_tests.test_visualization": {
    "__set__": true,
    "elements": [
      "vizlo"
    ]
  },
  "tests.unit_tests_utils": {
    "__set__": true,
    "elements": [
      "avalanche-lib"
    ]
  },
  "tests.units": {
    "__set__": true,
    "elements": [
      "tsfresh",
      "wrighttools"
    ]
  },
  "tests.units.feature_extraction": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_extraction.test_extraction": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_extraction.test_feature_calculations": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_extraction.test_settings": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_benjamini_hochberg_test": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_checks": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_feature_significance": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_relevance": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_selection": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.feature_selection.test_significance_tests": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.scripts": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.scripts.test_run_tsfresh": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.transformers": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.transformers.test_feature_augmenter": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.transformers.test_feature_selector": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.transformers.test_per_column_imputer": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.transformers.test_relevant_feature_augmenter": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.utilities": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.utilities.test_dataframe_functions": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.utilities.test_distribution": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.units.utilities.test_string_manipilations": {
    "__set__": true,
    "elements": [
      "tsfresh"
    ]
  },
  "tests.unittest_brain": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_fromnumeric": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_function_base": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_multiarray": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_numeric": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_numerictypes": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_core_umath": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_ndarray": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_brain_numpy_random_mtrand": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_builder": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_helpers": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_inference": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_lookup": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_manager": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_modutils": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_nodes": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_object_model": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_objects": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_protocols": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_python3": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_raw_building": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_regrtest": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_scoped_nodes": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_tools": {
    "__set__": true,
    "elements": [
      "aesara",
      "theano-pymc"
    ]
  },
  "tests.unittest_transforms": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittest_utils": {
    "__set__": true,
    "elements": [
      "astroid"
    ]
  },
  "tests.unittests": {
    "__set__": true,
    "elements": [
      "pymp-pypi",
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_arguments": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_calibration": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_detector": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_environment": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_fitting": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_model_function": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  },
  "tests.unittests.test_pyxel_loader": {
    "__set__": true,
    "elements": [
      "pyxel-sim"
    ]
  }
}