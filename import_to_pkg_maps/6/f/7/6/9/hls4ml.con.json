{
  "hls4ml.converters": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.convolution": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.core": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.graph": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.merge": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.pooling": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.qkeras": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.qkeras_layers": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.reshape": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras.reshaping": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.keras_to_hls": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx.convolution": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx.core": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx.merge": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx.pooling": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx.reshape": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.onnx_to_hls": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.pytorch": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.pytorch.convolution": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.pytorch.core": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.pytorch.pooling": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.pytorch_to_hls": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.tf_to_hls": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  },
  "hls4ml.converters.utils": {
    "__set__": true,
    "elements": [
      "hls4ml"
    ]
  }
}