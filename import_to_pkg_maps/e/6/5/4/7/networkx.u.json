{
  "networkx.utils": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.backends": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.contextmanagers": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.decorators": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.heaps": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.mapped_queue": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.misc": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.random_sequence": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.rcm": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test__init": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_contextmanager": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_decorators": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_heaps": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_mapped_queue": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_misc": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_random_sequence": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_rcm": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.tests.test_unionfind": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  },
  "networkx.utils.union_find": {
    "__set__": true,
    "elements": [
      "finesse",
      "networkx"
    ]
  }
}