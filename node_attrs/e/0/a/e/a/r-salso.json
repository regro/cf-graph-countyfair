{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-salso",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=salso",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss, both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, M端ller (2022) <doi:10.1080/10618600.2022.2069779>."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "leej3"
      ]
    },
    "package": {
      "name": "r-salso",
      "version": "0.3.53"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "rust"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8c695ab97f73cfe7374141983517214fedb753f28e46e60e88129cda2df8c336",
      "url": [
        "https://cran.r-project.org/src/contrib/salso_0.3.53.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/salso/salso_0.3.53.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('salso')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "pkg-config",
        "rust"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=salso",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss, both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, M端ller (2022) <doi:10.1080/10618600.2022.2069779>."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "leej3"
      ]
    },
    "package": {
      "name": "r-salso",
      "version": "0.3.53"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "rust"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8c695ab97f73cfe7374141983517214fedb753f28e46e60e88129cda2df8c336",
      "url": [
        "https://cran.r-project.org/src/contrib/salso_0.3.53.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/salso/salso_0.3.53.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('salso')\""
      ]
    }
  },
  "name": "r-salso",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=salso",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss, both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, M端ller (2022) <doi:10.1080/10618600.2022.2069779>."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "leej3"
      ]
    },
    "package": {
      "name": "r-salso",
      "version": "0.3.53"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "rust"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8c695ab97f73cfe7374141983517214fedb753f28e46e60e88129cda2df8c336",
      "url": [
        "https://cran.r-project.org/src/contrib/salso_0.3.53.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/salso/salso_0.3.53.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('salso')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "pkg-config",
        "rust"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-salso"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-salso.json"
  },
  "raw_meta_yaml": "{% set version = \"0.3.53\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-salso\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/salso_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/salso/salso_{{ version }}.tar.gz\n  sha256: 8c695ab97f73cfe7374141983517214fedb753f28e46e60e88129cda2df8c336\n\nbuild:\n  number: 0\n  skip: true  # [win or r_base==\"4.1\"]\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - rust\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('salso')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('salso')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=salso\n  license: MIT\n  summary: The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss,\n    both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, M端ller (2022) <doi:10.1080/10618600.2022.2069779>.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - leej3\n\n# Package: salso\n# Type: Package\n# Title: Search Algorithms and Loss Functions for Bayesian Clustering\n# Version: 0.3.29\n# Authors@R: c(person(given = \"David B.\", family = \"Dahl\", role = c(\"aut\", \"cre\"), email = \"dahl@stat.byu.edu\", comment = c(ORCID = \"0000-0002-8173-1547\")), person(given = \"Devin J.\", family = \"Johnson\", role = c(\"aut\"), email = \"devin.j.johnson7@gmail.com\", comment = c(ORCID = \"0000-0003-2619-6649\")), person(given = \"Peter\", family = \"Muller\", role = c(\"aut\"), email = \"pmueller@math.utexas.edu\"), person(given = \"Alex\", family = \"Crichton\", email = \"alex@alexcrichton.com\", role = \"cph\", comment = \"Rust crates: proc-macro2, cfg-if. See AUTHORS file.\"), person(given = \"\\\"bluss\\\" Ulrik\", family = \"Sverdrup\", role = \"cph\", comment = \"Rust crate: rawpointer, matrixmultiply, scopeguard, ndarray. See AUTHORS file.\"), person(given = \"Brendan\", family = \"Zabarauskas\", email = \"bjzaba@yahoo.com.au\", role = \"cph\", comment = \"Rust crate: approx. See AUTHORS file.\"), person(given = \"David B.\", family = \"Dahl\", email = \"dahl@stat.byu.edu\", role = \"cph\", comment = \"Rust crates: roxido, roxido_macro, dahl-partition, dahl-salso, dahl-bellnumber. See AUTHORS file.\"), person(given = \"David\", family = \"Tolnay\", email = \"dtolnay@gmail.com\", role = \"cph\", comment = \"Rust crates: syn, proc-macro2, quote, unicode-ident. See AUTHORS file.\"), person(given = \"DutchGhost\", role = \"cph\", comment = \"Rust crate: matrixmultiply. See AUTHORS file.\"), person(given = \"Enthought, Inc.\", role = \"cph\", comment = \"Rust crate: ndarray. See AUTHORS file.\"), person(given = \"Gilad\", family = \"Naaman\", email = \"gilad.naaman@gmail.com\", role = \"cph\", comment = \"Rust crate: memoffset. See AUTHORS file.\"), person(given = \"Jim\", family = \"Turner\", role = \"cph\", comment = \"Rust crate: ndarray. See AUTHORS file.\"), person(given = \"Josh\", family = \"Stone\", email = \"cuviper@gmail.com\", role = \"cph\", comment = \"Rust crate: autocfg. See AUTHORS file.\"), person(given = \"Melissa\", family = \"O'Neill\", role = \"cph\", comment = \"Rust crate: rand_pcg. See AUTHORS file.\"), person(given = \"Paul\", family = \"Dicker\", role = \"cph\", comment = \"Rust crate: rand_pcg. See AUTHORS file.\"), person(given = \"PCG Project contributors\", role = \"cph\", comment = \"Rust crate: rand_pcg. See AUTHORS file.\"), person(given = \"Ralf\", family = \"Jung\", role = \"cph\", comment = \"Rust crate: memoffset. See AUTHORS file.\"), person(given = \"rawpointer developers\", role = \"cph\", comment = \"Rust crate: rawpointer. See AUTHORS file.\"), person(given = \"R. Janis\", family = \"Goldschmidt\", role = \"cph\", comment = \"Rust crate: matrixmultiply. See AUTHORS file.\"), person(given = \"SciPy Developers\", role = \"cph\", comment = \"Rust crate: ndarray. See AUTHORS file.\"), person(given = \"Sean\", family = \"McArthur\", email = \"sean@seanmonstar.com\", role = \"cph\", comment = \"Rust crate: num_cpus. See AUTHORS file.\"), person(given = \"Stefan\", family = \"Lankes\", role = \"cph\", comment = \"Rust crate: hermit-abi. See AUTHORS file.\"), person(given = \"The Cranelift Project Developers\", role = \"cph\", comment = \"Rust crate: wasi. See AUTHORS file.\"), person(given = \"The Crossbeam Project Developers\", role = \"cph\", comment = \"Rust crates: crossbeam, crossbeam-channel, crossbeam-deque, crossbeam-epoch, crossbeam-queue, crossbeam-utils. See AUTHORS file.\"), person(given = \"The CryptoCorrosion Contributors\", role = \"cph\", comment = \"Rust crates: ppv-lite86, rand_chacha. See AUTHORS file.\"), person(given = \"The Go Authors\", role = \"cph\", comment = \"Rust crate: crossbeam-channel. See AUTHORS file.\"), person(given = \"The PCG Project Contributors\", role = \"cph\", comment = \"Rust crate: rand_pcg. See AUTHORS file.\"), person(given = \"The matrixmultiply Authors\", role = \"cph\", comment = \"Rust crate: matrixmultiply. See AUTHORS file.\"), person(given = \"The ndarray Developers\", role = \"cph\", comment = \"Rust crate: ndarray. See AUTHORS file.\"), person(given = \"The Rand Project Developers\", role = \"cph\", comment = \"Rust crates: rand_core, rand_chacha, rand_pcg, rand, getrandom. See AUTHORS file.\"), person(given = \"The Rust Project Developers\", role = \"cph\", comment = \"Rust crates: crossbmean-channel, rand_chacha, num-integer, rand_core, num-complex, libc, num-traits, rand. See AUTHORS file.\"), person(given = \"The scopeguard Developers\", role = \"cph\", comment = \"Rust crates: scopeguard. See AUTHORS file.\"), person(given = \"Unicode, Inc.\", role = \"cph\", comment = \"Rust crate: unicode-ident. See AUTHORS file.\") )\n# Description: The SALSO algorithm is an efficient randomized greedy search method to find a point estimate for a random partition based on a loss function and posterior Monte Carlo samples. The algorithm is implemented for many loss functions, including the Binder loss and a generalization of the variation of information loss, both of which allow for unequal weights on the two types of clustering mistakes. Efficient implementations are also provided for Monte Carlo estimation of the posterior expected loss of a given clustering estimate. See Dahl, Johnson, Muller (2022) <doi:10.1080/10618600.2022.2069779>.\n# License: MIT + file LICENSE | Apache License 2.0\n# BugReports: https://github.com/dbdahl/salso/issues\n# Depends: R (>= 4.2.0)\n# SystemRequirements: Cargo (>= 1.56) (Rust's package manager), rustc\n# Encoding: UTF-8\n# LazyData: TRUE\n# RoxygenNote: 7.2.3\n# NeedsCompilation: yes\n# Packaged: 2022-12-20 05:05:53 UTC; dahl\n# Author: David B. Dahl [aut, cre] (<https://orcid.org/0000-0002-8173-1547>), Devin J. Johnson [aut] (<https://orcid.org/0000-0003-2619-6649>), Peter Muller [aut], Alex Crichton [cph] (Rust crates: proc-macro2, cfg-if. See AUTHORS file.), \"bluss\" Ulrik Sverdrup [cph] (Rust crate: rawpointer, matrixmultiply, scopeguard, ndarray. See AUTHORS file.), Brendan Zabarauskas [cph] (Rust crate: approx. See AUTHORS file.), David B. Dahl [cph] (Rust crates: roxido, roxido_macro, dahl-partition, dahl-salso, dahl-bellnumber. See AUTHORS file.), David Tolnay [cph] (Rust crates: syn, proc-macro2, quote, unicode-ident. See AUTHORS file.), DutchGhost [cph] (Rust crate: matrixmultiply. See AUTHORS file.), Enthought, Inc. [cph] (Rust crate: ndarray. See AUTHORS file.), Gilad Naaman [cph] (Rust crate: memoffset. See AUTHORS file.), Jim Turner [cph] (Rust crate: ndarray. See AUTHORS file.), Josh Stone [cph] (Rust crate: autocfg. See AUTHORS file.), Melissa O'Neill [cph] (Rust crate: rand_pcg. See AUTHORS file.), Paul Dicker [cph] (Rust crate: rand_pcg. See AUTHORS file.), PCG Project contributors [cph] (Rust crate: rand_pcg. See AUTHORS file.), Ralf Jung [cph] (Rust crate: memoffset. See AUTHORS file.), rawpointer developers [cph] (Rust crate: rawpointer. See AUTHORS file.), R. Janis Goldschmidt [cph] (Rust crate: matrixmultiply. See AUTHORS file.), SciPy Developers [cph] (Rust crate: ndarray. See AUTHORS file.), Sean McArthur [cph] (Rust crate: num_cpus. See AUTHORS file.), Stefan Lankes [cph] (Rust crate: hermit-abi. See AUTHORS file.), The Cranelift Project Developers [cph] (Rust crate: wasi. See AUTHORS file.), The Crossbeam Project Developers [cph] (Rust crates: crossbeam, crossbeam-channel, crossbeam-deque, crossbeam-epoch, crossbeam-queue, crossbeam-utils. See AUTHORS file.), The CryptoCorrosion Contributors [cph] (Rust crates: ppv-lite86, rand_chacha. See AUTHORS file.), The Go Authors [cph] (Rust crate: crossbeam-channel. See AUTHORS file.), The PCG Project Contributors [cph] (Rust crate: rand_pcg. See AUTHORS file.), The matrixmultiply Authors [cph] (Rust crate: matrixmultiply. See AUTHORS file.), The ndarray Developers [cph] (Rust crate: ndarray. See AUTHORS file.), The Rand Project Developers [cph] (Rust crates: rand_core, rand_chacha, rand_pcg, rand, getrandom. See AUTHORS file.), The Rust Project Developers [cph] (Rust crates: crossbmean-channel, rand_chacha, num-integer, rand_core, num-complex, libc, num-traits, rand. See AUTHORS file.), The scopeguard Developers [cph] (Rust crates: scopeguard. See AUTHORS file.), Unicode, Inc. [cph] (Rust crate: unicode-ident. See AUTHORS file.)\n# Maintainer: David B. Dahl <dahl@stat.byu.edu>\n# Repository: CRAN\n# Date/Publication: 2022-12-20 06:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "c_compiler_stub",
      "c_stdlib_stub",
      "make",
      "pkg-config",
      "r-base",
      "rust"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "pkg-config",
        "rust"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "pkg-config",
        "rust"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/salso_0.3.53.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/salso/salso_0.3.53.tar.gz",
    "https://cran.r-project.org/src/contrib/salso_0.3.53.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/salso/salso_0.3.53.tar.gz"
  ],
  "version": "0.3.53",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-salso.json"
  }
}