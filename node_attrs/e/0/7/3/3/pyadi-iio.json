{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pyadi-iio",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "To simplify the use of different devices a python package was created interface\nwith the different IIO drivers. The module pyadi-iio, provides device-specific\nAPIs built on top of the current libIIO python bindings. These interfaces try to\nmatch the driver naming as much as possible without the need to understand the\ncomplexities of libIIO and IIO. In general, if you are familiar with python this\nis a great starting point for using different ADI parts and can even run on some\nADI development systems as well.\n",
      "dev_url": "https://github.com/analogdevicesinc/pyadi-iio",
      "doc_url": "https://analogdevicesinc.github.io/pyadi-iio/",
      "home": "https://wiki.analog.com/resources/tools-software/linux-software/pyadi-iio",
      "license": "LicenseRef-BSD-Analog-Devices",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Interfaces to stream data from ADI hardware"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "mv test adi/ && PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "pyadi-iio",
      "version": "0.0.19"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9"
      ],
      "run": [
        "fs",
        "paramiko",
        "pylibiio",
        "numpy",
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d949de0215d14b87c949f5d0aecbed1de45514533b953029efb94b7f4b1f4c9c",
      "url": "https://github.com/analogdevicesinc/pyadi-iio/archive/v0.0.19.tar.gz"
    },
    "test": {
      "imports": [
        "adi"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fs",
        "numpy",
        "paramiko",
        "pylibiio",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "To simplify the use of different devices a python package was created interface\nwith the different IIO drivers. The module pyadi-iio, provides device-specific\nAPIs built on top of the current libIIO python bindings. These interfaces try to\nmatch the driver naming as much as possible without the need to understand the\ncomplexities of libIIO and IIO. In general, if you are familiar with python this\nis a great starting point for using different ADI parts and can even run on some\nADI development systems as well.\n",
      "dev_url": "https://github.com/analogdevicesinc/pyadi-iio",
      "doc_url": "https://analogdevicesinc.github.io/pyadi-iio/",
      "home": "https://wiki.analog.com/resources/tools-software/linux-software/pyadi-iio",
      "license": "LicenseRef-BSD-Analog-Devices",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Interfaces to stream data from ADI hardware"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "mv test adi/ && PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "pyadi-iio",
      "version": "0.0.19"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9"
      ],
      "run": [
        "fs",
        "paramiko",
        "pylibiio",
        "numpy",
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d949de0215d14b87c949f5d0aecbed1de45514533b953029efb94b7f4b1f4c9c",
      "url": "https://github.com/analogdevicesinc/pyadi-iio/archive/v0.0.19.tar.gz"
    },
    "test": {
      "imports": [
        "adi"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "name": "pyadi-iio",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyadi-iio"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyadi-iio.json"
  },
  "raw_meta_yaml": "{% set name = \"pyadi-iio\" %}\n{% set version = \"0.0.19\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/analogdevicesinc/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: d949de0215d14b87c949f5d0aecbed1de45514533b953029efb94b7f4b1f4c9c\n\nbuild:\n  number: 0\n  noarch: python\n  # moving test package into adi package to avoid possible global name conflict\n  script: mv test adi/ && {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n  run:\n    - fs\n    - paramiko\n    - pylibiio\n    - numpy\n    - python >={{ python_min }}\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - adi\n\nabout:\n  home: https://wiki.analog.com/resources/tools-software/linux-software/pyadi-iio\n  summary: Interfaces to stream data from ADI hardware\n  license: LicenseRef-BSD-Analog-Devices\n  license_family: BSD\n  license_file: LICENSE\n  description: |\n    To simplify the use of different devices a python package was created interface\n    with the different IIO drivers. The module pyadi-iio, provides device-specific\n    APIs built on top of the current libIIO python bindings. These interfaces try to\n    match the driver naming as much as possible without the need to understand the\n    complexities of libIIO and IIO. In general, if you are familiar with python this\n    is a great starting point for using different ADI parts and can even run on some\n    ADI development systems as well.\n  doc_url: https://analogdevicesinc.github.io/pyadi-iio/\n  dev_url: https://github.com/analogdevicesinc/pyadi-iio\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
  "req": {
    "__set__": true,
    "elements": [
      "fs",
      "numpy",
      "paramiko",
      "pip",
      "pylibiio",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fs",
        "numpy",
        "paramiko",
        "pylibiio",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fs",
        "numpy",
        "paramiko",
        "pylibiio",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9"
      ]
    }
  },
  "url": "https://github.com/analogdevicesinc/pyadi-iio/archive/v0.0.19.tar.gz",
  "version": "0.0.19",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyadi-iio.json"
  }
}