{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "abacus",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-source package based on density functional theory (DFT). The package utilizes both plane wave and numerical atomic basis sets with the usage of norm-conserving pseudopotentials to describe the interactions between nuclear ions and valence electrons. ABACUS supports LDA, GGA, meta-GGA, and hybrid functionals. Apart from single-point calculations, the package allows geometry optimizations and ab-initio molecular dynamics with various ensembles.\n",
      "dev_url": "https://github.com/deepmodeling/abacus-develop",
      "doc_url": "https://abacus.deepmodeling.com/",
      "home": "https://abacus.ustc.edu.cn/",
      "license": "LGPL-3.0-only AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "LICENSE",
        "libnpy.LICENSE"
      ],
      "summary": "An electronic structure package based on plane wave and numerical atomic basis sets."
    },
    "build": {
      "number": "0",
      "script": "if [[ ${cuda_compiler_version} != \"None\" ]]; then\n  export CMAKE_ARGS=\"-DUSE_CUDA=1 ${CMAKE_ARGS}\"\nfi\nif [[ ${cuda_compiler_version} == 11.2 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 11.8 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 12.* ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0+PTX\"\n    export CUDA_TOOLKIT_ROOT=${PREFIX}\nelif [[ ${cuda_compiler_version} != \"None\" ]]; then\n    echo \"unsupported cuda version.\"\n    exit 1\nfi\nexport CUDAARCHS=all\ncmake -B conda_build ${CMAKE_ARGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_DEEPKS=1 -DENABLE_LIBXC=1 -DENABLE_LIBRI=1 -DGIT_SUBMODULE=0 -DLIBRI_DIR=$SRC_DIR/deps/LibRI -DLIBCOMM_DIR=$SRC_DIR/deps/LibComm -DBLA_VENDOR=Generic\ncmake --build conda_build -j`nproc`\ncmake --install conda_build\n",
      "string": "cpu_mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "njzjz",
        "caic99",
        "dyzheng"
      ]
    },
    "package": {
      "name": "abacus",
      "version": "3.9.0.16"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "make",
        "cmake",
        "libgomp"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack",
        "scalapack",
        "cuda-version 12.6",
        "libcublas-dev",
        "libcusolver-dev",
        "libcufft-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "libcurand-dev",
        "cuda-cudart-dev",
        "elpa",
        "elpa * mpi_mpich_*",
        "fftw",
        "fftw * mpi_mpich_*",
        "cereal",
        "libtorch",
        "libtorch * cuda*",
        "libxc-c",
        "libxc-c * cpu_*",
        "libxc-c <7",
        "openmpi",
        "elpa * mpi_openmpi_*",
        "fftw * mpi_openmpi_*",
        "libtorch * cpu*"
      ],
      "run": [
        "mpich",
        "libxc-c * cpu_*",
        "scalapack",
        "libtorch cuda*",
        "openmpi",
        "libtorch cpu*"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "abacus --version",
        "mpirun -n 2 abacus --version",
        "export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes OMPI_MCA_plm_ssh_agent=false"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cereal",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-version",
        "elpa",
        "fftw",
        "libblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "liblapack",
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-source package based on density functional theory (DFT). The package utilizes both plane wave and numerical atomic basis sets with the usage of norm-conserving pseudopotentials to describe the interactions between nuclear ions and valence electrons. ABACUS supports LDA, GGA, meta-GGA, and hybrid functionals. Apart from single-point calculations, the package allows geometry optimizations and ab-initio molecular dynamics with various ensembles.\n",
      "dev_url": "https://github.com/deepmodeling/abacus-develop",
      "doc_url": "https://abacus.deepmodeling.com/",
      "home": "https://abacus.ustc.edu.cn/",
      "license": "LGPL-3.0-only AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "LICENSE",
        "libnpy.LICENSE"
      ],
      "summary": "An electronic structure package based on plane wave and numerical atomic basis sets."
    },
    "build": {
      "number": "0",
      "script": "if [[ ${cuda_compiler_version} != \"None\" ]]; then\n  export CMAKE_ARGS=\"-DUSE_CUDA=1 ${CMAKE_ARGS}\"\nfi\nif [[ ${cuda_compiler_version} == 11.2 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 11.8 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 12.* ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0+PTX\"\n    export CUDA_TOOLKIT_ROOT=${PREFIX}\nelif [[ ${cuda_compiler_version} != \"None\" ]]; then\n    echo \"unsupported cuda version.\"\n    exit 1\nfi\nexport CUDAARCHS=all\ncmake -B conda_build ${CMAKE_ARGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_DEEPKS=1 -DENABLE_LIBXC=1 -DENABLE_LIBRI=1 -DGIT_SUBMODULE=0 -DLIBRI_DIR=$SRC_DIR/deps/LibRI -DLIBCOMM_DIR=$SRC_DIR/deps/LibComm -DBLA_VENDOR=Generic\ncmake --build conda_build -j`nproc`\ncmake --install conda_build\n",
      "string": "cpu_mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "njzjz",
        "caic99",
        "dyzheng"
      ]
    },
    "package": {
      "name": "abacus",
      "version": "3.9.0.16"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "make",
        "cmake",
        "libgomp"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack",
        "scalapack",
        "cuda-version 12.6",
        "libcublas-dev",
        "libcusolver-dev",
        "libcufft-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "libcurand-dev",
        "cuda-cudart-dev",
        "elpa",
        "elpa * mpi_mpich_*",
        "fftw",
        "fftw * mpi_mpich_*",
        "cereal",
        "libtorch",
        "libtorch * cuda*",
        "libxc-c",
        "libxc-c * cpu_*",
        "libxc-c <7",
        "openmpi",
        "elpa * mpi_openmpi_*",
        "fftw * mpi_openmpi_*",
        "libtorch * cpu*"
      ],
      "run": [
        "mpich",
        "libxc-c * cpu_*",
        "scalapack",
        "libtorch cuda*",
        "openmpi",
        "libtorch cpu*"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes OMPI_MCA_plm_ssh_agent=false",
        "abacus --version",
        "mpirun -n 2 abacus --version"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cereal",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-version",
        "elpa",
        "fftw",
        "libblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "liblapack",
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-source package based on density functional theory (DFT). The package utilizes both plane wave and numerical atomic basis sets with the usage of norm-conserving pseudopotentials to describe the interactions between nuclear ions and valence electrons. ABACUS supports LDA, GGA, meta-GGA, and hybrid functionals. Apart from single-point calculations, the package allows geometry optimizations and ab-initio molecular dynamics with various ensembles.\n",
      "dev_url": "https://github.com/deepmodeling/abacus-develop",
      "doc_url": "https://abacus.deepmodeling.com/",
      "home": "https://abacus.ustc.edu.cn/",
      "license": "LGPL-3.0-only AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "LICENSE",
        "libnpy.LICENSE"
      ],
      "summary": "An electronic structure package based on plane wave and numerical atomic basis sets."
    },
    "build": {
      "number": "0",
      "script": "if [[ ${cuda_compiler_version} != \"None\" ]]; then\n  export CMAKE_ARGS=\"-DUSE_CUDA=1 ${CMAKE_ARGS}\"\nfi\nif [[ ${cuda_compiler_version} == 11.2 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 11.8 ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9+PTX\"\n    export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\nelif [[ ${cuda_compiler_version} == 12.* ]]; then\n    export TORCH_CUDA_ARCH_LIST=\"5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0+PTX\"\n    export CUDA_TOOLKIT_ROOT=${PREFIX}\nelif [[ ${cuda_compiler_version} != \"None\" ]]; then\n    echo \"unsupported cuda version.\"\n    exit 1\nfi\nexport CUDAARCHS=all\ncmake -B conda_build ${CMAKE_ARGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_DEEPKS=1 -DENABLE_LIBXC=1 -DENABLE_LIBRI=1 -DGIT_SUBMODULE=0 -DLIBRI_DIR=$SRC_DIR/deps/LibRI -DLIBCOMM_DIR=$SRC_DIR/deps/LibComm -DBLA_VENDOR=Generic\ncmake --build conda_build -j`nproc`\ncmake --install conda_build\n",
      "string": "cpu_mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "njzjz",
        "caic99",
        "dyzheng"
      ]
    },
    "package": {
      "name": "abacus",
      "version": "3.9.0.16"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "make",
        "cmake",
        "libgomp"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack",
        "scalapack",
        "cuda-version 12.6",
        "libcublas-dev",
        "libcusolver-dev",
        "libcufft-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "libcurand-dev",
        "cuda-cudart-dev",
        "elpa",
        "elpa * mpi_mpich_*",
        "fftw",
        "fftw * mpi_mpich_*",
        "cereal",
        "libtorch",
        "libtorch * cuda*",
        "libxc-c",
        "libxc-c * cpu_*",
        "libxc-c <7",
        "openmpi",
        "elpa * mpi_openmpi_*",
        "fftw * mpi_openmpi_*",
        "libtorch * cpu*"
      ],
      "run": [
        "mpich",
        "libxc-c * cpu_*",
        "scalapack",
        "libtorch cuda*",
        "openmpi",
        "libtorch cpu*"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      },
      {
        "sha256": "4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769",
        "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz"
      },
      {
        "folder": "deps/LibRI",
        "sha256": "a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513",
        "url": "https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip"
      },
      {
        "folder": "deps/LibComm",
        "sha256": "8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58",
        "url": "https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip"
      },
      {
        "folder": "deps/libpaw_interface",
        "sha256": "befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a",
        "url": "https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "abacus --version",
        "mpirun -n 2 abacus --version",
        "export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes OMPI_MCA_plm_ssh_agent=false"
      ]
    }
  },
  "name": "abacus",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "abacus"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/abacus.json"
  },
  "raw_meta_yaml": "{% set name = \"abacus\" %}\n{% set version = \"3.9.0.16\" %}\n{% set proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 4bc0607b3202b177a79d4a5be66045d251675619fd233af3e46aa23701e6d769\n  - url: https://github.com/abacusmodeling/LibRI/archive/refs/tags/v0.2.1.1.zip\n    sha256: a54dc7ceec1ca5a2bbf258867ac9abb31133b7616fb22352004c0d2ff0e45513\n    folder: deps/LibRI\n  - url: https://github.com/abacusmodeling/LibComm/archive/refs/tags/v0.1.1.zip\n    sha256: 8913ca444008957951cf851a92f0b6982e1479ab7c56723e0dba0aeabf879e58\n    folder: deps/LibComm\n  - url: https://github.com/wenfei-li/libpaw_interface/archive/9ba84653a6350ac296a1c516b39bae390a2f8210.tar.gz\n    sha256: befaf44a4a5948459ed91b9af66df3727921af30fa6d6c7a8b1bc304eac85c9a\n    folder: deps/libpaw_interface\n\nbuild:\n  script: |\n    if [[ ${cuda_compiler_version} != \"None\" ]]; then\n      export CMAKE_ARGS=\"-DUSE_CUDA=1 ${CMAKE_ARGS}\"\n    fi\n    if [[ ${cuda_compiler_version} == 11.2 ]]; then\n        export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6+PTX\"\n        export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\n    elif [[ ${cuda_compiler_version} == 11.8 ]]; then\n        export TORCH_CUDA_ARCH_LIST=\"3.5;5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9+PTX\"\n        export CUDA_TOOLKIT_ROOT=${CUDA_HOME}\n    elif [[ ${cuda_compiler_version} == 12.* ]]; then\n        export TORCH_CUDA_ARCH_LIST=\"5.0;6.0;6.1;7.0;7.5;8.0;8.6;8.9;9.0+PTX\"\n        export CUDA_TOOLKIT_ROOT=${PREFIX}\n    elif [[ ${cuda_compiler_version} != \"None\" ]]; then\n        echo \"unsupported cuda version.\"\n        exit 1\n    fi\n    export CUDAARCHS=all\n    cmake -B conda_build ${CMAKE_ARGS} -DCMAKE_BUILD_TYPE=Release -DENABLE_DEEPKS=1 -DENABLE_LIBXC=1 -DENABLE_LIBRI=1 -DGIT_SUBMODULE=0 -DLIBRI_DIR=$SRC_DIR/deps/LibRI -DLIBCOMM_DIR=$SRC_DIR/deps/LibComm -DBLA_VENDOR=Generic\n    cmake --build conda_build -j`nproc`\n    cmake --install conda_build\n  number: 0\n  skip: true  # [not linux]\n  # upstream is not ready\n  skip: true  # [aarch64 and (cuda_compiler_version or \"\").startswith(\"11\")]\n  string: {{ proc_type }}_mpi_{{ mpi }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - make\n    - cmake\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n\n  host:\n    - {{ mpi }}\n    - libblas\n    - liblapack\n    - scalapack\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    - libcublas-dev    # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcusolver-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcufft-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-driver-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvrtc-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvtx-dev    # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcurand-dev    # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-cudart-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - elpa\n    - elpa * mpi_{{ mpi }}_*\n    - fftw\n    - fftw * mpi_{{ mpi }}_*\n    - cereal\n    - libtorch\n    - libtorch * {{ proc_type }}*\n    - libxc-c\n    - libxc-c * cpu_*\n    - libxc-c <7\n\n  run:\n    - {{ mpi }}\n    - libxc-c * cpu_*\n    - scalapack\n    - {{ pin_compatible('libtorch', max_pin='x.x') }} {{ proc_type }}*\n\ntest:\n  commands:\n    - export OMPI_MCA_plm=isolated OMPI_MCA_btl_vader_single_copy_mechanism=none OMPI_MCA_rmaps_base_oversubscribe=yes OMPI_MCA_plm_ssh_agent=false  # [mpi == \"openmpi\"]\n    - abacus --version  # [not (aarch64 and cuda_compiler_version != \"None\")]\n    - mpirun -n 2 abacus --version  # [not (aarch64 and cuda_compiler_version != \"None\")]\n\nabout:\n  home: https://abacus.ustc.edu.cn/\n  doc_url: https://abacus.deepmodeling.com/\n  dev_url: https://github.com/deepmodeling/abacus-develop\n  license: LGPL-3.0-only AND MIT\n  license_family: LGPL\n  license_file:\n    - LICENSE\n    - libnpy.LICENSE\n  summary: An electronic structure package based on plane wave and numerical atomic basis sets.\n  description: >\n    ABACUS (Atomic-orbital Based Ab-initio Computation at UStc) is an open-source package based on density functional theory (DFT). The package utilizes both plane wave and numerical atomic basis sets with the usage of norm-conserving pseudopotentials to describe the interactions between nuclear ions and valence electrons.\n    ABACUS supports LDA, GGA, meta-GGA, and hybrid functionals. Apart from single-point calculations, the package allows geometry optimizations and ab-initio molecular dynamics with various ensembles.\n\nextra:\n  recipe-maintainers:\n    - njzjz\n    - caic99\n    - dyzheng\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cereal",
      "cmake",
      "cuda-cudart-dev",
      "cuda-driver-dev",
      "cuda-nvrtc-dev",
      "cuda-nvtx-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "elpa",
      "fftw",
      "libblas",
      "libcublas-dev",
      "libcufft-dev",
      "libcurand-dev",
      "libcusolver-dev",
      "libgomp",
      "liblapack",
      "libtorch",
      "libxc-c",
      "make",
      "mpich",
      "openmpi",
      "scalapack"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cereal",
        "ctng-compilers",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "elpa",
        "fftw",
        "libblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "liblapack",
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libtorch",
        "libxc-c",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cereal",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-version 12.6",
        "elpa",
        "elpa * mpi_mpich_*",
        "elpa * mpi_openmpi_*",
        "fftw",
        "fftw * mpi_mpich_*",
        "fftw * mpi_openmpi_*",
        "libblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "liblapack",
        "libtorch",
        "libtorch * cpu*",
        "libtorch * cuda*",
        "libxc-c",
        "libxc-c * cpu_*",
        "libxc-c <7",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libtorch cpu*",
        "libtorch cuda*",
        "libxc-c * cpu_*",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/deepmodeling/abacus-develop/archive/refs/tags/v3.9.0.16.tar.gz",
  "version": "3.9.0.16",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/abacus.json"
  }
}