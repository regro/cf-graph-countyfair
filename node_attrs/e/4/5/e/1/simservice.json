{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "simservice",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "SimService is a library for building simulation services in Python.\nSimService is lightweight, written in pure Python and designed to generate\nmemory-isolated, interactive proxy objects of simulations with minimal effort.\nSimService is especially designed to encapsulate stateful simulations,\nsimulation libraries and frameworks for usage in general Python environments\nas interactive objects that can be integrated into larger computational workflows\nand interconnected in multi-method models and simulations. In support of simulation\nframeworks, SimService provides support for customizing the interface of service\nproxies at multiple levels of an underlying service, both statically in a service\nimplementation, as well as dynamically in the specification of a simulation.\n",
      "home": "https://github.com/tjsego/simservice",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A library for building simulation services in Python"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "tjsego"
      ]
    },
    "package": {
      "name": "simservice",
      "version": "0.1.1"
    },
    "requirements": {
      "host": [
        "python >=3.6",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.6"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5228419d3dacefa369c31f4ba978fa90af2d15313a346db1c4419ca7e2439db3",
      "url": "https://pypi.io/packages/source/s/simservice/simservice-0.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "simservice"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "SimService is a library for building simulation services in Python.\nSimService is lightweight, written in pure Python and designed to generate\nmemory-isolated, interactive proxy objects of simulations with minimal effort.\nSimService is especially designed to encapsulate stateful simulations,\nsimulation libraries and frameworks for usage in general Python environments\nas interactive objects that can be integrated into larger computational workflows\nand interconnected in multi-method models and simulations. In support of simulation\nframeworks, SimService provides support for customizing the interface of service\nproxies at multiple levels of an underlying service, both statically in a service\nimplementation, as well as dynamically in the specification of a simulation.\n",
      "home": "https://github.com/tjsego/simservice",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A library for building simulation services in Python"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "tjsego"
      ]
    },
    "package": {
      "name": "simservice",
      "version": "0.1.1"
    },
    "requirements": {
      "host": [
        "python >=3.6",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.6"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5228419d3dacefa369c31f4ba978fa90af2d15313a346db1c4419ca7e2439db3",
      "url": "https://pypi.io/packages/source/s/simservice/simservice-0.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "simservice"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "simservice",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "simservice"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/simservice.json"
  },
  "raw_meta_yaml": "{% set name = \"simservice\" %}\n{% set version = \"0.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5228419d3dacefa369c31f4ba978fa90af2d15313a346db1c4419ca7e2439db3\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python >=3.6\n    - pip\n    - setuptools\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - simservice\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/tjsego/simservice\n  summary: 'A library for building simulation services in Python'\n  description: |\n    SimService is a library for building simulation services in Python.\n    SimService is lightweight, written in pure Python and designed to generate\n    memory-isolated, interactive proxy objects of simulations with minimal effort.\n    SimService is especially designed to encapsulate stateful simulations,\n    simulation libraries and frameworks for usage in general Python environments\n    as interactive objects that can be integrated into larger computational workflows\n    and interconnected in multi-method models and simulations. In support of simulation\n    frameworks, SimService provides support for customizing the interface of service\n    proxies at multiple levels of an underlying service, both statically in a service\n    implementation, as well as dynamically in the specification of a simulation.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - tjsego\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.6",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python >=3.6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/s/simservice/simservice-0.1.1.tar.gz",
  "version": "0.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/simservice.json"
  }
}