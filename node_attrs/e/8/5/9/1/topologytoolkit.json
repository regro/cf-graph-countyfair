{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\",
          "MINIFORGE_HOME": "C:\\Miniforge"
        }
      }
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "topologytoolkit",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "TTK can handle scalar data defined either on regular grids or\ntriangulations, in 2D, 3D, or more. It provides a substantial collection\nof generic, efficient and robust implementations of key algorithms in\ntopological data analysis. It includes:\n- For scalar data: critical points, integral lines, persistence diagrams, persistence curves, merge trees, contour trees, Reeb graphs, Morse-Smale complexes, topological simplification, topology-aware compression, harmonic design;\n- For bivariate scalar data: fibers, fiber surfaces, continuous scatterplots, Jacobi sets, Reeb spaces;\n- For uncertain scalar data: mandatory critical points;\n- For ensemble scalar data: Bottleneck and Wasserstein distances between persistence diagrams (exact Munkres-based computation or fast Auction-based approximation), Wasserstein barycenters and clusters of persistence diagrams (fast progressive algorithms) and merge trees, principal geodesic analysis of persistence diagrams and merge trees, distance matrices (Lp norm, Wasserstein distances), contour tree alignment;\n- For time-varying scalar data: critical point tracking, nested tracking graphs;\n- For high-dimensional / point cloud data: dimension reduction, persistence-based clustering, persistent cycle extraction;\n- and more!\n",
      "dev_url": "https://github.com/topology-tool-kit/ttk",
      "home": "https://topology-tool-kit.github.io/",
      "license": "BSD custom 5-clause variant",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The Topology ToolKit (TTK) is an open-source library and software collection for topological data analysis and visualization.\n"
    },
    "build": {
      "ignore_run_exports_from": [
        "expat",
        "exprtk",
        "fmt",
        "icu",
        "libharu",
        "proj",
        "tbb-devel"
      ],
      "number": "106",
      "string": "with_paraview_py39h1234567_106",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "lhofmann",
        "julien-tierny"
      ]
    },
    "package": {
      "name": "topologytoolkit",
      "version": "1.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cdt_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "eigen",
        "graphviz",
        "icu",
        "libboost-headers",
        "numpy",
        "libgomp",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "zfp",
        "zlib",
        "vtk",
        "cli11",
        "expat",
        "exprtk",
        "fmt",
        "libharu",
        "nlohmann_json",
        "paraview * *_qt",
        "proj",
        "liblzma-devel"
      ],
      "run": [
        "python",
        "paraview * *_qt"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-remove-too-restrictive-linker-flags.patch",
        "patches/0003-remove-ttk-subdir-from-install-destinations.patch",
        "patches/0004-Linux-remove-rpaths.patch",
        "patches/0005-Remove-DIY-dependency.patch"
      ],
      "sha256": "2a3e477bd98b4b69ff3ab64122e033b686d4707989283568235e41c2052fa4c6",
      "url": "https://github.com/topology-tool-kit/ttk/archive/1.3.0.zip"
    },
    "test": {
      "commands": [
        "ldd \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"",
        "readelf -d \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"",
        "python examples/python/example.py examples/data/inputData.vtu",
        "ttkMorseSmaleComplexCmd -i examples/data/inputData.vtu -o \"\"",
        "python examples/pvpython/example.py examples/data/inputData.vtu"
      ],
      "imports": [
        "topologytoolkit"
      ],
      "source_files": [
        "examples/data/inputData.vtu",
        "examples/python/example.py",
        "examples/pvpython/example.py"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "eigen",
        "expat",
        "exprtk",
        "fmt",
        "graphviz",
        "icu",
        "libboost-headers",
        "libgomp",
        "libharu",
        "liblzma-devel",
        "nlohmann_json",
        "numpy",
        "paraview",
        "proj",
        "python",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "vtk",
        "zfp",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "paraview",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "TTK can handle scalar data defined either on regular grids or\ntriangulations, in 2D, 3D, or more. It provides a substantial collection\nof generic, efficient and robust implementations of key algorithms in\ntopological data analysis. It includes:\n- For scalar data: critical points, integral lines, persistence diagrams, persistence curves, merge trees, contour trees, Reeb graphs, Morse-Smale complexes, topological simplification, topology-aware compression, harmonic design;\n- For bivariate scalar data: fibers, fiber surfaces, continuous scatterplots, Jacobi sets, Reeb spaces;\n- For uncertain scalar data: mandatory critical points;\n- For ensemble scalar data: Bottleneck and Wasserstein distances between persistence diagrams (exact Munkres-based computation or fast Auction-based approximation), Wasserstein barycenters and clusters of persistence diagrams (fast progressive algorithms) and merge trees, principal geodesic analysis of persistence diagrams and merge trees, distance matrices (Lp norm, Wasserstein distances), contour tree alignment;\n- For time-varying scalar data: critical point tracking, nested tracking graphs;\n- For high-dimensional / point cloud data: dimension reduction, persistence-based clustering, persistent cycle extraction;\n- and more!\n",
      "dev_url": "https://github.com/topology-tool-kit/ttk",
      "home": "https://topology-tool-kit.github.io/",
      "license": "BSD custom 5-clause variant",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The Topology ToolKit (TTK) is an open-source library and software collection for topological data analysis and visualization.\n"
    },
    "build": {
      "ignore_run_exports_from": [
        "expat",
        "exprtk",
        "fmt",
        "icu",
        "libharu",
        "proj",
        "tbb-devel"
      ],
      "number": "106",
      "string": "with_paraview_py39h1234567_106",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "lhofmann",
        "julien-tierny"
      ]
    },
    "package": {
      "name": "topologytoolkit",
      "version": "1.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cdt_stub",
        "cmake",
        "make",
        "ninja",
        "clangdev",
        "perl"
      ],
      "host": [
        "python",
        "eigen",
        "graphviz",
        "icu",
        "libboost-headers",
        "numpy",
        "libgomp",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "zfp",
        "zlib",
        "vtk",
        "cli11",
        "expat",
        "exprtk",
        "fmt",
        "libharu",
        "nlohmann_json",
        "paraview * *_qt",
        "proj",
        "liblzma-devel",
        "llvm-openmp"
      ],
      "run": [
        "python",
        "paraview * *_qt"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-remove-too-restrictive-linker-flags.patch",
        "patches/0003-remove-ttk-subdir-from-install-destinations.patch",
        "patches/0004-Linux-remove-rpaths.patch",
        "patches/0005-Remove-DIY-dependency.patch",
        "patches/0002-fix-ninja-build.patch"
      ],
      "sha256": "2a3e477bd98b4b69ff3ab64122e033b686d4707989283568235e41c2052fa4c6",
      "url": "https://github.com/topology-tool-kit/ttk/archive/1.3.0.zip"
    },
    "test": {
      "commands": [
        "ldd \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"",
        "readelf -d \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"",
        "python examples/python/example.py examples/data/inputData.vtu",
        "ttkMorseSmaleComplexCmd -i examples/data/inputData.vtu -o \"\"",
        "python examples/pvpython/example.py examples/data/inputData.vtu"
      ],
      "imports": [
        "topologytoolkit"
      ],
      "source_files": [
        "examples/data/inputData.vtu",
        "examples/python/example.py",
        "examples/pvpython/example.py"
      ]
    }
  },
  "name": "topologytoolkit",
  "osx_64_meta_yaml": {
    "about": {
      "description": "TTK can handle scalar data defined either on regular grids or\ntriangulations, in 2D, 3D, or more. It provides a substantial collection\nof generic, efficient and robust implementations of key algorithms in\ntopological data analysis. It includes:\n- For scalar data: critical points, integral lines, persistence diagrams, persistence curves, merge trees, contour trees, Reeb graphs, Morse-Smale complexes, topological simplification, topology-aware compression, harmonic design;\n- For bivariate scalar data: fibers, fiber surfaces, continuous scatterplots, Jacobi sets, Reeb spaces;\n- For uncertain scalar data: mandatory critical points;\n- For ensemble scalar data: Bottleneck and Wasserstein distances between persistence diagrams (exact Munkres-based computation or fast Auction-based approximation), Wasserstein barycenters and clusters of persistence diagrams (fast progressive algorithms) and merge trees, principal geodesic analysis of persistence diagrams and merge trees, distance matrices (Lp norm, Wasserstein distances), contour tree alignment;\n- For time-varying scalar data: critical point tracking, nested tracking graphs;\n- For high-dimensional / point cloud data: dimension reduction, persistence-based clustering, persistent cycle extraction;\n- and more!\n",
      "dev_url": "https://github.com/topology-tool-kit/ttk",
      "home": "https://topology-tool-kit.github.io/",
      "license": "BSD custom 5-clause variant",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The Topology ToolKit (TTK) is an open-source library and software collection for topological data analysis and visualization.\n"
    },
    "build": {
      "ignore_run_exports_from": [
        "expat",
        "exprtk",
        "fmt",
        "icu",
        "libharu",
        "proj",
        "tbb-devel"
      ],
      "number": "106",
      "string": "no_paraview_py39h1234567_106",
      "track_features": [
        "ttk_without_paraview"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lhofmann",
        "julien-tierny"
      ]
    },
    "package": {
      "name": "topologytoolkit",
      "version": "1.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "eigen",
        "graphviz",
        "icu",
        "libboost-headers",
        "numpy",
        "llvm-openmp",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "zfp",
        "zlib",
        "vtk"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-remove-too-restrictive-linker-flags.patch",
        "patches/0003-remove-ttk-subdir-from-install-destinations.patch",
        "patches/0005-Remove-DIY-dependency.patch"
      ],
      "sha256": "2a3e477bd98b4b69ff3ab64122e033b686d4707989283568235e41c2052fa4c6",
      "url": "https://github.com/topology-tool-kit/ttk/archive/1.3.0.zip"
    },
    "test": {
      "commands": [
        "python examples/python/example.py examples/data/inputData.vtu",
        "ttkMorseSmaleComplexCmd -i examples/data/inputData.vtu -o \"\""
      ],
      "imports": [
        "topologytoolkit"
      ],
      "source_files": [
        "examples/data/inputData.vtu",
        "examples/python/example.py"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "graphviz",
        "icu",
        "libboost-headers",
        "llvm-openmp",
        "numpy",
        "python",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "vtk",
        "zfp",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "topologytoolkit"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/topologytoolkit.json"
  },
  "raw_meta_yaml": "{% set version = \"1.3.0\" %}\n{% set build = 6 %}\n\n{% set build = build + 100 %}   # [not TTK_WITH_PARAVIEW]\n\npackage:\n  name: topologytoolkit\n  version: {{ version }}\n\nsource:\n  url: https://github.com/topology-tool-kit/ttk/archive/{{ version }}.zip\n  sha256: 2a3e477bd98b4b69ff3ab64122e033b686d4707989283568235e41c2052fa4c6\n  patches:\n    - patches/0001-remove-too-restrictive-linker-flags.patch\n    - patches/0002-fix-ninja-build.patch                                # [win]\n    - patches/0003-remove-ttk-subdir-from-install-destinations.patch\n    - patches/0004-Linux-remove-rpaths.patch                            # [linux]\n    - patches/0005-Remove-DIY-dependency.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [TTK_WITH_PARAVIEW and osx]\n\n  # the package variant can be selected via the build string:\n  # `conda install -c conda-forge \"topologytoolkit * no_paraview*\"` for vtk-variant\n  # `conda install -c conda-forge \"topologytoolkit * with_paraview*\"` for paraview-variant (default)\n  {% if TTK_WITH_PARAVIEW == \"True\" %}\n  {% set paraview_prefix = \"with_paraview\" %}\n  {% else %}\n  {% set paraview_prefix = \"no_paraview\" %}\n  {% endif %}\n  string: {{ paraview_prefix }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}\n\n  # this de-prioritizes the non-paraview variant of the package and makes paraview the default\n  track_features:\n    - ttk_without_paraview  # [not TTK_WITH_PARAVIEW]\n\n  ignore_run_exports_from:\n    - expat\n    - exprtk\n    - fmt\n    - icu\n    - libharu\n    - proj\n    - tbb-devel\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ cdt('libxcb') }}  # [linux]\n    - {{ cdt('libxau') }}  # [linux]\n    - {{ cdt('libuuid') }}  # [linux]\n    - {{ cdt('libxext') }}  # [linux]\n    - {{ cdt('libxfixes') }}  # [linux]\n    - {{ cdt('libxxf86vm') }}  # [linux]\n    - {{ cdt('libxdamage') }}  # [linux]\n    - {{ cdt('libselinux') }}  # [linux]\n    - {{ cdt('libsm-devel') }}  # [linux]\n    - {{ cdt('libice-devel') }}  # [linux]\n    - {{ cdt('libx11-devel') }}  # [linux]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - {{ cdt('mesa-dri-drivers') }}  # [linux]\n    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]\n    - {{ cdt('libxrender-devel') }}      # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('mesa-libegl-devel') }}     # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('alsa-lib-devel') }}        # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('gtk2-devel') }}            # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('gtkmm24-devel') }}         # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libdrm-devel') }}          # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxcomposite-devel') }}   # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxcursor-devel') }}      # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxi-devel') }}           # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxrandr-devel') }}       # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('pciutils-devel') }}        # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxscrnsaver-devel') }}   # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxtst-devel') }}         # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxdamage-devel') }}      # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxfixes-devel') }}       # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxrandr') }}             # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('alsa-lib') }}              # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('xorg-x11-server-xvfb') }}  # [linux and TTK_WITH_PARAVIEW]\n    - {{ cdt('libxt-devel') }}           # [linux and TTK_WITH_PARAVIEW]\n    - cmake\n    - make      # [unix]\n    - ninja     # [win]\n    - clangdev  # [win]\n    - perl      # [win]\n  host:\n    - python\n    - eigen\n    - graphviz  # [unix]\n    - icu\n    - libboost-headers\n    - numpy\n    - libgomp        # [linux]\n    - llvm-openmp    # [osx or win]\n    - spectralib\n    - sqlite\n    - tbb-devel\n    - zfp\n    - zlib\n    - cli11             # [TTK_WITH_PARAVIEW]\n    - expat             # [TTK_WITH_PARAVIEW]\n    - exprtk            # [TTK_WITH_PARAVIEW]\n    - fmt               # [TTK_WITH_PARAVIEW]\n    - libharu           # [TTK_WITH_PARAVIEW]\n    - nlohmann_json     # [TTK_WITH_PARAVIEW]\n    - paraview * *_qt   # [TTK_WITH_PARAVIEW]\n    - proj              # [TTK_WITH_PARAVIEW]\n    - vtk               # [not TTK_WITH_PARAVIEW]\n    - liblzma-devel     # [linux and TTK_WITH_PARAVIEW]\n  run:\n    - python\n    - paraview * *_qt   # [TTK_WITH_PARAVIEW]\n\ntest:\n  imports:\n    - topologytoolkit\n  source_files:\n    - examples/data/inputData.vtu\n    - examples/python/example.py\n    - examples/pvpython/example.py  # [TTK_WITH_PARAVIEW]\n  commands:\n    - ldd \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"  # [linux]\n    - readelf -d \"${PREFIX}/bin/ttkMorseSmaleComplexCmd\"  # [linux]\n    - python examples/python/example.py examples/data/inputData.vtu\n    - ttkMorseSmaleComplexCmd -i examples/data/inputData.vtu -o \"\"\n    - python examples/pvpython/example.py examples/data/inputData.vtu  # [TTK_WITH_PARAVIEW]\n    #- pvpython examples/pvpython/example.py examples/data/inputData.vtu  # [TTK_WITH_PARAVIEW]\n\nabout:\n  home: https://topology-tool-kit.github.io/\n  dev_url: https://github.com/topology-tool-kit/ttk\n  license: BSD custom 5-clause variant\n  license_family: BSD\n  license_file: LICENSE\n  summary: >\n    The Topology ToolKit (TTK) is an open-source library and software\n    collection for topological data analysis and visualization. \n  description: |\n    TTK can handle scalar data defined either on regular grids or\n    triangulations, in 2D, 3D, or more. It provides a substantial collection\n    of generic, efficient and robust implementations of key algorithms in\n    topological data analysis. It includes:\n    - For scalar data: critical points, integral lines, persistence diagrams, persistence curves, merge trees, contour trees, Reeb graphs, Morse-Smale complexes, topological simplification, topology-aware compression, harmonic design;\n    - For bivariate scalar data: fibers, fiber surfaces, continuous scatterplots, Jacobi sets, Reeb spaces;\n    - For uncertain scalar data: mandatory critical points;\n    - For ensemble scalar data: Bottleneck and Wasserstein distances between persistence diagrams (exact Munkres-based computation or fast Auction-based approximation), Wasserstein barycenters and clusters of persistence diagrams (fast progressive algorithms) and merge trees, principal geodesic analysis of persistence diagrams and merge trees, distance matrices (Lp norm, Wasserstein distances), contour tree alignment;\n    - For time-varying scalar data: critical point tracking, nested tracking graphs;\n    - For high-dimensional / point cloud data: dimension reduction, persistence-based clustering, persistent cycle extraction;\n    - and more!\n\nextra:\n  recipe-maintainers:\n    - lhofmann\n    - julien-tierny\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cdt_stub",
      "clangdev",
      "cli11",
      "cmake",
      "cxx_compiler_stub",
      "eigen",
      "expat",
      "exprtk",
      "fmt",
      "graphviz",
      "icu",
      "libboost-headers",
      "libgomp",
      "libharu",
      "liblzma-devel",
      "llvm-openmp",
      "make",
      "ninja",
      "nlohmann_json",
      "numpy",
      "paraview",
      "perl",
      "proj",
      "python",
      "spectralib",
      "sqlite",
      "tbb-devel",
      "vtk",
      "zfp",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "clangdev",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "perl"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cli11",
        "ctng-compilers",
        "cxx_compiler_stub",
        "eigen",
        "expat",
        "exprtk",
        "fmt",
        "graphviz",
        "icu",
        "libboost-headers",
        "libgomp",
        "libharu",
        "liblzma-devel",
        "llvm-openmp",
        "nlohmann_json",
        "numpy",
        "openmp",
        "paraview",
        "proj",
        "python",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "vtk",
        "zfp",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "openmp",
        "paraview",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "clangdev",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "perl"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "eigen",
        "expat",
        "exprtk",
        "fmt",
        "graphviz",
        "icu",
        "libboost-headers",
        "libgomp",
        "libharu",
        "liblzma-devel",
        "llvm-openmp",
        "nlohmann_json",
        "numpy",
        "paraview * *_qt",
        "proj",
        "python",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "vtk",
        "zfp",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "paraview * *_qt",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/topology-tool-kit/ttk/archive/1.3.0.zip",
  "version": "1.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/topologytoolkit.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "TTK can handle scalar data defined either on regular grids or\ntriangulations, in 2D, 3D, or more. It provides a substantial collection\nof generic, efficient and robust implementations of key algorithms in\ntopological data analysis. It includes:\n- For scalar data: critical points, integral lines, persistence diagrams, persistence curves, merge trees, contour trees, Reeb graphs, Morse-Smale complexes, topological simplification, topology-aware compression, harmonic design;\n- For bivariate scalar data: fibers, fiber surfaces, continuous scatterplots, Jacobi sets, Reeb spaces;\n- For uncertain scalar data: mandatory critical points;\n- For ensemble scalar data: Bottleneck and Wasserstein distances between persistence diagrams (exact Munkres-based computation or fast Auction-based approximation), Wasserstein barycenters and clusters of persistence diagrams (fast progressive algorithms) and merge trees, principal geodesic analysis of persistence diagrams and merge trees, distance matrices (Lp norm, Wasserstein distances), contour tree alignment;\n- For time-varying scalar data: critical point tracking, nested tracking graphs;\n- For high-dimensional / point cloud data: dimension reduction, persistence-based clustering, persistent cycle extraction;\n- and more!\n",
      "dev_url": "https://github.com/topology-tool-kit/ttk",
      "home": "https://topology-tool-kit.github.io/",
      "license": "BSD custom 5-clause variant",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The Topology ToolKit (TTK) is an open-source library and software collection for topological data analysis and visualization.\n"
    },
    "build": {
      "ignore_run_exports_from": [
        "expat",
        "exprtk",
        "fmt",
        "icu",
        "libharu",
        "proj",
        "tbb-devel"
      ],
      "number": "106",
      "string": "with_paraview_py39h1234567_106",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "lhofmann",
        "julien-tierny"
      ]
    },
    "package": {
      "name": "topologytoolkit",
      "version": "1.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "clangdev",
        "perl"
      ],
      "host": [
        "python",
        "eigen",
        "icu",
        "libboost-headers",
        "numpy",
        "llvm-openmp",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "zfp",
        "zlib",
        "vtk",
        "cli11",
        "expat",
        "exprtk",
        "fmt",
        "libharu",
        "nlohmann_json",
        "paraview * *_qt",
        "proj"
      ],
      "run": [
        "python",
        "paraview * *_qt"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-remove-too-restrictive-linker-flags.patch",
        "patches/0002-fix-ninja-build.patch",
        "patches/0003-remove-ttk-subdir-from-install-destinations.patch",
        "patches/0005-Remove-DIY-dependency.patch"
      ],
      "sha256": "2a3e477bd98b4b69ff3ab64122e033b686d4707989283568235e41c2052fa4c6",
      "url": "https://github.com/topology-tool-kit/ttk/archive/1.3.0.zip"
    },
    "test": {
      "commands": [
        "python examples/python/example.py examples/data/inputData.vtu",
        "ttkMorseSmaleComplexCmd -i examples/data/inputData.vtu -o \"\"",
        "python examples/pvpython/example.py examples/data/inputData.vtu"
      ],
      "imports": [
        "topologytoolkit"
      ],
      "source_files": [
        "examples/data/inputData.vtu",
        "examples/python/example.py",
        "examples/pvpython/example.py"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangdev",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "perl"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "eigen",
        "expat",
        "exprtk",
        "fmt",
        "icu",
        "libboost-headers",
        "libharu",
        "llvm-openmp",
        "nlohmann_json",
        "numpy",
        "paraview",
        "proj",
        "python",
        "spectralib",
        "sqlite",
        "tbb-devel",
        "vtk",
        "zfp",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "paraview",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}