{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-lotri",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/lotri",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lotri",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ],
      "run": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e3eea1b79f403471dcdb827ca46b80689c2ca586cc7f90f5613881a4ab8296eb",
      "url": [
        "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lotri')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/lotri",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lotri",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ],
      "run": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e3eea1b79f403471dcdb827ca46b80689c2ca586cc7f90f5613881a4ab8296eb",
      "url": [
        "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lotri')\"",
        "\"%R%\" -e \"library('lotri')\""
      ]
    }
  },
  "name": "r-lotri",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/lotri",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lotri",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ],
      "run": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e3eea1b79f403471dcdb827ca46b80689c2ca586cc7f90f5613881a4ab8296eb",
      "url": [
        "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lotri')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-lotri"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-lotri.json"
  },
  "raw_meta_yaml": "{% set version = \"1.0.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-lotri\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/lotri_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/lotri/lotri_{{ version }}.tar.gz\n  sha256: e3eea1b79f403471dcdb827ca46b80689c2ca586cc7f90f5613881a4ab8296eb\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-checkmate\n    - r-cpp11\n    - r-cpp11armadillo\n    - r-crayon\n  run:\n    - r-base\n    - r-checkmate\n    - r-cpp11\n    - r-cpp11armadillo\n    - r-crayon\n\ntest:\n  commands:\n    - $R -e \"library('lotri')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('lotri')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/nlmixrdevelopment/lotri\n  license: GPL-2.0-or-later\n  summary: Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: lotri\n# Title: A Simple Way to Specify Symmetric, Block Diagonal Matrices\n# Version: 0.2.2\n# Authors@R: c(person(\"Matthew L.\",\"Fidler\", role = c(\"aut\", \"cre\"), email = \"matthew.fidler@gmail.com\", comment=c(ORCID=\"0000-0001-8538-6691\")))\n# Maintainer: Matthew L. Fidler <matthew.fidler@gmail.com>\n# Description: Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate.\n# Depends: R (>= 3.4.0)\n# License: GPL (>= 2)\n# Encoding: UTF-8\n# LazyData: true\n# Imports: methods, utils, stats\n# Suggests: testthat, covr, knitr, rmarkdown, Matrix, microbenchmark, ggplot2\n# NeedsCompilation: yes\n# Biarch: true\n# RoxygenNote: 7.1.0\n# VignetteBuilder: knitr\n# BugReports: https://github.com/nlmixrdevelopment/lotri/issues\n# URL: https://github.com/nlmixrdevelopment/lotri\n# Packaged: 2020-05-29 20:30:35 UTC; FIDLEMA3\n# Author: Matthew L. Fidler [aut, cre] (<https://orcid.org/0000-0001-8538-6691>)\n# Repository: CRAN\n# Date/Publication: 2020-05-29 21:20:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "make",
      "r-base",
      "r-checkmate",
      "r-cpp11",
      "r-cpp11armadillo",
      "r-crayon",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz"
  ],
  "version": "1.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-lotri.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/lotri",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides a simple mechanism to specify a symmetric block diagonal matrices (often used for covariance matrices).  This is based on the domain specific language implemented in 'nlmixr' but expanded to create matrices in R generally instead of specifying parts of matrices to estimate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lotri",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ],
      "run": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e3eea1b79f403471dcdb827ca46b80689c2ca586cc7f90f5613881a4ab8296eb",
      "url": [
        "https://cran.r-project.org/src/contrib/lotri_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lotri/lotri_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('lotri')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-checkmate",
        "r-cpp11",
        "r-cpp11armadillo",
        "r-crayon"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}