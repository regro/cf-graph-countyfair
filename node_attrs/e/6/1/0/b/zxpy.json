{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "zxpy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Inspired by Google's zx, but made much simpler and more accessible using\n Python. While Bash is cool, and it's extremely powerful when paired with\n linux coreutils and pipes. But apart from that, it's a whole another\n language to learn, and has a (comparatively) unintuitive syntax for things\n like conditionals and loops. zxpy aims to supercharge bash by allowing you\n to write scripts in Python, but with native support for bash commands and\n pipes.\n",
      "home": "https://github.com/tusharsadhwani/zxpy",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Shell scripts made simple"
    },
    "build": {
      "entry_points": [
        "zxpy=zx:cli"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan"
      ]
    },
    "package": {
      "name": "zxpy",
      "version": "1.6.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e510f06f791a53b3462628c99438e2f4a5038c12291002b48db2ba87cd088bbb",
      "url": "https://pypi.org/packages/source/z/zxpy/zxpy-1.6.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "zx"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Inspired by Google's zx, but made much simpler and more accessible using\n Python. While Bash is cool, and it's extremely powerful when paired with\n linux coreutils and pipes. But apart from that, it's a whole another\n language to learn, and has a (comparatively) unintuitive syntax for things\n like conditionals and loops. zxpy aims to supercharge bash by allowing you\n to write scripts in Python, but with native support for bash commands and\n pipes.\n",
      "home": "https://github.com/tusharsadhwani/zxpy",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Shell scripts made simple"
    },
    "build": {
      "entry_points": [
        "zxpy=zx:cli"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan"
      ]
    },
    "package": {
      "name": "zxpy",
      "version": "1.6.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python",
        "setuptools"
      ],
      "run": [
        "python",
        "pyreadline3"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e510f06f791a53b3462628c99438e2f4a5038c12291002b48db2ba87cd088bbb",
      "url": "https://pypi.org/packages/source/z/zxpy/zxpy-1.6.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "zx"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "zxpy",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Inspired by Google's zx, but made much simpler and more accessible using\n Python. While Bash is cool, and it's extremely powerful when paired with\n linux coreutils and pipes. But apart from that, it's a whole another\n language to learn, and has a (comparatively) unintuitive syntax for things\n like conditionals and loops. zxpy aims to supercharge bash by allowing you\n to write scripts in Python, but with native support for bash commands and\n pipes.\n",
      "home": "https://github.com/tusharsadhwani/zxpy",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Shell scripts made simple"
    },
    "build": {
      "entry_points": [
        "zxpy=zx:cli"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan"
      ]
    },
    "package": {
      "name": "zxpy",
      "version": "1.6.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e510f06f791a53b3462628c99438e2f4a5038c12291002b48db2ba87cd088bbb",
      "url": "https://pypi.org/packages/source/z/zxpy/zxpy-1.6.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "zx"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "zxpy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/zxpy.json"
  },
  "raw_meta_yaml": "{% set name = \"zxpy\" %}\n{% set version = \"1.6.4\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/zxpy-{{ version }}.tar.gz\n  sha256: e510f06f791a53b3462628c99438e2f4a5038c12291002b48db2ba87cd088bbb\n\nbuild:\n  number: 2\n  entry_points:\n    - zxpy=zx:cli\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [py<36]\n\nrequirements:\n  host:\n    - pip\n    - python\n    - setuptools\n  run:\n    - pyreadline3  # [win]\n    - python\n\ntest:\n  imports:\n    - zx\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  summary: Shell scripts made simple\n  home: https://github.com/tusharsadhwani/zxpy\n  license: MIT\n  license_file: LICENSE\n  description: |\n    Inspired by Google's zx, but made much simpler and more accessible using\n     Python. While Bash is cool, and it's extremely powerful when paired with\n     linux coreutils and pipes. But apart from that, it's a whole another\n     language to learn, and has a (comparatively) unintuitive syntax for things\n     like conditionals and loops. zxpy aims to supercharge bash by allowing you\n     to write scripts in Python, but with native support for bash commands and\n     pipes.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "pyreadline3",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pyreadline3",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pyreadline3",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/z/zxpy/zxpy-1.6.4.tar.gz",
  "version": "1.6.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/zxpy.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Inspired by Google's zx, but made much simpler and more accessible using\n Python. While Bash is cool, and it's extremely powerful when paired with\n linux coreutils and pipes. But apart from that, it's a whole another\n language to learn, and has a (comparatively) unintuitive syntax for things\n like conditionals and loops. zxpy aims to supercharge bash by allowing you\n to write scripts in Python, but with native support for bash commands and\n pipes.\n",
      "home": "https://github.com/tusharsadhwani/zxpy",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Shell scripts made simple"
    },
    "build": {
      "entry_points": [
        "zxpy=zx:cli"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan"
      ]
    },
    "package": {
      "name": "zxpy",
      "version": "1.6.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python",
        "setuptools"
      ],
      "run": [
        "pyreadline3",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e510f06f791a53b3462628c99438e2f4a5038c12291002b48db2ba87cd088bbb",
      "url": "https://pypi.org/packages/source/z/zxpy/zxpy-1.6.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "zx"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pyreadline3",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}