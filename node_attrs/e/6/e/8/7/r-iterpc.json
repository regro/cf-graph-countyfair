{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "541c0d805d4a41392d1c7ea141bf07e9c12ae15f",
  "feedstock_hash_ts": 1758099370,
  "feedstock_name": "r-iterpc",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/randy3k/iterpc",
      "home": "https://randy3k.github.io/iterpc",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Iterator for generating permutations and combinations. They can be either drawn with or without replacement, or with distinct/ non-distinct items (multiset). The generated sequences are in lexicographical order (dictionary order). The algorithms to generate permutations and combinations are memory efficient. These iterative algorithms enable users to process all sequences without putting all results in the memory at the same time. The algorithms are written in C/C++ for faster performance. Note: 'iterpc' is no longer being maintained. Users are recommended to switch to 'arrangements'."
    },
    "build": {
      "noarch": "generic",
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-iterpc",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-arrangements >=1.0.0",
        "r-gmp >=0.5_12",
        "r-iterators"
      ],
      "run": [
        "r-base",
        "r-arrangements >=1.0.0",
        "r-gmp >=0.5_12",
        "r-iterators"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "38bd464042a27536f676e889263eb2c257a431b59083f58cb54473f42ba2071b",
      "url": [
        "https://cran.r-project.org/src/contrib/iterpc_0.4.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/iterpc/iterpc_0.4.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('iterpc')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-arrangements",
        "r-base",
        "r-gmp",
        "r-iterators"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-arrangements",
        "r-base",
        "r-gmp",
        "r-iterators"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/randy3k/iterpc",
      "home": "https://randy3k.github.io/iterpc",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Iterator for generating permutations and combinations. They can be either drawn with or without replacement, or with distinct/ non-distinct items (multiset). The generated sequences are in lexicographical order (dictionary order). The algorithms to generate permutations and combinations are memory efficient. These iterative algorithms enable users to process all sequences without putting all results in the memory at the same time. The algorithms are written in C/C++ for faster performance. Note: 'iterpc' is no longer being maintained. Users are recommended to switch to 'arrangements'."
    },
    "build": {
      "noarch": "generic",
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-iterpc",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-arrangements >=1.0.0",
        "r-gmp >=0.5_12",
        "r-iterators"
      ],
      "run": [
        "r-base",
        "r-arrangements >=1.0.0",
        "r-gmp >=0.5_12",
        "r-iterators"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "38bd464042a27536f676e889263eb2c257a431b59083f58cb54473f42ba2071b",
      "url": [
        "https://cran.r-project.org/src/contrib/iterpc_0.4.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/iterpc/iterpc_0.4.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('iterpc')\""
      ]
    }
  },
  "name": "r-iterpc",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-iterpc"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-iterpc.json"
  },
  "raw_meta_yaml": "{% set version = '0.4.2' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-iterpc\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/iterpc_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/iterpc/iterpc_{{ version }}.tar.gz\n  sha256: 38bd464042a27536f676e889263eb2c257a431b59083f58cb54473f42ba2071b\n\nbuild:\n  number: 2\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-arrangements >=1.0.0\n    - r-gmp >=0.5_12\n    - r-iterators\n  run:\n    - r-base\n    - r-arrangements >=1.0.0\n    - r-gmp >=0.5_12\n    - r-iterators\n\ntest:\n  commands:\n    - $R -e \"library('iterpc')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('iterpc')\\\"\"  # [win]\n\nabout:\n  home: https://randy3k.github.io/iterpc\n  dev_url: https://github.com/randy3k/iterpc\n  license: GPL-2.0-only\n  summary: 'Iterator for generating permutations and combinations. They can be either drawn with\n    or without replacement, or with distinct/ non-distinct items (multiset). The generated\n    sequences are in lexicographical order (dictionary order). The algorithms to generate\n    permutations and combinations are memory efficient. These iterative algorithms enable\n    users to process all sequences without putting all results in the memory at the\n    same time. The algorithms are written in C/C++ for faster performance. Note: ''iterpc''\n    is no longer being maintained. Users are recommended to switch to ''arrangements''.'\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: iterpc\n# Type: Package\n# Title: Efficient Iterator for Permutations and Combinations\n# Version: 0.4.2\n# Date: 2020-01-08\n# Author: Randy Lai [aut, cre]\n# Maintainer: Randy Lai <randy.cs.lai@gmail.com>\n# Authors@R: c( person(\"Randy\", \"Lai\", , \"randy.cs.lai@gmail.com\", role = c(\"aut\", \"cre\")) )\n# Description: Iterator for generating permutations and combinations. They can be either drawn with or without replacement, or with distinct/ non-distinct items (multiset). The generated sequences are in lexicographical order (dictionary order). The algorithms to generate permutations and combinations are memory efficient. These iterative algorithms enable users to process all sequences without putting all results in the memory at the same time. The algorithms are written in C/C++ for faster performance. Note: 'iterpc' is no longer being maintained. Users are recommended to switch to 'arrangements'.\n# URL: https://randy3k.github.io/iterpc\n# License: GPL-2\n# Depends: R (>= 3.0.0)\n# Imports: iterators, gmp (>= 0.5-12), arrangements (>= 1.0.0)\n# Suggests: foreach, testthat, knitr, rmarkdown\n# ByteCompile: yes\n# RoxygenNote: 6.1.1\n# VignetteBuilder: knitr\n# NeedsCompilation: no\n# Packaged: 2020-01-08 23:22:25 UTC; randy\n# Repository: CRAN\n# Date/Publication: 2020-01-10 12:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-arrangements",
      "r-base",
      "r-gmp",
      "r-iterators"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-arrangements",
        "r-base",
        "r-gmp",
        "r-iterators"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-arrangements",
        "r-base",
        "r-gmp",
        "r-iterators"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-arrangements >=1.0.0",
        "r-base",
        "r-gmp >=0.5_12",
        "r-iterators"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-arrangements >=1.0.0",
        "r-base",
        "r-gmp >=0.5_12",
        "r-iterators"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/iterpc_0.4.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/iterpc/iterpc_0.4.2.tar.gz"
  ],
  "version": "0.4.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-iterpc.json"
  }
}