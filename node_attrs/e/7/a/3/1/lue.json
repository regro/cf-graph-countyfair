{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\"
        }
      }
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "lue",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "LUE is software supporting the representation and numerical simulation of geographical\nsystems. Using LUE, model developers can develop models using a syntax that looks very\nsimilar to map algebra, in either Python or C++. Given such a model, modellers can simulate\nreal-world geographical systems with a large extent and at high resolutions. LUE models\ncan be executed on small laptops and on large cluster partitions.\n\nLUE is the result of multiple research projects performed by the Computational Geography\ngroup at Utrecht University in the Netherlands. One of the focus areas of this group is\nto improve on the concepts and design of numerical simulation frameworks for geographical\nsystems, with respect to their functionality and performance.\n\nLUE supports both agent-based and field-based modelling of geographical systems, with the\nsupport for field-based modelling currently being the most mature.\n",
      "dev_url": "https://github.com/computationalgeography/lue/",
      "doc_url": "https://lue.computationalgeography.org/doc/",
      "home": "https://lue.computationalgeography.org/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "LUE scientific database and environmental modelling framework."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kordejong",
        "oliverschmitz"
      ]
    },
    "package": {
      "name": "lue",
      "version": "0.3.10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ],
      "run": [
        "docopt",
        "matplotlib-base",
        "python-dateutil",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "64e8835214387a4e4079c75f1dca674ad8a8b3d6c1905cc756d4b13d1ef1a11c",
      "url": "https://lue.computationalgeography.org/download/lue-0.3.10.tar.bz2"
    },
    "test": {
      "commands": [
        "lue_translate -h",
        "lue_validate -h",
        "lue_calculate.py -h",
        "lue_scalability.py -h"
      ],
      "imports": [
        "lue",
        "lue.data_model",
        "lue.framework",
        "lue.pcraster",
        "lue.qa.scalability"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docopt",
        "matplotlib-base",
        "python",
        "python-dateutil"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "LUE is software supporting the representation and numerical simulation of geographical\nsystems. Using LUE, model developers can develop models using a syntax that looks very\nsimilar to map algebra, in either Python or C++. Given such a model, modellers can simulate\nreal-world geographical systems with a large extent and at high resolutions. LUE models\ncan be executed on small laptops and on large cluster partitions.\n\nLUE is the result of multiple research projects performed by the Computational Geography\ngroup at Utrecht University in the Netherlands. One of the focus areas of this group is\nto improve on the concepts and design of numerical simulation frameworks for geographical\nsystems, with respect to their functionality and performance.\n\nLUE supports both agent-based and field-based modelling of geographical systems, with the\nsupport for field-based modelling currently being the most mature.\n",
      "dev_url": "https://github.com/computationalgeography/lue/",
      "doc_url": "https://lue.computationalgeography.org/doc/",
      "home": "https://lue.computationalgeography.org/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "LUE scientific database and environmental modelling framework."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kordejong",
        "oliverschmitz"
      ]
    },
    "package": {
      "name": "lue",
      "version": "0.3.10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ],
      "run": [
        "docopt",
        "matplotlib-base",
        "python-dateutil",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "64e8835214387a4e4079c75f1dca674ad8a8b3d6c1905cc756d4b13d1ef1a11c",
      "url": "https://lue.computationalgeography.org/download/lue-0.3.10.tar.bz2"
    },
    "test": {
      "commands": [
        "lue_translate -h",
        "lue_validate -h",
        "lue_calculate.py -h",
        "lue_scalability.py -h"
      ],
      "imports": [
        "lue",
        "lue.data_model",
        "lue.framework",
        "lue.pcraster",
        "lue.qa.scalability"
      ]
    }
  },
  "name": "lue",
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "LUE is software supporting the representation and numerical simulation of geographical\nsystems. Using LUE, model developers can develop models using a syntax that looks very\nsimilar to map algebra, in either Python or C++. Given such a model, modellers can simulate\nreal-world geographical systems with a large extent and at high resolutions. LUE models\ncan be executed on small laptops and on large cluster partitions.\n\nLUE is the result of multiple research projects performed by the Computational Geography\ngroup at Utrecht University in the Netherlands. One of the focus areas of this group is\nto improve on the concepts and design of numerical simulation frameworks for geographical\nsystems, with respect to their functionality and performance.\n\nLUE supports both agent-based and field-based modelling of geographical systems, with the\nsupport for field-based modelling currently being the most mature.\n",
      "dev_url": "https://github.com/computationalgeography/lue/",
      "doc_url": "https://lue.computationalgeography.org/doc/",
      "home": "https://lue.computationalgeography.org/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "LUE scientific database and environmental modelling framework."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kordejong",
        "oliverschmitz"
      ]
    },
    "package": {
      "name": "lue",
      "version": "0.3.10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ],
      "run": [
        "docopt",
        "matplotlib-base",
        "python-dateutil",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "64e8835214387a4e4079c75f1dca674ad8a8b3d6c1905cc756d4b13d1ef1a11c",
      "url": "https://lue.computationalgeography.org/download/lue-0.3.10.tar.bz2"
    },
    "test": {
      "commands": [
        "lue_translate -h",
        "lue_validate -h",
        "lue_calculate.py -h",
        "lue_scalability.py -h"
      ],
      "imports": [
        "lue",
        "lue.data_model",
        "lue.framework",
        "lue.pcraster",
        "lue.qa.scalability"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docopt",
        "matplotlib-base",
        "python",
        "python-dateutil"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "lue"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lue.json"
  },
  "raw_meta_yaml": "{% set version = \"0.3.10\" %}\n\n\npackage:\n  name: lue\n  version: {{ version }}\n\nsource:\n  url: https://lue.computationalgeography.org/download/lue-{{ version }}.tar.bz2\n  sha256: 64e8835214387a4e4079c75f1dca674ad8a8b3d6c1905cc756d4b13d1ef1a11c\n\nbuild:\n  number: 1\n  skip: true  # [py<310 or (osx and x86_64)]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - python                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n\n  host:\n    - cxxopts\n    - docopt  # templatize.py\n    - hpx\n    - jinja2  # templatize.py\n    - libgdal\n    - nlohmann_json\n    - numpy\n    - pybind11\n    - python\n\n  run:\n    # Packages needed for downstream packages that use LUE at:\n    # - build-time: headers, libraries\n    # - runtime: shared libraries, interpreter\n    # Only list packages whose meta.yaml doesn't contain a run_exports already\n    - docopt  # lue.qa\n    - matplotlib-base  # lue.qa\n    - python-dateutil  # lue.qa\n    - python\n\ntest:\n  imports:\n    - lue\n    - lue.data_model\n    - lue.framework\n    - lue.pcraster\n    - lue.qa.scalability\n  commands:\n    - lue_translate -h\n    - lue_validate -h\n    - lue_calculate.py -h\n    - lue_scalability.py -h\n\nabout:\n  home: https://lue.computationalgeography.org/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: LUE scientific database and environmental modelling framework.\n  description: |\n    LUE is software supporting the representation and numerical simulation of geographical\n    systems. Using LUE, model developers can develop models using a syntax that looks very\n    similar to map algebra, in either Python or C++. Given such a model, modellers can simulate\n    real-world geographical systems with a large extent and at high resolutions. LUE models\n    can be executed on small laptops and on large cluster partitions.\n\n    LUE is the result of multiple research projects performed by the Computational Geography\n    group at Utrecht University in the Netherlands. One of the focus areas of this group is\n    to improve on the concepts and design of numerical simulation frameworks for geographical\n    systems, with respect to their functionality and performance.\n\n    LUE supports both agent-based and field-based modelling of geographical systems, with the\n    support for field-based modelling currently being the most mature.\n  doc_url: https://lue.computationalgeography.org/doc/\n  dev_url: https://github.com/computationalgeography/lue/\n\nextra:\n  recipe-maintainers:\n    - kordejong\n    - oliverschmitz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "cxxopts",
      "docopt",
      "hpx",
      "jinja2",
      "libgdal",
      "matplotlib-base",
      "ninja",
      "nlohmann_json",
      "numpy",
      "pybind11",
      "python",
      "python-dateutil"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "docopt",
        "matplotlib-base",
        "python",
        "python-dateutil"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docopt",
        "matplotlib-base",
        "python",
        "python-dateutil"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://lue.computationalgeography.org/download/lue-0.3.10.tar.bz2",
  "version": "0.3.10",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lue.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "LUE is software supporting the representation and numerical simulation of geographical\nsystems. Using LUE, model developers can develop models using a syntax that looks very\nsimilar to map algebra, in either Python or C++. Given such a model, modellers can simulate\nreal-world geographical systems with a large extent and at high resolutions. LUE models\ncan be executed on small laptops and on large cluster partitions.\n\nLUE is the result of multiple research projects performed by the Computational Geography\ngroup at Utrecht University in the Netherlands. One of the focus areas of this group is\nto improve on the concepts and design of numerical simulation frameworks for geographical\nsystems, with respect to their functionality and performance.\n\nLUE supports both agent-based and field-based modelling of geographical systems, with the\nsupport for field-based modelling currently being the most mature.\n",
      "dev_url": "https://github.com/computationalgeography/lue/",
      "doc_url": "https://lue.computationalgeography.org/doc/",
      "home": "https://lue.computationalgeography.org/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "LUE scientific database and environmental modelling framework."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kordejong",
        "oliverschmitz"
      ]
    },
    "package": {
      "name": "lue",
      "version": "0.3.10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ],
      "run": [
        "docopt",
        "matplotlib-base",
        "python-dateutil",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "64e8835214387a4e4079c75f1dca674ad8a8b3d6c1905cc756d4b13d1ef1a11c",
      "url": "https://lue.computationalgeography.org/download/lue-0.3.10.tar.bz2"
    },
    "test": {
      "commands": [
        "lue_translate -h",
        "lue_validate -h",
        "lue_calculate.py -h",
        "lue_scalability.py -h"
      ],
      "imports": [
        "lue",
        "lue.data_model",
        "lue.framework",
        "lue.pcraster",
        "lue.qa.scalability"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxxopts",
        "docopt",
        "hpx",
        "jinja2",
        "libgdal",
        "nlohmann_json",
        "numpy",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docopt",
        "matplotlib-base",
        "python",
        "python-dateutil"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}