{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "update-grayskull"
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "57418167e36dfe384a62efb0fe9ee8fba003a4f8",
  "feedstock_hash_ts": 1761202751,
  "feedstock_name": "cffi",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch",
        "m2-patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch",
        "patches/0003-apple-api.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\"",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen('ucrtbase'))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "name": "cffi",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch",
        "patches/0003-apple-api.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "libffi",
        "pycparser"
      ],
      "run": [
        "python",
        "libffi",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch",
        "patches/0003-apple-api.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cffi"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cffi.json"
  },
  "raw_meta_yaml": "{% set version = \"2.0.0\" %}\n\npackage:\n  name: cffi\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/c/cffi/cffi-{{ version }}.tar.gz\n  sha256: 44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529\n  patches:\n    - patches/0001-Link-to-dl-library.patch\n    - patches/0002-setup-linux.patch\n    - patches/0003-apple-api.patch  # [osx]\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - patch     # [not win]\n    - m2-patch  # [win]\n  host:\n    - python\n    - pip\n    - wheel\n    - setuptools >=66.1\n    - libffi  # [not win]\n    - pycparser\n  run:\n    - python\n    - libffi  # [not win]\n    - pycparser\n\ntest:\n  imports:\n    - cffi\n    - _cffi_backend\n  requires:\n    - pip\n    - openssl *\n  commands:\n    - pip check\n    - python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen('ucrtbase'))\"  # [win]\n    - python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen(None))\"  # [not win]\n\nabout:\n  home: https://github.com/python-cffi/cffi\n  license: MIT\n  license_file: LICENSE\n  summary: Foreign Function Interface for Python calling C code.\n\n  description: |\n    Cffi aims to allow users to call C code from Python without having to\n    learn a 3rd language. It provides a convenient and reliable way to call\n    compiled C code from Python using interface declarations written in C.\n  doc_url: https://cffi.readthedocs.io\n  dev_url: https://github.com/python-cffi/cffi\n\nextra:\n  recipe-maintainers:\n    - goanpeca\n    - ocefpaf\n    - katietz\n    - h-vetinari\n    - zklaus\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "libffi",
      "m2-patch",
      "patch",
      "pip",
      "pycparser",
      "python",
      "setuptools",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "m2-patch",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "m2-patch",
        "patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libffi",
        "pip",
        "pycparser",
        "python",
        "setuptools >=66.1",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libffi",
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl *",
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz",
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cffi.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Cffi aims to allow users to call C code from Python without having to\nlearn a 3rd language. It provides a convenient and reliable way to call\ncompiled C code from Python using interface declarations written in C.\n",
      "dev_url": "https://github.com/python-cffi/cffi",
      "doc_url": "https://cffi.readthedocs.io",
      "home": "https://github.com/python-cffi/cffi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Foreign Function Interface for Python calling C code."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "ocefpaf",
        "katietz",
        "h-vetinari",
        "zklaus"
      ]
    },
    "package": {
      "name": "cffi",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "m2-patch"
      ],
      "host": [
        "python",
        "pip",
        "wheel",
        "setuptools >=66.1",
        "pycparser"
      ],
      "run": [
        "python",
        "pycparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Link-to-dl-library.patch",
        "patches/0002-setup-linux.patch"
      ],
      "sha256": "44d1b5909021139fe36001ae048dbdde8214afa20200eda0f64c068cac5d5529",
      "url": "https://pypi.org/packages/source/c/cffi/cffi-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -X faulthandler -c \"from cffi import FFI; print(FFI().dlopen('ucrtbase'))\""
      ],
      "imports": [
        "cffi",
        "_cffi_backend"
      ],
      "requires": [
        "pip",
        "openssl *"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "m2-patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pycparser",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pycparser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "openssl",
        "pip"
      ]
    }
  }
}