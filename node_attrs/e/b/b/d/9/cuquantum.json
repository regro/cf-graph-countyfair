{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_linux": {
        "swapfile_size": "10GiB"
      }
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "idle_timeout_minutes": 60,
    "provider": {
      "linux_aarch64": "azure"
    },
    "test": "native"
  },
  "feedstock_name": "cuquantum",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "NVIDIA cuQuantum SDK is a set of high-performance libraries and tools for accelerating\nquantum computing simulations at both the circuit and device level by orders of magnitude. It consists of three major components:\n\n- cuDensityMat: a high-performance library for quantum dynamics equation solvers\n- cuStateVec: a high-performance library for state vector quantum simulators\n- cuTensorNet: a high-performance library for tensor network computations\n\nIn addition to C APIs, cuQuantum also provides Python APIs via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
      "dev_url": "https://github.com/NVIDIA/cuQuantum",
      "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/index.html",
      "home": "https://developer.nvidia.com/cuquantum-sdk",
      "license": "LicenseRef-cuQuantum-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
      "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Computing Simulations"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "b-kloss",
        "leofang",
        "JeremyWangNVDA",
        "mtjrider",
        "yangcal",
        "DmitryLyakh"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install"
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      }
    ],
    "package": {
      "name": "cuquantum-sdk",
      "version": "25.09.1.12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "mpich",
        "openmpi"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-nvml-dev",
        "cuda-version",
        "cutensor",
        "cython",
        "libcublas",
        "libcurand",
        "libcusolver",
        "mpich",
        "openmpi",
        "packaging",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-nvml-dev",
        "cuda-version",
        "cudensitymat",
        "cupy",
        "custatevec",
        "cutensor",
        "cutensornet",
        "libcublas",
        "libcurand",
        "libcusolver",
        "libnvjitlink",
        "mpich",
        "numpy",
        "nvmath-python",
        "openmpi",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-driver-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "libcublas-dev"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "NVIDIA cuQuantum SDK is a set of high-performance libraries and tools for accelerating\nquantum computing simulations at both the circuit and device level by orders of magnitude. It consists of three major components:\n\n- cuDensityMat: a high-performance library for quantum dynamics equation solvers\n- cuStateVec: a high-performance library for state vector quantum simulators\n- cuTensorNet: a high-performance library for tensor network computations\n\nIn addition to C APIs, cuQuantum also provides Python APIs via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
      "dev_url": "https://github.com/NVIDIA/cuQuantum",
      "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/index.html",
      "home": "https://developer.nvidia.com/cuquantum-sdk",
      "license": "LicenseRef-cuQuantum-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
      "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Computing Simulations"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "b-kloss",
        "leofang",
        "JeremyWangNVDA",
        "mtjrider",
        "yangcal",
        "DmitryLyakh"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install"
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      }
    ],
    "package": {
      "name": "cuquantum-sdk",
      "version": "25.09.1.12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "mpich",
        "openmpi"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-nvml-dev",
        "cuda-version",
        "cutensor",
        "cython",
        "libcublas",
        "libcurand",
        "libcusolver",
        "mpich",
        "openmpi",
        "packaging",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-nvml-dev",
        "cuda-version",
        "cudensitymat",
        "cupy",
        "custatevec",
        "cutensor",
        "cutensornet",
        "libcublas",
        "libcurand",
        "libcusolver",
        "libnvjitlink",
        "mpich",
        "numpy",
        "nvmath-python",
        "openmpi",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-driver-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "libcublas-dev"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "NVIDIA cuQuantum SDK is a set of high-performance libraries and tools for accelerating\nquantum computing simulations at both the circuit and device level by orders of magnitude. It consists of three major components:\n\n- cuDensityMat: a high-performance library for quantum dynamics equation solvers\n- cuStateVec: a high-performance library for state vector quantum simulators\n- cuTensorNet: a high-performance library for tensor network computations\n\nIn addition to C APIs, cuQuantum also provides Python APIs via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
      "dev_url": "https://github.com/NVIDIA/cuQuantum",
      "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/index.html",
      "home": "https://developer.nvidia.com/cuquantum-sdk",
      "license": "LicenseRef-cuQuantum-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
      "summary": "cuQuantum SDK: A High-Performance Library for Accelerating Quantum Computing Simulations"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "b-kloss",
        "leofang",
        "JeremyWangNVDA",
        "mtjrider",
        "yangcal",
        "DmitryLyakh"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install"
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install"
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 12.9",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 12.9.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_mpich_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_mpich_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "mpich * external*",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "mpich"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "mpich * external*"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=mpich",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat nompi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "101",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet nompi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "nompi_h1234567_101"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver"
          ],
          "run_constrained": [
            "openmpi <0.a0",
            "mpich   <0.a0"
          ]
        },
        "test": {
          "commands": [
            "export mpi=nompi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      },
      {
        "build": {
          "number": "1"
        },
        "name": "cuquantum",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "cudensitymat",
            "cutensornet",
            "custatevec"
          ]
        },
        "test": {
          "commands": [
            "echo \"cuquantum metapackage 25.09.1.12\""
          ]
        },
        "version": "25.09.1.12"
      },
      {
        "about": {
          "description": "NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers.\ncuDensityMat is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver",
            "libcurand"
          ],
          "missing_dso_whitelist": [
            "*libcutensornet*"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cudensitymat mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cudensitymat/cudm-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cudensitymat",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcublas",
            "libcusolver",
            "libcurand",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "cutensornet",
            "libcublas",
            "libcusolver",
            "libnvjitlink",
            "libcurand",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cudensitymat/cudm-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cudensitymat/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "0.3.1"
      },
      {
        "about": {
          "description": "NVIDIA cuTensorNet is a high-performance library for tensor network computations.\ncuTensorNet is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuTensorNet: A High-Performance Library for Tensor Network Computations"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas",
            "libcusolver"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "cutensornet mpi_openmpi_*"
          ],
          "script": "${RECIPE_DIR}/cutensornet/cutn-install",
          "string": "mpi_openmpi_h1234567_1"
        },
        "name": "cutensornet",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "openmpi",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cutensor >=2.3.1,<3",
            "cuda-version 13.0",
            "libcusolver",
            "libcublas",
            "openmpi"
          ],
          "run": [
            "cuda-version",
            "cutensor",
            "libcublas",
            "libcusolver",
            "openmpi"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "export mpi=openmpi",
            "./cutensornet/cutn-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./cutensornet/*"
          ],
          "requires": [
            "git",
            "libcublas-dev",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "2.9.1"
      },
      {
        "about": {
          "description": "NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\ncuStateVec is a component of the NVIDIA cuQuantum SDK.\nIn addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n\nThe packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuQuantum EULA -\nhttps://docs.nvidia.com/cuda/cuquantum/license.html\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "LicenseRef-cuQuantum-Software-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html",
          "summary": "cuStateVec: A High-Performance Library for State Vector Quantum Simulators"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "libcublas"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "post-link": "post-link",
          "run_exports": [
            "custatevec"
          ],
          "script": "${RECIPE_DIR}/custatevec/cusv-install",
          "string": "h1234567_1"
        },
        "name": "custatevec",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cf-nvidia-tools 1"
          ],
          "host": [
            "cuda-version 13.0",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run": [
            "cuda-version",
            "cuda-nvml-dev",
            "libcublas"
          ],
          "run_constrained": [
            "__cuda >=12"
          ]
        },
        "test": {
          "commands": [
            "./custatevec/cusv-tests 25.09.1.12"
          ],
          "files": [
            "./common/*",
            "./custatevec/*"
          ],
          "requires": [
            "git",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-version 13.0.*"
          ]
        },
        "version": "1.10.1"
      },
      {
        "about": {
          "description": "NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\nmodels for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n",
          "dev_url": "https://github.com/NVIDIA/cuQuantum",
          "doc_url": "https://docs.nvidia.com/cuda/cuquantum/latest/python/",
          "home": "https://developer.nvidia.com/cuquantum-sdk",
          "license": "BSD-3-Clause",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python",
          "summary": "cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python"
        },
        "build": {
          "ignore_run_exports_from": [
            "cuda_compiler_stub",
            "cuda-bindings",
            "cuda-python"
          ],
          "missing_dso_whitelist": [
            "libnvidia-ml.so"
          ],
          "number": "1",
          "script": "${RECIPE_DIR}/cuquantum-python/cuquantum-python-install",
          "skip": true
        },
        "name": "cuquantum-python",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "cython <4",
            "packaging",
            "setuptools"
          ],
          "run": [
            "python",
            "numpy >=1.26",
            "cupy >=13.0",
            "nvmath-python >=0.6,<0.7=*core*",
            "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
            "custatevec",
            "cutensornet",
            "cudensitymat"
          ],
          "run_constrained": [
            "__cuda >=12",
            "pytorch >=1.10",
            "mpi4py >=4.0.3"
          ]
        },
        "test": {
          "commands": [
            "./cuquantum-python/cuquantum-python-tests"
          ],
          "files": [
            "./common/*",
            "./cuquantum-python/*"
          ],
          "requires": [
            "cuda-driver-dev"
          ]
        },
        "version": "25.09.1"
      }
    ],
    "package": {
      "name": "cuquantum-sdk",
      "version": "25.09.1.12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      },
      {
        "sha256": "3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c",
        "url": null
      },
      {
        "sha256": "7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6",
        "url": null
      }
    ]
  },
  "name": "cuquantum-sdk",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cudensitymat",
      "cuquantum",
      "cuquantum-python",
      "custatevec",
      "cutensornet"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cuquantum.json"
  },
  "raw_meta_yaml": "{% set package = \"cuquantum\" %}\n# Make sure the component versions are consistent with the SDK version!\n{% set version = \"25.09.1.12\" %}\n{% set cudm_version = \"0.3.1\" %}\n{% set cusv_version = \"1.10.1\" %}\n{% set cutn_version = \"2.9.1\" %}\n\n{% set sdk_version = version.split(\".\") %}\n{% set sdk_year  = sdk_version[0] | int %}\n{% set sdk_month = sdk_version[1] | int %}\n{% set sdk_patch = sdk_version[2] | int %}\n{% set sdk_build = sdk_version[3] | int %}\n\n{% set cuda_compiler_version = cuda_compiler_version | default(\"None\") %}\n{% if \".\" in (cuda_compiler_version | string) %}\n  {% set cuda_version = cuda_compiler_version.split(\".\") %}\n  {% set cuda_major = cuda_version[0] | int %}\n  {% set cuda_minor = cuda_version[1] | int %}\n{% else %}\n  {% set cuda_major = cuda_compiler_version | int %}\n  {% set cuda_minor = 0 %}\n{% endif %}\n\n\n{% set build_num = 1 %}\n# prioritize nompi variant via build number\n{% set build_num_nompi_increment = 100 %}\n\n# encode mpi dependency in the build string for cutensornet and cudensitymat\n{% if mpi != \"nompi\" %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% set mpi_build_num = build_num %}\n{% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% set mpi_build_num = build_num_nompi_increment + build_num  %}\n{% endif %}\n\n\n{% if linux64 or aarch64 %}\n  {% set kname = \"linux\" %}\n  {% set march = \"sbsa\" %}    # [aarch64]\n  {% set march = \"x86_64\" %}  # [linux64]\n\n  {% set target_path = os.sep.join([\"\", \"targets\", \"%s-%s\" % (march, kname)]) %}\n  {% set devzone_base = \"https://developer.download.nvidia.com/compute\" %}\n  {% set devzone = \"%s/%s/redist/%s/%s-%s\" % (devzone_base, package, package, kname, march) %}\n  \n  {% set devzone = \"%s/%s-%s-%s-%s_cuda%s-archive.tar.xz\" % (devzone, package, kname, march, version, cuda_major) %}\n\n  {% set github_base = \"https://github.com/nvidia\" %}\n  {% set github = \"%s/%s\" % (github_base, package) %}\n  {% set github = \"%s/archive/refs/tags/v%s.tar.gz\" % (github, \".\".join(sdk_version[:3])) %}\n{% endif %}\n\npackage:\n  name: cuquantum-sdk\n  version: {{ version }}\n\nsource:\n  - url: {{ devzone }}  # [((cuda_compiler_version or \"\").startswith(\"12\") or (cuda_compiler_version or \"\").startswith(\"13\")) and (linux64 or aarch64)]\n    sha256: da4428fb21f0c8563f38eab8525682de2727a03f5a330c20514f784c23cc219b  # [(cuda_compiler_version or \"\").startswith(\"12\") and linux64]\n    sha256: f2e92b0fec7d91b2b44d2663ea17f58f47d295166faa71b1dd01d2de9530032c  # [(cuda_compiler_version or \"\").startswith(\"13\") and linux64]\n    sha256: 77e9e6e88c3d2fb7e3e35f7a9a24b08eec3e97790d1064a75ccc15c67b207f48  # [(cuda_compiler_version or \"\").startswith(\"12\") and aarch64]\n    sha256: 3df1a5cf0fbe37fc293c0affe361f1ced364bd88928dd279781b671eab7e701c  # [(cuda_compiler_version or \"\").startswith(\"13\") and aarch64]\n\n  - url: {{ github }}  # [linux64 or aarch64]\n    sha256: 7272c80ccd0b983b1d0740a1f5d5d56ad6c6fc8e3e2c4ec30f160526a468afb6  # [linux64 or aarch64]\n\nbuild:\n  number: {{ build_num }}\n  skip: true  # [cuda_compiler_version in (None, \"None\")]\n  skip: true  # [win]\n  skip: true  # [osx]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"cuda\") }}\n    - {{ stdlib('c') }}\n\noutputs:\n  - name: cuquantum\n    version: {{ version }}\n    build:\n      number: {{ build_num }}\n    requirements:\n      build:\n      host:\n      run:\n        - {{ pin_subpackage(\"cudensitymat\", max_pin=\"x.x.x\") }}\n        - {{ pin_subpackage(\"cutensornet\", max_pin=\"x.x.x\") }}\n        - {{ pin_subpackage(\"custatevec\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - echo \"cuquantum metapackage {{ version }}\"\n\n  - name: cudensitymat\n    version: {{ cudm_version }}\n    build:\n      missing_dso_whitelist:\n        - \"*libcutensornet*\"  # it is a subpackage in this recipe referenced by this output\n      number: {{ mpi_build_num }}\n      string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ mpi_build_num }}\"\n      script: \"${RECIPE_DIR}/cudensitymat/cudm-install\"\n      run_exports:\n        - {{ pin_subpackage(\"cudensitymat\", max_pin=\"x\") }} {{ mpi_prefix }}_*\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}\n        - libcublas\n        - libcusolver\n        - libcurand\n      post-link: post-link\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        - {{ mpi }} * external*  # [mpi == \"mpich\"]\n        - {{ mpi }}  # [mpi == \"openmpi\"]\n        - cf-nvidia-tools 1  # [linux]\n      host:\n        - cutensor >=2.3.1,<3\n        - cuda-version {{ cuda_compiler_version }}\n        - libcublas\n        - libcusolver\n        - libcurand\n        - {{ mpi }}  # [mpi != \"nompi\"]\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x\", min_pin=\"x\") }}\n        - {{ pin_compatible(\"cutensor\", max_pin=\"x\") }}\n        - {{ pin_subpackage('cutensornet', max_pin='x') }}\n        - libcublas\n        - libcusolver\n        - libnvjitlink\n        - libcurand\n        - {{ mpi }} * external*  # [mpi == \"mpich\"]\n        - {{ mpi }}  # [mpi == \"openmpi\"]\n      run_constrained:\n        # if users also wanna install mpi, we need to ensure the nompi version is not\n        # picked by the solver, we do so by createing a conflict\n        - openmpi <0.a0  # [mpi == \"nompi\"]\n        - mpich   <0.a0  # [mpi == \"nompi\"]\n    test:\n      requires:\n        - git\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        # avoid sysroot_linux exported by dependency causing it to fall back to baseline\n        - {{ stdlib('c') }}\n        # make sure we pick up the version matching the docker,\n        # or the linker would complain\n        - cuda-version {{ cuda_compiler_version }}.*\n      files:\n        - ./common/*\n        - ./cudensitymat/*\n      commands:\n        - export mpi={{ mpi }}\n        - ./cudensitymat/cudm-tests {{ version }}\n    about:\n      home: https://developer.nvidia.com/cuquantum-sdk\n      license: LicenseRef-cuQuantum-Software-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/cuquantum/latest/license.html\n      license_file: LICENSE\n      summary: 'cuDensityMat: A High-Performance Library for composing analog quantum dynamics equation solvers'\n      description: |\n        NVIDIA cuDensityMat is a high-performance library for composing analog quantum dynamics equation solvers. \n        cuDensityMat is a component of the NVIDIA cuQuantum SDK.\n        In addition to C APIs, cuDensityMat can also be accessed in Python via cuQuantum Python.\n\n        The packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\n        Software License Agreement (EULA). By downloading and using the packages,\n        you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n        https://docs.nvidia.com/cuda/cuquantum/license.html\n      doc_url: https://docs.nvidia.com/cuda/cuquantum/latest/cudensitymat/\n      dev_url: https://github.com/NVIDIA/cuQuantum\n  \n  - name: cutensornet\n    version: {{ cutn_version }}\n    build:\n      number: {{ mpi_build_num }}\n      string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ mpi_build_num }}\"\n      script: \"${RECIPE_DIR}/cutensornet/cutn-install\"\n      run_exports:\n        - {{ pin_subpackage(\"cutensornet\", max_pin=\"x\") }} {{ mpi_prefix }}_*\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}\n        - libcublas\n        - libcusolver\n      post-link: post-link\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        - {{ mpi }} * external*  # [mpi == \"mpich\"]\n        - {{ mpi }}              # [mpi == \"openmpi\"]\n        - cf-nvidia-tools 1  # [linux]\n      host:\n        - cutensor >=2.3.1,<3\n        - cuda-version {{ cuda_compiler_version }}\n        - libcusolver\n        - libcublas\n        - {{ mpi }}  # [mpi != \"nompi\"]\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x\", min_pin=\"x\") }}\n        - {{ pin_compatible(\"cutensor\", max_pin=\"x\") }}\n        - libcublas\n        - libcusolver\n        - {{ mpi }} * external*  # [mpi == \"mpich\"]\n        - {{ mpi }}              # [mpi == \"openmpi\"]\n      run_constrained:\n        # if users also want to install mpi, we need to ensure the nompi version is not\n        # picked by the solver, we do so by creating a conflict\n        - openmpi <0.a0  # [mpi == \"nompi\"]\n        - mpich   <0.a0  # [mpi == \"nompi\"]\n    test:\n      requires:\n        - git\n        - libcublas-dev\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        # avoid sysroot_linux exported by dependency causing it to fall back to baseline\n        - {{ stdlib('c') }}\n        # make sure we pick up the version matching the docker,\n        # or the linker would complain\n        ## seems unnecessary?\n        - cuda-version {{ cuda_compiler_version }}.*\n      files:\n        - ./common/*\n        - ./cutensornet/*\n      commands:\n        - export mpi={{ mpi }}\n        - ./cutensornet/cutn-tests {{ version }}\n    about:\n      home: https://developer.nvidia.com/cuquantum-sdk\n      license: LicenseRef-cuQuantum-Software-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/cuquantum/latest/license.html\n      license_file: LICENSE\n      summary: 'cuTensorNet: A High-Performance Library for Tensor Network Computations'\n      description: |\n        NVIDIA cuTensorNet is a high-performance library for tensor network computations.\n        cuTensorNet is a component of the NVIDIA cuQuantum SDK.\n        In addition to C APIs, cuTensorNet can also be accessed in Python via cuQuantum Python.\n\n        The packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\n        Software License Agreement (EULA). By downloading and using the packages,\n        you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n        https://docs.nvidia.com/cuda/cuquantum/license.html\n      doc_url: https://docs.nvidia.com/cuda/cuquantum/latest/cutensornet/\n      dev_url: https://github.com/NVIDIA/cuQuantum\n  \n  - name: custatevec\n    version: {{ cusv_version }}\n    build:\n      number: {{ build_num }}\n      string: \"h{{ PKG_HASH }}_{{ build_num }}\"\n      script: \"${RECIPE_DIR}/custatevec/cusv-install\"\n      run_exports:\n        - {{ pin_subpackage(\"custatevec\", max_pin=\"x\") }}\n      ignore_run_exports_from:\n        - {{ compiler(\"cuda\") }}\n        - libcublas\n      post-link: post-link\n      missing_dso_whitelist:\n        - libnvidia-ml.so\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        - cf-nvidia-tools 1  # [linux]\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        - cuda-nvml-dev\n        - libcublas\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x\", min_pin=\"x\") }}\n        - cuda-nvml-dev\n        - libcublas\n      run_constrained:\n        - __cuda >=12\n    test:\n      requires:\n        - git\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"cuda\") }}\n        # avoid sysroot_linux exported by dependency causing it to fall back to baseline\n        - {{ stdlib('c') }}\n        # make sure we pick up the version matching the docker,\n        # or the linker would complain\n        ## seems unnecessary?\n        - cuda-version {{ cuda_compiler_version }}.*\n      files:\n        - ./common/*\n        - ./custatevec/*\n      commands:\n        - ./custatevec/cusv-tests {{ version }}\n    about:\n      home: https://developer.nvidia.com/cuquantum-sdk\n      license: LicenseRef-cuQuantum-Software-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/cuquantum/latest/license.html\n      license_file: LICENSE\n      summary: 'cuStateVec: A High-Performance Library for State Vector Quantum Simulators'\n      description: |\n        NVIDIA cuStateVec is a high-performance library dedicated to operations for building state vector quantum simulators.\n        cuStateVec is a component of the NVIDIA cuQuantum SDK.\n        In addition to C APIs, cuStateVec can also be accessed in Python via cuQuantum Python.\n        \n        The packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\n        Software License Agreement (EULA). By downloading and using the packages,\n        you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n        https://docs.nvidia.com/cuda/cuquantum/license.html\n      doc_url: https://docs.nvidia.com/cuda/cuquantum/latest/custatevec/\n      dev_url: https://github.com/NVIDIA/cuQuantum\n  \n  - name: cuquantum-python\n    # cuquantum python version label is MAJOR.MINOR.PATCH\n    version: {{ \".\".join(sdk_version[:3]) }}\n    build:\n      number: {{ build_num }}\n      skip: true  # [py<311 or py>313]\n      # build cuQuantum Python package is CUDA agnostic, serving both CUDA 13/12\n      # only build in the CUDA 12 pipeline\n      # (note: this still uses cuda_compiler_version to calculate hash)\n      skip: true  # [not (cuda_compiler_version or \"\").startswith(\"12\")]\n      skip: true  # [mpi != \"nompi\"]\n      script: \"${RECIPE_DIR}/cuquantum-python/cuquantum-python-install\"\n      ignore_run_exports_from:\n        # let cuquantum handle the CUDA deps\n        - {{ compiler('cuda') }}\n        - cuda-bindings\n        - cuda-python\n      missing_dso_whitelist:\n        - libnvidia-ml.so\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - python                              # [build_platform != target_platform]\n        - cython <4                           # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - cython <4\n        - packaging\n        - setuptools\n      run:\n        - python\n        - numpy >=1.26\n        - cupy >=13.0\n        - nvmath-python >=0.6,<0.7=*core*\n        - cuda-bindings >=12.9.1,<14.0.0,!=13.0.0\n        - {{ pin_subpackage('custatevec', max_pin='x') }}\n        - {{ pin_subpackage('cutensornet', max_pin='x') }}\n        - {{ pin_subpackage('cudensitymat', max_pin='x.x') }}\n        # cuquantum subpackage dependencies should already be enforcing this constraint indirectly\n      run_constrained:\n        - __cuda >=12\n        - pytorch >=1.10\n        # mpi4py version constraint due to https://github.com/mpi4py/mpi4py/issues/609\n        - mpi4py >=4.0.3\n        # we don't have to pin Qiskit or Cirq here because their versions are fairly recent on conda-forge\n    test:\n      requires:\n        - cuda-driver-dev\n      files:\n        - ./common/*\n        - ./cuquantum-python/*\n      commands:\n        - ./cuquantum-python/cuquantum-python-tests\n    about:\n      home: https://developer.nvidia.com/cuquantum-sdk\n      license: BSD-3-Clause\n      license_url: https://docs.nvidia.com/cuda/cuquantum/latest/license.html#nvidia-cuquantum-python\n      license_file: LICENSE\n      summary: \"cuQuantum Python: A High-Performance Library for Accelerating Quantum Computing Simulations in Python\"\n      description: |\n        NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented\n        models for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.\n      doc_url: https://docs.nvidia.com/cuda/cuquantum/latest/python/\n      dev_url: https://github.com/NVIDIA/cuQuantum\n\nabout:\n  home: https://developer.nvidia.com/cuquantum-sdk\n  license: LicenseRef-cuQuantum-Software-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/cuquantum/latest/license.html\n  license_file: LICENSE\n  summary: 'cuQuantum SDK: A High-Performance Library for Accelerating Quantum Computing Simulations'\n  description: |\n    NVIDIA cuQuantum SDK is a set of high-performance libraries and tools for accelerating\n    quantum computing simulations at both the circuit and device level by orders of magnitude. It consists of three major components:\n    \n    - cuDensityMat: a high-performance library for quantum dynamics equation solvers\n    - cuStateVec: a high-performance library for state vector quantum simulators\n    - cuTensorNet: a high-performance library for tensor network computations\n    \n    In addition to C APIs, cuQuantum also provides Python APIs via cuQuantum Python.\n    \n    The packages cuquantum, cudensitymat, custatevec, and cutensornet are governed by the NVIDIA cuQuantum\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuQuantum EULA -\n    https://docs.nvidia.com/cuda/cuquantum/license.html\n  doc_url: https://docs.nvidia.com/cuda/cuquantum/latest/index.html\n  dev_url: https://github.com/NVIDIA/cuQuantum\n\nextra:\n  recipe-maintainers:\n    - b-kloss\n    - leofang\n    - JeremyWangNVDA\n    - mtjrider\n    - yangcal\n    - DmitryLyakh\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cf-nvidia-tools",
      "cuda-bindings",
      "cuda-nvml-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cudensitymat",
      "cupy",
      "custatevec",
      "cutensor",
      "cutensornet",
      "cxx_compiler_stub",
      "cython",
      "libcublas",
      "libcurand",
      "libcusolver",
      "libnvjitlink",
      "mpich",
      "numpy",
      "nvmath-python",
      "openmpi",
      "packaging",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "mpich",
        "openmpi"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvml-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cutensor",
        "cxx_compiler_stub",
        "cython",
        "libcublas",
        "libcurand",
        "libcusolver",
        "mpich",
        "openmpi",
        "packaging",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-bindings",
        "cuda-nvml-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cudensitymat",
        "cupy",
        "custatevec",
        "cutensor",
        "cutensornet",
        "cxx_compiler_stub",
        "libcublas",
        "libcurand",
        "libcusolver",
        "libnvjitlink",
        "mpich",
        "numpy",
        "nvmath-python",
        "openmpi",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-driver-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "libcublas-dev"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools 1",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "mpich * external*",
        "openmpi"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-nvml-dev",
        "cuda-version 12.9",
        "cuda-version 13.0",
        "cutensor >=2.3.1,<3",
        "cython <4",
        "libcublas",
        "libcurand",
        "libcusolver",
        "mpich",
        "openmpi",
        "packaging",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings >=12.9.1,<14.0.0,!=13.0.0",
        "cuda-nvml-dev",
        "cuda-version",
        "cudensitymat",
        "cupy >=13.0",
        "custatevec",
        "cutensor",
        "cutensornet",
        "libcublas",
        "libcurand",
        "libcusolver",
        "libnvjitlink",
        "mpich * external*",
        "numpy >=1.26",
        "nvmath-python >=0.6,<0.7=*core*",
        "openmpi",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-driver-dev",
        "cuda-version 12.9.*",
        "cuda-version 13.0.*",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "libcublas-dev"
      ]
    }
  },
  "url": null,
  "version": "25.09.1.12",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cuquantum.json"
  }
}