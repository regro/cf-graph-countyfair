{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "csm",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "csm is a C++ API for terrestrial and planetary sensor models\n",
      "home": "http://github.com/sminster/csm",
      "license": "Unlicense",
      "license_file": "LICENSE",
      "summary": "The Community Sensor Model API"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "jlaura",
        "kelvinrr"
      ]
    },
    "package": {
      "name": "csm",
      "version": "3.0.3.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/add_cmake.patch"
      ],
      "sha256": "dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e",
      "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/lib/libcsmapi.so",
        "test -e $PREFIX/include/csm/Isd.h",
        "test -e $PREFIX/include/csm/csm.h"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "csm is a C++ API for terrestrial and planetary sensor models\n",
      "home": "http://github.com/sminster/csm",
      "license": "Unlicense",
      "license_file": "LICENSE",
      "summary": "The Community Sensor Model API"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "jlaura",
        "kelvinrr"
      ]
    },
    "package": {
      "name": "csm",
      "version": "3.0.3.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/add_cmake.patch"
      ],
      "sha256": "dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e",
      "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/lib/libcsmapi.so",
        "test -e $PREFIX/include/csm/Isd.h",
        "test -e $PREFIX/include/csm/csm.h",
        "test -e $PREFIX/lib/libcsmapi.dylib",
        "if not exist %LIBRARY_BIN%\\csmapi.dll exit 1",
        "if not exist %LIBRARY_LIB%\\csmapi.lib exit 1",
        "if not exist %LIBRARY_INC%\\csm\\Ellipsoid.h exit 1"
      ]
    }
  },
  "name": "csm",
  "osx_64_meta_yaml": {
    "about": {
      "description": "csm is a C++ API for terrestrial and planetary sensor models\n",
      "home": "http://github.com/sminster/csm",
      "license": "Unlicense",
      "license_file": "LICENSE",
      "summary": "The Community Sensor Model API"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "jlaura",
        "kelvinrr"
      ]
    },
    "package": {
      "name": "csm",
      "version": "3.0.3.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/add_cmake.patch"
      ],
      "sha256": "dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e",
      "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/lib/libcsmapi.dylib",
        "test -e $PREFIX/include/csm/Isd.h",
        "test -e $PREFIX/include/csm/csm.h"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "csm is a C++ API for terrestrial and planetary sensor models\n",
      "home": "http://github.com/sminster/csm",
      "license": "Unlicense",
      "license_file": "LICENSE",
      "summary": "The Community Sensor Model API"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "jlaura",
        "kelvinrr"
      ]
    },
    "package": {
      "name": "csm",
      "version": "3.0.3.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/add_cmake.patch"
      ],
      "sha256": "dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e",
      "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/lib/libcsmapi.dylib",
        "test -e $PREFIX/include/csm/Isd.h",
        "test -e $PREFIX/include/csm/csm.h"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "csm"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/csm.json"
  },
  "raw_meta_yaml": "{% set name = \"csm\" %}\n{% set version = \"3.0.3.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/sminster/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e\n  patches:\n    - patches/add_cmake.patch   # Adds the CMake build system\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}  # [linux]\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n\ntest:\n  commands:\n    - test -e $PREFIX/lib/libcsmapi.so  # [linux]\n    - test -e $PREFIX/lib/libcsmapi.dylib  # [osx]\n    - test -e $PREFIX/include/csm/Isd.h  # [not win]\n    - test -e $PREFIX/include/csm/csm.h  # [not win]\n    - if not exist %LIBRARY_BIN%\\csmapi.dll exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\csmapi.lib exit 1  # [win]\n    - if not exist %LIBRARY_INC%\\csm\\Ellipsoid.h exit 1  # [win]\n\nabout:\n  home: http://github.com/sminster/csm\n  license: Unlicense\n  license_file: LICENSE\n  summary: The Community Sensor Model API\n  description: |\n    csm is a C++ API for terrestrial and planetary sensor models\n\nextra:\n  recipe-maintainers:\n    - jlaura\n    - kelvinrr\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz",
  "version": "3.0.3.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/csm.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "csm is a C++ API for terrestrial and planetary sensor models\n",
      "home": "http://github.com/sminster/csm",
      "license": "Unlicense",
      "license_file": "LICENSE",
      "summary": "The Community Sensor Model API"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "jlaura",
        "kelvinrr"
      ]
    },
    "package": {
      "name": "csm",
      "version": "3.0.3.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/add_cmake.patch"
      ],
      "sha256": "dcb2f1bbdfd3b506a9646a5bfcc00026ed161cd1bbb61452498d2537f3b8706e",
      "url": "https://github.com/sminster/csm/archive/v3.0.3.3.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_BIN%\\csmapi.dll exit 1",
        "if not exist %LIBRARY_LIB%\\csmapi.lib exit 1",
        "if not exist %LIBRARY_INC%\\csm\\Ellipsoid.h exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}