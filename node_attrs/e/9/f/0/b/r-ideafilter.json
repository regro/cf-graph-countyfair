{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-ideafilter",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://biogen-inc.github.io/IDEAFilter/, https://github.com/Biogen-Inc/IDEAFilter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "When added to an existing shiny app, users may subset any developer-chosen R data.frame on the fly. That is, users are empowered to slice & dice data by applying multiple (order specific) filters using the AND (&) operator between each, and getting real-time updates on the number of rows effected/available along the way. Thus, any downstream processes that leverage this data source (like tables, plots, or statistical procedures) will re-render after new filters are applied. The shiny module’s user interface has a 'minimalist' aesthetic so that the focus can be on the data & other visuals. In addition to returning a reactive (filtered) data.frame, 'IDEAFilter' as also returns 'dplyr' filter statements used to actually slice the data."
    },
    "build": {
      "missing_dso_whitelist": null,
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ideafilter",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rcolorbrewer",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-shiny",
        "r-shinytime"
      ],
      "run": [
        "r-base",
        "r-rcolorbrewer",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-shiny",
        "r-shinytime"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "fec224548450ee8b9429df3848256b004e924e3ca6e69048b3e6f29aa72c9932",
      "url": [
        "https://cran.r-project.org/src/contrib/IDEAFilter_0.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/IDEAFilter/IDEAFilter_0.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('IDEAFilter')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://biogen-inc.github.io/IDEAFilter/, https://github.com/Biogen-Inc/IDEAFilter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "When added to an existing shiny app, users may subset any developer-chosen R data.frame on the fly. That is, users are empowered to slice & dice data by applying multiple (order specific) filters using the AND (&) operator between each, and getting real-time updates on the number of rows effected/available along the way. Thus, any downstream processes that leverage this data source (like tables, plots, or statistical procedures) will re-render after new filters are applied. The shiny module’s user interface has a 'minimalist' aesthetic so that the focus can be on the data & other visuals. In addition to returning a reactive (filtered) data.frame, 'IDEAFilter' as also returns 'dplyr' filter statements used to actually slice the data."
    },
    "build": {
      "missing_dso_whitelist": null,
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ideafilter",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rcolorbrewer",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-shiny",
        "r-shinytime"
      ],
      "run": [
        "r-base",
        "r-rcolorbrewer",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-shiny",
        "r-shinytime"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "fec224548450ee8b9429df3848256b004e924e3ca6e69048b3e6f29aa72c9932",
      "url": [
        "https://cran.r-project.org/src/contrib/IDEAFilter_0.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/IDEAFilter/IDEAFilter_0.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('IDEAFilter')\""
      ]
    }
  },
  "name": "r-ideafilter",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ideafilter"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ideafilter.json"
  },
  "raw_meta_yaml": "{% set version = '0.2.0' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ideafilter\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/IDEAFilter_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/IDEAFilter/IDEAFilter_{{ version }}.tar.gz\n  sha256: fec224548450ee8b9429df3848256b004e924e3ca6e69048b3e6f29aa72c9932\n\nbuild:\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    # The libstdc++.dll provided in libstdcxx v15.1.0 build h904f734_2\n    # is missing `_ZSt21ios_base_library_initv`.\n    # see: conda-forge/ctng-compilers-feedstock#174\n    - libstdcxx !=14.3.0,!=15.1.0  # [win]\n  host:\n    - r-base\n    - r-rcolorbrewer\n    - r-crayon\n    - r-ggplot2\n    - r-pillar >=1.5.0\n    - r-purrr\n    - r-shiny\n    - r-shinytime\n  run:\n    - r-base\n    - r-rcolorbrewer\n    - r-crayon\n    - r-ggplot2\n    - r-pillar >=1.5.0\n    - r-purrr\n    - r-shiny\n    - r-shinytime\n  run_constrained:\n    - libstdcxx !=14.3.0,!=15.1.0           # [win]\n\ntest:\n  commands:\n    - $R -e \"library('IDEAFilter')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('IDEAFilter')\\\"\"  # [win]\n\nabout:\n  home: https://biogen-inc.github.io/IDEAFilter/, https://github.com/Biogen-Inc/IDEAFilter\n  license: MIT\n  summary: \"When added to an existing shiny app, users may subset any developer-chosen R data.frame\n    on the fly. That is, users are empowered to slice & dice data by applying multiple\n    (order specific) filters using the AND (&) operator between each, and getting real-time\n    updates on the number of rows effected/available along the way. Thus, any downstream\n    processes that leverage this data source (like tables, plots, or statistical procedures)\n    will re-render after new filters are applied. The shiny module\\u2019s user interface\n    has a 'minimalist' aesthetic so that the focus can be on the data & other visuals.\n    In addition to returning a reactive (filtered) data.frame, 'IDEAFilter' as also\n    returns 'dplyr' filter statements used to actually slice the data.\"\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-crayon",
      "r-ggplot2",
      "r-pillar",
      "r-purrr",
      "r-rcolorbrewer",
      "r-shiny",
      "r-shinytime"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-crayon",
        "r-ggplot2",
        "r-pillar >=1.5.0",
        "r-purrr",
        "r-rcolorbrewer",
        "r-shiny",
        "r-shinytime"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/IDEAFilter_0.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/IDEAFilter/IDEAFilter_0.2.0.tar.gz"
  ],
  "version": "0.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ideafilter.json"
  }
}