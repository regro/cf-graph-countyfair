{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-bipartitemodularitymaximization",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=BipartiteModularityMaximization",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Function bipmod() that partitions a bipartite network into non-overlapping biclusters by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102> using the bipartite version of the algorithm described in Treviño (2015) <doi:10.1088/1742-5468/2015/02/P02003>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "ezherman"
      ]
    },
    "package": {
      "name": "r-bipartitemodularitymaximization",
      "version": "1.23.120.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b9833e12d54c7ac244cd09a815767844bc2dd0daa687fdaebcf6e359e67e95f",
      "url": [
        "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('BipartiteModularityMaximization')\"",
        "$R -e \"testthat::test_package('BipartiteModularityMaximization')\""
      ],
      "requires": [
        "r-testthat"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=BipartiteModularityMaximization",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Function bipmod() that partitions a bipartite network into non-overlapping biclusters by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102> using the bipartite version of the algorithm described in Treviño (2015) <doi:10.1088/1742-5468/2015/02/P02003>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll"
      ],
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "ezherman"
      ]
    },
    "package": {
      "name": "r-bipartitemodularitymaximization",
      "version": "1.23.120.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b9833e12d54c7ac244cd09a815767844bc2dd0daa687fdaebcf6e359e67e95f",
      "url": [
        "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('BipartiteModularityMaximization')\"",
        "$R -e \"testthat::test_package('BipartiteModularityMaximization')\"",
        "\"%R%\" -e \"library('BipartiteModularityMaximization')\"",
        "\"%R%\" -e \"testthat::test_package('BipartiteModularityMaximization')\""
      ],
      "requires": [
        "r-testthat"
      ]
    }
  },
  "name": "r-bipartitemodularitymaximization",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=BipartiteModularityMaximization",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Function bipmod() that partitions a bipartite network into non-overlapping biclusters by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102> using the bipartite version of the algorithm described in Treviño (2015) <doi:10.1088/1742-5468/2015/02/P02003>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "ezherman"
      ]
    },
    "package": {
      "name": "r-bipartitemodularitymaximization",
      "version": "1.23.120.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b9833e12d54c7ac244cd09a815767844bc2dd0daa687fdaebcf6e359e67e95f",
      "url": [
        "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('BipartiteModularityMaximization')\"",
        "$R -e \"testthat::test_package('BipartiteModularityMaximization')\""
      ],
      "requires": [
        "r-testthat"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-bipartitemodularitymaximization"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-bipartitemodularitymaximization.json"
  },
  "raw_meta_yaml": "{% set version = '1.23.120.1' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-bipartitemodularitymaximization\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/BipartiteModularityMaximization_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_{{ version }}.tar.gz\n  sha256: 2b9833e12d54c7ac244cd09a815767844bc2dd0daa687fdaebcf6e359e67e95f\n\nbuild:\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'                        # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rcpp\n  run:\n    - r-base\n    - r-rcpp\n\ntest:\n  requires:\n    - r-testthat\n  commands:\n    - $R -e \"library('BipartiteModularityMaximization')\"                 # [not win]\n    - $R -e \"testthat::test_package('BipartiteModularityMaximization')\"  # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('BipartiteModularityMaximization')\\\"\"                 # [win]\n    - \"\\\"%R%\\\" -e \\\"testthat::test_package('BipartiteModularityMaximization')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=BipartiteModularityMaximization\n  license: MIT\n  summary: \"Function bipmod() that partitions a bipartite network into non-overlapping biclusters\n    by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102>\n    using the bipartite version of the algorithm described in Trevi\\xF1o (2015) <doi:10.1088/1742-5468/2015/02/P02003>.\"\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - ezherman\n\n# Package: BipartiteModularityMaximization\n# Title: Partition Bipartite Network into Non-Overlapping Biclusters by Optimizing Bipartite Modularity\n# Version: 1.23.120.1\n# Authors@R: c(person(given = \"Tianlong\",family = \"Chen\",role = c(\"aut\"),),person(given = \"Weibin\",family = \"Zhang\",role = c( \"cre\",\"ctb\"),email = \"wbzhang.ustc@gmail.com\"),person(given = \"Suresh\",family = \"Bhavnani\",role = c(\"cph\",\"fnd\"),email = \"subhavna@UTMB.EDU\"))\n# Author: Tianlong Chen [aut], Weibin Zhang [cre, ctb], Suresh Bhavnani [cph, fnd]\n# Maintainer: Weibin Zhang <wbzhang.ustc@gmail.com>\n# Description: Function bipmod() that partitions a bipartite network into non-overlapping biclusters by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102> using the bipartite version of the algorithm described in Trevino (2015) <doi:10.1088/1742-5468/2015/02/P02003>.\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# LinkingTo: Rcpp\n# Imports: Rcpp\n# RoxygenNote: 7.1.2\n# Depends: R (>= 2.10)\n# Suggests: testthat\n# NeedsCompilation: yes\n# Packaged: 2023-01-21 00:16:03 UTC; weibzhan\n# Repository: CRAN\n# Date/Publication: 2023-01-21 23:20:30 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz",
    "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz",
    "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz"
  ],
  "version": "1.23.120.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-bipartitemodularitymaximization.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=BipartiteModularityMaximization",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Function bipmod() that partitions a bipartite network into non-overlapping biclusters by maximizing bipartite modularity defined in Barber (2007) <doi:10.1103/PhysRevE.76.066102> using the bipartite version of the algorithm described in Treviño (2015) <doi:10.1088/1742-5468/2015/02/P02003>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll"
      ],
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "ezherman"
      ]
    },
    "package": {
      "name": "r-bipartitemodularitymaximization",
      "version": "1.23.120.1"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b9833e12d54c7ac244cd09a815767844bc2dd0daa687fdaebcf6e359e67e95f",
      "url": [
        "https://cran.r-project.org/src/contrib/BipartiteModularityMaximization_1.23.120.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/BipartiteModularityMaximization/BipartiteModularityMaximization_1.23.120.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('BipartiteModularityMaximization')\"",
        "\"%R%\" -e \"testthat::test_package('BipartiteModularityMaximization')\""
      ],
      "requires": [
        "r-testthat"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  }
}