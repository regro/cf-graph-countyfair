{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "abi_migration_branches": [
        "1.x"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "ninja-hep-ph",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "name": "ninja-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Ninja implements the Laurent series expansion method for the computation of\none-loop integrals.\n\nIt is based on:\n* P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\none-loop scattering amplitudes through Laurent series expansion_,\"\nJHEP 1206 (2012) 095\n[arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\nDOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n* T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\nfor One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n[arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\nDOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n",
      "dev_url": "https://github.com/peraro/ninja",
      "home": "https://github.com/peraro/ninja",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes"
    },
    "build": {
      "number": "7"
    },
    "extra": {
      "feedstock-name": "ninja-hep-ph",
      "recipe-maintainers": [
        "matthewfeickert"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "ninja-hep-ph"
          ]
        },
        "name": "ninja-hep-ph",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop"
          ],
          "run": [
            "oneloop"
          ]
        },
        "script": "build_shared.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja.a",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "gawk",
            "sed",
            "grep"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      },
      {
        "build": null,
        "name": "ninja-hep-ph-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep"
          ],
          "host": [
            "oneloop-static"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libninja.a",
            "test ! -f $PREFIX/lib/libninja.la",
            "test ! -f $PREFIX/lib/libninja${SHLIB_EXT}",
            "test -f $PREFIX/bin/ninja-config",
            "test -f $PREFIX/include/mninja.mod",
            "test -f $PREFIX/include/ninja/avholo.hh",
            "test -f $PREFIX/include/ninja/integral_library.hh",
            "test ! -f $PREFIX/include/ninja/looptools.hh",
            "test -f $PREFIX/include/ninja/momentum.hh",
            "test -f $PREFIX/include/ninja/ninja.hh",
            "test -f $PREFIX/include/ninja/ninja_config.h",
            "test -f $PREFIX/include/ninja/ninja_in.hh",
            "test -f $PREFIX/include/ninja/ninjanumgen.hh",
            "test -f $PREFIX/include/ninja/num_defs.hh",
            "test -f $PREFIX/include/ninja/rambo.hh",
            "test -f $PREFIX/include/ninja/s_mat.hh",
            "test -f $PREFIX/include/ninja/spinors.hh",
            "test -f $PREFIX/include/ninja/static_arrays.hh",
            "test -f $PREFIX/include/ninja/tensor_ninja.hh",
            "test -f $PREFIX/include/ninja/thread_safe_integral_library.hh",
            "test -f $PREFIX/include/ninja/types.hh",
            "test -f $PREFIX/include/ninja/zero_float.hh",
            "test -f $PREFIX/include/ninjago_module.mod",
            "test -f $PREFIX/include/ninjavholo.mod",
            "test ! -d $PREFIX/include/quadninja",
            "ninja-config --help",
            "ninja-config --version",
            "ninja-config --quadsupport",
            "autoreconf --install",
            "./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"",
            "make clean",
            "make examples",
            "cd examples",
            "echo -e \"\\n# simple_test\"",
            "./simple_test",
            "echo -e \"\\n# simple_higher_rank_test\"",
            "./simple_higher_rank_test",
            "echo -e \"\\n# tensor_test\"",
            "./tensor_test",
            "echo -e \"\\n# tensor_higher_rank_test\"",
            "./tensor_higher_rank_test",
            "echo -e \"\\n# 4photons\"",
            "./4photons",
            "echo -e \"\\n# 6photons\"",
            "./6photons",
            "echo -e \"\\n# ttbarh\"",
            "./ttbarh",
            "echo -e \"\\n# simple_test by hand\"",
            "$CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran",
            "cd .."
          ],
          "requires": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "automake",
            "libtool",
            "make",
            "pkg-config",
            "gnuconfig",
            "gawk",
            "sed",
            "grep",
            "oneloop-static"
          ],
          "source_files": [
            "examples/",
            "m4/",
            "src/",
            "Makefile.am",
            "configure.ac"
          ]
        }
      }
    ],
    "package": {
      "name": "ninja-split",
      "version": "1.2.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "posix-compliant-shell.patch",
        "update-version-number-to-v1.2.0.patch",
        "remove-version-file.patch"
      ],
      "sha256": "b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1",
      "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ninja-hep-ph",
      "ninja-hep-ph-static"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ninja-hep-ph.json"
  },
  "raw_meta_yaml": "{% set name = \"ninja\" %}\n{% set version = \"1.2.0\" %}\n\npackage:\n  # Have top level name be unique from any outputs\n  # c.f. https://github.com/conda-forge/conda-forge.github.io/blob/abfc33db28c35e9a8f6b719d0021768f0d5d06be/docs/maintainer/knowledge_base.md?plain=1#L1749\n  name: {{ name }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/peraro/ninja/archive/v{{ version }}.tar.gz\n  sha256: b9709aada408286b6533ac7427bab9d1364d449a9c11098c324ea0875fe9a9e1\n  patches:\n    - posix-compliant-shell.patch\n    - update-version-number-to-v1.2.0.patch\n    # c.f. https://github.com/peraro/ninja/issues/5\n    - remove-version-file.patch\n\nbuild:\n  number: 7\n\noutputs:\n  - name: {{ name }}-hep-ph\n\n    script: build_shared.sh\n\n    build:\n      skip: true  # [win]\n      run_exports:\n        - {{ pin_subpackage('ninja-hep-ph', max_pin='x.x') }}\n\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - automake  # includes autoconf\n        - libtool\n        - make\n        - pkg-config\n        - gnuconfig\n        - gawk\n        - sed\n        - grep\n        - oneloop  # [build_platform != target_platform]\n      host:\n        - oneloop\n      run:\n        - oneloop\n\n    test:\n      # As need to regenerate Makefiles, need all of the source files that\n      # configure uses to do so\n      source_files:\n        - examples/\n        - m4/\n        - src/\n        - Makefile.am\n        - configure.ac\n      requires:\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - automake\n        - libtool\n        - make\n        - gawk\n        - sed\n        - grep\n      commands:\n        - test -f $PREFIX/lib/libninja${SHLIB_EXT}\n        # c.f. https://github.com/conda/conda-build/issues/3075\n        - test ! -f $PREFIX/lib/libninja.la\n        - test ! -f $PREFIX/lib/libninja.a\n        - test -f $PREFIX/bin/ninja-config\n        - test -f $PREFIX/include/mninja.mod\n        - test -f $PREFIX/include/ninja/avholo.hh\n        - test -f $PREFIX/include/ninja/integral_library.hh\n        - test ! -f $PREFIX/include/ninja/looptools.hh\n        - test -f $PREFIX/include/ninja/momentum.hh\n        - test -f $PREFIX/include/ninja/ninja.hh\n        - test -f $PREFIX/include/ninja/ninja_config.h\n        - test -f $PREFIX/include/ninja/ninja_in.hh\n        - test -f $PREFIX/include/ninja/ninjanumgen.hh\n        - test -f $PREFIX/include/ninja/num_defs.hh\n        - test -f $PREFIX/include/ninja/rambo.hh\n        - test -f $PREFIX/include/ninja/s_mat.hh\n        - test -f $PREFIX/include/ninja/spinors.hh\n        - test -f $PREFIX/include/ninja/static_arrays.hh\n        - test -f $PREFIX/include/ninja/tensor_ninja.hh\n        - test -f $PREFIX/include/ninja/thread_safe_integral_library.hh\n        - test -f $PREFIX/include/ninja/types.hh\n        - test -f $PREFIX/include/ninja/zero_float.hh\n        - test -f $PREFIX/include/ninjago_module.mod\n        - test -f $PREFIX/include/ninjavholo.mod\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - test -f $PREFIX/include/quadninja/avholo.hh\n        - test -f $PREFIX/include/quadninja/integral_library.hh\n        - test ! -f $PREFIX/include/quadninja/looptools.hh\n        - test -f $PREFIX/include/quadninja/momentum.hh\n        - test -f $PREFIX/include/quadninja/ninja.hh\n        - test -f $PREFIX/include/quadninja/ninja_config.h\n        - test -f $PREFIX/include/quadninja/ninja_in.hh\n        - test -f $PREFIX/include/quadninja/ninjanumgen.hh\n        - test -f $PREFIX/include/quadninja/num_defs.hh\n        - test -f $PREFIX/include/quadninja/quadruple.hh\n        - test -f $PREFIX/include/quadninja/rambo.hh\n        - test -f $PREFIX/include/quadninja/s_mat.hh\n        - test -f $PREFIX/include/quadninja/spinors.hh\n        - test -f $PREFIX/include/quadninja/static_arrays.hh\n        - test -f $PREFIX/include/quadninja/tensor_ninja.hh\n        - test -f $PREFIX/include/quadninja/thread_safe_integral_library.hh\n        - test -f $PREFIX/include/quadninja/types.hh\n        - test -f $PREFIX/include/quadninja/zero_float.hh\n      {% else %}\n        - test ! -d $PREFIX/include/quadninja\n      {% endif %}\n\n        - ninja-config --help\n        - ninja-config --version\n        - ninja-config --quadsupport\n\n        # Given the way the examples/Makefile works, need to regenerate it and\n        # other supporting files with configure again\n        - autoreconf --install\n\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - ./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --enable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"\n      {% else %}\n        - ./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\"  # [not osx]\n        - ./configure --prefix=$PREFIX --enable-shared=yes --enable-static=no --enable-higher_rank --disable-quadninja --with-avholo=\"$FFLAGS -lavh_olo\" FCINCLUDE=\"${FCINCLUDE} -I$PREFIX/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"  # [osx]\n      {% endif %}\n        - make clean\n        - make examples\n\n        - cd examples\n        - echo -e \"\\n# simple_test\"\n        - ./simple_test\n        - echo -e \"\\n# simple_higher_rank_test\"\n        - ./simple_higher_rank_test\n        - echo -e \"\\n# tensor_test\"\n        - ./tensor_test\n        - echo -e \"\\n# tensor_higher_rank_test\"\n        - ./tensor_higher_rank_test\n        - echo -e \"\\n# 4photons\"\n        - ./4photons\n        - echo -e \"\\n# 6photons\"\n        - ./6photons\n        - echo -e \"\\n# ttbarh\"\n        - ./ttbarh\n\n        # Show how to build manually\n        - make clean\n        - echo -e \"\\n# simple_test by hand\"\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran -lquadmath\n      {% else %}\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran  # [not osx]\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran  # [osx]\n      {% endif %}\n        - ./simple_test\n\n        - make clean\n        - cd ..\n        - make clean\n\n  - name: {{ name }}-hep-ph-static\n\n    script: build_static.sh\n\n    build:\n      skip: true  # [win]\n\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - automake  # includes autoconf\n        - libtool\n        - make\n        - pkg-config\n        - gnuconfig\n        - gawk\n        - sed\n        - grep\n        - oneloop-static  # [build_platform != target_platform]\n      host:\n        - oneloop-static\n\n    test:\n      # As need to regenerate Makefiles, need all of the source files that\n      # configure uses to do so\n      source_files:\n        - examples/\n        - m4/\n        - src/\n        - Makefile.am\n        - configure.ac\n      requires:\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - automake\n        - libtool\n        - make\n        - pkg-config\n        - gnuconfig\n        - gawk\n        - sed\n        - grep\n        # libavh_olo.a is needed at linktime, but not at runtime\n        - oneloop-static\n      commands:\n        - test -f $PREFIX/lib/libninja.a\n        # c.f. https://github.com/conda/conda-build/issues/3075\n        - test ! -f $PREFIX/lib/libninja.la\n        - test ! -f $PREFIX/lib/libninja${SHLIB_EXT}\n        - test -f $PREFIX/bin/ninja-config\n        - test -f $PREFIX/include/mninja.mod\n        - test -f $PREFIX/include/ninja/avholo.hh\n        - test -f $PREFIX/include/ninja/integral_library.hh\n        - test ! -f $PREFIX/include/ninja/looptools.hh\n        - test -f $PREFIX/include/ninja/momentum.hh\n        - test -f $PREFIX/include/ninja/ninja.hh\n        - test -f $PREFIX/include/ninja/ninja_config.h\n        - test -f $PREFIX/include/ninja/ninja_in.hh\n        - test -f $PREFIX/include/ninja/ninjanumgen.hh\n        - test -f $PREFIX/include/ninja/num_defs.hh\n        - test -f $PREFIX/include/ninja/rambo.hh\n        - test -f $PREFIX/include/ninja/s_mat.hh\n        - test -f $PREFIX/include/ninja/spinors.hh\n        - test -f $PREFIX/include/ninja/static_arrays.hh\n        - test -f $PREFIX/include/ninja/tensor_ninja.hh\n        - test -f $PREFIX/include/ninja/thread_safe_integral_library.hh\n        - test -f $PREFIX/include/ninja/types.hh\n        - test -f $PREFIX/include/ninja/zero_float.hh\n        - test -f $PREFIX/include/ninjago_module.mod\n        - test -f $PREFIX/include/ninjavholo.mod\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - test -f $PREFIX/include/quadninja/avholo.hh\n        - test -f $PREFIX/include/quadninja/integral_library.hh\n        - test ! -f $PREFIX/include/quadninja/looptools.hh\n        - test -f $PREFIX/include/quadninja/momentum.hh\n        - test -f $PREFIX/include/quadninja/ninja.hh\n        - test -f $PREFIX/include/quadninja/ninja_config.h\n        - test -f $PREFIX/include/quadninja/ninja_in.hh\n        - test -f $PREFIX/include/quadninja/ninjanumgen.hh\n        - test -f $PREFIX/include/quadninja/num_defs.hh\n        - test -f $PREFIX/include/quadninja/quadruple.hh\n        - test -f $PREFIX/include/quadninja/rambo.hh\n        - test -f $PREFIX/include/quadninja/s_mat.hh\n        - test -f $PREFIX/include/quadninja/spinors.hh\n        - test -f $PREFIX/include/quadninja/static_arrays.hh\n        - test -f $PREFIX/include/quadninja/tensor_ninja.hh\n        - test -f $PREFIX/include/quadninja/thread_safe_integral_library.hh\n        - test -f $PREFIX/include/quadninja/types.hh\n        - test -f $PREFIX/include/quadninja/zero_float.hh\n      {% else %}\n        - test ! -d $PREFIX/include/quadninja\n      {% endif %}\n\n        - ninja-config --help\n        - ninja-config --version\n        - ninja-config --quadsupport\n\n        # Given the way the examples/Makefile works, need to regenerate it and\n        # other supporting files with configure again\n        - autoreconf --install\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - ./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --enable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"\n      {% else %}\n        - ./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" LDFLAGS=\"${LDFLAGS}\"  # [not osx]\n        - ./configure --prefix=$PREFIX --enable-shared=no --enable-static=yes --enable-higher_rank --disable-quadninja --with-avholo=\"${FFLAGS} -lavh_olo -lgfortran\" FCINCLUDE=\"${FCINCLUDE} -I${PREFIX}/include/oneloop\" CXX=\"${CXX}\" CXXFLAGS=\"-O2 -fcx-fortran-rules -fno-exceptions -fno-rtti ${CXXFLAGS}\" CPPFLAGS=\"${CPPFLAGS} -DNINJA_NO_EXCEPTIONS -fPIC\" LIBS=\"-lc++\" LDFLAGS=\"-Wl,-no_compact_unwind ${LDFLAGS}\"  # [osx]\n      {% endif %}\n        - make clean\n        - make examples\n\n        - cd examples\n        - echo -e \"\\n# simple_test\"\n        - ./simple_test\n        - echo -e \"\\n# simple_higher_rank_test\"\n        - ./simple_higher_rank_test\n        - echo -e \"\\n# tensor_test\"\n        - ./tensor_test\n        - echo -e \"\\n# tensor_higher_rank_test\"\n        - ./tensor_higher_rank_test\n        - echo -e \"\\n# 4photons\"\n        - ./4photons\n        - echo -e \"\\n# 6photons\"\n        - ./6photons\n        - echo -e \"\\n# ttbarh\"\n        - ./ttbarh\n\n        # Show how to build manually\n        - make clean\n        - echo -e \"\\n# simple_test by hand\"\n\n      {% if (linux and (x86_64 or ppc64le)) %}\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran -lquadmath\n      {% else %}\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran  # [not osx]\n        - $CXX simple_test.cc mynum.cc -o simple_test $CXXFLAGS -I./ -I$PREFIX/include/ninja $LDFLAGS -lninja -lavh_olo -lgfortran  # [osx]\n      {% endif %}\n        - ./simple_test\n\n        - make clean\n        - cd ..\n        - make clean\n\nabout:\n  home: https://github.com/peraro/ninja\n  summary: 'Ninja: Automated Integrand Reduction via Laurent Expansion for One-Loop Amplitudes'\n  description: |\n    Ninja implements the Laurent series expansion method for the computation of\n    one-loop integrals.\n\n    It is based on:\n    * P. Mastrolia, E. Mirabella and T. Peraro, \"_Integrand reduction of\n    one-loop scattering amplitudes through Laurent series expansion_,\"\n    JHEP 1206 (2012) 095\n    [arXiv:1203.0291 [hep-ph]](https://arxiv.org/abs/1203.0291)\n    DOI: [10.1007/JHEP06(2012)095](https://doi.org/10.1007/JHEP06(2012)095)\n    * T. Peraro, \"_Ninja: Automated Integrand Reduction via Laurent Expansion\n    for One-Loop Amplitudes_,\" Comput. Phys. Commun. 185 (2014) 2771\n    [arXiv:1403.1229 [hep-ph]](http://arxiv.org/abs/1403.1229)\n    DOI: [10.1016/j.cpc.2014.06.017](https://doi.org/10.1016/j.cpc.2014.06.017)\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: COPYING\n  dev_url: https://github.com/peraro/ninja\n\nextra:\n  feedstock-name: ninja-hep-ph\n  recipe-maintainers:\n    - matthewfeickert\n",
  "req": {
    "__set__": true,
    "elements": [
      "automake",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "gawk",
      "gnuconfig",
      "grep",
      "libtool",
      "make",
      "oneloop",
      "oneloop-static",
      "pkg-config",
      "sed"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "oneloop",
        "oneloop-static"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "oneloop"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "automake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gawk",
        "gnuconfig",
        "grep",
        "libtool",
        "make",
        "oneloop-static",
        "pkg-config",
        "sed"
      ]
    }
  },
  "url": "https://github.com/peraro/ninja/archive/v1.2.0.tar.gz",
  "version": "1.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ninja-hep-ph.json"
  }
}