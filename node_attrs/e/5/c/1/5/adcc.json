{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": false
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "adcc",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
      "dev_url": "https://github.com/adc-connect/adcc",
      "doc_url": "https://adc-connect.org",
      "home": "https://adc-connect.org",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": "LICENSE",
      "summary": "adcc: Seamlessly connect your program to ADC"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "maxscheurer"
      ]
    },
    "package": {
      "name": "adcc",
      "version": "0.16.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "libtensorlight >=3.0.1",
        "pybind11 >=2.6"
      ],
      "run": [
        "python",
        "setuptools",
        "numpy >=1.14",
        "h5py >=2.9",
        "scipy >=1.2",
        "tqdm >=4.30",
        "opt_einsum >=3.0",
        "packaging >=24.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87",
      "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz"
    },
    "test": {
      "commands": [
        "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
        "test -f $SP_DIR/libadcc$PYLIB_EXT",
        "test -f $SP_DIR/adcc/AdcMethod.py",
        "pytest --pyargs adcc -v"
      ],
      "imports": [
        "adcc"
      ],
      "requires": [
        "pytest",
        "pip",
        "pyscf"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libtensorlight",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "numpy",
        "opt_einsum",
        "packaging",
        "python",
        "scipy",
        "setuptools",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
      "dev_url": "https://github.com/adc-connect/adcc",
      "doc_url": "https://adc-connect.org",
      "home": "https://adc-connect.org",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": "LICENSE",
      "summary": "adcc: Seamlessly connect your program to ADC"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "maxscheurer"
      ]
    },
    "package": {
      "name": "adcc",
      "version": "0.16.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "libtensorlight >=3.0.1",
        "pybind11 >=2.6"
      ],
      "run": [
        "python",
        "setuptools",
        "numpy >=1.14",
        "h5py >=2.9",
        "scipy >=1.2",
        "tqdm >=4.30",
        "opt_einsum >=3.0",
        "packaging >=24.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87",
      "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz"
    },
    "test": {
      "commands": [
        "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
        "test -f $SP_DIR/libadcc$PYLIB_EXT",
        "test -f $SP_DIR/adcc/AdcMethod.py",
        "pytest --pyargs adcc -v"
      ],
      "imports": [
        "adcc"
      ],
      "requires": [
        "pytest",
        "pip",
        "pyscf"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libtensorlight",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "numpy",
        "opt_einsum",
        "packaging",
        "python",
        "scipy",
        "setuptools",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
      "dev_url": "https://github.com/adc-connect/adcc",
      "doc_url": "https://adc-connect.org",
      "home": "https://adc-connect.org",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": "LICENSE",
      "summary": "adcc: Seamlessly connect your program to ADC"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "maxscheurer"
      ]
    },
    "package": {
      "name": "adcc",
      "version": "0.16.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "libtensorlight >=3.0.1",
        "pybind11 >=2.6"
      ],
      "run": [
        "python",
        "setuptools",
        "numpy >=1.14",
        "h5py >=2.9",
        "scipy >=1.2",
        "tqdm >=4.30",
        "opt_einsum >=3.0",
        "packaging >=24.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87",
      "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz"
    },
    "test": {
      "commands": [
        "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
        "test -f $SP_DIR/libadcc$PYLIB_EXT",
        "test -f $SP_DIR/adcc/AdcMethod.py",
        "pytest --pyargs adcc -v"
      ],
      "imports": [
        "adcc"
      ],
      "requires": [
        "pytest",
        "pip",
        "pyscf"
      ]
    }
  },
  "name": "adcc",
  "osx_64_meta_yaml": {
    "about": {
      "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
      "dev_url": "https://github.com/adc-connect/adcc",
      "doc_url": "https://adc-connect.org",
      "home": "https://adc-connect.org",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": "LICENSE",
      "summary": "adcc: Seamlessly connect your program to ADC"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "maxscheurer"
      ]
    },
    "package": {
      "name": "adcc",
      "version": "0.16.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "libtensorlight >=3.0.1",
        "pybind11 >=2.6"
      ],
      "run": [
        "python",
        "setuptools",
        "numpy >=1.14",
        "h5py >=2.9",
        "scipy >=1.2",
        "tqdm >=4.30",
        "opt_einsum >=3.0",
        "packaging >=24.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87",
      "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz"
    },
    "test": {
      "commands": [
        "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
        "test -f $SP_DIR/libadcc$PYLIB_EXT",
        "test -f $SP_DIR/adcc/AdcMethod.py",
        "pytest --pyargs adcc -v"
      ],
      "imports": [
        "adcc"
      ],
      "requires": [
        "pytest",
        "pip",
        "pyscf"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libtensorlight",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "numpy",
        "opt_einsum",
        "packaging",
        "python",
        "scipy",
        "setuptools",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "adcc (**ADC-connect**) is a python-based framework for performing\nthe calculation of molecular spectra and electronically excited states\nbased upon the algebraic-diagrammatic construction (ADC) approach.\nArbitrary host programs may be used to supply a\nself-consistent field (SCF) reference to start off the ADC calculation.\nCurrently adcc comes with ready-to-use interfaces to four programs,\nnamely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\nstarting a calculation from\nstatically computed data can be easily achieved.\n",
      "dev_url": "https://github.com/adc-connect/adcc",
      "doc_url": "https://adc-connect.org",
      "home": "https://adc-connect.org",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": "LICENSE",
      "summary": "adcc: Seamlessly connect your program to ADC"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "maxscheurer"
      ]
    },
    "package": {
      "name": "adcc",
      "version": "0.16.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "libtensorlight >=3.0.1",
        "pybind11 >=2.6"
      ],
      "run": [
        "python",
        "setuptools",
        "numpy >=1.14",
        "h5py >=2.9",
        "scipy >=1.2",
        "tqdm >=4.30",
        "opt_einsum >=3.0",
        "packaging >=24.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87",
      "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz"
    },
    "test": {
      "commands": [
        "export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`",
        "test -f $SP_DIR/libadcc$PYLIB_EXT",
        "test -f $SP_DIR/adcc/AdcMethod.py",
        "pytest --pyargs adcc -v"
      ],
      "imports": [
        "adcc"
      ],
      "requires": [
        "pytest",
        "pip",
        "pyscf"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libtensorlight",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "numpy",
        "opt_einsum",
        "packaging",
        "python",
        "scipy",
        "setuptools",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "adcc"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/adcc.json"
  },
  "raw_meta_yaml": "{% set version = \"0.16.1\" %}\n\npackage:\n  name: adcc\n  version: {{ version }}\n\nsource:\n  url: https://github.com/adc-connect/adcc/archive/v{{ version }}.tar.gz\n  sha256: d944425bf3e44d1bb6057f5aebbc77f81bdf9b08562544f98cc91204f9c05f87\n\nbuild:\n  number: 1\n  skip: true  # [win or ppc64le]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkgconfig\n    - wget\n  host:\n    - python\n    - setuptools\n    - pip\n    - libtensorlight >=3.0.1\n    - pybind11 >=2.6\n  run:\n    - python\n    - setuptools\n    - numpy >=1.14\n    - h5py >=2.9\n    - scipy >=1.2\n    - tqdm >=4.30\n    - opt_einsum >=3.0\n    - packaging >=24.0\n\ntest:\n  requires:\n    - pytest\n    - pip\n    - pyscf\n  imports:\n    - adcc\n  commands:\n    - export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var(\"EXT_SUFFIX\"))'`\n    - test -f $SP_DIR/libadcc$PYLIB_EXT\n    - test -f $SP_DIR/adcc/AdcMethod.py\n    - pytest --pyargs adcc -v\n\nabout:\n  home: https://adc-connect.org\n  dev_url: https://github.com/adc-connect/adcc\n  doc_url: https://adc-connect.org\n  license: GPL-3.0-or-later\n  license_family: GPL3\n  license_file: LICENSE\n  summary: 'adcc: Seamlessly connect your program to ADC'\n  description: |\n    adcc (**ADC-connect**) is a python-based framework for performing\n    the calculation of molecular spectra and electronically excited states\n    based upon the algebraic-diagrammatic construction (ADC) approach.\n    Arbitrary host programs may be used to supply a\n    self-consistent field (SCF) reference to start off the ADC calculation.\n    Currently adcc comes with ready-to-use interfaces to four programs,\n    namely pyscf, psi4, VeloxChem or molsturm. Adding other SCF codes or\n    starting a calculation from\n    statically computed data can be easily achieved.\n\nextra:\n  recipe-maintainers:\n    - maxscheurer\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "h5py",
      "libtensorlight",
      "numpy",
      "opt_einsum",
      "packaging",
      "pip",
      "pkgconfig",
      "pybind11",
      "python",
      "scipy",
      "setuptools",
      "tqdm",
      "wget"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libtensorlight",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "h5py",
        "numpy",
        "opt_einsum",
        "packaging",
        "python",
        "scipy",
        "setuptools",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pkgconfig",
        "wget"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libtensorlight >=3.0.1",
        "pip",
        "pybind11 >=2.6",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py >=2.9",
        "numpy >=1.14",
        "opt_einsum >=3.0",
        "packaging >=24.0",
        "python",
        "scipy >=1.2",
        "setuptools",
        "tqdm >=4.30"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pyscf",
        "pytest"
      ]
    }
  },
  "url": "https://github.com/adc-connect/adcc/archive/v0.16.1.tar.gz",
  "version": "0.16.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/adcc.json"
  }
}