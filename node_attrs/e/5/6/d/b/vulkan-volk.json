{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "87e8fe1e2b1e17f089645f58f5b75e2a26f2f25b",
  "feedstock_hash_ts": 1752505414,
  "feedstock_name": "vulkan-volk",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/volk.h",
        "test -f ${PREFIX}/include/volk.c",
        "test -f ${PREFIX}/lib/libvolk.a"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/volk.h",
        "test -f ${PREFIX}/include/volk.c",
        "test -f ${PREFIX}/lib/libvolk.a"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/volk.h",
        "test -f ${PREFIX}/include/volk.c",
        "test -f ${PREFIX}/lib/libvolk.a"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/volk.h",
        "test -f ${PREFIX}/include/volk.c",
        "test -f ${PREFIX}/lib/libvolk.a",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\volk.lib exit 1"
      ]
    }
  },
  "name": "vulkan-volk",
  "osx_64_meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/volk.h",
        "test -f ${PREFIX}/include/volk.c",
        "test -f ${PREFIX}/lib/libvolk.a"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "vulkan-volk"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/vulkan-volk.json"
  },
  "raw_meta_yaml": "{% set version = \"1.4.304\" %}\n\npackage:\n  # There is already a conda-forge packaged named volk\n  # We use the ubuntu name vulkan-volk to avoid conflict\n  # https://launchpad.net/ubuntu/+source/vulkan-volk\n  name: vulkan-volk\n  version: {{ version }}\n\nsource:\n  url: https://github.com/zeux/volk/archive/refs/tags/{{ version }}.tar.gz\n  sha256: ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f\n\nbuild:\n  number: 1\n  # This is designed to be a header only / statically linked library\n  # run_exports:\n  #   - {{ pin_subpackage('vulkan-volk', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n    - cmake\n    - ninja  # [not unix]\n    - make   # [unix]\n  host:\n    - libvulkan-headers\n    - libvulkan-loader\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/volk.h  # [unix]\n    - test -f ${PREFIX}/include/volk.c  # [unix]\n    - test -f ${PREFIX}/lib/libvolk.a   # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\volk.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/zeux/volk\n  summary: volk is a meta-loader for Vulkan.\n  description: |\n\n    It allows you to dynamically load entrypoints required to use Vulkan\n    without linking to vulkan-1.dll or statically linking Vulkan loader.\n    Additionally, volk simplifies the use of Vulkan extensions by automatically\n    loading all associated entrypoints. Finally, volk enables loading Vulkan\n    entrypoints directly from the driver which can increase performance by\n    skipping loader dispatch overhead.\n\n    volk is written in C89 and supports Windows, Linux, Android and macOS (via\n    MoltenVK).\n\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.md\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    # eunos is interested in aarch64 and pcc64le\n    - eunos-1128\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "libvulkan-headers",
      "libvulkan-loader",
      "make",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz",
  "version": "1.4.304",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/vulkan-volk.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "\nIt allows you to dynamically load entrypoints required to use Vulkan\nwithout linking to vulkan-1.dll or statically linking Vulkan loader.\nAdditionally, volk simplifies the use of Vulkan extensions by automatically\nloading all associated entrypoints. Finally, volk enables loading Vulkan\nentrypoints directly from the driver which can increase performance by\nskipping loader dispatch overhead.\n\nvolk is written in C89 and supports Windows, Linux, Android and macOS (via\nMoltenVK).\n",
      "home": "https://github.com/zeux/volk",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "volk is a meta-loader for Vulkan."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "eunos-1128"
      ]
    },
    "package": {
      "name": "vulkan-volk",
      "version": "1.4.304"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ab3d4a8ccaeb32652259cdd008399504a41792675b0421d90b67729ee274746f",
      "url": "https://github.com/zeux/volk/archive/refs/tags/1.4.304.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\volk.lib exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libvulkan-headers",
        "libvulkan-loader"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}