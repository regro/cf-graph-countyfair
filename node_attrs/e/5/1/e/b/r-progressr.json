{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-progressr",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/HenrikBengtsson/progressr",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A minimal, unifying API for scripts and packages to report progress updates from anywhere including when using parallel processing.  The package is designed such that the developer can to focus on what progress should be reported on without having to worry about how to present it.  The end user has full control of how, where, and when to render these progress updates, e.g. in the terminal using utils::txtProgressBar() or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(), tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(), or on a file system via the size of a file. Anyone can add additional, customized, progression handlers. The 'progressr' package uses R's condition framework for signaling progress updated. Because of this, progress can be reported from almost anywhere in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply() family of functions, 'purrr', 'plyr', and 'foreach'. It will also work with parallel processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(), and 'foreach' with 'doFuture'. The package is compatible with Shiny applications."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-progressr",
      "version": "0.15.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-digest"
      ],
      "run": [
        "r-base",
        "r-digest"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "30d9f77808405fc80150be5816d2d0ffd7aaea46b1a56a3e78a24e9e8350a426",
      "url": [
        "https://cran.r-project.org/src/contrib/progressr_0.15.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/progressr/progressr_0.15.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('progressr')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/HenrikBengtsson/progressr",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A minimal, unifying API for scripts and packages to report progress updates from anywhere including when using parallel processing.  The package is designed such that the developer can to focus on what progress should be reported on without having to worry about how to present it.  The end user has full control of how, where, and when to render these progress updates, e.g. in the terminal using utils::txtProgressBar() or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(), tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(), or on a file system via the size of a file. Anyone can add additional, customized, progression handlers. The 'progressr' package uses R's condition framework for signaling progress updated. Because of this, progress can be reported from almost anywhere in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply() family of functions, 'purrr', 'plyr', and 'foreach'. It will also work with parallel processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(), and 'foreach' with 'doFuture'. The package is compatible with Shiny applications."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-progressr",
      "version": "0.15.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-digest"
      ],
      "run": [
        "r-base",
        "r-digest"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "30d9f77808405fc80150be5816d2d0ffd7aaea46b1a56a3e78a24e9e8350a426",
      "url": [
        "https://cran.r-project.org/src/contrib/progressr_0.15.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/progressr/progressr_0.15.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('progressr')\""
      ]
    }
  },
  "name": "r-progressr",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-progressr"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-progressr.json"
  },
  "raw_meta_yaml": "{% set version = \"0.15.1\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-progressr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/progressr_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/progressr/progressr_{{ version }}.tar.gz\n  sha256: 30d9f77808405fc80150be5816d2d0ffd7aaea46b1a56a3e78a24e9e8350a426\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-digest\n  run:\n    - r-base\n    - r-digest\n\ntest:\n  commands:\n    - $R -e \"library('progressr')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('progressr')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/HenrikBengtsson/progressr\n  license: GPL-3.0-or-later\n  summary: A minimal, unifying API for scripts and packages to report progress updates from anywhere including when using parallel processing.  The package is designed such that the developer can to focus on what progress should be reported on without having to worry about how to present it.  The end user has full control\n    of how, where, and when to render these progress updates, e.g. in the terminal using utils::txtProgressBar() or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(), tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(), or on a file system via the size\n    of a file. Anyone can add additional, customized, progression handlers. The 'progressr' package uses R's condition framework for signaling progress updated. Because of this, progress can be reported from almost anywhere in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply() family of functions,\n    'purrr', 'plyr', and 'foreach'. It will also work with parallel processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(), and 'foreach' with 'doFuture'. The package is compatible with Shiny applications.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: progressr\n# Version: 0.6.0\n# Title: A Inclusive, Unifying API for Progress Updates\n# Description: A minimal, unifying API for scripts and packages to report progress updates from anywhere including when using parallel processing.  The package is designed such that the developer can to focus on what progress should be reported on without having to worry about how to present it.  The end user has full control of how, where, and when to render these progress updates, e.g. in the terminal using utils::txtProgressBar() or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(), tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(), or on a file system via the size of a file. Anyone can add additional, customized, progression handlers. The 'progressr' package uses R's condition framework for signaling progress updated. Because of this, progress can be reported from almost anywhere in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply() family of functions, 'purrr', 'plyr', and 'foreach'. It will also work with parallel processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(), and 'foreach' with 'doFuture'. The package is compatible with Shiny applications.\n# Authors@R: c( person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"), email = \"henrikb@braju.com\"))\n# License: GPL (>= 3)\n# Imports: digest, utils\n# Suggests: graphics, tcltk, beepr, pbmcapply, progress, purrr, foreach, plyr, doFuture, future (>= 1.16.0), future.apply, furrr, shiny, commonmark, base64enc, tools\n# VignetteBuilder: progressr\n# URL: https://github.com/HenrikBengtsson/progressr\n# BugReports: https://github.com/HenrikBengtsson/progressr/issues\n# RoxygenNote: 7.1.0\n# NeedsCompilation: no\n# Packaged: 2020-05-19 02:46:40 UTC; hb\n# Author: Henrik Bengtsson [aut, cre, cph]\n# Maintainer: Henrik Bengtsson <henrikb@braju.com>\n# Repository: CRAN\n# Date/Publication: 2020-05-19 06:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-digest"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-digest"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/progressr_0.15.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/progressr/progressr_0.15.1.tar.gz"
  ],
  "version": "0.15.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-progressr.json"
  }
}