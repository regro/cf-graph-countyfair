{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "skypilot",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/skypilot-org/skypilot",
      "doc_url": "https://docs.skypilot.co/en/latest/",
      "home": "https://github.com/skypilot-org/skypilot",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SkyPilot: An intercloud broker for the clouds"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install ."
    },
    "extra": {
      "feedstock_name": "skypilot",
      "recipe-maintainers": [
        "maresb"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "skypilot",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "python >=3.9",
            "wheel <0.46.0",
            "cachetools",
            "click >=7.0",
            "colorama",
            "cryptography",
            "jinja2 >=3.0",
            "jsonschema",
            "networkx",
            "pandas >=1.3.0",
            "pendulum",
            "prettytable >=2.0.0",
            "python-dotenv",
            "rich",
            "tabulate",
            "typing_extensions",
            "filelock >=3.6.0",
            "packaging",
            "psutil",
            "pulp",
            "pyyaml !=5.4.*,>3.13",
            "requests"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-vsphere",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "pyvmomi ==8.0.1.0.2",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[vsphere] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-scp",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[scp] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-remote",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "grpcio !=1.48.0,<=1.49.1,>=1.32.0",
            "grpcio !=1.48.0,<=1.49.1,>=1.42.0",
            "grpcio !=1.48.0,<=1.51.3,>=1.32.0",
            "grpcio !=1.48.0,<=1.51.3,>=1.42.0",
            "protobuf !=3.19.5,>=3.15.3",
            "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[remote] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-oci",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "oci",
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[oci] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-lambda",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[lambda] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-kubernetes",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "python-kubernetes !=32.0.0,>=20.0.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[kubernetes] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-gcp",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "google-api-python-client >=2.69.0",
            "google-cloud-storage",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[gcp] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-docker",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "docker-py",
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[docker] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-cloudflare",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "urllib3 <2",
            "awscli >=1.27.10",
            "botocore >=1.29.10",
            "boto3 >=1.26.1",
            "colorama <0.4.5",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[cloudflare] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-aws",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "urllib3 <2",
            "awscli >=1.27.10",
            "botocore >=1.29.10",
            "boto3 >=1.26.1",
            "colorama <0.4.5",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[aws] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      }
    ],
    "package": {
      "name": "skypilot",
      "version": "0.8.1"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "setuptools",
        "pip"
      ],
      "run": [
        "python >=3.9",
        "wheel <0.46.0",
        "cachetools",
        "click >=7.0",
        "colorama",
        "cryptography",
        "jinja2 >=3.0",
        "jsonschema",
        "networkx",
        "pandas >=1.3.0",
        "pendulum",
        "prettytable >=2.0.0",
        "python-dotenv",
        "rich",
        "tabulate",
        "typing_extensions",
        "filelock >=3.6.0",
        "packaging",
        "psutil",
        "pulp",
        "pyyaml !=5.4.*,>3.13",
        "requests"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "03f456a48ceed017914b40b683afe4de60bd39653638602337060198079766a6",
      "url": "https://pypi.org/packages/source/s/skypilot/skypilot-0.8.1.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "awscli",
        "boto3",
        "botocore",
        "cachetools",
        "click",
        "colorama",
        "cryptography",
        "docker-py",
        "filelock",
        "google-api-python-client",
        "google-cloud-storage",
        "grpcio",
        "jinja2",
        "jsonschema",
        "networkx",
        "oci",
        "packaging",
        "pandas",
        "pendulum",
        "prettytable",
        "protobuf",
        "psutil",
        "pulp",
        "pydantic",
        "python",
        "python-dotenv",
        "python-kubernetes",
        "pyvmomi",
        "pyyaml",
        "ray-default",
        "requests",
        "rich",
        "skypilot",
        "tabulate",
        "typing_extensions",
        "urllib3",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/skypilot-org/skypilot",
      "doc_url": "https://docs.skypilot.co/en/latest/",
      "home": "https://github.com/skypilot-org/skypilot",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SkyPilot: An intercloud broker for the clouds"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install ."
    },
    "extra": {
      "feedstock_name": "skypilot",
      "recipe-maintainers": [
        "maresb"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "skypilot",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "python >=3.9",
            "wheel <0.46.0",
            "cachetools",
            "click >=7.0",
            "colorama",
            "cryptography",
            "jinja2 >=3.0",
            "jsonschema",
            "networkx",
            "pandas >=1.3.0",
            "pendulum",
            "prettytable >=2.0.0",
            "python-dotenv",
            "rich",
            "tabulate",
            "typing_extensions",
            "filelock >=3.6.0",
            "packaging",
            "psutil",
            "pulp",
            "pyyaml !=5.4.*,>3.13",
            "requests"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-vsphere",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "pyvmomi ==8.0.1.0.2",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[vsphere] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-scp",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[scp] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-remote",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "grpcio !=1.48.0,<=1.49.1,>=1.32.0",
            "grpcio !=1.48.0,<=1.49.1,>=1.42.0",
            "grpcio !=1.48.0,<=1.51.3,>=1.32.0",
            "grpcio !=1.48.0,<=1.51.3,>=1.42.0",
            "protobuf !=3.19.5,>=3.15.3",
            "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[remote] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-oci",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "oci",
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[oci] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-lambda",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[lambda] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-kubernetes",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "python-kubernetes !=32.0.0,>=20.0.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[kubernetes] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-gcp",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "google-api-python-client >=2.69.0",
            "google-cloud-storage",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[gcp] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-docker",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "docker-py",
            "ray-default !=2.6.0,>=2.2.0",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[docker] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-cloudflare",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "urllib3 <2",
            "awscli >=1.27.10",
            "botocore >=1.29.10",
            "boto3 >=1.26.1",
            "colorama <0.4.5",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[cloudflare] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      },
      {
        "build": null,
        "name": "skypilot-aws",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "setuptools",
            "pip"
          ],
          "run": [
            "urllib3 <2",
            "awscli >=1.27.10",
            "botocore >=1.29.10",
            "boto3 >=1.26.1",
            "colorama <0.4.5",
            "skypilot"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "sky"
              ],
              "python_version": "3.9"
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "[ -z \"$(pip install skypilot[aws] | grep -v 'Requirement already satisfied')\" ]"
          }
        ]
      }
    ],
    "package": {
      "name": "skypilot",
      "version": "0.8.1"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "setuptools",
        "pip"
      ],
      "run": [
        "python >=3.9",
        "wheel <0.46.0",
        "cachetools",
        "click >=7.0",
        "colorama",
        "cryptography",
        "jinja2 >=3.0",
        "jsonschema",
        "networkx",
        "pandas >=1.3.0",
        "pendulum",
        "prettytable >=2.0.0",
        "python-dotenv",
        "rich",
        "tabulate",
        "typing_extensions",
        "filelock >=3.6.0",
        "packaging",
        "psutil",
        "pulp",
        "pyyaml !=5.4.*,>3.13",
        "requests"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "03f456a48ceed017914b40b683afe4de60bd39653638602337060198079766a6",
      "url": "https://pypi.org/packages/source/s/skypilot/skypilot-0.8.1.tar.gz"
    }
  },
  "name": "skypilot",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "skypilot",
      "skypilot-aws",
      "skypilot-cloudflare",
      "skypilot-docker",
      "skypilot-gcp",
      "skypilot-kubernetes",
      "skypilot-lambda",
      "skypilot-oci",
      "skypilot-remote",
      "skypilot-scp",
      "skypilot-vsphere"
    ]
  },
  "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', '/tmp/tmp8uogn77h/skypilot-feedstock-main/.ci_support/linux_64_.yaml']\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 101, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 758, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 705, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 232, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', '/tmp/tmp8uogn77h/skypilot-feedstock-main/.ci_support/linux_64_.yaml']\n",
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/skypilot.json"
  },
  "raw_meta_yaml": "context:\n  version: \"0.8.1\"\n  python_min: '3.9'\n\nrecipe:\n  name: skypilot\n  version: ${{ version }}\n\nsource:\n  - url: https://pypi.org/packages/source/s/skypilot/skypilot-${{ version }}.tar.gz\n    sha256: 03f456a48ceed017914b40b683afe4de60bd39653638602337060198079766a6\n\nbuild:\n  script: ${{ PYTHON }} -m pip install .\n  python:\n    entry_points:\n      - sky  =  sky.cli:cli\n  noarch: python\n  number: 0\n\noutputs:\n  - package:\n      name: skypilot\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - python >=${{ python_min }}\n        - wheel <0.46.0\n        - cachetools\n        - click >=7.0\n        - colorama\n        - cryptography\n        - jinja2 >=3.0\n        - jsonschema\n        - networkx\n        - pandas >=1.3.0\n        - pendulum\n        - prettytable >=2.0.0\n        - python-dotenv\n        - rich\n        - tabulate\n        - typing_extensions\n        - filelock >=3.6.0\n        - packaging\n        - psutil\n        - pulp\n        - pyyaml !=5.4.*,>3.13\n        - requests\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          imports:\n            - sky\n          pip_check: true\n\n  - package:\n      name: skypilot-aws\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - urllib3 <2\n        - awscli >=1.27.10\n        - botocore >=1.29.10\n        - boto3 >=1.26.1\n        - colorama <0.4.5\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[aws] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n########\n# Many of the required conda-forge packages currently outdated.\n# Furthermore, azure-cli is not available on conda-forge.\n# Thus it would require some work to do this properly, so we'll\n# skip it for now.\n########\n  # - package:\n  #     name: skypilot-azure\n  #   requirements:\n  #     host:\n  #     - python ${{ python_min }}.*\n  #     - setuptools\n  #     - pip\n  #     run:\n  #     # The following should be azure-cli instead of azure-cli-core,\n  #     # but azure-cli is not available on conda-forge.\n  #     - azure-cli-core >=2.65.0\n  #     - azure-core >=1.31.0\n  #     - azure-identity >=1.19.0\n  #     - azure-mgmt-network >=27.0.0\n  #     - azure-mgmt-compute >=33.0.0\n  #     - azure-storage-blob >=12.23.1\n  #     - msgraph-sdk\n  #     - ray-default !=2.6.0,>=2.2.0\n  #     - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #   - python:\n  #       python_version: ${{ python_min }}\n  #       pip_check: true\n  #       imports:\n  #       - sky\n  #   - files:\n  #     requirements:\n  #       run:\n  #       - python ${{ python_min }}.*\n  #       - pip\n  #     script:\n  #     - \"[ -z \\\"$(pip install skypilot[azure] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-cloudflare\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - urllib3 <2\n        - awscli >=1.27.10\n        - botocore >=1.29.10\n        - boto3 >=1.26.1\n        - colorama <0.4.5\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[cloudflare] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  ##########\n  # Missing cudo-compute on conda-forge\n  ##########\n  # - package:\n  #     name: skypilot-cudo\n  #   requirements:\n  #     host:\n  #     - python ${{ python_min }}.*\n  #     - setuptools\n  #     - pip\n  #     run:\n  #     - cudo-compute >=0.1.10\n  #     - docker\n  #     - ray-default !=2.6.0,>=2.2.0\n  #     - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #   - python:\n  #       python_version: ${{ python_min }}\n  #       pip_check: true\n  #       imports:\n  #       - sky\n  #   - files:\n  #     requirements:\n  #       run:\n  #       - python ${{ python_min }}.*\n  #       - pip\n  #   script:\n  #   - \"[ -z \\\"$(pip install skypilot[cudo] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-docker\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - docker-py\n        - ray-default !=2.6.0,>=2.2.0\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[docker] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  ##########\n  # This extra is vacuous, thus not worthy of adding.\n  ##########\n  # - package:\n  #     name: skypilot-fluidstack\n  #   requirements:\n  #     host:\n  #       - python ${{ python_min }}.*\n  #       - setuptools\n  #       - pip\n  #     run:\n  #       - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #     - python:\n  #         python_version: ${{ python_min }}\n  #         pip_check: true\n  #         imports:\n  #           - sky\n  #     - files:\n  #       requirements:\n  #         run:\n  #           - python ${{ python_min }}.*\n  #           - pip\n  #       script:\n  #       - \"[ -z \\\"$(pip install skypilot[fluidstack] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-gcp\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - google-api-python-client >=2.69.0\n        - google-cloud-storage\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[gcp] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n###########\n# Missing ibm-vpc and ibm-cos-sdk on conda-forge\n###########\n  # - package:\n  #     name: skypilot-ibm\n  #   requirements:\n  #     host:\n  #     - python ${{ python_min }}.*\n  #     - setuptools\n  #     - pip\n  #     run:\n  #     - ibm-cloud-sdk-core\n  #     - ibm-vpc\n  #     - ibm-platform-services\n  #     - ibm-cos-sdk\n  #     - ray-default !=2.6.0,>=2.2.0\n  #     - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #   - python:\n  #       python_version: ${{ python_min }}\n  #       pip_check: true\n  #       imports:\n  #       - sky\n  #   - files:\n  #     requirements:\n  #       run:\n  #       - python ${{ python_min }}.*\n  #       - pip\n  #   script:\n  #   - \"[ -z \\\"$(pip install skypilot[ibm] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-kubernetes\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - python-kubernetes !=32.0.0,>=20.0.0\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[kubernetes] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-lambda\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - ray-default !=2.6.0,>=2.2.0\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[lambda] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-oci\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - oci\n        - ray-default !=2.6.0,>=2.2.0\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[oci] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  ##########\n  # This extra is vacuous, thus not worthy of adding.\n  ##########\n  # - package:\n  #     name: skypilot-paperspace\n  #   requirements:\n  #     host:\n  #       - python ${{ python_min }}.*\n  #       - setuptools\n  #       - pip\n  #     run:\n  #       - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #     - python:\n  #         python_version: ${{ python_min }}\n  #         pip_check: true\n  #         imports:\n  #           - sky\n  #     - files:\n  #       requirements:\n  #         run:\n  #           - python ${{ python_min }}.*\n  #           - pip\n  #       script:\n  #       - \"[ -z \\\"$(pip install skypilot[paperspace] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-remote\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n      # Take the intersection of all grpcio requirements to keep this noarch\n      # py<3.10, osx\n        - grpcio !=1.48.0,<=1.49.1,>=1.32.0\n      # py>=3.10, osx\n        - grpcio !=1.48.0,<=1.49.1,>=1.42.0\n      # py<3.10, not osx\n        - grpcio !=1.48.0,<=1.51.3,>=1.32.0\n      # py>=3.10, not osx\n        - grpcio !=1.48.0,<=1.51.3,>=1.42.0\n        - protobuf !=3.19.5,>=3.15.3\n        - pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[remote] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  #####\n  # There is not yet any runpod package on conda-forge\n  #####\n  # - package:\n  #     name: skypilot-runpod\n  #   requirements:\n  #     host:\n  #     - python ${{ python_min }}.*\n  #     - setuptools\n  #     - pip\n  #     run:\n  #     - runpod >=1.5.1\n  #     - ${{ pin_subpackage('skypilot', exact=True) }}\n  #   tests:\n  #   - python:\n  #       python_version: ${{ python_min }}\n  #       pip_check: true\n  #       imports:\n  #       - sky\n  #   - files:\n  #     requirements:\n  #       run:\n  #       - python ${{ python_min }}.*\n  #       - pip\n  #   script:\n  #   - \"[ -z \\\"$(pip install skypilot[runpod] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-scp\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - ray-default !=2.6.0,>=2.2.0\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[scp] | grep -v 'Requirement already satisfied')\\\" ]\"\n\n  - package:\n      name: skypilot-vsphere\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - setuptools\n        - pip\n      run:\n        - pyvmomi ==8.0.1.0.2\n        - ${{ pin_subpackage('skypilot', exact=True) }}\n    tests:\n      - python:\n          python_version: ${{ python_min }}\n          pip_check: true\n          imports:\n            - sky\n      - files:\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - \"[ -z \\\"$(pip install skypilot[vsphere] | grep -v 'Requirement already satisfied')\\\" ]\"\n\nabout:\n  summary: \"SkyPilot: An intercloud broker for the clouds\"\n  homepage: https://github.com/skypilot-org/skypilot\n  repository: https://github.com/skypilot-org/skypilot\n  documentation: https://docs.skypilot.co/en/latest/\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  feedstock_name: skypilot\n  recipe-maintainers:\n    - maresb\n",
  "req": {
    "__set__": true,
    "elements": [
      "awscli",
      "boto3",
      "botocore",
      "cachetools",
      "click",
      "colorama",
      "cryptography",
      "docker-py",
      "filelock",
      "google-api-python-client",
      "google-cloud-storage",
      "grpcio",
      "jinja2",
      "jsonschema",
      "networkx",
      "oci",
      "packaging",
      "pandas",
      "pendulum",
      "pip",
      "prettytable",
      "protobuf",
      "psutil",
      "pulp",
      "pydantic",
      "python",
      "python-dotenv",
      "python-kubernetes",
      "pyvmomi",
      "pyyaml",
      "ray-default",
      "requests",
      "rich",
      "setuptools",
      "skypilot",
      "tabulate",
      "typing_extensions",
      "urllib3",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "awscli",
        "boto3",
        "botocore",
        "cachetools",
        "click",
        "colorama",
        "cryptography",
        "docker-py",
        "filelock",
        "google-api-python-client",
        "google-cloud-storage",
        "grpcio",
        "jinja2",
        "jsonschema",
        "networkx",
        "oci",
        "packaging",
        "pandas",
        "pendulum",
        "prettytable",
        "protobuf",
        "psutil",
        "pulp",
        "pydantic",
        "python",
        "python-dotenv",
        "python-kubernetes",
        "pyvmomi",
        "pyyaml",
        "ray-default",
        "requests",
        "rich",
        "skypilot",
        "tabulate",
        "typing_extensions",
        "urllib3",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9.*",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "awscli >=1.27.10",
        "boto3 >=1.26.1",
        "botocore >=1.29.10",
        "cachetools",
        "click >=7.0",
        "colorama",
        "colorama <0.4.5",
        "cryptography",
        "docker-py",
        "filelock >=3.6.0",
        "google-api-python-client >=2.69.0",
        "google-cloud-storage",
        "grpcio !=1.48.0,<=1.49.1,>=1.32.0",
        "grpcio !=1.48.0,<=1.49.1,>=1.42.0",
        "grpcio !=1.48.0,<=1.51.3,>=1.32.0",
        "grpcio !=1.48.0,<=1.51.3,>=1.42.0",
        "jinja2 >=3.0",
        "jsonschema",
        "networkx",
        "oci",
        "packaging",
        "pandas >=1.3.0",
        "pendulum",
        "prettytable >=2.0.0",
        "protobuf !=3.19.5,>=3.15.3",
        "psutil",
        "pulp",
        "pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3",
        "python >=3.9",
        "python-dotenv",
        "python-kubernetes !=32.0.0,>=20.0.0",
        "pyvmomi ==8.0.1.0.2",
        "pyyaml !=5.4.*,>3.13",
        "ray-default !=2.6.0,>=2.2.0",
        "requests",
        "rich",
        "skypilot",
        "tabulate",
        "typing_extensions",
        "urllib3 <2",
        "wheel <0.46.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9.*"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/skypilot/skypilot-0.8.1.tar.gz",
  "version": "0.8.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/skypilot.json"
  }
}