{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "2cb34bedf841211b0fc42522195be3728b3d6f17",
  "feedstock_hash_ts": 1734611627,
  "feedstock_name": "mpi",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/mpi-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "RECIPE_DIR/LICENSE.txt",
      "summary": "Metapackage to select the MPI variant. Use conda's pinning mechanism in your environment to control which variant you want."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "string": "psmpi"
    },
    "extra": {
      "recipe-maintainers": [
        "minrk",
        "ocefpaf",
        "leofang"
      ]
    },
    "package": {
      "name": "mpi",
      "version": "1.0.1"
    },
    "requirements": {},
    "schema_version": 0,
    "test": {
      "commands": [
        "echo \"I'm a metapackage\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/mpi-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "RECIPE_DIR/LICENSE.txt",
      "summary": "Metapackage to select the MPI variant. Use conda's pinning mechanism in your environment to control which variant you want."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "string": "psmpi"
    },
    "extra": {
      "recipe-maintainers": [
        "minrk",
        "ocefpaf",
        "leofang"
      ]
    },
    "package": {
      "name": "mpi",
      "version": "1.0.1"
    },
    "requirements": {},
    "schema_version": 0,
    "test": {
      "commands": [
        "echo \"I'm a metapackage\""
      ]
    }
  },
  "name": "mpi",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mpi"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mpi.json"
  },
  "raw_meta_yaml": "# Based on blas metapackage: https://github.com/conda-forge/blas-feedstock\n# Some useful notes can be found at https://conda-forge.hackpad.com/BLAS-Numpy-Friends-86De62hoNdT\n# See discussion: https://github.com/conda-forge/staged-recipes/pull/1501\n\n# The version should be in the form X.Y[.z], where X denotes major infrastructural change to how mpi is managed,\n# and Y denoting mpi priority. Having MPI priority causes `conda upgrade --all` to switch to preferred provider,\n# so currently express no priority.\n# .z can be incremented for fully compatible changes\n{% set Y = 0 %}\npackage:\n  name: mpi\n  version: 1.{{ Y }}.1\n\nbuild:\n  # We mustn't use the build number in the mpi package - because we are defining the string,\n  # manually we would not be producing unique filenames.\n  number: 0\n  string: {{ mpi }}\n  noarch: generic\n\nrequirements: {}\n  # None, mpi providers should depend on me\n\ntest:\n  commands:\n    - echo \"I'm a metapackage\"\n\nabout:\n  home: https://github.com/conda-forge/mpi-feedstock\n  license: BSD-3-Clause\n  license_file: {{ RECIPE_DIR if RECIPE_DIR is defined else '' }}/LICENSE.txt\n  summary: Metapackage to select the MPI variant. Use conda's pinning mechanism in your environment to control which variant you want.\n\nextra:\n  recipe-maintainers:\n    - minrk\n    - ocefpaf\n    - leofang\n",
  "req": {
    "__set__": true,
    "elements": []
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "time": 1568135290.4560113,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "version": "1.0.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mpi.json"
  }
}