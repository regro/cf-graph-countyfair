{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "90ba5ba8d896f8f7c87582b039206916f1c148a8",
  "feedstock_hash_ts": 1730880874,
  "feedstock_name": "mockextras",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The mockextras library is designed to be used with the\nunittest.mock library in python 3 or the mock backport of this\n(http://www.voidspace.org.uk/python/mock/) in python 2. The mockextras\nlibrary adds a number of features that are found in other mocking\nlibraries namely:\n   * a fluent API for the configuration of stubs\n   * stubs\n   * matchers\n",
      "dev_url": "http://github.com/manahl/mockextras",
      "doc_url": "http://mockextras.readthedocs.org/",
      "home": "https://github.com/manahl/mockextras",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extensions to the mock library"
    },
    "build": {
      "number": "6",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "trendelkampschroer"
      ]
    },
    "package": {
      "name": "mockextras",
      "version": "1.0.2"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "pytest",
        "coveralls",
        "pytest-cov",
        "coverage"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "09b77b91a9bffd475eaaeb631628bdfd9a7e3eed31d235290614bb38c7979692",
      "url": "https://pypi.io/packages/source/m/mockextras/mockextras-1.0.2.tar.gz"
    },
    "test": {
      "imports": [
        "mockextras"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coverage",
        "coveralls",
        "pytest",
        "pytest-cov",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The mockextras library is designed to be used with the\nunittest.mock library in python 3 or the mock backport of this\n(http://www.voidspace.org.uk/python/mock/) in python 2. The mockextras\nlibrary adds a number of features that are found in other mocking\nlibraries namely:\n   * a fluent API for the configuration of stubs\n   * stubs\n   * matchers\n",
      "dev_url": "http://github.com/manahl/mockextras",
      "doc_url": "http://mockextras.readthedocs.org/",
      "home": "https://github.com/manahl/mockextras",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extensions to the mock library"
    },
    "build": {
      "number": "6",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "trendelkampschroer"
      ]
    },
    "package": {
      "name": "mockextras",
      "version": "1.0.2"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "pytest",
        "coveralls",
        "pytest-cov",
        "coverage"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "09b77b91a9bffd475eaaeb631628bdfd9a7e3eed31d235290614bb38c7979692",
      "url": "https://pypi.io/packages/source/m/mockextras/mockextras-1.0.2.tar.gz"
    },
    "test": {
      "imports": [
        "mockextras"
      ]
    }
  },
  "name": "mockextras",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The mockextras library is designed to be used with the\nunittest.mock library in python 3 or the mock backport of this\n(http://www.voidspace.org.uk/python/mock/) in python 2. The mockextras\nlibrary adds a number of features that are found in other mocking\nlibraries namely:\n   * a fluent API for the configuration of stubs\n   * stubs\n   * matchers\n",
      "dev_url": "http://github.com/manahl/mockextras",
      "doc_url": "http://mockextras.readthedocs.org/",
      "home": "https://github.com/manahl/mockextras",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extensions to the mock library"
    },
    "build": {
      "number": "6",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "trendelkampschroer"
      ]
    },
    "package": {
      "name": "mockextras",
      "version": "1.0.2"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "pytest",
        "coveralls",
        "pytest-cov",
        "coverage"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "09b77b91a9bffd475eaaeb631628bdfd9a7e3eed31d235290614bb38c7979692",
      "url": "https://pypi.io/packages/source/m/mockextras/mockextras-1.0.2.tar.gz"
    },
    "test": {
      "imports": [
        "mockextras"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coverage",
        "coveralls",
        "pytest",
        "pytest-cov",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mockextras"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mockextras.json"
  },
  "raw_meta_yaml": "{% set name = \"mockextras\" %}\n{% set version = \"1.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 09b77b91a9bffd475eaaeb631628bdfd9a7e3eed31d235290614bb38c7979692\n\nbuild:\n  number: 6\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - pytest\n    - coveralls\n    - pytest-cov\n    - coverage\n    - mock >=0.8.0  # [py<33]\n\ntest:\n  imports:\n    - mockextras\n\nabout:\n  home: https://github.com/manahl/mockextras\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: Extensions to the mock library\n  description: |\n    The mockextras library is designed to be used with the\n    unittest.mock library in python 3 or the mock backport of this\n    (http://www.voidspace.org.uk/python/mock/) in python 2. The mockextras\n    library adds a number of features that are found in other mocking\n    libraries namely: \n       * a fluent API for the configuration of stubs\n       * stubs\n       * matchers\n  doc_url: http://mockextras.readthedocs.org/\n  dev_url: http://github.com/manahl/mockextras\n\nextra:\n  recipe-maintainers:\n    - trendelkampschroer\n",
  "req": {
    "__set__": true,
    "elements": [
      "coverage",
      "coveralls",
      "pip",
      "pytest",
      "pytest-cov",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coverage",
        "coveralls",
        "pytest",
        "pytest-cov",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coverage",
        "coveralls",
        "pytest",
        "pytest-cov",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/m/mockextras/mockextras-1.0.2.tar.gz",
  "version": "1.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mockextras.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The mockextras library is designed to be used with the\nunittest.mock library in python 3 or the mock backport of this\n(http://www.voidspace.org.uk/python/mock/) in python 2. The mockextras\nlibrary adds a number of features that are found in other mocking\nlibraries namely:\n   * a fluent API for the configuration of stubs\n   * stubs\n   * matchers\n",
      "dev_url": "http://github.com/manahl/mockextras",
      "doc_url": "http://mockextras.readthedocs.org/",
      "home": "https://github.com/manahl/mockextras",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extensions to the mock library"
    },
    "build": {
      "number": "6",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "trendelkampschroer"
      ]
    },
    "package": {
      "name": "mockextras",
      "version": "1.0.2"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "pytest",
        "coveralls",
        "pytest-cov",
        "coverage"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "09b77b91a9bffd475eaaeb631628bdfd9a7e3eed31d235290614bb38c7979692",
      "url": "https://pypi.io/packages/source/m/mockextras/mockextras-1.0.2.tar.gz"
    },
    "test": {
      "imports": [
        "mockextras"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coverage",
        "coveralls",
        "pytest",
        "pytest-cov",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}