{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "e5e08db86309b41cbe9df9fd8279c4f00b070082",
  "feedstock_hash_ts": 1738074798,
  "feedstock_name": "arguably",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "arguably turns functions and docstrings into command line interfaces (CLIs).\narguably has a tiny API and is extremely easy to integrate.\nYou can also use it directly through python3 -m arguably your_script.py, more on that here.\n\nTo use arguably in a script, decorate any functions that should appear on the command line with @arguably.command, then call arguably.run().\nIf multiple functions are decorated, they'll all appear as subcommands.\nYou can even have multiple levels of subcommands: def s3__ls() becomes s3 ls.",
      "dev_url": "https://github.com/treykeown/arguably",
      "home": "https://treykeown.github.io/arguably/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "The best Python CLI library, arguably."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "claudiushaag"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "arguably",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "pip",
            "poetry-core"
          ],
          "run": [
            "python >=3.9",
            "docstring_parser >=0.16.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "arguably"
              ],
              "python_version": "3.9.*"
            }
          }
        ],
        "version": "1.3.0"
      }
    ],
    "package": {
      "name": "arguably",
      "version": "1.3.0"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "pip",
        "poetry-core"
      ],
      "run": [
        "python >=3.9",
        "docstring_parser >=0.16.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9261e49d0281600e9eac3fb2e31d2022dc0d002b6370461d787b20690eb2a98d",
      "url": "https://pypi.org/packages/source/a/arguably/arguably-1.3.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docstring_parser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "arguably turns functions and docstrings into command line interfaces (CLIs).\narguably has a tiny API and is extremely easy to integrate.\nYou can also use it directly through python3 -m arguably your_script.py, more on that here.\n\nTo use arguably in a script, decorate any functions that should appear on the command line with @arguably.command, then call arguably.run().\nIf multiple functions are decorated, they'll all appear as subcommands.\nYou can even have multiple levels of subcommands: def s3__ls() becomes s3 ls.",
      "dev_url": "https://github.com/treykeown/arguably",
      "home": "https://treykeown.github.io/arguably/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "The best Python CLI library, arguably."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "claudiushaag"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "arguably",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "pip",
            "poetry-core"
          ],
          "run": [
            "python >=3.9",
            "docstring_parser >=0.16.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "arguably"
              ],
              "python_version": "3.9.*"
            }
          }
        ],
        "version": "1.3.0"
      }
    ],
    "package": {
      "name": "arguably",
      "version": "1.3.0"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "pip",
        "poetry-core"
      ],
      "run": [
        "python >=3.9",
        "docstring_parser >=0.16.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9261e49d0281600e9eac3fb2e31d2022dc0d002b6370461d787b20690eb2a98d",
      "url": "https://pypi.org/packages/source/a/arguably/arguably-1.3.0.tar.gz"
    }
  },
  "name": "arguably",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "arguably"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/arguably.json"
  },
  "raw_meta_yaml": "context:\n  name: arguably\n  version: \"1.3.0\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/a/arguably/arguably-${{ version }}.tar.gz\n  sha256: 9261e49d0281600e9eac3fb2e31d2022dc0d002b6370461d787b20690eb2a98d\n\nbuild:\n  noarch: python\n  script: python -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python ${{ python_min }}.*\n    - pip\n    - poetry-core\n  run:\n    - python >=${{ python_min }}\n    - docstring_parser >=0.16.0\n\ntests:\n  - python:\n      imports:\n      - arguably\n      pip_check: true\n      python_version: ${{ python_min }}.*\n\nabout:\n  homepage: https://treykeown.github.io/arguably/\n  summary: 'The best Python CLI library, arguably.'\n  description: |\n    arguably turns functions and docstrings into command line interfaces (CLIs).\n    arguably has a tiny API and is extremely easy to integrate.\n    You can also use it directly through python3 -m arguably your_script.py, more on that here.\n\n    To use arguably in a script, decorate any functions that should appear on the command line with @arguably.command, then call arguably.run().\n    If multiple functions are decorated, they'll all appear as subcommands.\n    You can even have multiple levels of subcommands: def s3__ls() becomes s3 ls.\n  license: MIT\n  license_file: LICENSE.txt\n  repository: https://github.com/treykeown/arguably\n\nextra:\n  recipe-maintainers:\n    - claudiushaag\n",
  "req": {
    "__set__": true,
    "elements": [
      "docstring_parser",
      "pip",
      "poetry-core",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docstring_parser",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python 3.9.*"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docstring_parser >=0.16.0",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/a/arguably/arguably-1.3.0.tar.gz",
  "version": "1.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/arguably.json"
  }
}