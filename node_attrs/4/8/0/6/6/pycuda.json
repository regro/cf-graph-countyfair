{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_hash": "675d92ea7941135fde624cf839ac42780141e490",
  "feedstock_hash_ts": 1761576367,
  "feedstock_name": "pycuda",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
      "dev_url": "http://github.com/inducer/pycuda",
      "doc_url": "https://documen.tician.de/pycuda",
      "home": "http://pypi.python.org/pypi/pycuda",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python wrapper for CUDA"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer"
      ]
    },
    "package": {
      "name": "pycuda",
      "version": "2025.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "libboost-python-devel",
        "libboost-devel",
        "numpy",
        "cuda-profiler-api",
        "libcurand-dev"
      ],
      "run": [
        "python",
        "numpy",
        "pytools >=2011.2",
        "appdirs >=1.4.0",
        "mako"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dd82911d72d8e03c63128ae44e99cfb7b4689094aba6cc5193d8e944717aafa",
      "url": "https://pypi.org/packages/source/p/pycuda/pycuda-2025.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "export cuda_compiler_version=12.9",
        "python pkg_test.py"
      ],
      "files": [
        "pkg_test.py"
      ],
      "requires": [
        "cuda-version 12.9",
        "python",
        "pytest >=2"
      ],
      "source_files": [
        "test"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-profiler-api",
        "cuda-version",
        "libboost-devel",
        "libboost-python-devel",
        "libcurand-dev",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "appdirs",
        "mako",
        "numpy",
        "python",
        "pytools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pytest",
        "python"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
      "dev_url": "http://github.com/inducer/pycuda",
      "doc_url": "https://documen.tician.de/pycuda",
      "home": "http://pypi.python.org/pypi/pycuda",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python wrapper for CUDA"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer"
      ]
    },
    "package": {
      "name": "pycuda",
      "version": "2025.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "libboost-python-devel",
        "libboost-devel",
        "numpy",
        "cuda-profiler-api",
        "libcurand-dev"
      ],
      "run": [
        "python",
        "numpy",
        "pytools >=2011.2",
        "appdirs >=1.4.0",
        "mako"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dd82911d72d8e03c63128ae44e99cfb7b4689094aba6cc5193d8e944717aafa",
      "url": "https://pypi.org/packages/source/p/pycuda/pycuda-2025.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "export cuda_compiler_version=12.9",
        "python pkg_test.py"
      ],
      "files": [
        "pkg_test.py"
      ],
      "requires": [
        "cuda-version 12.9",
        "python",
        "pytest >=2"
      ],
      "source_files": [
        "test"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-profiler-api",
        "cuda-version",
        "libboost-devel",
        "libboost-python-devel",
        "libcurand-dev",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "appdirs",
        "mako",
        "numpy",
        "python",
        "pytools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pytest",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
      "dev_url": "http://github.com/inducer/pycuda",
      "doc_url": "https://documen.tician.de/pycuda",
      "home": "http://pypi.python.org/pypi/pycuda",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python wrapper for CUDA"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer"
      ]
    },
    "package": {
      "name": "pycuda",
      "version": "2025.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "libboost-python-devel",
        "libboost-devel",
        "numpy",
        "cuda-profiler-api",
        "libcurand-dev"
      ],
      "run": [
        "python",
        "numpy",
        "pytools >=2011.2",
        "appdirs >=1.4.0",
        "mako"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dd82911d72d8e03c63128ae44e99cfb7b4689094aba6cc5193d8e944717aafa",
      "url": "https://pypi.org/packages/source/p/pycuda/pycuda-2025.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "export cuda_compiler_version=12.9",
        "python pkg_test.py",
        "set cuda_compiler_version=12.9"
      ],
      "files": [
        "pkg_test.py"
      ],
      "requires": [
        "cuda-version 12.9",
        "python",
        "pytest >=2"
      ],
      "source_files": [
        "test"
      ]
    }
  },
  "name": "pycuda",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pycuda"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pycuda.json"
  },
  "raw_meta_yaml": "{% set name = \"pycuda\" %}\n{% set version = \"2025.1.2\" %}\n{% set sha256 = \"0dd82911d72d8e03c63128ae44e99cfb7b4689094aba6cc5193d8e944717aafa\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  # symlink not implemented in pypy\n  skip: true  # [win and python_impl == \"pypy\"]\n  skip: true  # [cuda_compiler_version in (undefined, \"None\")]\n  # CUDA 11.8 aarch needs newer glibc, but we don't have an image for that\n  skip: true  # [aarch64 and cuda_compiler_version == \"11.8\"]\n  missing_dso_whitelist:\n    - '*/libcuda.*'\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n\n  host:\n    - cuda-version {{ cuda_compiler_version }}\n    - python\n    - pip\n    - setuptools\n    - libboost-python-devel\n    - libboost-devel\n    - numpy\n    - cuda-profiler-api  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcurand-dev      # [(cuda_compiler_version or \"\").startswith(\"12\")]\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pytools >=2011.2\n    - appdirs >=1.4.0\n    - mako\n\ntest:\n  requires:\n    - cuda-version {{ cuda_compiler_version }}\n    - python\n    - pytest >=2\n  source_files:\n    - test\n  files:\n    - pkg_test.py\n  commands:\n    - export cuda_compiler_version={{ cuda_compiler_version }}  # [unix]\n    - set cuda_compiler_version={{ cuda_compiler_version }}     # [win]\n    - python pkg_test.py\n\nabout:\n  home: http://pypi.python.org/pypi/pycuda\n  doc_url: https://documen.tician.de/pycuda\n  dev_url: http://github.com/inducer/pycuda\n  license: MIT\n  license_file: LICENSE\n  summary: Python wrapper for CUDA\n  description: |\n    PyCUDA lets you access GPUs from Python, through the CUDA parallel\n    compute interface.\n      \nextra:\n  recipe-maintainers:\n    - inducer\n",
  "req": {
    "__set__": true,
    "elements": [
      "appdirs",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-profiler-api",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "libboost-devel",
      "libboost-python-devel",
      "libcurand-dev",
      "mako",
      "numpy",
      "pip",
      "python",
      "pytools",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libboost-devel",
        "libboost-python-devel",
        "libcurand-dev",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "appdirs",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "mako",
        "numpy",
        "python",
        "pytools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pytest",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-profiler-api",
        "cuda-version 12.9",
        "libboost-devel",
        "libboost-python-devel",
        "libcurand-dev",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "appdirs >=1.4.0",
        "mako",
        "numpy",
        "python",
        "pytools >=2011.2"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version 12.9",
        "pytest >=2",
        "python"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pycuda/pycuda-2025.1.2.tar.gz",
  "version": "2025.1.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pycuda.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "PyCUDA lets you access GPUs from Python, through the CUDA parallel\ncompute interface.\n",
      "dev_url": "http://github.com/inducer/pycuda",
      "doc_url": "https://documen.tician.de/pycuda",
      "home": "http://pypi.python.org/pypi/pycuda",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python wrapper for CUDA"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer"
      ]
    },
    "package": {
      "name": "pycuda",
      "version": "2025.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "libboost-python-devel",
        "libboost-devel",
        "numpy",
        "cuda-profiler-api",
        "libcurand-dev"
      ],
      "run": [
        "python",
        "numpy",
        "pytools >=2011.2",
        "appdirs >=1.4.0",
        "mako"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dd82911d72d8e03c63128ae44e99cfb7b4689094aba6cc5193d8e944717aafa",
      "url": "https://pypi.org/packages/source/p/pycuda/pycuda-2025.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "set cuda_compiler_version=12.9",
        "python pkg_test.py"
      ],
      "files": [
        "pkg_test.py"
      ],
      "requires": [
        "cuda-version 12.9",
        "python",
        "pytest >=2"
      ],
      "source_files": [
        "test"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-profiler-api",
        "cuda-version",
        "libboost-devel",
        "libboost-python-devel",
        "libcurand-dev",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "appdirs",
        "mako",
        "numpy",
        "python",
        "pytools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pytest",
        "python"
      ]
    }
  }
}