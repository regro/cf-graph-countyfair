{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "364215dd3fd42a0e0e2198024f4d34cd3871492f",
  "feedstock_hash_ts": 1730856852,
  "feedstock_name": "libcorrect",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/correct-sse.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/correct-sse.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\correct.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\fec.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\correct.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\correct.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\correct_static.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\fec.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\fec.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\fec_static.lib exit 1"
      ]
    }
  },
  "name": "libcorrect",
  "osx_64_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/correct-sse.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/correct.h",
        "test -f $PREFIX/include/fec.h",
        "test -f $PREFIX/lib/libcorrect${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libcorrect.a",
        "test -f $PREFIX/lib/libfec${SHLIB_EXT}",
        "test ! -f $PREFIX/lib/libfec.a"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libcorrect"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/libcorrect.json"
  },
  "raw_meta_yaml": "{% set version = \"0.0.0\" %}\n\npackage:\n  name: libcorrect\n  version: {{ version }}\n\nsource:\n  url: https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz\n  sha256: 5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760\n  patches:\n    - 0001-De-conflict-library-names-and-fix-paths-when-compile.patch\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('libcorrect', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake\n    - ninja\n\ntest:\n  commands:\n    # check that headers get installed\n    - test -f $PREFIX/include/correct.h  # [unix]\n    - test -f $PREFIX/include/correct-sse.h   # [unix and x86_64]\n    - test -f $PREFIX/include/fec.h  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\correct.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\fec.h exit 1  # [win]\n\n    # check that libraries get installed\n    - test -f $PREFIX/lib/libcorrect${SHLIB_EXT}  # [unix]\n    - test ! -f $PREFIX/lib/libcorrect.a  # [unix]\n    - test -f $PREFIX/lib/libfec${SHLIB_EXT}  # [unix]\n    - test ! -f $PREFIX/lib/libfec.a  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\correct.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\correct.lib exit 1  # [win]\n    - if exist %PREFIX%\\\\Library\\\\lib\\\\correct_static.lib exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\fec.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\fec.lib exit 1  # [win]\n    - if exist %PREFIX%\\\\Library\\\\lib\\\\fec_static.lib exit 1  # [win]\n\nabout:\n  home: https://github.com/ryanvolz/libcorrect\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: 'A library for Forward Error Correction'\n  description: |\n    libcorrect is a library for Forward Error Correction. By using libcorrect,\n    you can encode extra redundancy into a packet of data and then send it\n    across a lossy channel. When the packet is received, it can be decoded to\n    recover the original, pre-encoded data.\n\n    libcorrect accomplishes this task with two algorithms, Convolutional codes\n    and Reed-Solomon. Convolutional codes are robust to a constant background\n    noise, while Reed-Solomon error correction is effective at dealing with\n    noise that occurs in bursts. These algorithms have played an important role\n    in telecommunications. libcorrect uses a Viterbi algorithm decoder to\n    decode convolutional codes.\n\n    libcorrect should be a drop-in, BSD-licensed substitute for libfec, which\n    offers similar functionality under the LGPL-license.\n  dev_url: https://github.com/ryanvolz/libcorrect\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cmake",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz",
  "version": "0.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/libcorrect.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "libcorrect is a library for Forward Error Correction. By using libcorrect,\nyou can encode extra redundancy into a packet of data and then send it\nacross a lossy channel. When the packet is received, it can be decoded to\nrecover the original, pre-encoded data.\n\nlibcorrect accomplishes this task with two algorithms, Convolutional codes\nand Reed-Solomon. Convolutional codes are robust to a constant background\nnoise, while Reed-Solomon error correction is effective at dealing with\nnoise that occurs in bursts. These algorithms have played an important role\nin telecommunications. libcorrect uses a Viterbi algorithm decoder to\ndecode convolutional codes.\n\nlibcorrect should be a drop-in, BSD-licensed substitute for libfec, which\noffers similar functionality under the LGPL-license.\n",
      "dev_url": "https://github.com/ryanvolz/libcorrect",
      "home": "https://github.com/ryanvolz/libcorrect",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "A library for Forward Error Correction"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libcorrect"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "libcorrect",
      "version": "0.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-De-conflict-library-names-and-fix-paths-when-compile.patch"
      ],
      "sha256": "5a4305aabe6c7d5b58f6677c41c54ad5e8d9003f7a5998f7344d93534e4c5760",
      "url": "https://github.com/quiet/libcorrect/archive/f5a28c74fba7a99736fe49d3a5243eca29517ae9.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\include\\\\correct.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\fec.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\correct.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\correct.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\correct_static.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\fec.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\fec.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\fec_static.lib exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}