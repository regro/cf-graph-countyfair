{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "1e24bba0a5fc7c08b1b51976d642a27ce5b3f79a",
  "feedstock_hash_ts": 1757985722,
  "feedstock_name": "r-bigsparser",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\"",
        "\"%R%\" -e \"library('bigsparser')\""
      ]
    }
  },
  "name": "r-bigsparser",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('bigsparser')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-bigsparser"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-bigsparser.json"
  },
  "raw_meta_yaml": "{% set version = \"0.7.3\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-bigsparser\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/bigsparser_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/bigsparser/bigsparser_{{ version }}.tar.gz\n  sha256: 9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c\n\nbuild:\n  number: 2\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-matrix                     # [build_platform != target_platform]\n    - r-rcpp                       # [build_platform != target_platform]\n    - r-rcppeigen                  # [build_platform != target_platform]\n    - r-bigassertr                 # [build_platform != target_platform]\n    - r-rmio >=0.4                 # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-matrix\n    - r-rcpp\n    - r-rcppeigen\n    - r-bigassertr\n    - r-rmio >=0.4\n  run:\n    - r-base\n    - r-matrix\n    - r-rcpp\n    - r-rcppeigen\n    - r-bigassertr\n    - r-rmio >=0.4\n\ntest:\n  commands:\n    - $R -e \"library('bigsparser')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('bigsparser')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/privefl/bigsparser\n  license: GPL-3.0-only\n  summary: Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed\n    from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available.\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - pettyalex\n\n# Package: bigsparser\n# Title: Sparse Matrix Format with Data on Disk\n# Version: 0.6.1\n# Authors@R: person(given = \"Florian\", family = \"Prive\", role = c(\"aut\", \"cre\"), email = \"florian.prive.21@gmail.com\")\n# Description: Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available.\n# License: GPL-3\n# Encoding: UTF-8\n# RoxygenNote: 7.1.1\n# URL: https://github.com/privefl/bigsparser\n# BugReports: https://github.com/privefl/bigsparser/issues\n# Depends: R (>= 3.1)\n# LinkingTo: Rcpp, RcppEigen, rmio\n# Imports: Rcpp, bigassertr, methods, Matrix, rmio (>= 0.4)\n# Suggests: testthat (>= 2.1.0)\n# NeedsCompilation: yes\n# Packaged: 2022-06-06 06:25:00 UTC; au639593\n# Author: Florian Prive [aut, cre]\n# Maintainer: Florian Prive <florian.prive.21@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2022-06-07 04:30:25 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-bigassertr",
      "r-matrix",
      "r-rcpp",
      "r-rcppeigen",
      "r-rmio",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio >=0.4"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio >=0.4"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
  ],
  "version": "0.7.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-bigsparser.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/bigsparser",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provide a sparse matrix format with data stored on disk, to be used in both R and C++. This is intended for more efficient use of sparse data in C++ and also when parallelizing, since data on disk does not need copying. Only a limited number of features will be implemented. For now, conversion can be performed from a 'dgCMatrix' or a 'dsCMatrix' from R package 'Matrix'. A new compact format is also now available."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-bigsparser",
      "version": "0.7.3"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-bigassertr",
        "r-rmio >=0.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9091fc62ed005fee2ed0d7e64c1c4eab5cb290683f0aa88bae83db032598486c",
      "url": [
        "https://cran.r-project.org/src/contrib/bigsparser_0.7.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/bigsparser/bigsparser_0.7.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('bigsparser')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-rmio"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}