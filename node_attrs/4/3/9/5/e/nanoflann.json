{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "7db95894cbbc4bba4c8a4108a93a190592d8d1e0",
  "feedstock_hash_ts": 1730881065,
  "feedstock_name": "nanoflann",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc",
        "if not exist %LIBRARY_INC%\\nanoflann.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfigVersion.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannTargets.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\pkgconfig\\nanoflann.pc (exit 1)"
      ]
    }
  },
  "name": "nanoflann",
  "osx_64_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/nanoflann.hpp",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake",
        "test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake",
        "test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nanoflann"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nanoflann.json"
  },
  "raw_meta_yaml": "{% set name = \"nanoflann\" %}\n{% set version = \"1.6.1\" %}\n{% set sha256 = \"e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/jlblancoc/nanoflann/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  # The nanoflann library is header only, so we do not need\n  # to export the compiler run-time libraries.\n  # They are just needed during the build to perform some checks.\n  ignore_run_exports_from:\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n\nrequirements:\n  build:\n    - cmake\n    - make  # [unix]\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n  host: []  # Empty host dependency section\n\ntest:\n  commands:\n    - if not exist %LIBRARY_INC%\\nanoflann.hpp (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfig.cmake (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfigVersion.cmake (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannTargets.cmake (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\pkgconfig\\nanoflann.pc (exit 1)  # [win]\n    - test -f ${PREFIX}/include/nanoflann.hpp  # [unix]\n    - test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfig.cmake  # [unix]\n    - test -f ${PREFIX}/share/cmake/nanoflann/nanoflannConfigVersion.cmake  # [unix]\n    - test -f ${PREFIX}/share/cmake/nanoflann/nanoflannTargets.cmake  # [unix]\n    - test -f ${PREFIX}/lib/pkgconfig/nanoflann.pc  # [unix]\n\nabout:\n  home: https://github.com/jlblancoc/nanoflann\n  license: BSD\n  license_file: COPYING\n  summary: A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees\n  description: |\n    nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\n    for 2D or 3D point clouds. nanoflann does not require compiling or installing.\n    You just need to #include <nanoflann.hpp> in your code.\n  doc_url: http://jlblancoc.github.io/nanoflann/\n  dev_url: https://github.com/jlblancoc/nanoflann\n\nextra:\n  recipe-maintainers:\n    - tadeu\n    - jlblancoc\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz",
  "version": "1.6.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nanoflann.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "nanoflann is a C++ header-only library for building KD-Trees, mostly optimized\nfor 2D or 3D point clouds. nanoflann does not require compiling or installing.\nYou just need to #include <nanoflann.hpp> in your code.\n",
      "dev_url": "https://github.com/jlblancoc/nanoflann",
      "doc_url": "http://jlblancoc.github.io/nanoflann/",
      "home": "https://github.com/jlblancoc/nanoflann",
      "license": "BSD",
      "license_file": "COPYING",
      "summary": "A C++ header-only library for Nearest Neighbor (NN) search wih KD-trees"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu",
        "jlblancoc"
      ]
    },
    "package": {
      "name": "nanoflann",
      "version": "1.6.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "fn": "nanoflann-1.6.1.tar.gz",
      "sha256": "e258d6fd6ad18e1809fa9c081553e78036fd6e7b418d3762875c2c5a015dd431",
      "url": "https://github.com/jlblancoc/nanoflann/archive/v1.6.1.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_INC%\\nanoflann.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannConfigVersion.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\cmake\\nanoflann\\nanoflannTargets.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\pkgconfig\\nanoflann.pc (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}