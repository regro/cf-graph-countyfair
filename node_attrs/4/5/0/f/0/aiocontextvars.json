{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "aiocontextvars",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "IMPORTANT: This package will be deprecated after\n[contextvars asyncio backport](https://github.com/MagicStack/contextvars/issues/2)\nis fixed. Before then, this library experimentally provides the\nmissing asyncio support for the contextvars backport library. Please\nread more in Python 3.7 contextvars documentation.\n",
      "home": "https://github.com/fantix/aiocontextvars",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Asyncio support for PEP-567 contextvars backport."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "carlodri"
      ]
    },
    "package": {
      "name": "aiocontextvars",
      "version": "0.2.2"
    },
    "requirements": {
      "host": [
        "python >=3.5,<3.7",
        "pip",
        "pytest-runner"
      ],
      "run": [
        "python >=3.5,<3.7",
        "contextvars ==2.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f027372dc48641f683c559f247bd84962becaacdc9ba711d583c3871fb5652aa",
      "url": "https://pypi.io/packages/source/a/aiocontextvars/aiocontextvars-0.2.2.tar.gz"
    },
    "test": {
      "imports": [
        "contextvars"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "contextvars",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "IMPORTANT: This package will be deprecated after\n[contextvars asyncio backport](https://github.com/MagicStack/contextvars/issues/2)\nis fixed. Before then, this library experimentally provides the\nmissing asyncio support for the contextvars backport library. Please\nread more in Python 3.7 contextvars documentation.\n",
      "home": "https://github.com/fantix/aiocontextvars",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Asyncio support for PEP-567 contextvars backport."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "carlodri"
      ]
    },
    "package": {
      "name": "aiocontextvars",
      "version": "0.2.2"
    },
    "requirements": {
      "host": [
        "python >=3.5,<3.7",
        "pip",
        "pytest-runner"
      ],
      "run": [
        "python >=3.5,<3.7",
        "contextvars ==2.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f027372dc48641f683c559f247bd84962becaacdc9ba711d583c3871fb5652aa",
      "url": "https://pypi.io/packages/source/a/aiocontextvars/aiocontextvars-0.2.2.tar.gz"
    },
    "test": {
      "imports": [
        "contextvars"
      ]
    }
  },
  "name": "aiocontextvars",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "aiocontextvars"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/aiocontextvars.json"
  },
  "raw_meta_yaml": "{% set name = \"aiocontextvars\" %}\n{% set version = \"0.2.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f027372dc48641f683c559f247bd84962becaacdc9ba711d583c3871fb5652aa\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  host:\n    - python >=3.5,<3.7\n    - pip\n    - pytest-runner\n  run:\n    - python >=3.5,<3.7\n    - contextvars ==2.4\n\ntest:\n  imports:\n    - contextvars\n\nabout:\n  home: https://github.com/fantix/aiocontextvars\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Asyncio support for PEP-567 contextvars backport.'\n  description: |\n    IMPORTANT: This package will be deprecated after \n    [contextvars asyncio backport](https://github.com/MagicStack/contextvars/issues/2)\n    is fixed. Before then, this library experimentally provides the \n    missing asyncio support for the contextvars backport library. Please \n    read more in Python 3.7 contextvars documentation.\n\nextra:\n  recipe-maintainers:\n    - carlodri\n",
  "req": {
    "__set__": true,
    "elements": [
      "contextvars",
      "pip",
      "pytest-runner",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "contextvars",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python >=3.5,<3.7"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "contextvars ==2.4",
        "python >=3.5,<3.7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/a/aiocontextvars/aiocontextvars-0.2.2.tar.gz",
  "version": "0.2.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/aiocontextvars.json"
  }
}