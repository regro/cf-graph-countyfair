{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\",
          "MINIFORGE_HOME": "C:\\Miniforge"
        }
      }
    },
    "bot": {
      "abi_migration_branches": [
        "20.x",
        "19.x"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true,
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "822cad4a0a36b2029371f8637997d1b19698fabb",
  "feedstock_hash_ts": 1761130417,
  "feedstock_name": "openmp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test ! -f $PREFIX/include/omp_lib.mod",
            "test ! -f $PREFIX/include/omp_lib_kinds.mod",
            "test -f $PREFIX/lib/libomp.so",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp",
              "_openmp_mutex >=4.5",
              "_openmp_mutex * *_llvm"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp_lib.mod",
            "test -f $PREFIX/include/omp_lib_kinds.mod"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test -f $PREFIX/lib/libomp.dylib",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub",
            "ld64"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test -f $PREFIX/lib/libomp.dylib",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub",
            "ld64"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3",
            "create-forwarder-dll"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.bat",
        "test": {
          "commands": [
            "@echo on",
            "if not exist %LIBRARY_INC%\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\18\\include\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\19\\include\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\20\\include\\omp.h exit 1",
            "if exist %LIBRARY_INC%\\omp_lib.mod exit 1",
            "if exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1",
            "if not exist %LIBRARY_BIN%\\libomp.dll exit 1",
            "if not exist %LIBRARY_BIN%\\libiomp5md.dll exit 1",
            "if not exist %LIBRARY_LIB%\\libomp.lib exit 1",
            "%LIBRARY_BIN%\\clang-19 -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe",
            "%cd%\\omp_hello.exe"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "create-forwarder-dll"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\omp_lib.mod exit 1",
            "if not exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "fortran_compiler_stub",
        "clang"
      ],
      "host": [
        "llvmdev 21.1.4",
        "compiler-rt"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "name": "openmp",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test -f $PREFIX/lib/libomp.dylib",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub",
            "ld64"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": null
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub",
        "ld64"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/omp.h",
            "test -f $PREFIX/lib/clang/19/include/omp.h",
            "test -f $PREFIX/lib/libomp.dylib",
            "export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"",
            "$PREFIX/bin/clang-19 -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello",
            "./omp_hello"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub",
            "ld64"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          },
          "skip": true
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.sh",
        "test": {
          "commands": null
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "compiler-rt"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "compiler-rt",
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub",
        "ld64"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "llvm-openmp",
      "llvm-openmp-fortran"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openmp.json"
  },
  "raw_meta_yaml": "{% set version = \"21.1.4\" %}\n# check https://clang.llvm.org/docs/OpenMPSupport.html\n# occasionally to see last fully supported openmp ver.\n{% set openmp_ver = \"4.5\" %}\n\n{% set clang_major = version.split(\".\")[0]|int %}\n{% set clang_test_version = \"19\" %}\n\npackage:\n  name: openmp\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n  sha256: 3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c\n  # name folder for easier deletion; we do the equivalent of downloading\n  # the subproject sources, so the work folder then has openmp in it;\n  # for details see build scripts\n  folder: llvm-project\n  patches:\n    # fix for https://github.com/llvm/llvm-project/issues/54596\n    - patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"fortran\") }}  # [win]\n    - clang                      # [win]\n    - cmake\n    - ninja\n  host:\n    - llvmdev {{ version }}\n    # see https://github.com/llvm/llvm-project/issues/54596\n    - compiler-rt   # [osx and arm64]\n\noutputs:\n  - name: llvm-openmp\n    script: install_pkg.sh  # [unix]\n    script: install_pkg.bat  # [win]\n    build:\n      ignore_run_exports_from:\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"fortran\") }}\n        - python *\n      run_exports:\n        strong:\n          - {{ pin_subpackage(\"llvm-openmp\", max_pin=None) }}\n          - _openmp_mutex >={{ openmp_ver }}  # [linux]\n          - _openmp_mutex * *_llvm            # [linux]\n    requirements:\n      build:\n        - cmake\n        # for run-exports\n        - {{ stdlib(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - python >=3\n        - create-forwarder-dll       # [win]\n      host:\n      run_constrained:\n        - openmp {{ version }}|{{ version }}.*\n        - intel-openmp <0.0a0\n    test:\n      requires:\n        - clang-{{ clang_test_version }}\n        - {{ compiler('cxx') }}\n        - ld64                      # [osx]\n      files:\n        - omp_hello.c\n      commands:\n        # headers\n        - \"@echo on\"                                      # [win]\n        - test -f $PREFIX/include/omp.h                   # [unix]\n        - if not exist %LIBRARY_INC%\\omp.h exit 1         # [win]\n        # clang-specific one (symlink on unix; copies on win, see install_pkg.bat)\n        - test -f $PREFIX/lib/clang/{{ clang_test_version }}/include/omp.h  # [unix]\n        {% for ver in range(18, 21) %}\n        - if not exist %LIBRARY_LIB%\\clang\\{{ ver }}\\include\\omp.h exit 1   # [win]\n        {% endfor %}\n\n        # absence of fortran bits\n        - test ! -f $PREFIX/include/omp_lib.mod             # [linux]\n        - test ! -f $PREFIX/include/omp_lib_kinds.mod       # [linux]\n        - if exist %LIBRARY_INC%\\omp_lib.mod exit 1         # [win]\n        - if exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1   # [win]\n\n        # shared library\n        - test -f $PREFIX/lib/libomp.so                   # [linux]\n        - test -f $PREFIX/lib/libomp.dylib                # [osx]\n        - if not exist %LIBRARY_BIN%\\libomp.dll exit 1    # [win]\n        - if not exist %LIBRARY_BIN%\\libiomp5md.dll exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\libomp.lib exit 1    # [win]\n\n        # compilation test\n        - export LNK=\"-L$PREFIX/lib -Wl,-rpath,$PREFIX/lib\"     # [unix]\n        - export LNK=\"${LNK} -Wl,--allow-shlib-undefined\"       # [linux]\n        - $PREFIX/bin/clang-{{ clang_test_version }} -v -fopenmp -I$PREFIX/include $LNK omp_hello.c -o omp_hello                    # [unix]\n        - '%LIBRARY_BIN%\\clang-{{ clang_test_version }} -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe'   # [win]\n        - ./omp_hello            # [unix]\n        - '%cd%\\omp_hello.exe'   # [win]\n\n  - name: llvm-openmp-fortran\n    script: install_pkg.sh  # [unix]\n    script: install_pkg.bat  # [win]\n    build:\n      # restricted to windows for now\n      skip: true  # [not win]\n      run_exports:\n        strong:\n          - {{ pin_subpackage(\"llvm-openmp\", max_pin=None) }}\n          - _openmp_mutex >={{ openmp_ver }}  # [linux]\n          - _openmp_mutex * *_llvm            # [linux]\n    requirements:\n      build:\n        - cmake\n        # for run-exports\n        - {{ stdlib(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ compiler(\"fortran\") }}     # [linux]\n        - create-forwarder-dll       # [win]\n      host:\n        - {{ pin_subpackage(\"llvm-openmp\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"llvm-openmp\", exact=True) }}\n      run_constrained:\n        # already contains the version\n        - {{ compiler(\"fortran\") }}\n    test:\n      commands:\n        - test -f $PREFIX/include/omp_lib.mod                   # [linux]\n        - test -f $PREFIX/include/omp_lib_kinds.mod             # [linux]\n        - if not exist %LIBRARY_INC%\\omp_lib.mod exit 1         # [win]\n        - if not exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1   # [win]\n\nabout:\n  home: http://openmp.llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: openmp/LICENSE.TXT\n  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.\n  dev_url: https://github.com/llvm/llvm-project/\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - jakirkham\n    - yesimon\n    - isuruf\n    - beckermr\n    - katietz\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "clang",
      "cmake",
      "compiler-rt",
      "create-forwarder-dll",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "llvm-openmp",
      "llvmdev",
      "ninja",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang",
        "cmake",
        "create-forwarder-dll",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "compiler-rt",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "llvmdev",
        "openmp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub",
        "ld64"
      ]
    }
  },
  "strong_exports": true,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang",
        "cmake",
        "create-forwarder-dll",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python >=3"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "compiler-rt",
        "llvm-openmp",
        "llvmdev 21.1.4"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub",
        "ld64"
      ]
    }
  },
  "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz",
  "version": "21.1.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openmp.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project/",
      "home": "http://openmp.llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "openmp/LICENSE.TXT",
      "summary": "The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "jakirkham",
        "yesimon",
        "isuruf",
        "beckermr",
        "katietz",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "python *"
          ],
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "python >=3",
            "create-forwarder-dll"
          ],
          "host": [],
          "run_constrained": [
            "openmp 21.1.4|21.1.4.*",
            "intel-openmp <0.0a0"
          ]
        },
        "script": "install_pkg.bat",
        "test": {
          "commands": [
            "@echo on",
            "if not exist %LIBRARY_INC%\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\18\\include\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\19\\include\\omp.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\20\\include\\omp.h exit 1",
            "if exist %LIBRARY_INC%\\omp_lib.mod exit 1",
            "if exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1",
            "if not exist %LIBRARY_BIN%\\libomp.dll exit 1",
            "if not exist %LIBRARY_BIN%\\libiomp5md.dll exit 1",
            "if not exist %LIBRARY_LIB%\\libomp.lib exit 1",
            "%LIBRARY_BIN%\\clang-19 -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe",
            "%cd%\\omp_hello.exe"
          ],
          "files": [
            "omp_hello.c"
          ],
          "requires": [
            "clang-19",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong": [
              "llvm-openmp"
            ]
          }
        },
        "name": "llvm-openmp-fortran",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "create-forwarder-dll"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [
            "llvm-openmp"
          ],
          "run_constrained": [
            "fortran_compiler_stub"
          ]
        },
        "script": "install_pkg.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\omp_lib.mod exit 1",
            "if not exist %LIBRARY_INC%\\omp_lib_kinds.mod exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "openmp",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "clang",
        "cmake",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "llvm-project",
      "patches": [
        "patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang",
        "cmake",
        "create-forwarder-dll",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "llvmdev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang-19",
        "cxx_compiler_stub"
      ]
    }
  }
}