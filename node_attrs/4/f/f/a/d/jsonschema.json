{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "hint-all"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "jsonschema",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "doc_url": "https://python-jsonschema.readthedocs.org/",
      "home": "https://github.com/python-jsonschema/jsonschema",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "An implementation of JSON Schema validation for Python"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation --disable-pip-version-check"
    },
    "extra": {
      "feedstock-name": "jsonschema",
      "recipe-maintainers": [
        "minrk",
        "ocefpaf",
        "nehaljwani",
        "bollwyvl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "jsonschema",
        "requirements": {
          "build": [],
          "host": [
            "hatch-fancy-pypi-readme",
            "hatch-vcs",
            "hatchling",
            "pip",
            "python 3.9.*"
          ],
          "run": [
            "attrs >=22.2.0",
            "jsonschema-specifications >=2023.3.6",
            "python >=3.9",
            "referencing >=0.28.4",
            "rpds-py >=0.7.1"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "pip",
                "python 3.9.*"
              ]
            },
            "script": [
              "jsonschema --version",
              "jsonschema --help",
              "jsonschema --version | python -c \"import sys; v = sys.stdin.read().strip(); assert v == '${{ version }}', v\""
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-format-nongpl",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema",
            "fqdn",
            "idna",
            "isoduration",
            "jsonpointer >1.13",
            "rfc3339-validator",
            "rfc3986-validator >0.1.0",
            "uri-template",
            "webcolors >=24.6.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-format",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema",
            "fqdn",
            "idna",
            "isoduration",
            "jsonpointer >1.13",
            "rfc3339-validator",
            "rfc3987",
            "uri-template",
            "webcolors >=24.6.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-all",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema-with-format-nongpl",
            "jsonschema-with-format"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "start_test.py"
              ],
              "source": [
                "json"
              ]
            },
            "requirements": {
              "run": [
                "jsonpath-ng",
                "pytest-cov",
                "python 3.9.*"
              ]
            },
            "script": "python start_test.py --cov-fail-under=94 -k \"not WrappedReferencingError_hashability\""
          }
        ]
      }
    ],
    "package": {
      "name": "jsonschema",
      "version": "4.24.1"
    },
    "requirements": {
      "host": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9.*"
      ],
      "run": [
        "attrs >=22.2.0",
        "jsonschema-specifications >=2023.3.6",
        "python >=3.9",
        "referencing >=0.28.4",
        "rpds-py >=0.7.1"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fe45a130cc7f67cd0d67640b4e7e3e2e666919462ae355eda238296eafeb4b5d",
      "url": "https://pypi.org/packages/source/j/jsonschema/jsonschema-4.24.1.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs",
        "fqdn",
        "idna",
        "isoduration",
        "jsonpointer",
        "jsonschema",
        "jsonschema-specifications",
        "jsonschema-with-format",
        "jsonschema-with-format-nongpl",
        "python",
        "referencing",
        "rfc3339-validator",
        "rfc3986-validator",
        "rfc3987",
        "rpds-py",
        "uri-template",
        "webcolors"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "jsonpath-ng",
        "pip",
        "pytest-cov",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "doc_url": "https://python-jsonschema.readthedocs.org/",
      "home": "https://github.com/python-jsonschema/jsonschema",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "An implementation of JSON Schema validation for Python"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation --disable-pip-version-check"
    },
    "extra": {
      "feedstock-name": "jsonschema",
      "recipe-maintainers": [
        "minrk",
        "ocefpaf",
        "nehaljwani",
        "bollwyvl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "jsonschema",
        "requirements": {
          "build": [],
          "host": [
            "hatch-fancy-pypi-readme",
            "hatch-vcs",
            "hatchling",
            "pip",
            "python 3.9.*"
          ],
          "run": [
            "attrs >=22.2.0",
            "jsonschema-specifications >=2023.3.6",
            "python >=3.9",
            "referencing >=0.28.4",
            "rpds-py >=0.7.1"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "pip",
                "python 3.9.*"
              ]
            },
            "script": [
              "jsonschema --version",
              "jsonschema --help",
              "jsonschema --version | python -c \"import sys; v = sys.stdin.read().strip(); assert v == '${{ version }}', v\""
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-format-nongpl",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema",
            "fqdn",
            "idna",
            "isoduration",
            "jsonpointer >1.13",
            "rfc3339-validator",
            "rfc3986-validator >0.1.0",
            "uri-template",
            "webcolors >=24.6.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-format",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema",
            "fqdn",
            "idna",
            "isoduration",
            "jsonpointer >1.13",
            "rfc3339-validator",
            "rfc3987",
            "uri-template",
            "webcolors >=24.6.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "jsonschema-with-all",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "jsonschema-with-format-nongpl",
            "jsonschema-with-format"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "jsonschema"
              ],
              "python_version": [
                "3.9.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "start_test.py"
              ],
              "source": [
                "json"
              ]
            },
            "requirements": {
              "run": [
                "jsonpath-ng",
                "pytest-cov",
                "python 3.9.*"
              ]
            },
            "script": "python start_test.py --cov-fail-under=94 -k \"not WrappedReferencingError_hashability\""
          }
        ]
      }
    ],
    "package": {
      "name": "jsonschema",
      "version": "4.24.1"
    },
    "requirements": {
      "host": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9.*"
      ],
      "run": [
        "attrs >=22.2.0",
        "jsonschema-specifications >=2023.3.6",
        "python >=3.9",
        "referencing >=0.28.4",
        "rpds-py >=0.7.1"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fe45a130cc7f67cd0d67640b4e7e3e2e666919462ae355eda238296eafeb4b5d",
      "url": "https://pypi.org/packages/source/j/jsonschema/jsonschema-4.24.1.tar.gz"
    }
  },
  "name": "jsonschema",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "jsonschema",
      "jsonschema-with-all",
      "jsonschema-with-format",
      "jsonschema-with-format-nongpl"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/jsonschema.json"
  },
  "raw_meta_yaml": "# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json\nschema_version: 1\n\ncontext:\n  version: \"4.24.1\"\n  python_check_max: \"3.13\"\n\nrecipe:\n  name: jsonschema\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/j/jsonschema/jsonschema-${{ version }}.tar.gz\n  sha256: fe45a130cc7f67cd0d67640b4e7e3e2e666919462ae355eda238296eafeb4b5d\n\nbuild:\n  number: 0\n  noarch: python\n\noutputs:\n  - package:\n      name: jsonschema\n    build:\n      noarch: python\n      script:\n        - ${{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation --disable-pip-version-check\n      python:\n        entry_points:\n          - jsonschema = jsonschema.cli:main\n    requirements:\n      host:\n        - hatch-fancy-pypi-readme\n        - hatch-vcs\n        - hatchling\n        - pip\n        - python ${{ python_min }}.*\n      run:\n        - attrs >=22.2.0\n        - jsonschema-specifications >=2023.03.6\n        - python >=${{ python_min }}\n        - referencing >=0.28.4\n        - rpds-py >=0.7.1\n    tests:\n      - python:\n          imports: jsonschema\n          pip_check: true\n          python_version:\n            - ${{ python_min }}.*\n            - ${{ python_check_max }}.*\n      - requirements:\n          run:\n            - pip\n            - python ${{ python_min }}.*\n        script:\n          - jsonschema --version\n          - jsonschema --help\n          - jsonschema --version | python -c \"import sys; v = sys.stdin.read().strip(); assert v == '${{ version }}', v\"\n\n  - package:\n      name: jsonschema-with-format\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - ${{ pin_subpackage('jsonschema', upper_bound='x.x.x') }}\n        - fqdn\n        - idna\n        - isoduration\n        - jsonpointer >1.13\n        - rfc3339-validator\n        - rfc3987\n        - uri-template\n        - webcolors >=24.6.0\n    tests:\n      - python:\n          imports: jsonschema\n          pip_check: true\n          python_version:\n            - ${{ python_min }}.*\n            - ${{ python_check_max }}.*\n\n  - package:\n      name: jsonschema-with-format-nongpl\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - ${{ pin_subpackage('jsonschema', upper_bound='x.x.x') }}\n        - fqdn\n        - idna\n        - isoduration\n        - jsonpointer >1.13\n        - rfc3339-validator\n        - rfc3986-validator >0.1.0\n        - uri-template\n        - webcolors >=24.6.0\n    tests:\n      - python:\n          imports: jsonschema\n          pip_check: true\n          python_version:\n            - ${{ python_min }}.*\n            - ${{ python_check_max }}.*\n\n  - package:\n      name: jsonschema-with-all\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - ${{ pin_subpackage('jsonschema-with-format-nongpl', upper_bound='x.x.x') }}\n        - ${{ pin_subpackage('jsonschema-with-format', upper_bound='x.x.x') }}\n    tests:\n      - python:\n          imports: jsonschema\n          pip_check: true\n          python_version:\n            - ${{ python_min }}.*\n            - ${{ python_check_max }}.*\n      - files:\n          recipe:\n            - start_test.py\n          source:\n            - json\n        requirements:\n          run:\n            - jsonpath-ng\n            - pytest-cov\n            - python ${{ python_min }}.*\n        script:\n          - python start_test.py --cov-fail-under=94 -k \"not WrappedReferencingError_hashability\"\n\nabout:\n  license: MIT\n  license_file: COPYING\n  summary: An implementation of JSON Schema validation for Python\n  homepage: https://github.com/python-jsonschema/jsonschema\n  documentation: https://python-jsonschema.readthedocs.org\n\nextra:\n  feedstock-name: jsonschema\n  recipe-maintainers:\n    - minrk\n    - ocefpaf\n    - nehaljwani\n    - bollwyvl\n",
  "req": {
    "__set__": true,
    "elements": [
      "attrs",
      "fqdn",
      "hatch-fancy-pypi-readme",
      "hatch-vcs",
      "hatchling",
      "idna",
      "isoduration",
      "jsonpointer",
      "jsonschema",
      "jsonschema-specifications",
      "jsonschema-with-format",
      "jsonschema-with-format-nongpl",
      "pip",
      "python",
      "referencing",
      "rfc3339-validator",
      "rfc3986-validator",
      "rfc3987",
      "rpds-py",
      "uri-template",
      "webcolors"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs",
        "fqdn",
        "idna",
        "isoduration",
        "jsonpointer",
        "jsonschema",
        "jsonschema-specifications",
        "jsonschema-with-format",
        "jsonschema-with-format-nongpl",
        "python",
        "referencing",
        "rfc3339-validator",
        "rfc3986-validator",
        "rfc3987",
        "rpds-py",
        "uri-template",
        "webcolors"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "jsonpath-ng",
        "pip",
        "pytest-cov",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9.*"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs >=22.2.0",
        "fqdn",
        "idna",
        "isoduration",
        "jsonpointer >1.13",
        "jsonschema",
        "jsonschema-specifications >=2023.3.6",
        "jsonschema-with-format",
        "jsonschema-with-format-nongpl",
        "python >=3.9",
        "referencing >=0.28.4",
        "rfc3339-validator",
        "rfc3986-validator >0.1.0",
        "rfc3987",
        "rpds-py >=0.7.1",
        "uri-template",
        "webcolors >=24.6.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "jsonpath-ng",
        "pip",
        "pytest-cov",
        "python 3.9.*"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/j/jsonschema/jsonschema-4.24.1.tar.gz",
  "version": "4.24.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/jsonschema.json"
  }
}