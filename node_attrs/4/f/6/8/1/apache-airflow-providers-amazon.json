{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "apache-airflow-providers-amazon",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/apache/airflow/",
      "doc_url": "https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/index.html",
      "home": "https://airflow.apache.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "src/airflow/providers/amazon/LICENSE",
      "summary": "Provider package apache-airflow-providers-amazon for Apache Airflow"
    },
    "build": {
      "noarch": "python",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon",
        "requirements": {
          "host": [
            "python 3.10",
            "flit-core ==3.12.0",
            "pip"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow >=2.10.0",
            "apache-airflow-providers-common-compat >=1.6.1",
            "apache-airflow-providers-common-sql >=1.27.0",
            "apache-airflow-providers-http",
            "boto3 >=1.37.2",
            "botocore >=1.37.2",
            "inflection >=0.5.1",
            "watchtower >=3.3.1,<4",
            "jsonpath-ng >=1.5.3",
            "redshift_connector >=2.1.3",
            "asgiref >=2.3.0",
            "pyathena >=3.10.0",
            "jmespath >=0.7.0",
            "sagemaker-studio >=1.0.9",
            "marshmallow >=3"
          ]
        },
        "script": "install_airflow_providers_amazon.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-aiobotocore",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "aiobotocore >=2.21.1"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "apache-airflow >=3.0.2"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-cncf-kubernetes",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-cncf-kubernetes >=7.2.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-s3fs",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "s3fs >=2023.10.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "apache-airflow >=3.0.2"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-python3-saml",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "python3-saml >=1.16.0",
            "xmlsec !=1.3.15,>=1.3.14",
            "lxml <5.4.0,>=5.3.2"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-apache-hive",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-apache-hive"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-exasol",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-exasol"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-fab",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-fab >=2.2.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-ftp",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-ftp"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-google",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-google"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-imap",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-imap"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-microsoft-azure",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-microsoft-azure"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-mongo",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-mongo"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-openlineage",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-openlineage >=2.3.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-salesforce",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-salesforce"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-ssh",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-ssh"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-standard",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-standard"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-common-messaging",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-common-messaging >=2.0.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "apache-airflow-providers-amazon-split",
      "version": "9.13.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "1f99e168af0ef8d5f1e837b43025d76a5338927bcc7c0c485265fdf9b99a9b97",
      "url": "https://pypi.org/packages/source/a/apache-airflow-providers-amazon/apache_airflow_providers_amazon-9.13.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore",
        "apache-airflow",
        "apache-airflow-providers-amazon",
        "apache-airflow-providers-apache-hive",
        "apache-airflow-providers-cncf-kubernetes",
        "apache-airflow-providers-common-compat",
        "apache-airflow-providers-common-messaging",
        "apache-airflow-providers-common-sql",
        "apache-airflow-providers-exasol",
        "apache-airflow-providers-fab",
        "apache-airflow-providers-ftp",
        "apache-airflow-providers-google",
        "apache-airflow-providers-http",
        "apache-airflow-providers-imap",
        "apache-airflow-providers-microsoft-azure",
        "apache-airflow-providers-mongo",
        "apache-airflow-providers-openlineage",
        "apache-airflow-providers-salesforce",
        "apache-airflow-providers-ssh",
        "apache-airflow-providers-standard",
        "asgiref",
        "boto3",
        "botocore",
        "inflection",
        "jmespath",
        "jsonpath-ng",
        "lxml",
        "marshmallow",
        "pyathena",
        "python",
        "python3-saml",
        "redshift_connector",
        "s3fs",
        "sagemaker-studio",
        "watchtower",
        "xmlsec"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "apache-airflow",
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/apache/airflow/",
      "doc_url": "https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/index.html",
      "home": "https://airflow.apache.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "src/airflow/providers/amazon/LICENSE",
      "summary": "Provider package apache-airflow-providers-amazon for Apache Airflow"
    },
    "build": {
      "noarch": "python",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon",
        "requirements": {
          "host": [
            "python 3.10",
            "flit-core ==3.12.0",
            "pip"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow >=2.10.0",
            "apache-airflow-providers-common-compat >=1.6.1",
            "apache-airflow-providers-common-sql >=1.27.0",
            "apache-airflow-providers-http",
            "boto3 >=1.37.2",
            "botocore >=1.37.2",
            "inflection >=0.5.1",
            "watchtower >=3.3.1,<4",
            "jsonpath-ng >=1.5.3",
            "redshift_connector >=2.1.3",
            "asgiref >=2.3.0",
            "pyathena >=3.10.0",
            "jmespath >=0.7.0",
            "sagemaker-studio >=1.0.9",
            "marshmallow >=3"
          ]
        },
        "script": "install_airflow_providers_amazon.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-aiobotocore",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "aiobotocore >=2.21.1"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "apache-airflow >=3.0.2"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-cncf-kubernetes",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-cncf-kubernetes >=7.2.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-s3fs",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "s3fs >=2023.10.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "apache-airflow >=3.0.2"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-python3-saml",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "python3-saml >=1.16.0",
            "xmlsec !=1.3.15,>=1.3.14",
            "lxml <5.4.0,>=5.3.2"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-apache-hive",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-apache-hive"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-exasol",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-exasol"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-fab",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-fab >=2.2.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-ftp",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-ftp"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-google",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-google"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-imap",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-imap"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-microsoft-azure",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-microsoft-azure"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-mongo",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-mongo"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-openlineage",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-openlineage >=2.3.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-salesforce",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-salesforce"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-ssh",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-ssh"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-standard",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-standard"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "apache-airflow-providers-amazon-with-common-messaging",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "apache-airflow-providers-amazon",
            "apache-airflow-providers-common-messaging >=2.0.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "airflow.providers.amazon"
          ],
          "requires": [
            "python 3.10",
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "apache-airflow-providers-amazon-split",
      "version": "9.13.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "1f99e168af0ef8d5f1e837b43025d76a5338927bcc7c0c485265fdf9b99a9b97",
      "url": "https://pypi.org/packages/source/a/apache-airflow-providers-amazon/apache_airflow_providers_amazon-9.13.0.tar.gz"
    }
  },
  "name": "apache-airflow-providers-amazon-split",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "apache-airflow-providers-amazon",
      "apache-airflow-providers-amazon-with-aiobotocore",
      "apache-airflow-providers-amazon-with-apache-hive",
      "apache-airflow-providers-amazon-with-cncf-kubernetes",
      "apache-airflow-providers-amazon-with-common-messaging",
      "apache-airflow-providers-amazon-with-exasol",
      "apache-airflow-providers-amazon-with-fab",
      "apache-airflow-providers-amazon-with-ftp",
      "apache-airflow-providers-amazon-with-google",
      "apache-airflow-providers-amazon-with-imap",
      "apache-airflow-providers-amazon-with-microsoft-azure",
      "apache-airflow-providers-amazon-with-mongo",
      "apache-airflow-providers-amazon-with-openlineage",
      "apache-airflow-providers-amazon-with-python3-saml",
      "apache-airflow-providers-amazon-with-s3fs",
      "apache-airflow-providers-amazon-with-salesforce",
      "apache-airflow-providers-amazon-with-ssh",
      "apache-airflow-providers-amazon-with-standard"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/apache-airflow-providers-amazon.json"
  },
  "raw_meta_yaml": "{% set name = \"apache-airflow-providers-amazon\" %}\n{% set version = \"9.13.0\" %}\n\npackage:\n  name: {{ name }}-split\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/apache_airflow_providers_amazon-{{ version }}.tar.gz\n  sha256: 1f99e168af0ef8d5f1e837b43025d76a5338927bcc7c0c485265fdf9b99a9b97\n\nbuild:\n  noarch: python\n  number: 0\n\noutputs:\n  - name: {{ name }}\n    script: install_airflow_providers_amazon.sh\n    build:\n      noarch: python\n\n    requirements:\n      host:\n        - python {{ python_min }}\n        - flit-core ==3.12.0\n        - pip\n      run:\n        - python >={{ python_min }}\n        - apache-airflow >=2.10.0\n        - apache-airflow-providers-common-compat >=1.6.1\n        - apache-airflow-providers-common-sql >=1.27.0\n        - apache-airflow-providers-http\n        - boto3 >=1.37.2\n        - botocore >=1.37.2\n        - inflection >=0.5.1\n        - watchtower >=3.3.1,<4\n        - jsonpath-ng >=1.5.3\n        - redshift_connector >=2.1.3\n        - asgiref >=2.3.0\n        - pyathena >=3.10.0\n        - jmespath >=0.7.0\n        - sagemaker-studio >=1.0.9\n        - marshmallow >=3\n\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-aiobotocore\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - aiobotocore >=2.21.1\n        # from aiobotocore[boto3] dependent on aiobotocore version so leaving it out\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n        # temporarily test with latest airflow because issues with missing \n        # circular dependencies in some apache-airflow-task-sdk builds\n        - apache-airflow >=3.0.2\n\n  - name: {{ name }}-with-cncf-kubernetes\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-cncf-kubernetes >=7.2.0\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-s3fs\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - s3fs >=2023.10.0\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n        # temporarily test with latest airflow because issues with missing \n        # circular dependencies in some apache-airflow-task-sdk builds\n        - apache-airflow >=3.0.2\n\n  - name: {{ name }}-with-python3-saml\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - python3-saml >=1.16.0\n        - xmlsec !=1.3.15,>=1.3.14\n        - lxml <5.4.0,>=5.3.2\n\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-apache-hive\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-apache-hive\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-exasol\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-exasol\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-fab\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        # for all python to stay noarch: python\n        - apache-airflow-providers-fab >=2.2.0\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-ftp\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-ftp\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-google\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-google\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-imap\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-imap\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-microsoft-azure\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-microsoft-azure\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-mongo\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-mongo\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-openlineage\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-openlineage >=2.3.0\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-salesforce\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-salesforce\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-ssh\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-ssh\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-standard\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-standard\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\n  - name: {{ name }}-with-common-messaging\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}\n        - apache-airflow-providers-common-messaging >=2.0.0\n    test:\n      imports:\n        - airflow.providers.amazon\n      commands:\n        - pip check\n      requires:\n        - python {{ python_min }}\n        - pip\n\nabout:\n  home: https://airflow.apache.org/\n  summary: Provider package apache-airflow-providers-amazon for Apache Airflow\n  license: Apache-2.0\n  license_file: src/airflow/providers/amazon/LICENSE\n  license_family: Apache\n  doc_url: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/index.html\n  dev_url: https://github.com/apache/airflow/\n\nextra:\n  recipe-maintainers:\n    - xylar\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "apache-airflow",
      "apache-airflow-providers-amazon",
      "apache-airflow-providers-apache-hive",
      "apache-airflow-providers-cncf-kubernetes",
      "apache-airflow-providers-common-compat",
      "apache-airflow-providers-common-messaging",
      "apache-airflow-providers-common-sql",
      "apache-airflow-providers-exasol",
      "apache-airflow-providers-fab",
      "apache-airflow-providers-ftp",
      "apache-airflow-providers-google",
      "apache-airflow-providers-http",
      "apache-airflow-providers-imap",
      "apache-airflow-providers-microsoft-azure",
      "apache-airflow-providers-mongo",
      "apache-airflow-providers-openlineage",
      "apache-airflow-providers-salesforce",
      "apache-airflow-providers-ssh",
      "apache-airflow-providers-standard",
      "asgiref",
      "boto3",
      "botocore",
      "flit-core",
      "inflection",
      "jmespath",
      "jsonpath-ng",
      "lxml",
      "marshmallow",
      "pip",
      "pyathena",
      "python",
      "python3-saml",
      "redshift_connector",
      "s3fs",
      "sagemaker-studio",
      "watchtower",
      "xmlsec"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore",
        "apache-airflow",
        "apache-airflow-providers-amazon",
        "apache-airflow-providers-apache-hive",
        "apache-airflow-providers-cncf-kubernetes",
        "apache-airflow-providers-common-compat",
        "apache-airflow-providers-common-messaging",
        "apache-airflow-providers-common-sql",
        "apache-airflow-providers-exasol",
        "apache-airflow-providers-fab",
        "apache-airflow-providers-ftp",
        "apache-airflow-providers-google",
        "apache-airflow-providers-http",
        "apache-airflow-providers-imap",
        "apache-airflow-providers-microsoft-azure",
        "apache-airflow-providers-mongo",
        "apache-airflow-providers-openlineage",
        "apache-airflow-providers-salesforce",
        "apache-airflow-providers-ssh",
        "apache-airflow-providers-standard",
        "asgiref",
        "boto3",
        "botocore",
        "inflection",
        "jmespath",
        "jsonpath-ng",
        "lxml",
        "marshmallow",
        "pyathena",
        "python",
        "python3-saml",
        "redshift_connector",
        "s3fs",
        "sagemaker-studio",
        "watchtower",
        "xmlsec"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "apache-airflow",
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core ==3.12.0",
        "pip",
        "python 3.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore >=2.21.1",
        "apache-airflow >=2.10.0",
        "apache-airflow-providers-amazon",
        "apache-airflow-providers-apache-hive",
        "apache-airflow-providers-cncf-kubernetes >=7.2.0",
        "apache-airflow-providers-common-compat >=1.6.1",
        "apache-airflow-providers-common-messaging >=2.0.0",
        "apache-airflow-providers-common-sql >=1.27.0",
        "apache-airflow-providers-exasol",
        "apache-airflow-providers-fab >=2.2.0",
        "apache-airflow-providers-ftp",
        "apache-airflow-providers-google",
        "apache-airflow-providers-http",
        "apache-airflow-providers-imap",
        "apache-airflow-providers-microsoft-azure",
        "apache-airflow-providers-mongo",
        "apache-airflow-providers-openlineage >=2.3.0",
        "apache-airflow-providers-salesforce",
        "apache-airflow-providers-ssh",
        "apache-airflow-providers-standard",
        "asgiref >=2.3.0",
        "boto3 >=1.37.2",
        "botocore >=1.37.2",
        "inflection >=0.5.1",
        "jmespath >=0.7.0",
        "jsonpath-ng >=1.5.3",
        "lxml <5.4.0,>=5.3.2",
        "marshmallow >=3",
        "pyathena >=3.10.0",
        "python >=3.10",
        "python3-saml >=1.16.0",
        "redshift_connector >=2.1.3",
        "s3fs >=2023.10.0",
        "sagemaker-studio >=1.0.9",
        "watchtower >=3.3.1,<4",
        "xmlsec !=1.3.15,>=1.3.14"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "apache-airflow >=3.0.2",
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/a/apache-airflow-providers-amazon/apache_airflow_providers_amazon-9.13.0.tar.gz",
  "version": "9.13.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/apache-airflow-providers-amazon.json"
  }
}