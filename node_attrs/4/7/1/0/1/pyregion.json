{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "45f20894106742d88266283da6fca88bc198bf46",
  "feedstock_hash_ts": 1757129068,
  "feedstock_name": "pyregion",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
      "dev_url": "https://github.com/astropy/pyregion",
      "doc_url": "https://pyregion.readthedocs.io",
      "home": "https://github.com/astropy/pyregion",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python parser for ds9 and ciao region files"
    },
    "build": {
      "number": "4",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "astrofrog",
        "mwcraig",
        "bsipocz"
      ]
    },
    "package": {
      "name": "pyregion",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "numpy",
        "setuptools",
        "setuptools-scm",
        "cython",
        "extension-helpers"
      ],
      "run": [
        "python",
        "numpy >=1.23",
        "astropy-base >=5.0",
        "pyparsing >=2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925",
      "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest --pyargs pyregion"
      ],
      "imports": [
        "pyregion"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "numpy",
        "pyparsing",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
      "dev_url": "https://github.com/astropy/pyregion",
      "doc_url": "https://pyregion.readthedocs.io",
      "home": "https://github.com/astropy/pyregion",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python parser for ds9 and ciao region files"
    },
    "build": {
      "number": "4",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "astrofrog",
        "mwcraig",
        "bsipocz"
      ]
    },
    "package": {
      "name": "pyregion",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "numpy",
        "setuptools",
        "setuptools-scm",
        "cython",
        "extension-helpers"
      ],
      "run": [
        "python",
        "numpy >=1.23",
        "astropy-base >=5.0",
        "pyparsing >=2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925",
      "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest --pyargs pyregion"
      ],
      "imports": [
        "pyregion"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "name": "pyregion",
  "osx_64_meta_yaml": {
    "about": {
      "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
      "dev_url": "https://github.com/astropy/pyregion",
      "doc_url": "https://pyregion.readthedocs.io",
      "home": "https://github.com/astropy/pyregion",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python parser for ds9 and ciao region files"
    },
    "build": {
      "number": "4",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "astrofrog",
        "mwcraig",
        "bsipocz"
      ]
    },
    "package": {
      "name": "pyregion",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "numpy",
        "setuptools",
        "setuptools-scm",
        "cython",
        "extension-helpers"
      ],
      "run": [
        "python",
        "numpy >=1.23",
        "astropy-base >=5.0",
        "pyparsing >=2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925",
      "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest --pyargs pyregion"
      ],
      "imports": [
        "pyregion"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "numpy",
        "pyparsing",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
      "dev_url": "https://github.com/astropy/pyregion",
      "doc_url": "https://pyregion.readthedocs.io",
      "home": "https://github.com/astropy/pyregion",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python parser for ds9 and ciao region files"
    },
    "build": {
      "number": "4",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "astrofrog",
        "mwcraig",
        "bsipocz"
      ]
    },
    "package": {
      "name": "pyregion",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "numpy",
        "setuptools",
        "setuptools-scm",
        "cython",
        "extension-helpers"
      ],
      "run": [
        "python",
        "numpy >=1.23",
        "astropy-base >=5.0",
        "pyparsing >=2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925",
      "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest --pyargs pyregion"
      ],
      "imports": [
        "pyregion"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "numpy",
        "pyparsing",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyregion"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyregion.json"
  },
  "raw_meta_yaml": "{% set name = \"pyregion\" %}\n{% set version = \"2.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/pyregion-{{ version }}.tar.gz\n  sha256: e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 4\n  skip: true  # [py<310]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n  host:\n    - python\n    - pip\n    - numpy\n    - setuptools\n    - setuptools-scm\n    - cython\n    - extension-helpers\n  run:\n    - python\n    - numpy >=1.23\n    - astropy-base >=5.0\n    - pyparsing >=2.0\n\ntest:\n  requires:\n    - pytest-astropy\n  imports:\n    - pyregion\n  commands:\n    - pytest --pyargs pyregion\n\nabout:\n  home: https://github.com/astropy/pyregion\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python parser for ds9 and ciao region files\n  description: |\n    pyregion is a python module to parse ds9 region files. It also supports\n    ciao region files. Please note that the main emphasis of the package is to\n    read in the regions files generated by ds9 itself. It reads most of the\n    region files created by ds9. However, it may fail to read some of the\n    user-created (or created by other programs) region files, even if they can\n    be successfully read by ds9.\n  doc_url: https://pyregion.readthedocs.io\n  dev_url: https://github.com/astropy/pyregion\n\nextra:\n  recipe-maintainers:\n    - astrofrog\n    - mwcraig\n    - bsipocz\n    - astrofrog\n",
  "req": {
    "__set__": true,
    "elements": [
      "astropy-base",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cython",
      "extension-helpers",
      "numpy",
      "pip",
      "pyparsing",
      "python",
      "setuptools",
      "setuptools-scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "c_compiler_stub",
        "c_stdlib_stub",
        "numpy",
        "pyparsing",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base >=5.0",
        "numpy >=1.23",
        "pyparsing >=2.0",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz",
  "version": "2.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyregion.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
      "dev_url": "https://github.com/astropy/pyregion",
      "doc_url": "https://pyregion.readthedocs.io",
      "home": "https://github.com/astropy/pyregion",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python parser for ds9 and ciao region files"
    },
    "build": {
      "number": "4",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "astrofrog",
        "mwcraig",
        "bsipocz"
      ]
    },
    "package": {
      "name": "pyregion",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "numpy",
        "setuptools",
        "setuptools-scm",
        "cython",
        "extension-helpers"
      ],
      "run": [
        "python",
        "numpy >=1.23",
        "astropy-base >=5.0",
        "pyparsing >=2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e8498711421173239689de523bb465245f5551a18a181cb4956d87f9c7464925",
      "url": "https://pypi.org/packages/source/p/pyregion/pyregion-2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest --pyargs pyregion"
      ],
      "imports": [
        "pyregion"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "numpy",
        "pyparsing",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  }
}