{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pyam",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The open-source Python package **pyam** provides a suite of tools and functions\nfor analyzing and visualizing input data (i.e., assumptions/parametrization)\nand results (model output) of integrated-assessment models,\nmacro-energy scenarios, energy systems analysis, and sectoral studies.\n\n**Key features**\n\n- Simple analysis of scenario timeseries data with an interface similar in feel & style\n  to the widely used [pandas.DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html)\n- Advanced visualization and plotting functions\n  (see the [gallery](https://pyam-iamc.readthedocs.io/en/stable/gallery/index.html))\n- Scripted validation and processing of scenario data and results\n",
      "dev_url": "https://github.com/IAMconsortium/pyam",
      "doc_url": "https://pyam-iamc.readthedocs.io/",
      "home": "https://pyam-iamc.readthedocs.io/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Analysis and visualization of integrated-assessment & macro-energy scenarios"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "danielhuppmann"
      ]
    },
    "package": {
      "name": "pyam",
      "version": "3.0.0"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "poetry-core >=1.2.0",
        "poetry-dynamic-versioning",
        "pip"
      ],
      "run": [
        "python >=3.10,<3.14",
        "iam-units >=2020.4.21",
        "ixmp4 >=0.9.0",
        "matplotlib-base >=3.6.0",
        "numpy >=1.26.0,<2.0",
        "openpyxl >=3.1.2",
        "pandas >=2.1.2",
        "pint >=0.13",
        "pyyaml >=6.0.1",
        "scipy >=1.10.0",
        "seaborn >=0.11",
        "requests >2.27.1",
        "wquantiles >=0.6",
        "xlsxwriter >=3.0.3"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ef333da4d239e66516ff31801879cac38384e8ebed70fe7705eec77af1305530",
      "url": "https://pypi.org/packages/source/p/pyam-iamc/pyam_iamc-3.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyam"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "poetry-dynamic-versioning",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "iam-units",
        "ixmp4",
        "matplotlib-base",
        "numpy",
        "openpyxl",
        "pandas",
        "pint",
        "python",
        "pyyaml",
        "requests",
        "scipy",
        "seaborn",
        "wquantiles",
        "xlsxwriter"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The open-source Python package **pyam** provides a suite of tools and functions\nfor analyzing and visualizing input data (i.e., assumptions/parametrization)\nand results (model output) of integrated-assessment models,\nmacro-energy scenarios, energy systems analysis, and sectoral studies.\n\n**Key features**\n\n- Simple analysis of scenario timeseries data with an interface similar in feel & style\n  to the widely used [pandas.DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html)\n- Advanced visualization and plotting functions\n  (see the [gallery](https://pyam-iamc.readthedocs.io/en/stable/gallery/index.html))\n- Scripted validation and processing of scenario data and results\n",
      "dev_url": "https://github.com/IAMconsortium/pyam",
      "doc_url": "https://pyam-iamc.readthedocs.io/",
      "home": "https://pyam-iamc.readthedocs.io/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Analysis and visualization of integrated-assessment & macro-energy scenarios"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "danielhuppmann"
      ]
    },
    "package": {
      "name": "pyam",
      "version": "3.0.0"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "poetry-core >=1.2.0",
        "poetry-dynamic-versioning",
        "pip"
      ],
      "run": [
        "python >=3.10,<3.14",
        "iam-units >=2020.4.21",
        "ixmp4 >=0.9.0",
        "matplotlib-base >=3.6.0",
        "numpy >=1.26.0,<2.0",
        "openpyxl >=3.1.2",
        "pandas >=2.1.2",
        "pint >=0.13",
        "pyyaml >=6.0.1",
        "scipy >=1.10.0",
        "seaborn >=0.11",
        "requests >2.27.1",
        "wquantiles >=0.6",
        "xlsxwriter >=3.0.3"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ef333da4d239e66516ff31801879cac38384e8ebed70fe7705eec77af1305530",
      "url": "https://pypi.org/packages/source/p/pyam-iamc/pyam_iamc-3.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyam"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "name": "pyam",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyam"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyam.json"
  },
  "raw_meta_yaml": "{% set python_min = '3.10' %}\n{% set name = \"pyam-iamc\" %}\n{% set version = \"3.0.0\" %}\n{% set sha256 = \"ef333da4d239e66516ff31801879cac38384e8ebed70fe7705eec77af1305530\" %}\n\npackage:\n  name: pyam\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/p/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - poetry-core >=1.2.0\n    - poetry-dynamic-versioning\n    - pip\n  run:\n    - python >={{ python_min }},<3.14\n    - iam-units >=2020.4.21\n    - ixmp4 >=0.9.0\n    - matplotlib-base >=3.6.0\n    - numpy >=1.26.0,<2.0\n    - openpyxl >=3.1.2\n    - pandas >=2.1.2\n    - pint >=0.13\n    - pyyaml >=6.0.1\n    - scipy >=1.10.0\n    - seaborn >=0.11\n    - requests >2.27.1\n    - wquantiles >=0.6\n    - xlsxwriter >=3.0.3\n\ntest:\n  imports:\n    - pyam\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://pyam-iamc.readthedocs.io/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Analysis and visualization of integrated-assessment & macro-energy scenarios\n  description: |\n    The open-source Python package **pyam** provides a suite of tools and functions\n    for analyzing and visualizing input data (i.e., assumptions/parametrization)\n    and results (model output) of integrated-assessment models,\n    macro-energy scenarios, energy systems analysis, and sectoral studies.\n\n    **Key features**\n\n    - Simple analysis of scenario timeseries data with an interface similar in feel & style\n      to the widely used [pandas.DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html)\n    - Advanced visualization and plotting functions\n      (see the [gallery](https://pyam-iamc.readthedocs.io/en/stable/gallery/index.html))\n    - Scripted validation and processing of scenario data and results\n  doc_url: https://pyam-iamc.readthedocs.io/\n  dev_url: https://github.com/IAMconsortium/pyam\n\nextra:\n  recipe-maintainers:\n    - danielhuppmann\n",
  "req": {
    "__set__": true,
    "elements": [
      "iam-units",
      "ixmp4",
      "matplotlib-base",
      "numpy",
      "openpyxl",
      "pandas",
      "pint",
      "pip",
      "poetry-core",
      "poetry-dynamic-versioning",
      "python",
      "pyyaml",
      "requests",
      "scipy",
      "seaborn",
      "wquantiles",
      "xlsxwriter"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "poetry-dynamic-versioning",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "iam-units",
        "ixmp4",
        "matplotlib-base",
        "numpy",
        "openpyxl",
        "pandas",
        "pint",
        "python",
        "pyyaml",
        "requests",
        "scipy",
        "seaborn",
        "wquantiles",
        "xlsxwriter"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core >=1.2.0",
        "poetry-dynamic-versioning",
        "python 3.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "iam-units >=2020.4.21",
        "ixmp4 >=0.9.0",
        "matplotlib-base >=3.6.0",
        "numpy >=1.26.0,<2.0",
        "openpyxl >=3.1.2",
        "pandas >=2.1.2",
        "pint >=0.13",
        "python >=3.10,<3.14",
        "pyyaml >=6.0.1",
        "requests >2.27.1",
        "scipy >=1.10.0",
        "seaborn >=0.11",
        "wquantiles >=0.6",
        "xlsxwriter >=3.0.3"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyam-iamc/pyam_iamc-3.0.0.tar.gz",
  "version": "3.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyam.json"
  }
}