{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "52d6270013e3a1e27ed7b36873c789a48ff5144d",
  "feedstock_hash_ts": 1730882417,
  "feedstock_name": "pydensecrf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "http://github.com/lucasb-eyer/pydensecrf",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A python interface to Philipp Krähenbühl's fully-connected (dense) CRF code."
    },
    "build": {
      "number": "6",
      "script": [
        "rm -f pydensecrf/densecrf.cpp pydensecrf/eigen.cpp",
        "PYTHON -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ocefpaf"
      ]
    },
    "package": {
      "name": "pydensecrf",
      "version": "1.0rc3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython >=0.22,<3",
        "numpy"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "backport_108.patch"
      ],
      "sha256": "08be1603af2bede05c7697b6018e8e3059de7cc181e4e784b334889dcc749aa5",
      "url": "https://pypi.io/packages/source/p/pydensecrf/pydensecrf-1.0rc3.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pydensecrf"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "http://github.com/lucasb-eyer/pydensecrf",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A python interface to Philipp Krähenbühl's fully-connected (dense) CRF code."
    },
    "build": {
      "number": "6",
      "script": [
        "rm -f pydensecrf/densecrf.cpp pydensecrf/eigen.cpp",
        "PYTHON -m pip install . -vv",
        "del pydensecrf\\densecrf.cpp pydensecrf\\eigen.cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ocefpaf"
      ]
    },
    "package": {
      "name": "pydensecrf",
      "version": "1.0rc3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython >=0.22,<3",
        "numpy"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "backport_108.patch"
      ],
      "sha256": "08be1603af2bede05c7697b6018e8e3059de7cc181e4e784b334889dcc749aa5",
      "url": "https://pypi.io/packages/source/p/pydensecrf/pydensecrf-1.0rc3.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pydensecrf"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "pydensecrf",
  "osx_64_meta_yaml": {
    "about": {
      "home": "http://github.com/lucasb-eyer/pydensecrf",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A python interface to Philipp Krähenbühl's fully-connected (dense) CRF code."
    },
    "build": {
      "number": "6",
      "script": [
        "rm -f pydensecrf/densecrf.cpp pydensecrf/eigen.cpp",
        "PYTHON -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ocefpaf"
      ]
    },
    "package": {
      "name": "pydensecrf",
      "version": "1.0rc3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython >=0.22,<3",
        "numpy"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "backport_108.patch"
      ],
      "sha256": "08be1603af2bede05c7697b6018e8e3059de7cc181e4e784b334889dcc749aa5",
      "url": "https://pypi.io/packages/source/p/pydensecrf/pydensecrf-1.0rc3.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pydensecrf"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pydensecrf"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pydensecrf.json"
  },
  "raw_meta_yaml": "{% set name = \"pydensecrf\" %}\n{% set version = \"1.0rc3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pydensecrf-{{ version }}.tar.gz\n  sha256: 08be1603af2bede05c7697b6018e8e3059de7cc181e4e784b334889dcc749aa5\n  patches:\n    # we can drop this one in the next release\n    - backport_108.patch\n\nbuild:\n  number: 6\n  script:\n    # ensure that we re-cythonize these\n    - rm -f pydensecrf/densecrf.cpp pydensecrf/eigen.cpp  # [not win]\n    - del pydensecrf\\densecrf.cpp pydensecrf\\eigen.cpp  # [win]\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - cython >=0.22,<3\n    - msinttypes  # [win and py<35]\n    - numpy\n  run:\n    - python\n\ntest:\n  imports:\n    - pydensecrf\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: http://github.com/lucasb-eyer/pydensecrf\n  license: MIT\n  summary: \"A python interface to Philipp Krähenbühl's fully-connected (dense) CRF code.\"\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "cython",
      "numpy",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cython",
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython >=0.22,<3",
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/p/pydensecrf/pydensecrf-1.0rc3.tar.gz",
  "version": "1.0rc3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pydensecrf.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "http://github.com/lucasb-eyer/pydensecrf",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A python interface to Philipp Krähenbühl's fully-connected (dense) CRF code."
    },
    "build": {
      "number": "6",
      "script": [
        "del pydensecrf\\densecrf.cpp pydensecrf\\eigen.cpp",
        "PYTHON -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ocefpaf"
      ]
    },
    "package": {
      "name": "pydensecrf",
      "version": "1.0rc3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython >=0.22,<3",
        "numpy"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "backport_108.patch"
      ],
      "sha256": "08be1603af2bede05c7697b6018e8e3059de7cc181e4e784b334889dcc749aa5",
      "url": "https://pypi.io/packages/source/p/pydensecrf/pydensecrf-1.0rc3.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pydensecrf"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}