{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-fabricatr",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://declaredesign.org/r/fabricatr, https://github.com/DeclareDesign/fabricatr",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Helps you imagine your data before you collect it. Hierarchical data structures and correlated data can be easily simulated, either from random number generators or by resampling from existing data sources. This package is faster with 'data.table' and 'mvnfast' installed."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "philip-khor"
      ]
    },
    "package": {
      "name": "r-fabricatr",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rlang >=1.0.0"
      ],
      "run": [
        "r-base",
        "r-rlang >=1.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1d196a6108ef39e11a1702af70832cfb948b4fd0da7bd029791a21075b04d1c3",
      "url": [
        "https://cran.r-project.org/src/contrib/fabricatr_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/fabricatr/fabricatr_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('fabricatr')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://declaredesign.org/r/fabricatr, https://github.com/DeclareDesign/fabricatr",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Helps you imagine your data before you collect it. Hierarchical data structures and correlated data can be easily simulated, either from random number generators or by resampling from existing data sources. This package is faster with 'data.table' and 'mvnfast' installed."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "philip-khor"
      ]
    },
    "package": {
      "name": "r-fabricatr",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rlang >=1.0.0"
      ],
      "run": [
        "r-base",
        "r-rlang >=1.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1d196a6108ef39e11a1702af70832cfb948b4fd0da7bd029791a21075b04d1c3",
      "url": [
        "https://cran.r-project.org/src/contrib/fabricatr_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/fabricatr/fabricatr_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('fabricatr')\""
      ]
    }
  },
  "name": "r-fabricatr",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-fabricatr"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-fabricatr.json"
  },
  "raw_meta_yaml": "{% set version = \"1.0.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-fabricatr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/fabricatr_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/fabricatr/fabricatr_{{ version }}.tar.gz\n  sha256: 1d196a6108ef39e11a1702af70832cfb948b4fd0da7bd029791a21075b04d1c3\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rlang >=1.0.0\n  run:\n    - r-base\n    - r-rlang >=1.0.0\n\ntest:\n  commands:\n    - $R -e \"library('fabricatr')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('fabricatr')\\\"\"  # [win]\n\nabout:\n  home: https://declaredesign.org/r/fabricatr, https://github.com/DeclareDesign/fabricatr\n  license: MIT\n  summary: Helps you imagine your data before you collect it. Hierarchical data structures and correlated data can be easily simulated, either from random number generators or by resampling from existing data sources. This package is faster with 'data.table' and 'mvnfast' installed.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - philip-khor\n\n# Package: fabricatr\n# Type: Package\n# Title: Imagine Your Data Before You Collect It\n# Version: 0.12.0\n# Authors@R: c(person(\"Graeme\", \"Blair\", email = \"graeme.blair@ucla.edu\", role = c(\"aut\", \"cre\")), person(\"Jasper\", \"Cooper\", email = \"jjc2247@columbia.edu\", role = c(\"aut\")), person(\"Alexander\", \"Coppock\", email = \"alex.coppock@yale.edu\", role = c(\"aut\")), person(\"Macartan\", \"Humphreys\", email = \"macartan@gmail.com\", role = c(\"aut\")), person(\"Aaron\", \"Rudkin\", email = \"rudkin@ucla.edu\", role = c(\"aut\")), person(\"Neal\", \"Fultz\", email = \"nfultz@gmail.com\", role = c(\"aut\")))\n# Description: Helps you imagine your data before you collect it. Hierarchical data structures and correlated data can be easily simulated, either from random number generators or by resampling from existing data sources. This package is faster with 'data.table' and 'mvnfast' installed.\n# URL: https://declaredesign.org/r/fabricatr, https://github.com/DeclareDesign/fabricatr\n# BugReports: https://github.com/DeclareDesign/fabricatr/issues\n# Depends: R (>= 3.5.0)\n# Imports: rlang (>= 0.2.0), tibble, backports\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# RoxygenNote: 7.1.1\n# Suggests: testthat, data.table, mvnfast, MASS, extraDistr\n# NeedsCompilation: no\n# Packaged: 2021-01-09 00:36:57 UTC; ac2595\n# Author: Graeme Blair [aut, cre], Jasper Cooper [aut], Alexander Coppock [aut], Macartan Humphreys [aut], Aaron Rudkin [aut], Neal Fultz [aut]\n# Maintainer: Graeme Blair <graeme.blair@ucla.edu>\n# Repository: CRAN\n# Date/Publication: 2021-01-09 07:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-rlang"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang >=1.0.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rlang >=1.0.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/fabricatr_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/fabricatr/fabricatr_1.0.2.tar.gz"
  ],
  "version": "1.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-fabricatr.json"
  }
}