{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pytest-cases",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Did you ever think that most of your test functions were actually the same\ntest code, but with different data inputs and expected results/exceptions ?\n`pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\ndecorator, so that you can separate your test cases from your test\nfunctions. In addition, `pytest-cases` provides several useful goodies to\nempower `pytest`. In particular it improves the fixture mechanism to support\n\"fixture unions\". This is a major change in the internal `pytest` engine,\nunlocking many possibilities such as using fixture references as parameter\nvalues in a test function.\n",
      "dev_url": "https://github.com/smarie/python-pytest-cases",
      "doc_url": "https://smarie.github.io/python-pytest-cases",
      "home": "https://github.com/smarie/python-pytest-cases",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Separate test code from test cases in pytest."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "smarie"
      ]
    },
    "package": {
      "name": "pytest-cases",
      "version": "3.9.1"
    },
    "requirements": {
      "host": [
        "pip",
        "pytest-runner",
        "python 3.9",
        "setuptools_scm"
      ],
      "run": [
        "decopatch >=1.4.8",
        "makefun >=1.9.5",
        "pytest >=2",
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c4e181f1b525c931a318d4812fa8de656c2c8fb77fccf1571ecf0cc5fe8e7f8f",
      "url": "https://pypi.org/packages/source/p/pytest-cases/pytest_cases-3.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pytest_cases"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "decopatch",
        "makefun",
        "pytest",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Did you ever think that most of your test functions were actually the same\ntest code, but with different data inputs and expected results/exceptions ?\n`pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\ndecorator, so that you can separate your test cases from your test\nfunctions. In addition, `pytest-cases` provides several useful goodies to\nempower `pytest`. In particular it improves the fixture mechanism to support\n\"fixture unions\". This is a major change in the internal `pytest` engine,\nunlocking many possibilities such as using fixture references as parameter\nvalues in a test function.\n",
      "dev_url": "https://github.com/smarie/python-pytest-cases",
      "doc_url": "https://smarie.github.io/python-pytest-cases",
      "home": "https://github.com/smarie/python-pytest-cases",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Separate test code from test cases in pytest."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "smarie"
      ]
    },
    "package": {
      "name": "pytest-cases",
      "version": "3.9.1"
    },
    "requirements": {
      "host": [
        "pip",
        "pytest-runner",
        "python 3.9",
        "setuptools_scm"
      ],
      "run": [
        "decopatch >=1.4.8",
        "makefun >=1.9.5",
        "pytest >=2",
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c4e181f1b525c931a318d4812fa8de656c2c8fb77fccf1571ecf0cc5fe8e7f8f",
      "url": "https://pypi.org/packages/source/p/pytest-cases/pytest_cases-3.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pytest_cases"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "pytest-cases",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pytest-cases"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pytest-cases.json"
  },
  "raw_meta_yaml": "{% set name = \"pytest-cases\" %}\n{% set version = \"3.9.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz\n  sha256: c4e181f1b525c931a318d4812fa8de656c2c8fb77fccf1571ecf0cc5fe8e7f8f\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - pytest-runner\n    - python {{ python_min }}\n    - setuptools_scm\n  run:\n    - decopatch >=1.4.8\n    - makefun >=1.9.5\n    - pytest >=2\n    - python >={{ python_min }}\n\ntest:\n  imports:\n    - pytest_cases\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/smarie/python-pytest-cases\n  summary: Separate test code from test cases in pytest.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  description: |\n    Did you ever think that most of your test functions were actually the same\n    test code, but with different data inputs and expected results/exceptions ?\n    `pytest-cases` leverages `pytest` and its great `@pytest.mark.parametrize`\n    decorator, so that you can separate your test cases from your test\n    functions. In addition, `pytest-cases` provides several useful goodies to\n    empower `pytest`. In particular it improves the fixture mechanism to support\n    \"fixture unions\". This is a major change in the internal `pytest` engine,\n    unlocking many possibilities such as using fixture references as parameter\n    values in a test function.\n  doc_url: https://smarie.github.io/python-pytest-cases\n  dev_url: https://github.com/smarie/python-pytest-cases\n\nextra:\n  recipe-maintainers:\n    - smarie\n",
  "req": {
    "__set__": true,
    "elements": [
      "decopatch",
      "makefun",
      "pip",
      "pytest",
      "pytest-runner",
      "python",
      "setuptools_scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "decopatch",
        "makefun",
        "pytest",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python 3.9",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "decopatch >=1.4.8",
        "makefun >=1.9.5",
        "pytest >=2",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pytest-cases/pytest_cases-3.9.1.tar.gz",
  "version": "3.9.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pytest-cases.json"
  }
}