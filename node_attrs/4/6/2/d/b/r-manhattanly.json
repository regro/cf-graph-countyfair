{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-manhattanly",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/sahirbhatnagar/manhattanly/, https://sahirbhatnagar.com/manhattanly/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Create interactive manhattan, Q-Q and volcano plots that are usable from the R console, in 'Dash' apps, in the 'RStudio' viewer pane, in 'R Markdown' documents, and in 'Shiny' apps. Hover the mouse pointer over a point to show details or drag a rectangle to zoom. A manhattan plot is a popular graphical method for visualizing results from high-dimensional data analysis such as a (epi)genome wide association study (GWAS or EWAS), in which p-values, Z-scores, test statistics are plotted on a scatter plot against their genomic position. Manhattan plots are used for visualizing potential regions of interest in the genome that are associated with a phenotype. Interactive manhattan plots allow the inspection of specific value (e.g. rs number or gene name) by hovering the mouse over a cell, as well as zooming into a region of the genome (e.g. a chromosome) by dragging a rectangle around the relevant area. This work is based on the 'qqman' package and the 'plotly.js' engine. It produces similar manhattan and Q-Q plots as the 'manhattan' and 'qq' functions in the 'qqman' package, with the advantage of including extra annotation information and interactive web-based visualizations directly from R. Once uploaded to a 'plotly' account, 'plotly' graphs (and the data behind them) can be viewed and modified in a web browser."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pdiakumis"
      ]
    },
    "package": {
      "name": "r-manhattanly",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ],
      "run": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1007daed593ee6d3ad7dab932fc6ffb177fc8235f43aee73b4db3b84bfdbf800",
      "url": [
        "https://cran.r-project.org/src/contrib/manhattanly_0.3.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/manhattanly/manhattanly_0.3.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('manhattanly')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/sahirbhatnagar/manhattanly/, https://sahirbhatnagar.com/manhattanly/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Create interactive manhattan, Q-Q and volcano plots that are usable from the R console, in 'Dash' apps, in the 'RStudio' viewer pane, in 'R Markdown' documents, and in 'Shiny' apps. Hover the mouse pointer over a point to show details or drag a rectangle to zoom. A manhattan plot is a popular graphical method for visualizing results from high-dimensional data analysis such as a (epi)genome wide association study (GWAS or EWAS), in which p-values, Z-scores, test statistics are plotted on a scatter plot against their genomic position. Manhattan plots are used for visualizing potential regions of interest in the genome that are associated with a phenotype. Interactive manhattan plots allow the inspection of specific value (e.g. rs number or gene name) by hovering the mouse over a cell, as well as zooming into a region of the genome (e.g. a chromosome) by dragging a rectangle around the relevant area. This work is based on the 'qqman' package and the 'plotly.js' engine. It produces similar manhattan and Q-Q plots as the 'manhattan' and 'qq' functions in the 'qqman' package, with the advantage of including extra annotation information and interactive web-based visualizations directly from R. Once uploaded to a 'plotly' account, 'plotly' graphs (and the data behind them) can be viewed and modified in a web browser."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pdiakumis"
      ]
    },
    "package": {
      "name": "r-manhattanly",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ],
      "run": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1007daed593ee6d3ad7dab932fc6ffb177fc8235f43aee73b4db3b84bfdbf800",
      "url": [
        "https://cran.r-project.org/src/contrib/manhattanly_0.3.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/manhattanly/manhattanly_0.3.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('manhattanly')\""
      ]
    }
  },
  "name": "r-manhattanly",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-manhattanly"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-manhattanly.json"
  },
  "raw_meta_yaml": "{% set version = '0.3.0' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-manhattanly\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/manhattanly_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/manhattanly/manhattanly_{{ version }}.tar.gz\n  sha256: 1007daed593ee6d3ad7dab932fc6ffb177fc8235f43aee73b4db3b84bfdbf800\n\nbuild:\n  number: 3\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-ggplot2\n    - r-magrittr\n    - r-plotly\n  run:\n    - r-base\n    - r-ggplot2\n    - r-magrittr\n    - r-plotly\n\ntest:\n  commands:\n    - $R -e \"library('manhattanly')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('manhattanly')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/sahirbhatnagar/manhattanly/, https://sahirbhatnagar.com/manhattanly/\n  license: MIT\n  summary: Create interactive manhattan, Q-Q and volcano plots that are usable from the R console,\n    in 'Dash' apps, in the 'RStudio' viewer pane, in 'R Markdown' documents, and in\n    'Shiny' apps. Hover the mouse pointer over a point to show details or drag a rectangle\n    to zoom. A manhattan plot is a popular graphical method for visualizing results\n    from high-dimensional data analysis such as a (epi)genome wide association study\n    (GWAS or EWAS), in which p-values, Z-scores, test statistics are plotted on a scatter\n    plot against their genomic position. Manhattan plots are used for visualizing potential\n    regions of interest in the genome that are associated with a phenotype. Interactive\n    manhattan plots allow the inspection of specific value (e.g. rs number or gene name)\n    by hovering the mouse over a cell, as well as zooming into a region of the genome\n    (e.g. a chromosome) by dragging a rectangle around the relevant area. This work\n    is based on the 'qqman' package and the 'plotly.js' engine. It produces similar\n    manhattan and Q-Q plots as the 'manhattan' and 'qq' functions in the 'qqman' package,\n    with the advantage of including extra annotation information and interactive web-based\n    visualizations directly from R. Once uploaded to a 'plotly' account, 'plotly' graphs\n    (and the data behind them) can be viewed and modified in a web browser.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - pdiakumis\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-ggplot2",
      "r-magrittr",
      "r-plotly"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2",
        "r-magrittr",
        "r-plotly"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/manhattanly_0.3.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/manhattanly/manhattanly_0.3.0.tar.gz"
  ],
  "version": "0.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-manhattanly.json"
  }
}