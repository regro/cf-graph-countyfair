{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "neuralforecast",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "State-of-the-art time series forecasting for PyTorch.\n\n`NeuralForecast` is a Python library for time series forecasting with\ndeep learning models. It includes *benchmark datasets*, *data-loading\nutilities*, *evaluation functions*, statistical *tests*, univariate *model\nbenchmarks* and *SOTA* models implemented in PyTorch and PyTorchLightning.\n\nPyPI: [https://pypi.org/project/neuralforecast/](https://pypi.org/project/neuralforecast/)\n",
      "dev_url": "https://github.com/Nixtla/neuralforecast/tree/main/",
      "doc_url": "https://nixtlaverse.nixtla.io/neuralforecast/docs/getting-started/introduction.html",
      "home": "https://github.com/Nixtla/neuralforecast/tree/main/",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE",
      "summary": "Deep Learning for Time Series Forecasting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps"
    },
    "extra": {
      "recipe-maintainers": [
        "sugatoray",
        "cchallu",
        "AzulGarza",
        "jmoralez",
        "mergenthaler",
        "marcopeix",
        "elephaint",
        "JQGoh",
        "nasaul"
      ]
    },
    "package": {
      "name": "neuralforecast",
      "version": "3.0.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "coreforecast >=0.0.7",
        "fsspec",
        "numpy >=1.21.6",
        "optuna",
        "pandas >=1.3.5",
        "pytorch >=2.0.0",
        "pytorch-lightning >=2.0.0",
        "ray-tune >=2.2.0",
        "utilsforecast >=0.2.3",
        "scipy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c14adb4a9e795f264d75ae0cebacad5bcd466b16f4038efac850b85527093843",
      "url": "https://pypi.org/packages/source/n/neuralforecast/neuralforecast-3.0.1.tar.gz"
    },
    "test": {
      "imports": [
        "neuralforecast"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coreforecast",
        "fsspec",
        "numpy",
        "optuna",
        "pandas",
        "python",
        "pytorch",
        "pytorch-lightning",
        "ray-tune",
        "scipy",
        "utilsforecast"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "State-of-the-art time series forecasting for PyTorch.\n\n`NeuralForecast` is a Python library for time series forecasting with\ndeep learning models. It includes *benchmark datasets*, *data-loading\nutilities*, *evaluation functions*, statistical *tests*, univariate *model\nbenchmarks* and *SOTA* models implemented in PyTorch and PyTorchLightning.\n\nPyPI: [https://pypi.org/project/neuralforecast/](https://pypi.org/project/neuralforecast/)\n",
      "dev_url": "https://github.com/Nixtla/neuralforecast/tree/main/",
      "doc_url": "https://nixtlaverse.nixtla.io/neuralforecast/docs/getting-started/introduction.html",
      "home": "https://github.com/Nixtla/neuralforecast/tree/main/",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE",
      "summary": "Deep Learning for Time Series Forecasting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps"
    },
    "extra": {
      "recipe-maintainers": [
        "sugatoray",
        "cchallu",
        "AzulGarza",
        "jmoralez",
        "mergenthaler",
        "marcopeix",
        "elephaint",
        "JQGoh",
        "nasaul"
      ]
    },
    "package": {
      "name": "neuralforecast",
      "version": "3.0.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "coreforecast >=0.0.7",
        "fsspec",
        "numpy >=1.21.6",
        "optuna",
        "pandas >=1.3.5",
        "pytorch >=2.0.0",
        "pytorch-lightning >=2.0.0",
        "ray-tune >=2.2.0",
        "utilsforecast >=0.2.3",
        "scipy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c14adb4a9e795f264d75ae0cebacad5bcd466b16f4038efac850b85527093843",
      "url": "https://pypi.org/packages/source/n/neuralforecast/neuralforecast-3.0.1.tar.gz"
    },
    "test": {
      "imports": [
        "neuralforecast"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "name": "neuralforecast",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "neuralforecast"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/neuralforecast.json"
  },
  "raw_meta_yaml": "{% set name = \"neuralforecast\" %}\n{% set version = \"3.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/neuralforecast-{{ version }}.tar.gz\n  sha256: c14adb4a9e795f264d75ae0cebacad5bcd466b16f4038efac850b85527093843\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - coreforecast >=0.0.7\n    - fsspec\n    - numpy >=1.21.6\n    - optuna\n    - pandas >=1.3.5\n    - pytorch >=2.0.0\n    - pytorch-lightning >=2.0.0\n    - ray-tune >=2.2.0\n    - utilsforecast >=0.2.3\n    - scipy\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - neuralforecast\n  ## Skipping pip-check (as build keeps failing)\n  # commands:\n  #   - pip check\n  # requires:\n  #   - pip\n\nabout:\n  home: https://github.com/Nixtla/neuralforecast/tree/main/\n  summary: Deep Learning for Time Series Forecasting\n  license: Apache-2.0\n  license_file: LICENSE\n  license_family: APACHE\n  description: |\n    State-of-the-art time series forecasting for PyTorch.\n\n    `NeuralForecast` is a Python library for time series forecasting with \n    deep learning models. It includes *benchmark datasets*, *data-loading \n    utilities*, *evaluation functions*, statistical *tests*, univariate *model \n    benchmarks* and *SOTA* models implemented in PyTorch and PyTorchLightning.\n\n    PyPI: [https://pypi.org/project/neuralforecast/](https://pypi.org/project/neuralforecast/)\n\n  doc_url: https://nixtlaverse.nixtla.io/neuralforecast/docs/getting-started/introduction.html\n  dev_url: https://github.com/Nixtla/neuralforecast/tree/main/\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n    - cchallu\n    - AzulGarza\n    - jmoralez\n    - mergenthaler\n    - marcopeix\n    - elephaint\n    - JQGoh\n    - nasaul\n",
  "req": {
    "__set__": true,
    "elements": [
      "coreforecast",
      "fsspec",
      "numpy",
      "optuna",
      "pandas",
      "pip",
      "python",
      "pytorch",
      "pytorch-lightning",
      "ray-tune",
      "scipy",
      "setuptools",
      "utilsforecast"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coreforecast",
        "fsspec",
        "numpy",
        "optuna",
        "pandas",
        "python",
        "pytorch",
        "pytorch-lightning",
        "ray-tune",
        "scipy",
        "utilsforecast"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "coreforecast >=0.0.7",
        "fsspec",
        "numpy >=1.21.6",
        "optuna",
        "pandas >=1.3.5",
        "python >=3.10",
        "pytorch >=2.0.0",
        "pytorch-lightning >=2.0.0",
        "ray-tune >=2.2.0",
        "scipy",
        "utilsforecast >=0.2.3"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/n/neuralforecast/neuralforecast-3.0.1.tar.gz",
  "version": "3.0.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/neuralforecast.json"
  }
}