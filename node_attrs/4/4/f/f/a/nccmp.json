{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "nccmp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
      "dev_url": "https://gitlab.com/remikz/nccmp",
      "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
      "home": "https://gitlab.com/remikz/nccmp",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Comparison of NetCDF files"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "zklaus"
      ]
    },
    "package": {
      "name": "nccmp",
      "version": "1.10.0.0"
    },
    "requirements": {
      "build": [
        "make",
        "cmake <4",
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ],
      "run": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4b665a5d1b77523e5eb353cc4c607794920faa5a1f31e6293f0dbcbe15d89a15",
      "url": "https://gitlab.com/remikz/nccmp/-/archive/1.10.0.0/nccmp-1.10.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/nccmp",
        "nccmp --usage"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "gnuconfig",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
      "dev_url": "https://gitlab.com/remikz/nccmp",
      "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
      "home": "https://gitlab.com/remikz/nccmp",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Comparison of NetCDF files"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "zklaus"
      ]
    },
    "package": {
      "name": "nccmp",
      "version": "1.10.0.0"
    },
    "requirements": {
      "build": [
        "make",
        "cmake <4",
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ],
      "run": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4b665a5d1b77523e5eb353cc4c607794920faa5a1f31e6293f0dbcbe15d89a15",
      "url": "https://gitlab.com/remikz/nccmp/-/archive/1.10.0.0/nccmp-1.10.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/nccmp",
        "nccmp --usage"
      ]
    }
  },
  "name": "nccmp",
  "osx_64_meta_yaml": {
    "about": {
      "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
      "dev_url": "https://gitlab.com/remikz/nccmp",
      "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
      "home": "https://gitlab.com/remikz/nccmp",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Comparison of NetCDF files"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "zklaus"
      ]
    },
    "package": {
      "name": "nccmp",
      "version": "1.10.0.0"
    },
    "requirements": {
      "build": [
        "make",
        "cmake <4",
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ],
      "run": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4b665a5d1b77523e5eb353cc4c607794920faa5a1f31e6293f0dbcbe15d89a15",
      "url": "https://gitlab.com/remikz/nccmp/-/archive/1.10.0.0/nccmp-1.10.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/nccmp",
        "nccmp --usage"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "gnuconfig",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "nccmp compares two NetCDF files bitwise, semantically or with a\nuser defined tolerance (absolute or relative percentage). Parallel\ncomparisons are done in local memory without requiring temporary\nfiles. Highly recommended for regression testing scientific models\nor datasets in a test-driven development environment.\n",
      "dev_url": "https://gitlab.com/remikz/nccmp",
      "doc_url": "https://gitlab.com/remikz/nccmp/-/blob/master/README.md",
      "home": "https://gitlab.com/remikz/nccmp",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Comparison of NetCDF files"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "zklaus"
      ]
    },
    "package": {
      "name": "nccmp",
      "version": "1.10.0.0"
    },
    "requirements": {
      "build": [
        "make",
        "cmake <4",
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ],
      "run": [
        "curl",
        "libcurl",
        "hdf5",
        "libnetcdf"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4b665a5d1b77523e5eb353cc4c607794920faa5a1f31e6293f0dbcbe15d89a15",
      "url": "https://gitlab.com/remikz/nccmp/-/archive/1.10.0.0/nccmp-1.10.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/nccmp",
        "nccmp --usage"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "gnuconfig",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nccmp"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nccmp.json"
  },
  "raw_meta_yaml": "{% set name = \"nccmp\" %}\n{% set version = \"1.10.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/remikz/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 4b665a5d1b77523e5eb353cc4c607794920faa5a1f31e6293f0dbcbe15d89a15\n\nbuild:\n  number: 1\n  # Need to skip win because curl needs vc=9 and hdf5 needs vc>=14\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - make\n    - cmake <4\n    - gnuconfig  # [unix]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - curl\n    - libcurl\n    - hdf5\n    - libnetcdf\n  run:\n    - curl\n    - libcurl\n    - hdf5\n    - libnetcdf\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/nccmp  # [unix]\n    - nccmp --usage\n\nabout:\n  home: https://gitlab.com/remikz/nccmp\n  license: GPL-2.0-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: Comparison of NetCDF files\n\n  description: |\n    nccmp compares two NetCDF files bitwise, semantically or with a\n    user defined tolerance (absolute or relative percentage). Parallel\n    comparisons are done in local memory without requiring temporary\n    files. Highly recommended for regression testing scientific models\n    or datasets in a test-driven development environment.\n  doc_url: https://gitlab.com/remikz/nccmp/-/blob/master/README.md\n  dev_url: https://gitlab.com/remikz/nccmp\n\nextra:\n  recipe-maintainers:\n    - zklaus\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "curl",
      "cxx_compiler_stub",
      "gnuconfig",
      "hdf5",
      "libcurl",
      "libnetcdf",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "gnuconfig",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "curl",
        "cxx_compiler_stub",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "curl",
        "cxx_compiler_stub",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake <4",
        "cxx_compiler_stub",
        "gnuconfig",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "hdf5",
        "libcurl",
        "libnetcdf"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://gitlab.com/remikz/nccmp/-/archive/1.10.0.0/nccmp-1.10.0.0.tar.gz",
  "version": "1.10.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nccmp.json"
  }
}