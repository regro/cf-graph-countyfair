{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pyparsing",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The pyparsing module is an alternative approach to creating and executing\nsimple grammars, vs. the traditional lex/yacc approach, or the use of\nregular expressions. The pyparsing module provides a library of classes\nthat client code uses to construct the grammar directly in Python code.",
      "dev_url": "https://github.com/pyparsing/pyparsing",
      "doc_url": "https://pyparsing-docs.readthedocs.io/",
      "home": "https://pyparsing-docs.readthedocs.io/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Create and execute simple grammars"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan",
        "msarahan",
        "ocefpaf",
        "jan-janssen"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "pyparsing",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "flit-core >=3.2,<4"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pyparsing"
              ],
              "python_version": [
                "3.10.*",
                "3.*"
              ]
            }
          }
        ],
        "version": "3.2.4"
      }
    ],
    "package": {
      "name": "pyparsing",
      "version": "3.2.4"
    },
    "requirements": {
      "host": [
        "python 3.10.*",
        "pip",
        "flit-core >=3.2,<4"
      ],
      "run": [
        "python >=3.10"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fff89494f45559d0f2ce46613b419f632bbb6afbdaed49696d322bcf98a58e99",
      "url": "https://pypi.org/packages/source/p/pyparsing/pyparsing-3.2.4.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The pyparsing module is an alternative approach to creating and executing\nsimple grammars, vs. the traditional lex/yacc approach, or the use of\nregular expressions. The pyparsing module provides a library of classes\nthat client code uses to construct the grammar directly in Python code.",
      "dev_url": "https://github.com/pyparsing/pyparsing",
      "doc_url": "https://pyparsing-docs.readthedocs.io/",
      "home": "https://pyparsing-docs.readthedocs.io/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Create and execute simple grammars"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "thewchan",
        "msarahan",
        "ocefpaf",
        "jan-janssen"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "pyparsing",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "flit-core >=3.2,<4"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pyparsing"
              ],
              "python_version": [
                "3.10.*",
                "3.*"
              ]
            }
          }
        ],
        "version": "3.2.4"
      }
    ],
    "package": {
      "name": "pyparsing",
      "version": "3.2.4"
    },
    "requirements": {
      "host": [
        "python 3.10.*",
        "pip",
        "flit-core >=3.2,<4"
      ],
      "run": [
        "python >=3.10"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fff89494f45559d0f2ce46613b419f632bbb6afbdaed49696d322bcf98a58e99",
      "url": "https://pypi.org/packages/source/p/pyparsing/pyparsing-3.2.4.tar.gz"
    }
  },
  "name": "pyparsing",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyparsing"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyparsing.json"
  },
  "raw_meta_yaml": "schema_version: 1\n\ncontext:\n  name: pyparsing\n  version: \"3.2.4\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/pyparsing-${{ version }}.tar.gz\n  sha256: fff89494f45559d0f2ce46613b419f632bbb6afbdaed49696d322bcf98a58e99\n\nbuild:\n  number: 0\n  noarch: python\n  script: ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n\nrequirements:\n  host:\n    - python ${{ python_min }}.*\n    - pip\n    - flit-core >=3.2,<4\n  run:\n    - python >=${{ python_min }}\n\ntests:\n  - python:\n      imports:\n        - pyparsing\n      python_version: [\"${{ python_min }}.*\", \"3.*\"]\n      pip_check: true\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  summary: Create and execute simple grammars\n  description: |\n    The pyparsing module is an alternative approach to creating and executing\n    simple grammars, vs. the traditional lex/yacc approach, or the use of\n    regular expressions. The pyparsing module provides a library of classes\n    that client code uses to construct the grammar directly in Python code.\n  homepage: https://pyparsing-docs.readthedocs.io\n  repository: https://github.com/pyparsing/pyparsing\n  documentation: https://pyparsing-docs.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - thewchan\n    - msarahan\n    - ocefpaf\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "flit-core",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core >=3.2,<4",
        "pip",
        "python 3.10.*"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python >=3.10"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyparsing/pyparsing-3.2.4.tar.gz",
  "version": "3.2.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyparsing.json"
  }
}