{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "error_overlinking": false
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_hash": "f9a085ae205e4682614241f7b285eb1c21ce660b",
  "feedstock_hash_ts": 1757021016,
  "feedstock_name": "cuda-nvtx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
      "doc_url": "https://docs.nvidia.com/nvtx/",
      "home": "https://developer.nvidia.com/cuda-toolkit",
      "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
      "summary": "A C-based API for annotating events, code ranges, and resources"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cuda-nvtx",
      "recipe-maintainers": [
        "conda-forge/cuda"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false
        },
        "files": [
          "lib/libnv*.so.*",
          "targets/x64/lib/*.so.*"
        ],
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "patchelf <0.18.0"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so.1",
            "test -L $PREFIX/lib/libnvtx3interop.so.1.1.0",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so.1",
            "test -f $PREFIX/targets/x64/lib/libnvtx3interop.so.1.1.0",
            "bash test-rpath.sh"
          ],
          "files": [
            "test-rpath.sh"
          ],
          "requires": [
            "patchelf"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "run_exports": [
            "cuda-nvtx"
          ]
        },
        "files": [
          "lib/libnv*.so",
          "targets/x64/lib/*.so",
          "targets/x64/include/nvtx3"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvtx"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so",
            "test -f $PREFIX/targets/x64/include/nvtx3/nvToolsExtCuda.h",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so"
          ]
        }
      }
    ],
    "package": {
      "name": "cuda-nvtx-split",
      "version": "13.0.85"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1.*",
        "patchelf <0.18.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ed150e6fb1b50663ff068cccee3c5e2ca581c3b939b321656afbc9193671137d",
      "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/windows-x86_64/cuda_nvtx-windows-x86_64-13.0.85-archive.zip"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvtx",
        "cuda-version"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "patchelf"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
      "doc_url": "https://docs.nvidia.com/nvtx/",
      "home": "https://developer.nvidia.com/cuda-toolkit",
      "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
      "summary": "A C-based API for annotating events, code ranges, and resources"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cuda-nvtx",
      "recipe-maintainers": [
        "conda-forge/cuda"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false
        },
        "files": [
          "lib/libnv*.so.*",
          "targets/x64/lib/*.so.*"
        ],
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "arm-variant * sbsa",
            "patchelf <0.18.0"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": [
            "arm-variant * sbsa"
          ]
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so.1",
            "test -L $PREFIX/lib/libnvtx3interop.so.1.1.0",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so.1",
            "test -f $PREFIX/targets/x64/lib/libnvtx3interop.so.1.1.0",
            "bash test-rpath.sh"
          ],
          "files": [
            "test-rpath.sh"
          ],
          "requires": [
            "patchelf"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "run_exports": [
            "cuda-nvtx"
          ]
        },
        "files": [
          "lib/libnv*.so",
          "targets/x64/lib/*.so",
          "targets/x64/include/nvtx3"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [
            "arm-variant * sbsa"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvtx"
          ],
          "run_constrained": [
            "arm-variant * sbsa"
          ]
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so",
            "test -f $PREFIX/targets/x64/include/nvtx3/nvToolsExtCuda.h",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so"
          ]
        }
      }
    ],
    "package": {
      "name": "cuda-nvtx-split",
      "version": "13.0.85"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1.*",
        "patchelf <0.18.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6f50a3729091aa5a0ae61cda979ea020e09aeb7c07cec0c8962949599d2b72c6",
      "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/windows-x86_64/cuda_nvtx-windows-x86_64-13.0.85-archive.zip"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "arm-variant",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvtx",
        "cuda-version"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "patchelf"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
      "doc_url": "https://docs.nvidia.com/nvtx/",
      "home": "https://developer.nvidia.com/cuda-toolkit",
      "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
      "summary": "A C-based API for annotating events, code ranges, and resources"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cuda-nvtx",
      "recipe-maintainers": [
        "conda-forge/cuda"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false
        },
        "files": [
          "lib/libnv*.so.*",
          "targets/x64/lib/*.so.*"
        ],
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "patchelf <0.18.0"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so.1",
            "test -L $PREFIX/lib/libnvtx3interop.so.1.1.0",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so.1",
            "test -f $PREFIX/targets/x64/lib/libnvtx3interop.so.1.1.0",
            "bash test-rpath.sh"
          ],
          "files": [
            "test-rpath.sh"
          ],
          "requires": [
            "patchelf"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "run_exports": [
            "cuda-nvtx"
          ]
        },
        "files": [
          "lib/libnv*.so",
          "targets/x64/lib/*.so",
          "targets/x64/include/nvtx3"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvtx"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so",
            "test -f $PREFIX/targets/x64/include/nvtx3/nvToolsExtCuda.h",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false
        },
        "files": [
          "lib/libnv*.so.*",
          "targets/x64/lib/*.so.*"
        ],
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "arm-variant * sbsa",
            "patchelf <0.18.0"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": [
            "arm-variant * sbsa"
          ]
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so.1",
            "test -L $PREFIX/lib/libnvtx3interop.so.1.1.0",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so.1",
            "test -f $PREFIX/targets/x64/lib/libnvtx3interop.so.1.1.0",
            "bash test-rpath.sh"
          ],
          "files": [
            "test-rpath.sh"
          ],
          "requires": [
            "patchelf"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "run_exports": [
            "cuda-nvtx"
          ]
        },
        "files": [
          "lib/libnv*.so",
          "targets/x64/lib/*.so",
          "targets/x64/include/nvtx3"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [
            "arm-variant * sbsa"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvtx"
          ],
          "run_constrained": [
            "arm-variant * sbsa"
          ]
        },
        "test": {
          "commands": [
            "test -L $PREFIX/lib/libnvtx3interop.so",
            "test -f $PREFIX/targets/x64/include/nvtx3/nvToolsExtCuda.h",
            "test -L $PREFIX/targets/x64/lib/libnvtx3interop.so"
          ]
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false,
          "skip": true
        },
        "files": null,
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": null,
          "files": [
            "test-rpath.sh"
          ],
          "requires": null
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": null,
        "files": [
          "Library\\include\\targets\\x64"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\targets\\x64\\nvtx3\\nvToolsExt.h exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "cuda-nvtx-split",
      "version": "13.0.85"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1.*",
        "patchelf <0.18.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "184f578d7bcce2012edf266c51dfa7834ded41464f62459f4ebcb2398cddc665",
      "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/windows-x86_64/cuda_nvtx-windows-x86_64-13.0.85-archive.zip"
    }
  },
  "name": "cuda-nvtx-split",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cuda-nvtx",
      "cuda-nvtx-dev"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cuda-nvtx.json"
  },
  "raw_meta_yaml": "{% set name = \"cuda-nvtx\" %}\n{% set version = \"13.0.85\" %}\n{% set cuda_version = \"13.0\" %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-ppc64le\" %}  # [ppc64le]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set target_name = \"x86_64-linux\" %}  # [linux64]\n{% set target_name = \"ppc64le-linux\" %}  # [ppc64le]\n{% set target_name = \"sbsa-linux\" %}  # [aarch64]\n{% set target_name = \"x64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/{{ platform }}/cuda_nvtx-{{ platform }}-{{ version }}-archive.{{ extension }}\n  sha256: ed150e6fb1b50663ff068cccee3c5e2ca581c3b939b321656afbc9193671137d  # [linux64]\n  sha256: 6f50a3729091aa5a0ae61cda979ea020e09aeb7c07cec0c8962949599d2b72c6  # [aarch64]\n  sha256: 184f578d7bcce2012edf266c51dfa7834ded41464f62459f4ebcb2398cddc665  # [win]\n\nbuild:\n  number: 0\n  skip: true  # [osx or ppc64le]\n\nrequirements:\n  build:\n    - cf-nvidia-tools 1.*  # [linux]\n    - patchelf <0.18.0  # [linux]\n\noutputs:\n  - name: cuda-nvtx\n    build:\n      binary_relocation: false\n      skip: true  # [not linux]\n    files:\n      - lib/libnv*.so.*                       # [linux]\n      - targets/{{ target_name }}/lib/*.so.*  # [linux]\n    requirements:\n      build:\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - {{ stdlib(\"c\") }}  # [linux]\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n        - patchelf <0.18.0  # [linux]\n      host:\n        - cuda-version {{ cuda_version }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    test:\n      requires:\n        - patchelf  # [linux]\n      files:\n        - test-rpath.sh\n      commands:\n        - test -L $PREFIX/lib/libnvtx3interop.so.1                                # [linux]\n        - test -L $PREFIX/lib/libnvtx3interop.so.1.1.0                            # [linux]\n        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvtx3interop.so.1      # [linux]\n        - test -f $PREFIX/targets/{{ target_name }}/lib/libnvtx3interop.so.1.1.0  # [linux]\n        - bash test-rpath.sh                                                      # [linux]\n    about:\n      home: https://developer.nvidia.com/cuda-toolkit\n      license_file: LICENSE\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/eula/index.html\n      summary: A C-based API for annotating events, code ranges, and resources\n      description: |\n        A C-based API for annotating events, code ranges, and resources in your\n        applications. Applications which integrate NVTX can use the Visual Profiler\n        to capture and visualize these events and ranges.\n      doc_url: https://docs.nvidia.com/nvtx/\n\n  - name: cuda-nvtx-dev\n    build:\n      run_exports:   # [linux]\n        - {{ pin_subpackage(\"cuda-nvtx\", max_pin='x') }}  # [linux]\n    files:\n      - lib/libnv*.so                                    # [linux]\n      - targets/{{ target_name }}/lib/*.so               # [linux]\n      - targets/{{ target_name }}/include/nvtx3          # [linux]\n      - Library\\include\\targets\\{{ target_name }}        # [win]\n    requirements:\n      build:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n      host:\n        - cuda-version {{ cuda_version }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", max_pin=\"x.x\") }}\n        - {{ pin_subpackage(\"cuda-nvtx\", exact=True) }}  # [linux]\n      run_constrained:\n        - arm-variant * {{ arm_variant_type }}  # [aarch64]\n    test:\n      commands:\n        - test -L $PREFIX/lib/libnvtx3interop.so                                                      # [linux]\n        - test -f $PREFIX/targets/{{ target_name }}/include/nvtx3/nvToolsExtCuda.h                    # [linux]\n        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvtx3interop.so                            # [linux]\n        - if not exist %LIBRARY_INC%\\targets\\{{ target_name }}\\nvtx3\\nvToolsExt.h exit 1  # [win]\n    about:\n      home: https://developer.nvidia.com/cuda-toolkit\n      license_file: LICENSE\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_url: https://docs.nvidia.com/cuda/eula/index.html\n      summary: A C-based API for annotating events, code ranges, and resources\n      description: |\n        A C-based API for annotating events, code ranges, and resources in your\n        applications. Applications which integrate NVTX can use the Visual Profiler\n        to capture and visualize these events and ranges.\n      doc_url: https://docs.nvidia.com/nvtx/\n\nabout:\n  home: https://developer.nvidia.com/cuda-toolkit\n  license_file: LICENSE\n  license: LicenseRef-NVIDIA-End-User-License-Agreement\n  license_url: https://docs.nvidia.com/cuda/eula/index.html\n  summary: A C-based API for annotating events, code ranges, and resources\n  description: |\n    A C-based API for annotating events, code ranges, and resources in your\n    applications. Applications which integrate NVTX can use the Visual Profiler\n    to capture and visualize these events and ranges.\n  doc_url: https://docs.nvidia.com/nvtx/\n\nextra:\n  feedstock-name: cuda-nvtx\n  recipe-maintainers:\n    - conda-forge/cuda\n",
  "req": {
    "__set__": true,
    "elements": [
      "arm-variant",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cf-nvidia-tools",
      "cuda-nvtx",
      "cuda-version",
      "cxx_compiler_stub",
      "patchelf"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "arm-variant",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arm-variant",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "arm-variant",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvtx",
        "cuda-version",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "patchelf"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "arm-variant * sbsa",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools 1.*",
        "cxx_compiler_stub",
        "patchelf <0.18.0"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 13.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvtx",
        "cuda-version"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "patchelf"
      ]
    }
  },
  "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/windows-x86_64/cuda_nvtx-windows-x86_64-13.0.85-archive.zip",
  "version": "13.0.85",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cuda-nvtx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
      "doc_url": "https://docs.nvidia.com/nvtx/",
      "home": "https://developer.nvidia.com/cuda-toolkit",
      "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
      "summary": "A C-based API for annotating events, code ranges, and resources"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cuda-nvtx",
      "recipe-maintainers": [
        "conda-forge/cuda"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": {
          "binary_relocation": false,
          "skip": true
        },
        "files": null,
        "name": "cuda-nvtx",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": null,
          "files": [
            "test-rpath.sh"
          ],
          "requires": null
        }
      },
      {
        "about": {
          "description": "A C-based API for annotating events, code ranges, and resources in your\napplications. Applications which integrate NVTX can use the Visual Profiler\nto capture and visualize these events and ranges.\n",
          "doc_url": "https://docs.nvidia.com/nvtx/",
          "home": "https://developer.nvidia.com/cuda-toolkit",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/cuda/eula/index.html",
          "summary": "A C-based API for annotating events, code ranges, and resources"
        },
        "build": null,
        "files": [
          "Library\\include\\targets\\x64"
        ],
        "name": "cuda-nvtx-dev",
        "requirements": {
          "build": [],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version"
          ],
          "run_constrained": null
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\targets\\x64\\nvtx3\\nvToolsExt.h exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "cuda-nvtx-split",
      "version": "13.0.85"
    },
    "requirements": {
      "build": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "184f578d7bcce2012edf266c51dfa7834ded41464f62459f4ebcb2398cddc665",
      "url": "https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvtx/windows-x86_64/cuda_nvtx-windows-x86_64-13.0.85-archive.zip"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-version"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}