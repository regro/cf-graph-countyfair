{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_hash": "f3cf0b257375d13e1b62652d2c745d8ac8946a5f",
  "feedstock_hash_ts": 1756835341,
  "feedstock_name": "metpy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
      "dev_url": "https://github.com/Unidata/MetPy",
      "doc_url": "https://unidata.github.io/MetPy",
      "home": "https://github.com/Unidata/MetPy",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "dopplershift",
        "dcamron"
      ]
    },
    "package": {
      "name": "metpy",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "setuptools",
        "pip",
        "setuptools_scm"
      ],
      "run": [
        "python >=3.10",
        "matplotlib-base >=3.5.0",
        "numpy >=1.23",
        "pandas >=1.4.0",
        "pint >=0.17.0",
        "pooch >=1.2.0",
        "pyproj >=3.3.0",
        "scipy >=1.8.0",
        "traitlets >=5.1.0",
        "xarray >=2022.6.0",
        "cartopy >=0.21.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "cdfd8fdab58bc092a1974c016f2ea3a7715ffdf6a4660b28b0de7049328bce75",
      "url": "https://pypi.org/packages/source/m/metpy/metpy-1.7.1.tar.gz"
    },
    "test": {
      "imports": [
        "metpy.calc",
        "metpy.interpolate",
        "metpy.io",
        "metpy.plots",
        "metpy.units"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cartopy",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pint",
        "pooch",
        "pyproj",
        "python",
        "scipy",
        "traitlets",
        "xarray"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
      "dev_url": "https://github.com/Unidata/MetPy",
      "doc_url": "https://unidata.github.io/MetPy",
      "home": "https://github.com/Unidata/MetPy",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "dopplershift",
        "dcamron"
      ]
    },
    "package": {
      "name": "metpy",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "setuptools",
        "pip",
        "setuptools_scm"
      ],
      "run": [
        "python >=3.10",
        "matplotlib-base >=3.5.0",
        "numpy >=1.23",
        "pandas >=1.4.0",
        "pint >=0.17.0",
        "pooch >=1.2.0",
        "pyproj >=3.3.0",
        "scipy >=1.8.0",
        "traitlets >=5.1.0",
        "xarray >=2022.6.0",
        "cartopy >=0.21.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "cdfd8fdab58bc092a1974c016f2ea3a7715ffdf6a4660b28b0de7049328bce75",
      "url": "https://pypi.org/packages/source/m/metpy/metpy-1.7.1.tar.gz"
    },
    "test": {
      "imports": [
        "metpy.calc",
        "metpy.interpolate",
        "metpy.io",
        "metpy.plots",
        "metpy.units"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "name": "metpy",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "metpy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/metpy.json"
  },
  "raw_meta_yaml": "{% set name = \"metpy\" %}\n{% set version = \"1.7.1\" %}\n{% set python_min = \"3.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cdfd8fdab58bc092a1974c016f2ea3a7715ffdf6a4660b28b0de7049328bce75\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  number: 0\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - setuptools\n    - pip\n    - setuptools_scm\n\n  run:\n    - python >={{ python_min }}\n    - matplotlib-base >=3.5.0\n    - numpy >=1.23\n    - pandas >=1.4.0\n    - pint >=0.17.0\n    - pooch >=1.2.0\n    - pyproj >=3.3.0\n    - scipy >=1.8.0\n    - traitlets >=5.1.0\n    - xarray >=2022.6.0\n    - cartopy >=0.21.0\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - metpy.calc\n    - metpy.interpolate\n    - metpy.io\n    - metpy.plots\n    - metpy.units\n\nabout:\n  home: https://github.com/Unidata/MetPy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.\n  description: |\n    The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\n    in a way that plugs easily into the existing scientific Python ecosystem\n    (numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\n    a weather map, you need to: read data, calculate a derived field, and\n    show on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\n    is to make it easier to use these routines for any meteorological Python\n    application; this means making it easy to pull out the LCL calculation\n    and just use that, or re-use the Skew-T with your own data code. MetPy\n    also prides itself on being well-documented and well-tested, so that\n    on-going maintenance is easily manageable.\n  doc_url: https://unidata.github.io/MetPy\n  dev_url: https://github.com/Unidata/MetPy\n\nextra:\n  recipe-maintainers:\n    - dopplershift\n    - dcamron\n",
  "req": {
    "__set__": true,
    "elements": [
      "cartopy",
      "matplotlib-base",
      "numpy",
      "pandas",
      "pint",
      "pip",
      "pooch",
      "pyproj",
      "python",
      "scipy",
      "setuptools",
      "setuptools_scm",
      "traitlets",
      "xarray"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cartopy",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pint",
        "pooch",
        "pyproj",
        "python",
        "scipy",
        "traitlets",
        "xarray"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cartopy >=0.21.0",
        "matplotlib-base >=3.5.0",
        "numpy >=1.23",
        "pandas >=1.4.0",
        "pint >=0.17.0",
        "pooch >=1.2.0",
        "pyproj >=3.3.0",
        "python >=3.10",
        "scipy >=1.8.0",
        "traitlets >=5.1.0",
        "xarray >=2022.6.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/m/metpy/metpy-1.7.1.tar.gz",
  "version": "1.7.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/metpy.json"
  }
}