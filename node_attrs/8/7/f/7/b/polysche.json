{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "bb0a587d86a6c98e19a1f894c7ea67a63ae75c7f",
  "feedstock_hash_ts": 1730865035,
  "feedstock_name": "polysche",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The goal of this C++17 library is to statically (eventually at compile-time) generate stencils involved in finite differences and finite volumes schemes that are based on polynomial interpolation.\nAn interpolation polynomial is generated by solving a set of linear equations defined by some operations (evaluation, derivation, integration, ...) applied to a canonical polynomial.\nOnce generated, this interpolation polynomial can be used as it (general formulation of the interpolation) or can be derivated and evaluated at a given point so that to recover the associated numerical scheme stencil.\nThe coefficients are computed in the rational space so that to avoid numerical precision issues (except integer overflow).\n",
      "home": "https://github.com/rolanddenis/PolySche",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Statically (constexpr) generate interpolating polynomial and associated numerical scheme from linear constraints"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "rolanddenis"
      ]
    },
    "package": {
      "name": "polysche",
      "version": "0.1.2"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "cb3f7c24fe4a81b292699724f52b159854afc1ae469080a852f2ed310330da49",
      "url": "https://github.com/rolanddenis/polysche/archive/v0.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -d \"${PREFIX}/include/polysche\"",
        "test -f \"${PREFIX}/include/polysche/rational.hpp\"",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfig.cmake",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfigVersion.cmake"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The goal of this C++17 library is to statically (eventually at compile-time) generate stencils involved in finite differences and finite volumes schemes that are based on polynomial interpolation.\nAn interpolation polynomial is generated by solving a set of linear equations defined by some operations (evaluation, derivation, integration, ...) applied to a canonical polynomial.\nOnce generated, this interpolation polynomial can be used as it (general formulation of the interpolation) or can be derivated and evaluated at a given point so that to recover the associated numerical scheme stencil.\nThe coefficients are computed in the rational space so that to avoid numerical precision issues (except integer overflow).\n",
      "home": "https://github.com/rolanddenis/PolySche",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Statically (constexpr) generate interpolating polynomial and associated numerical scheme from linear constraints"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "rolanddenis"
      ]
    },
    "package": {
      "name": "polysche",
      "version": "0.1.2"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "cb3f7c24fe4a81b292699724f52b159854afc1ae469080a852f2ed310330da49",
      "url": "https://github.com/rolanddenis/polysche/archive/v0.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -d \"${PREFIX}/include/polysche\"",
        "test -f \"${PREFIX}/include/polysche/rational.hpp\"",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfig.cmake",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfigVersion.cmake",
        "if not exist %LIBRARY_PREFIX%\\include\\polysche\\rational.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfigVersion.cmake (exit 1)"
      ]
    }
  },
  "name": "polysche",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The goal of this C++17 library is to statically (eventually at compile-time) generate stencils involved in finite differences and finite volumes schemes that are based on polynomial interpolation.\nAn interpolation polynomial is generated by solving a set of linear equations defined by some operations (evaluation, derivation, integration, ...) applied to a canonical polynomial.\nOnce generated, this interpolation polynomial can be used as it (general formulation of the interpolation) or can be derivated and evaluated at a given point so that to recover the associated numerical scheme stencil.\nThe coefficients are computed in the rational space so that to avoid numerical precision issues (except integer overflow).\n",
      "home": "https://github.com/rolanddenis/PolySche",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Statically (constexpr) generate interpolating polynomial and associated numerical scheme from linear constraints"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "rolanddenis"
      ]
    },
    "package": {
      "name": "polysche",
      "version": "0.1.2"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "cb3f7c24fe4a81b292699724f52b159854afc1ae469080a852f2ed310330da49",
      "url": "https://github.com/rolanddenis/polysche/archive/v0.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -d \"${PREFIX}/include/polysche\"",
        "test -f \"${PREFIX}/include/polysche/rational.hpp\"",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfig.cmake",
        "test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfigVersion.cmake"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "polysche"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/polysche.json"
  },
  "raw_meta_yaml": "{% set name = \"PolySche\" %}\n{% set version = \"0.1.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/rolanddenis/polysche/archive/v{{ version }}.tar.gz\n  sha256: cb3f7c24fe4a81b292699724f52b159854afc1ae469080a852f2ed310330da49\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n  run:\n\ntest:\n  commands:\n    - test -d \"${PREFIX}/include/polysche\"  # [unix]\n    - test -f \"${PREFIX}/include/polysche/rational.hpp\"  # [unix]\n    - test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfig.cmake  # [unix]\n    - test -f ${PREFIX}/lib/cmake/PolySche/PolyScheConfigVersion.cmake  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\polysche\\rational.hpp (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfig.cmake (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfigVersion.cmake (exit 1)  # [win]\n\nabout:\n  home: https://github.com/rolanddenis/PolySche\n  summary: 'Statically (constexpr) generate interpolating polynomial and associated numerical scheme from linear constraints'\n  description: |\n    The goal of this C++17 library is to statically (eventually at compile-time) generate stencils involved in finite differences and finite volumes schemes that are based on polynomial interpolation.\n    An interpolation polynomial is generated by solving a set of linear equations defined by some operations (evaluation, derivation, integration, ...) applied to a canonical polynomial.\n    Once generated, this interpolation polynomial can be used as it (general formulation of the interpolation) or can be derivated and evaluated at a given point so that to recover the associated numerical scheme stencil.\n    The coefficients are computed in the rational space so that to avoid numerical precision issues (except integer overflow).\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - rolanddenis\n",
  "req": {
    "__set__": true,
    "elements": [
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/rolanddenis/polysche/archive/v0.1.2.tar.gz",
  "version": "0.1.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/polysche.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The goal of this C++17 library is to statically (eventually at compile-time) generate stencils involved in finite differences and finite volumes schemes that are based on polynomial interpolation.\nAn interpolation polynomial is generated by solving a set of linear equations defined by some operations (evaluation, derivation, integration, ...) applied to a canonical polynomial.\nOnce generated, this interpolation polynomial can be used as it (general formulation of the interpolation) or can be derivated and evaluated at a given point so that to recover the associated numerical scheme stencil.\nThe coefficients are computed in the rational space so that to avoid numerical precision issues (except integer overflow).\n",
      "home": "https://github.com/rolanddenis/PolySche",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Statically (constexpr) generate interpolating polynomial and associated numerical scheme from linear constraints"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "rolanddenis"
      ]
    },
    "package": {
      "name": "polysche",
      "version": "0.1.2"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "cb3f7c24fe4a81b292699724f52b159854afc1ae469080a852f2ed310330da49",
      "url": "https://github.com/rolanddenis/polysche/archive/v0.1.2.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\include\\polysche\\rational.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\PolySche\\PolyScheConfigVersion.cmake (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}