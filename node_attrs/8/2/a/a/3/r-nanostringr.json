{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-nanostringr",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/OVCARE/nanostringr, https://ovcare.github.io/nanostringr",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Provides quality control (QC), normalization, and batch effect correction operations for 'NanoString nCounter' data, Talhouk et al. (2016) <doi:10.1371/journal.pone.0153844>.  Various metrics are used to determine which samples passed or failed QC.  Gene expression should first be normalized to housekeeping genes, before a reference-based approach is used to adjust for batch effects.  Raw NanoString data can be imported in the form of Reporter Code Count (RCC) files."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-nanostringr",
      "version": "0.6.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-assertthat",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ],
      "run": [
        "r-base",
        "r-assertthat",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04e47ba3b8b54747fea19b4ffb2b5a414ae52aa05c06721b94caf6e87f943dd9",
      "url": [
        "https://cran.r-project.org/src/contrib/nanostringr_0.6.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/nanostringr/nanostringr_0.6.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('nanostringr')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/OVCARE/nanostringr, https://ovcare.github.io/nanostringr",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Provides quality control (QC), normalization, and batch effect correction operations for 'NanoString nCounter' data, Talhouk et al. (2016) <doi:10.1371/journal.pone.0153844>.  Various metrics are used to determine which samples passed or failed QC.  Gene expression should first be normalized to housekeeping genes, before a reference-based approach is used to adjust for batch effects.  Raw NanoString data can be imported in the form of Reporter Code Count (RCC) files."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-nanostringr",
      "version": "0.6.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-assertthat",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ],
      "run": [
        "r-base",
        "r-assertthat",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04e47ba3b8b54747fea19b4ffb2b5a414ae52aa05c06721b94caf6e87f943dd9",
      "url": [
        "https://cran.r-project.org/src/contrib/nanostringr_0.6.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/nanostringr/nanostringr_0.6.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('nanostringr')\""
      ]
    }
  },
  "name": "r-nanostringr",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-nanostringr"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-nanostringr.json"
  },
  "raw_meta_yaml": "{% set version = \"0.6.1\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-nanostringr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/nanostringr_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/nanostringr/nanostringr_{{ version }}.tar.gz\n  sha256: 04e47ba3b8b54747fea19b4ffb2b5a414ae52aa05c06721b94caf6e87f943dd9\n\nbuild:\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-assertthat\n    - r-ccapp\n    - r-dplyr\n    - r-epir\n    - r-forcats\n    - r-magrittr\n    - r-purrr\n    - r-rlang\n    - r-tibble\n    - r-tidyr\n  run:\n    - r-base\n    - r-assertthat\n    - r-ccapp\n    - r-dplyr\n    - r-epir\n    - r-forcats\n    - r-magrittr\n    - r-purrr\n    - r-rlang\n    - r-tibble\n    - r-tidyr\n\ntest:\n  commands:\n    - $R -e \"library('nanostringr')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('nanostringr')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/OVCARE/nanostringr, https://ovcare.github.io/nanostringr\n  license: MIT\n  summary: Provides quality control (QC), normalization, and batch effect correction operations for 'NanoString nCounter' data, Talhouk et al. (2016) <doi:10.1371/journal.pone.0153844>.  Various metrics are used to determine which samples passed or failed QC.  Gene expression should first be normalized to housekeeping genes,\n    before a reference-based approach is used to adjust for batch effects.  Raw NanoString data can be imported in the form of Reporter Code Count (RCC) files.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Type: Package\n# Package: nanostringr\n# Title: Performs Quality Control, Data Normalization, and Batch Effect Correction for 'NanoString nCounter' Data\n# Version: 0.1.4\n# Date: 2019-04-23\n# Authors@R: c(person(given = \"Derek\", family = \"Chiu\", role = c(\"aut\", \"cre\"), email = \"dchiu@bccrc.ca\"), person(given = \"Aline\", family = \"Talhouk\", role = \"aut\", email = \"atalhouk@bccrc.ca\"), person(given = \"Samuel\", family = \"Leung\", role = \"aut\", email = \"Samuel.Leung@vch.ca\"))\n# Description: Provides quality control (QC), normalization, and batch effect correction operations for 'NanoString nCounter' data, Talhouk et al. (2016) <doi:10.1371/journal.pone.0153844>.  Various metrics are used to determine which samples passed or failed QC.  Gene expression should first be normalized to housekeeping genes, before a reference-based approach is used to adjust for batch effects.  Raw NanoString data can be imported in the form of Reporter Code Count (RCC) files.\n# License: MIT + file LICENSE\n# URL: https://github.com/OVCARE/nanostringr, https://ovcare.github.io/nanostringr\n# BugReports: https://github.com/OVCARE/nanostringr/issues\n# Depends: R (>= 3.5.0)\n# Imports: assertthat, ccaPP, dplyr, epiR, magrittr, purrr, rlang\n# Suggests: covr, knitr, rmarkdown, testthat\n# VignetteBuilder: knitr\n# Encoding: UTF-8\n# LazyData: TRUE\n# RoxygenNote: 6.1.1\n# NeedsCompilation: no\n# Packaged: 2019-05-09 19:02:04 UTC; dchiu\n# Author: Derek Chiu [aut, cre], Aline Talhouk [aut], Samuel Leung [aut]\n# Maintainer: Derek Chiu <dchiu@bccrc.ca>\n# Repository: CRAN\n# Date/Publication: 2019-05-09 19:20:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-assertthat",
      "r-base",
      "r-ccapp",
      "r-dplyr",
      "r-epir",
      "r-forcats",
      "r-magrittr",
      "r-purrr",
      "r-rlang",
      "r-tibble",
      "r-tidyr"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-assertthat",
        "r-base",
        "r-ccapp",
        "r-dplyr",
        "r-epir",
        "r-forcats",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-tibble",
        "r-tidyr"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/nanostringr_0.6.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/nanostringr/nanostringr_0.6.1.tar.gz"
  ],
  "version": "0.6.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-nanostringr.json"
  }
}