{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64",
      "win_arm64": "win_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "rust",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo x86_64-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-x86_64-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-x86_64-unknown-linux-gnu",
            "gcc_impl_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-pc-windows-msvc",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-pc-windows-msvc",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-pc-windows-msvc",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-pc-windows-msvc)\"",
            "echo x86_64-pc-windows-msvc"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "e453bae1c68d02fe2eae065c5452d5731308164cd154154c6ee442d2fa590685",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-unknown-linux-gnu.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0e9fc3777909512989188023eb1124f788defa2afefa5726d7b690678f426e47",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "6671a532000d1fad538da3477d2089c15a78452fad7cf303cb50eacf39949c32",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "ee4bf4c2928598359fd517445ec2af4b46b2926730c111f2ffbac2a1b9550b72",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "78f1a3b2dc79d6b42cc7ff54fd8ce0d1c2e498ec7783ff01376988f87210c4ae",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios-sim.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "3d5d41ecea4cafa623c12d1acc694505aa6b12c7f2265a1f18cb0b06fee6d7e9",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "e592d0855d83d02d8dfc35b1a954af177d640abedef610d909df4abcc45ac457",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-arm-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "8aa2cea2f074a1496035a51d13bc91d2884e07b4f01d1e675ffbfab664bfa5f6",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-armv7-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "9cbd75f7c51fc6389b2b7100e5bf88c8a2457dbed19feb4181c143262e5b348b",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-i686-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "2f441da296b1848b6e68d20b2cb25d77fe10966433070ce93326b5f36b369403",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "cbcd4ea55884e9c3d8d72e1497c70e9ed18c4a824d4d0f049006a245229d11af",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-unknown.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "73d3c17f4b06df7ccfb5a5f8e2ce8f78ae550c4bdfc4d8d35113ab4499bfc278",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-emscripten.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0aa0ca1d58eeff8faec557922a6b6321556ee0679ffa8c026d4963cf202764f5",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-pc-windows-msvc.tar.xz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "rust-std-x86_64-unknown-linux-gnu",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "gcc_impl_linux-64",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo aarch64-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-aarch64-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-aarch64-unknown-linux-gnu",
            "gcc_impl_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "59f1883fcdd2d7243d2fd1ed19f22e05219251227abacfa3d656aebfbcc5e838",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-unknown-linux-gnu.tar.xz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "rust-std-aarch64-unknown-linux-gnu",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "gcc_impl_linux-aarch64",
        "rust-std-aarch64-unknown-linux-gnu",
        "sysroot_linux-aarch64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-powerpc64le-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo powerpc64le-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-powerpc64le-unknown-linux-gnu",
            "gcc_impl_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo powerpc64le-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "4061405099dc0aba379fe7b7a616d320272ef9325114dfa8f106c303f9b5695c",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-powerpc64le-unknown-linux-gnu.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "gcc_impl_linux-ppc64le",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "sysroot_linux-ppc64le"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo x86_64-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-x86_64-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-x86_64-unknown-linux-gnu",
            "gcc_impl_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-pc-windows-msvc",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-pc-windows-msvc",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-pc-windows-msvc",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-pc-windows-msvc)\"",
            "echo x86_64-pc-windows-msvc"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo aarch64-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-aarch64-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-aarch64-unknown-linux-gnu",
            "gcc_impl_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "noarch": "generic"
        },
        "name": "rust-std-powerpc64le-unknown-linux-gnu",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo powerpc64le-unknown-linux-gnu"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "missing_dso_whitelist": [
            "/lib64/librt.so.1",
            "/lib64/libdl.so.2",
            "/lib64/libpthread.so.0",
            "/lib64/libm.so.6",
            "/lib64/libc.so.6",
            "/lib64/ld-linux-x86-64.so.2"
          ],
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu",
            "c_compiler_stub",
            "c_stdlib_stub",
            "zlib"
          ],
          "run": [
            "rust-std-powerpc64le-unknown-linux-gnu",
            "gcc_impl_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo powerpc64le-unknown-linux-gnu"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-apple-darwin",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo x86_64-apple-darwin"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust-std-x86_64-apple-darwin"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-apple-darwin"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-apple-darwin",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo aarch64-apple-darwin"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust-std-aarch64-apple-darwin"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-apple-darwin"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-pc-windows-msvc",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
            "echo x86_64-pc-windows-msvc"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust-std-x86_64-pc-windows-msvc"
          ]
        },
        "script": "install-rust.bat",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-pc-windows-msvc",
            "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
          ],
          "requires": [
            "posix"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "win_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "win_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
            "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
            "echo x86_64-linux-android"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-pc-windows-msvc",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
            "echo aarch64-pc-windows-msvc"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust-std-aarch64-pc-windows-msvc"
          ]
        },
        "script": "install-rust.bat",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-pc-windows-msvc",
            "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
          ],
          "requires": [
            "posix"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "win_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "win_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
            "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [
        "posix"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "e453bae1c68d02fe2eae065c5452d5731308164cd154154c6ee442d2fa590685",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-unknown-linux-gnu.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0e9fc3777909512989188023eb1124f788defa2afefa5726d7b690678f426e47",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "6671a532000d1fad538da3477d2089c15a78452fad7cf303cb50eacf39949c32",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "ee4bf4c2928598359fd517445ec2af4b46b2926730c111f2ffbac2a1b9550b72",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "78f1a3b2dc79d6b42cc7ff54fd8ce0d1c2e498ec7783ff01376988f87210c4ae",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios-sim.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "3d5d41ecea4cafa623c12d1acc694505aa6b12c7f2265a1f18cb0b06fee6d7e9",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "e592d0855d83d02d8dfc35b1a954af177d640abedef610d909df4abcc45ac457",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-arm-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "8aa2cea2f074a1496035a51d13bc91d2884e07b4f01d1e675ffbfab664bfa5f6",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-armv7-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "9cbd75f7c51fc6389b2b7100e5bf88c8a2457dbed19feb4181c143262e5b348b",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-i686-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "2f441da296b1848b6e68d20b2cb25d77fe10966433070ce93326b5f36b369403",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "cbcd4ea55884e9c3d8d72e1497c70e9ed18c4a824d4d0f049006a245229d11af",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-unknown.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "73d3c17f4b06df7ccfb5a5f8e2ce8f78ae550c4bdfc4d8d35113ab4499bfc278",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-emscripten.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0aa0ca1d58eeff8faec557922a6b6321556ee0679ffa8c026d4963cf202764f5",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-pc-windows-msvc.tar.xz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "59f1883fcdd2d7243d2fd1ed19f22e05219251227abacfa3d656aebfbcc5e838",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-unknown-linux-gnu.tar.xz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "4061405099dc0aba379fe7b7a616d320272ef9325114dfa8f106c303f9b5695c",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-powerpc64le-unknown-linux-gnu.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "3d1d24e1d4bedb421ca1a16060c21f4d803eaefba585c0b5b5d0b1e56692ef4b",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-apple-darwin.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "a11b52e34f5e80cb25d49f7943ae60e0b069b431727a4c09b2c890ceebee3687",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-apple-darwin.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "1aa997bcda4258795ea9eee1430843928dc185fad40067b180593456057a9126",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0e9fc3777909512989188023eb1124f788defa2afefa5726d7b690678f426e47",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "6671a532000d1fad538da3477d2089c15a78452fad7cf303cb50eacf39949c32",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "ee4bf4c2928598359fd517445ec2af4b46b2926730c111f2ffbac2a1b9550b72",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "78f1a3b2dc79d6b42cc7ff54fd8ce0d1c2e498ec7783ff01376988f87210c4ae",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios-sim.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "3d5d41ecea4cafa623c12d1acc694505aa6b12c7f2265a1f18cb0b06fee6d7e9",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "e592d0855d83d02d8dfc35b1a954af177d640abedef610d909df4abcc45ac457",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-arm-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "8aa2cea2f074a1496035a51d13bc91d2884e07b4f01d1e675ffbfab664bfa5f6",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-armv7-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "9cbd75f7c51fc6389b2b7100e5bf88c8a2457dbed19feb4181c143262e5b348b",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-i686-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "2f441da296b1848b6e68d20b2cb25d77fe10966433070ce93326b5f36b369403",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "cbcd4ea55884e9c3d8d72e1497c70e9ed18c4a824d4d0f049006a245229d11af",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-unknown.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "73d3c17f4b06df7ccfb5a5f8e2ce8f78ae550c4bdfc4d8d35113ab4499bfc278",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-emscripten.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0aa0ca1d58eeff8faec557922a6b6321556ee0679ffa8c026d4963cf202764f5",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-pc-windows-msvc.tar.xz"
      },
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "d9ad7d70dc50f366464071f1676d7caa80a54c00b487883ce1eca372cb96a387",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "name": "rust-split",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-apple-darwin",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo x86_64-apple-darwin"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust-std-x86_64-apple-darwin"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-apple-darwin"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "3d1d24e1d4bedb421ca1a16060c21f4d803eaefba585c0b5b5d0b1e56692ef4b",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-apple-darwin.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-x86_64-apple-darwin"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "rust-std-x86_64-apple-darwin"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-apple-darwin",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib",
            "echo aarch64-apple-darwin"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [],
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust-std-aarch64-apple-darwin"
          ]
        },
        "script": "install-rust.sh",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-apple-darwin"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock",
            "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "unix_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.sh",
        "test": {
          "commands": [
            "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
            "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
            "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "a11b52e34f5e80cb25d49f7943ae60e0b069b431727a4c09b2c890ceebee3687",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-apple-darwin.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-apple-darwin"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "rust-std-aarch64-apple-darwin"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "rust",
      "rust-src",
      "rust-std-aarch64-apple-darwin",
      "rust-std-aarch64-pc-windows-msvc",
      "rust-std-aarch64-unknown-linux-gnu",
      "rust-std-powerpc64le-unknown-linux-gnu",
      "rust-std-x86_64-apple-darwin",
      "rust-std-x86_64-linux-android",
      "rust-std-x86_64-pc-windows-msvc",
      "rust-std-x86_64-unknown-linux-gnu"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64",
    "win_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/rust.json"
  },
  "raw_meta_yaml": "{% set version = \"1.90.0\" %}\n\npackage:\n  name: rust-split\n  version: {{ version }}\n\nsource:\n  # Note! This source file specification is structured specifically to interact\n  # well with the autotick bot. Importantly, the `patches:` block actually\n  # applies to *all* of these inputs, not just the last one in the list, because\n  # of the way that the YAML selector processing works.\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]\n    sha256: e453bae1c68d02fe2eae065c5452d5731308164cd154154c6ee442d2fa590685  # [linux and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]\n    sha256: 59f1883fcdd2d7243d2fd1ed19f22e05219251227abacfa3d656aebfbcc5e838  # [aarch64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]\n    sha256: 4061405099dc0aba379fe7b7a616d320272ef9325114dfa8f106c303f9b5695c  # [ppc64le]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]\n    sha256: 3d1d24e1d4bedb421ca1a16060c21f4d803eaefba585c0b5b5d0b1e56692ef4b  # [osx and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]\n    sha256: a11b52e34f5e80cb25d49f7943ae60e0b069b431727a4c09b2c890ceebee3687  # [osx and arm64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]\n    sha256: 1aa997bcda4258795ea9eee1430843928dc185fad40067b180593456057a9126  # [win64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-pc-windows-msvc.tar.gz  # [win and arm64]\n    sha256: d9ad7d70dc50f366464071f1676d7caa80a54c00b487883ce1eca372cb96a387  # [win and arm64]\n    patches:\n      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff\n  # End of block of primary source files.\n  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz\n    sha256: e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2\n    folder: rust-src\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 0e9fc3777909512989188023eb1124f788defa2afefa5726d7b690678f426e47  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 6671a532000d1fad538da3477d2089c15a78452fad7cf303cb50eacf39949c32  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [(linux or win) and x86_64]\n    sha256: ee4bf4c2928598359fd517445ec2af4b46b2926730c111f2ffbac2a1b9550b72  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]\n    sha256: 78f1a3b2dc79d6b42cc7ff54fd8ce0d1c2e498ec7783ff01376988f87210c4ae  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 3d5d41ecea4cafa623c12d1acc694505aa6b12c7f2265a1f18cb0b06fee6d7e9  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: e592d0855d83d02d8dfc35b1a954af177d640abedef610d909df4abcc45ac457  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: 8aa2cea2f074a1496035a51d13bc91d2884e07b4f01d1e675ffbfab664bfa5f6  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 9cbd75f7c51fc6389b2b7100e5bf88c8a2457dbed19feb4181c143262e5b348b  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 2f441da296b1848b6e68d20b2cb25d77fe10966433070ce93326b5f36b369403  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]\n    sha256: cbcd4ea55884e9c3d8d72e1497c70e9ed18c4a824d4d0f049006a245229d11af  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-emscripten.tar.gz  # [(linux or win) and x86_64]\n    sha256: 73d3c17f4b06df7ccfb5a5f8e2ce8f78ae550c4bdfc4d8d35113ab4499bfc278  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-pc-windows-msvc.tar.xz  # [(linux or win) and x86_64]\n    sha256: 0aa0ca1d58eeff8faec557922a6b6321556ee0679ffa8c026d4963cf202764f5  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - posix  # [win]\n  host:\n\noutputs:\n  - name: rust-std-{{ rust_arch }}\n    build:\n      noarch: generic\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n      merge_build_host: false\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n      run:\n        # The directory structure of windows and unix is different.\n        # We should not install the bundled rust-std-x86_64-pc-windows-msvc from this output on unix for example.\n        - __unix  # [unix]\n        - __win  # [win]\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    script: install-rust-std.sh  # [unix]\n    script: install-rust-std.bat  # [win]\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib   # [unix]\n        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]\n        - echo {{ rust_arch }}\n\n  - name: rust\n    script: install-rust.sh  # [unix]\n    script: install-rust.bat  # [win]\n    build:\n      # the distributed binaries are already relocatable\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib\n        # - /lib64/libgcc_s.so.1  # [linux]\n        # - /lib64/libz.so.1  # [linux]\n      run_exports:   # [(osx and x86_64) or linux]\n        strong_constrains:   # [(osx and x86_64) or linux]\n          - __osx >={{ c_stdlib_version }}  # [osx and x86_64]\n          - __glibc >={{ c_stdlib_version }}  # [linux]\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables\n        - {{ stdlib('c') }}  # [linux]\n        # zlib is linked by **/lib/libLLVM-*-rust-*.so\n        - zlib  # [linux]\n      run:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - gcc_impl_{{ target_platform }}  # [linux]\n        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}  # [linux]\n    test:\n      requires:\n        - posix  # [win]\n      commands:\n        - rustc --help\n        - rustdoc --help\n        - cargo --help\n        - cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv\n        - echo {{ rust_arch }}\n        - if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1  # [win]\n\n  - name: rust-src\n    script: install-rust-src.sh  # [unix]\n    script: install-rust-src.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-src and rust is confusing.\n        # `rust-src` is specific to the toolchain in `rustup`,\n        # and we would like to keep that behavior.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -f \"${PREFIX}\"/lib/rustlib/src/rust/library/Cargo.lock  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\"  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1  # [win]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1  # [win]\n\n\n  - name: rust-std-{{ rust_std_extra }}\n    script: install-rust-std-extra.sh  # [unix]\n    script: install-rust-std-extra.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}\" exit 1  # [win]\n        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v {{ rust_std_extra }})\"  # [unix]\n        - dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"{{ rust_std_extra }}\" >nul || exit 1  # [win]\n        - echo {{ rust_std_extra }}\n\nabout:\n  home: https://www.rust-lang.org\n  license: MIT\n  license_file:\n    - LICENSE-APACHE\n    - LICENSE-MIT\n  summary: |\n    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\n    This package provides the compiler (rustc) and the documentation utilities rustdoc.\n  dev_url: https://doc.rust-lang.org/std/\n  doc_url: https://www.rust-lang.org/en-US/documentation.html\n\nextra:\n  recipe-maintainers:\n    - timkpaine\n    - xhochy\n    - johanneskoester\n    - abhi18av\n    - pkgw\n    - dlaehnemann\n    - isuruf\n    - mbargull\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "__win",
      "c_compiler_stub",
      "c_stdlib_stub",
      "gcc_impl_linux-64",
      "gcc_impl_linux-aarch64",
      "gcc_impl_linux-ppc64le",
      "posix",
      "rust-std-aarch64-apple-darwin",
      "rust-std-aarch64-pc-windows-msvc",
      "rust-std-aarch64-unknown-linux-gnu",
      "rust-std-powerpc64le-unknown-linux-gnu",
      "rust-std-x86_64-apple-darwin",
      "rust-std-x86_64-pc-windows-msvc",
      "rust-std-x86_64-unknown-linux-gnu",
      "sysroot_linux-64",
      "sysroot_linux-aarch64",
      "sysroot_linux-ppc64le",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "linux-sysroot",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "gcc_impl_linux-64",
        "gcc_impl_linux-aarch64",
        "gcc_impl_linux-ppc64le",
        "linux-sysroot",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "gcc_impl_linux-64",
        "gcc_impl_linux-aarch64",
        "gcc_impl_linux-ppc64le",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-64 >=2.17",
        "sysroot_linux-aarch64 >=2.17",
        "sysroot_linux-ppc64le >=2.17"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    }
  },
  "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-unknown-linux-gnu.tar.gz",
  "version": "1.90.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/rust.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-x86_64-pc-windows-msvc",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
            "echo x86_64-pc-windows-msvc"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust-std-x86_64-pc-windows-msvc"
          ]
        },
        "script": "install-rust.bat",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo x86_64-pc-windows-msvc",
            "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
          ],
          "requires": [
            "posix"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "win_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": false,
          "string": "win_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
            "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [
        "posix"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "1aa997bcda4258795ea9eee1430843928dc185fad40067b180593456057a9126",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0e9fc3777909512989188023eb1124f788defa2afefa5726d7b690678f426e47",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "6671a532000d1fad538da3477d2089c15a78452fad7cf303cb50eacf39949c32",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-apple-ios.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "ee4bf4c2928598359fd517445ec2af4b46b2926730c111f2ffbac2a1b9550b72",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "78f1a3b2dc79d6b42cc7ff54fd8ce0d1c2e498ec7783ff01376988f87210c4ae",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-apple-ios-sim.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "3d5d41ecea4cafa623c12d1acc694505aa6b12c7f2265a1f18cb0b06fee6d7e9",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "e592d0855d83d02d8dfc35b1a954af177d640abedef610d909df4abcc45ac457",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-arm-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "8aa2cea2f074a1496035a51d13bc91d2884e07b4f01d1e675ffbfab664bfa5f6",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-armv7-linux-androideabi.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "9cbd75f7c51fc6389b2b7100e5bf88c8a2457dbed19feb4181c143262e5b348b",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-i686-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "2f441da296b1848b6e68d20b2cb25d77fe10966433070ce93326b5f36b369403",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-x86_64-linux-android.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "cbcd4ea55884e9c3d8d72e1497c70e9ed18c4a824d4d0f049006a245229d11af",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-unknown.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "73d3c17f4b06df7ccfb5a5f8e2ce8f78ae550c4bdfc4d8d35113ab4499bfc278",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-wasm32-unknown-emscripten.tar.gz"
      },
      {
        "folder": "rust-std",
        "sha256": "0aa0ca1d58eeff8faec557922a6b6321556ee0679ffa8c026d4963cf202764f5",
        "url": "https://static.rust-lang.org/dist/rust-std-1.90.0-aarch64-pc-windows-msvc.tar.xz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    }
  },
  "win_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://doc.rust-lang.org/std/",
      "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
      "home": "https://www.rust-lang.org",
      "license": "MIT",
      "license_file": [
        "LICENSE-APACHE",
        "LICENSE-MIT"
      ],
      "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine",
        "xhochy",
        "johanneskoester",
        "abhi18av",
        "pkgw",
        "dlaehnemann",
        "isuruf",
        "mbargull"
      ]
    },
    "outputs": [
      {
        "build": {
          "binary_relocation": false,
          "merge_build_host": false,
          "noarch": "generic"
        },
        "name": "rust-std-aarch64-pc-windows-msvc",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
            "echo aarch64-pc-windows-msvc"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false
        },
        "name": "rust",
        "requirements": {
          "build": [
            "posix"
          ],
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust-std-aarch64-pc-windows-msvc"
          ]
        },
        "script": "install-rust.bat",
        "test": {
          "commands": [
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
            "echo aarch64-pc-windows-msvc",
            "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
          ],
          "requires": [
            "posix"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "win_0"
        },
        "name": "rust-src",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-src.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/library/Cargo.lock\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true,
          "string": "win_0"
        },
        "name": "rust-std-x86_64-linux-android",
        "requirements": {
          "build": [
            "posix"
          ],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "rust"
          ]
        },
        "script": "install-rust-std-extra.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
            "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
            "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
            "echo x86_64-linux-android"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-split",
      "version": "1.90.0"
    },
    "requirements": {
      "build": [
        "posix"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
        ],
        "sha256": "d9ad7d70dc50f366464071f1676d7caa80a54c00b487883ce1eca372cb96a387",
        "url": "https://static.rust-lang.org/dist/rust-1.90.0-aarch64-pc-windows-msvc.tar.gz"
      },
      {
        "folder": "rust-src",
        "sha256": "e277730cb6257eec58eb6060bb089a665e507c02ba35f6b6e03fbac40fbfa2c2",
        "url": "https://static.rust-lang.org/dist/rust-src-1.90.0.tar.gz"
      }
    ]
  },
  "win_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-pc-windows-msvc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "rust-std-aarch64-pc-windows-msvc"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "posix"
      ]
    }
  }
}