{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "pyerfa",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "name": "pyerfa",
  "osx_64_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyerfa"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyerfa.json"
  },
  "raw_meta_yaml": "{% set name = \"pyerfa\" %}\n{% set version = \"2.0.1.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0\n\nbuild:\n  number: 1\n  skip: true  # [py<39]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n  host:\n    - pip\n    - setuptools_scm\n    - setuptools\n    - jinja2 >=2.10.3\n    - python\n    - numpy\n    - packaging\n  run:\n    - python\n\ntest:\n  imports:\n    - erfa\n\n\nabout:\n  home: https://pyerfa.readthedocs.io/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.rst\n  summary: Python bindings for ERFA routines\n  description: |\n    PyERFA is the Python wrapper for the ERFA library (Essential Routines for\n    Fundamental Astronomy), a C library containing key algorithms for astronomy,\n    which is based on the SOFA library published by the International\n    Astronomical Union (IAU). All C routines are wrapped as Numpy universal\n    functions, so that they can be called with scalar or array inputs.\n\n    The project is a split of astropy._erfa module, developed in the context of\n    Astropy project, into a standalone package. It contains the ERFA C source\n    code as a git submodule. The wrapping is done with help of the Jinja2\n    template engine.\n  doc_url: https://pyerfa.readthedocs.io/\n  dev_url: https://github.com/liberfa/pyerfa\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - astrofrog\n    - avalentino\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "jinja2",
      "numpy",
      "packaging",
      "pip",
      "python",
      "setuptools",
      "setuptools_scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2 >=2.10.3",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz",
  "version": "2.0.1.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyerfa.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "PyERFA is the Python wrapper for the ERFA library (Essential Routines for\nFundamental Astronomy), a C library containing key algorithms for astronomy,\nwhich is based on the SOFA library published by the International\nAstronomical Union (IAU). All C routines are wrapped as Numpy universal\nfunctions, so that they can be called with scalar or array inputs.\n\nThe project is a split of astropy._erfa module, developed in the context of\nAstropy project, into a standalone package. It contains the ERFA C source\ncode as a git submodule. The wrapping is done with help of the Jinja2\ntemplate engine.\n",
      "dev_url": "https://github.com/liberfa/pyerfa",
      "doc_url": "https://pyerfa.readthedocs.io/",
      "home": "https://pyerfa.readthedocs.io/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "Python bindings for ERFA routines"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "astrofrog",
        "avalentino"
      ]
    },
    "package": {
      "name": "pyerfa",
      "version": "2.0.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "pip",
        "setuptools_scm",
        "setuptools",
        "jinja2 >=2.10.3",
        "python",
        "numpy",
        "packaging"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "17d6b24fe4846c65d5e7d8c362dcb08199dc63b30a236aedd73875cc83e1f6c0",
      "url": "https://pypi.org/packages/source/p/pyerfa/pyerfa-2.0.1.5.tar.gz"
    },
    "test": {
      "imports": [
        "erfa"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "jinja2",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}