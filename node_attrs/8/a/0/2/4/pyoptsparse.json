{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "SET_PAGEFILE": "True"
        }
      },
      "store_build_artifacts": false
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "pyoptsparse",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt",
        "libpgmath"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "name": "pyoptsparse",
  "osx_64_meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyoptsparse"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyoptsparse.json"
  },
  "raw_meta_yaml": "{% set name = \"pyoptsparse\" %}\n{% set version = \"2.14.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mdolab/pyoptsparse/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791\n  patches:\n    - skip-test-macOS.patch\n    - skip-second-NSGA2-test.patch\n    - update-CONMIN-tol.patch\n\nbuild:\n  number: 1\n  skip: true  # [python_impl == 'pypy']\n  skip: true  # [win and vc<14]\n  skip: true  # [py==38]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - cross-python_{{ target_platform }}      # [build_platform != target_platform]\n    - python\n    - setuptools\n    - ninja\n    - numpy\n    - meson >=1.3.2\n    - python-build\n    - pip\n    - swig\n    - pkg-config\n\n  host:\n    - python\n    - numpy\n    - cyipopt\n    - libpgmath                               # [win]\n\n  run:\n    - python\n    - sqlitedict >=1.6\n    - scipy >1.2\n    - mdolab-baseclasses >=1.3.1\n    - packaging\n\ntest:\n  imports:\n    - pyoptsparse\n\n  source_files:\n    - tests\n\n  requires:\n    - pip\n    - testflo\n    - parameterized\n    - setuptools\n\n  commands:\n    - testflo -n 1 --pre_announce --verbose .\n    - pip check\n\nabout:\n  home: https://mdolab-pyoptsparse.readthedocs-hosted.com/\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE\n  summary: Package for formulating and solving nonlinear constrained optimization problems.\n  description: |\n    pyOptSparse is an object-oriented framework for formulating and solving\n    nonlinear constrained optimization problems in an efficient, reusable, and\n    portable manner. It is a fork of pyOpt that uses sparse matrices throughout\n    the code to more efficiently handle large-scale optimization problems.\n    Interfaces are provided for a number of optimizers -- for the conda package the optimizers\n    ALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n\n\n  doc_url: https://mdolab-pyoptsparse.readthedocs-hosted.com/\n  dev_url: https://github.com/mdolab/pyoptsparse\n\nextra:\n  recipe-maintainers:\n    - ewu63\n    - marcomangano\n    - eirikurj\n    - whophil\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "cyipopt",
      "fortran_compiler_stub",
      "libpgmath",
      "mdolab-baseclasses",
      "meson",
      "ninja",
      "numpy",
      "packaging",
      "pip",
      "pkg-config",
      "python",
      "python-build",
      "scipy",
      "setuptools",
      "sqlitedict",
      "swig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cyipopt",
        "fortran_compiler_stub",
        "libpgmath",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson >=1.3.2",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "libpgmath",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses >=1.3.1",
        "packaging",
        "python",
        "scipy >1.2",
        "sqlitedict >=1.6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  },
  "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz",
  "version": "2.14.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyoptsparse.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "pyOptSparse is an object-oriented framework for formulating and solving\nnonlinear constrained optimization problems in an efficient, reusable, and\nportable manner. It is a fork of pyOpt that uses sparse matrices throughout\nthe code to more efficiently handle large-scale optimization problems.\nInterfaces are provided for a number of optimizers -- for the conda package the optimizers\nALPSO, CONMIN, IPOPT, NSGA2, PSQP, and SLSQP are supported.\n",
      "dev_url": "https://github.com/mdolab/pyoptsparse",
      "doc_url": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "home": "https://mdolab-pyoptsparse.readthedocs-hosted.com/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "Package for formulating and solving nonlinear constrained optimization problems."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "ewu63",
        "marcomangano",
        "eirikurj",
        "whophil"
      ]
    },
    "package": {
      "name": "pyoptsparse",
      "version": "2.14.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python",
        "setuptools",
        "ninja",
        "numpy",
        "meson >=1.3.2",
        "python-build",
        "pip",
        "swig",
        "pkg-config"
      ],
      "host": [
        "python",
        "numpy",
        "cyipopt",
        "libpgmath"
      ],
      "run": [
        "python",
        "sqlitedict >=1.6",
        "scipy >1.2",
        "mdolab-baseclasses >=1.3.1",
        "packaging"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "skip-test-macOS.patch",
        "skip-second-NSGA2-test.patch",
        "update-CONMIN-tol.patch"
      ],
      "sha256": "5317eb1323455d88872bd5638055c231298e04da6b1c66dd847c6af70f392791",
      "url": "https://github.com/mdolab/pyoptsparse/archive/refs/tags/v2.14.2.tar.gz"
    },
    "test": {
      "commands": [
        "testflo -n 1 --pre_announce --verbose .",
        "pip check"
      ],
      "imports": [
        "pyoptsparse"
      ],
      "requires": [
        "pip",
        "testflo",
        "parameterized",
        "setuptools"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "meson",
        "ninja",
        "numpy",
        "pip",
        "pkg-config",
        "python",
        "python-build",
        "setuptools",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cyipopt",
        "libpgmath",
        "numpy",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mdolab-baseclasses",
        "packaging",
        "python",
        "scipy",
        "sqlitedict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pip",
        "setuptools",
        "testflo"
      ]
    }
  }
}