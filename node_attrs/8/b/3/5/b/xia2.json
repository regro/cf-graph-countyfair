{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "xia2",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "An expert system for automated reduction of X-Ray\ndiffraction data from macromolecular crystals\n",
      "dev_url": "https://github.com/xia2/xia2",
      "doc_url": "https://xia2.github.io/",
      "home": "https://github.com/xia2/xia2",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "xia2/LICENSE",
      "summary": "Automated reduction of X-Ray diffraction data"
    },
    "build": {
      "entry_points": [
        "dev.xia2.check_mosaic = xia2.cli.check_mosaic:run",
        "dev.xia2.create_mask = xia2.cli.create_mask:run",
        "dev.xia2.file_statistics = xia2.cli.file_statistics:run",
        "dev.xia2.make_sphinx_html = xia2.cli.make_sphinx_html:run",
        "dev.xia2.show_mask = xia2.cli.show_mask:run",
        "dev.xia2.show_mtz_cells = xia2.cli.show_mtz_cells:run",
        "xia2.ssx = xia2.cli.ssx:run",
        "xia2.ssx_reduce = xia2.cli.ssx_reduce:run",
        "xia2.add_free_set = xia2.cli.add_free_set:run",
        "xia2.compare_merging_stats = xia2.cli.compare_merging_stats:run",
        "xia2.delta_cc_half = xia2.cli.delta_cc_half:run",
        "xia2.get_image_number = xia2.cli.get_image_number:run",
        "xia2.html = xia2.cli.xia2_html:run_with_log",
        "xia2.index = xia2.cli.index:run_with_log",
        "xia2.integrate = xia2.cli.integrate:run_with_log",
        "xia2.is_doing = xia2.cli.is_doing:main",
        "xia2.ispyb_json = xia2.cli.ispyb_json:run",
        "xia2.ispyb_xml = xia2.cli.ispyb_xml:run",
        "xia2.merging_statistics = xia2.cli.merging_statistics:run",
        "xia2.multiplex = xia2.cli.multiplex:run",
        "xia2.npp = xia2.cli.npp:run",
        "xia2.overload = xia2.cli.overload:run",
        "xia2.plot_multiplicity = xia2.cli.plot_multiplicity:run",
        "xia2.print = xia2.cli.print:run_with_log",
        "xia2.rebatch = xia2.cli.rebatch:run_with_log",
        "xia2.report = xia2.cli.report:run_with_log",
        "xia2.rescale = xia2.cli.rescale:run_with_log",
        "xia2.setup = xia2.cli.setup:run",
        "xia2.small_molecule = xia2.cli.small_molecule:run",
        "xia2.strategy = xia2.cli.strategy:run_with_log",
        "xia2.table1 = xia2.cli.table1:run",
        "xia2.to_shelx = xia2.cli.to_shelx:run",
        "xia2.to_shelxcde = xia2.cli.to_shelxcde:run",
        "xia2 = xia2.cli.xia2_main:run",
        "xia2.cluster_analysis = xia2.cli.cluster_analysis:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install ./xia2 -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "xia2",
      "version": "3.24.1"
    },
    "requirements": {
      "host": [
        "cctbx-base",
        "dials =3.24",
        "dxtbx =3.24",
        "pip",
        "python 3.10",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "jinja2",
        "python >=3.10",
        "pyyaml",
        "tabulate"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "xia2",
      "sha256": "6895e7d194ebc21826d48520537578d9c4cf712bd2ae13119d0b378887a41911",
      "url": "https://github.com/xia2/xia2/archive/refs/tags/v3.24.1.tar.gz"
    },
    "test": {
      "commands": [
        "pytest xia2/tests/ --regression-full",
        "pip check"
      ],
      "imports": [
        "xia2"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip",
        "python 3.10"
      ],
      "source_files": [
        "xia2/tests",
        "xia2/conftest.py"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "jinja2",
        "python",
        "pyyaml",
        "tabulate"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "An expert system for automated reduction of X-Ray\ndiffraction data from macromolecular crystals\n",
      "dev_url": "https://github.com/xia2/xia2",
      "doc_url": "https://xia2.github.io/",
      "home": "https://github.com/xia2/xia2",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "xia2/LICENSE",
      "summary": "Automated reduction of X-Ray diffraction data"
    },
    "build": {
      "entry_points": [
        "dev.xia2.check_mosaic = xia2.cli.check_mosaic:run",
        "dev.xia2.create_mask = xia2.cli.create_mask:run",
        "dev.xia2.file_statistics = xia2.cli.file_statistics:run",
        "dev.xia2.make_sphinx_html = xia2.cli.make_sphinx_html:run",
        "dev.xia2.show_mask = xia2.cli.show_mask:run",
        "dev.xia2.show_mtz_cells = xia2.cli.show_mtz_cells:run",
        "xia2.ssx = xia2.cli.ssx:run",
        "xia2.ssx_reduce = xia2.cli.ssx_reduce:run",
        "xia2.add_free_set = xia2.cli.add_free_set:run",
        "xia2.compare_merging_stats = xia2.cli.compare_merging_stats:run",
        "xia2.delta_cc_half = xia2.cli.delta_cc_half:run",
        "xia2.get_image_number = xia2.cli.get_image_number:run",
        "xia2.html = xia2.cli.xia2_html:run_with_log",
        "xia2.index = xia2.cli.index:run_with_log",
        "xia2.integrate = xia2.cli.integrate:run_with_log",
        "xia2.is_doing = xia2.cli.is_doing:main",
        "xia2.ispyb_json = xia2.cli.ispyb_json:run",
        "xia2.ispyb_xml = xia2.cli.ispyb_xml:run",
        "xia2.merging_statistics = xia2.cli.merging_statistics:run",
        "xia2.multiplex = xia2.cli.multiplex:run",
        "xia2.npp = xia2.cli.npp:run",
        "xia2.overload = xia2.cli.overload:run",
        "xia2.plot_multiplicity = xia2.cli.plot_multiplicity:run",
        "xia2.print = xia2.cli.print:run_with_log",
        "xia2.rebatch = xia2.cli.rebatch:run_with_log",
        "xia2.report = xia2.cli.report:run_with_log",
        "xia2.rescale = xia2.cli.rescale:run_with_log",
        "xia2.setup = xia2.cli.setup:run",
        "xia2.small_molecule = xia2.cli.small_molecule:run",
        "xia2.strategy = xia2.cli.strategy:run_with_log",
        "xia2.table1 = xia2.cli.table1:run",
        "xia2.to_shelx = xia2.cli.to_shelx:run",
        "xia2.to_shelxcde = xia2.cli.to_shelxcde:run",
        "xia2 = xia2.cli.xia2_main:run",
        "xia2.cluster_analysis = xia2.cli.cluster_analysis:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install ./xia2 -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "xia2",
      "version": "3.24.1"
    },
    "requirements": {
      "host": [
        "cctbx-base",
        "dials =3.24",
        "dxtbx =3.24",
        "pip",
        "python 3.10",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "jinja2",
        "python >=3.10",
        "pyyaml",
        "tabulate"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "xia2",
      "sha256": "6895e7d194ebc21826d48520537578d9c4cf712bd2ae13119d0b378887a41911",
      "url": "https://github.com/xia2/xia2/archive/refs/tags/v3.24.1.tar.gz"
    },
    "test": {
      "commands": [
        "pytest xia2/tests/ --regression-full",
        "pip check"
      ],
      "imports": [
        "xia2"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip",
        "python 3.10"
      ],
      "source_files": [
        "xia2/tests",
        "xia2/conftest.py"
      ]
    }
  },
  "name": "xia2",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "xia2"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/xia2.json"
  },
  "raw_meta_yaml": "{% set name = \"xia2\" %}\n{% set version = \"3.24.1\" %}\n{% set version_parts = version.split('.') %}\n{% set version_xy = version_parts[0] ~ '.' ~ version_parts[1] %}\n{% set python_min = \"3.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/xia2/xia2/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 6895e7d194ebc21826d48520537578d9c4cf712bd2ae13119d0b378887a41911\n  folder: xia2\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install ./xia2 -vv\n  entry_points:\n    - dev.xia2.check_mosaic = xia2.cli.check_mosaic:run\n    - dev.xia2.create_mask = xia2.cli.create_mask:run\n    - dev.xia2.file_statistics = xia2.cli.file_statistics:run\n    - dev.xia2.make_sphinx_html = xia2.cli.make_sphinx_html:run\n    - dev.xia2.show_mask = xia2.cli.show_mask:run\n    - dev.xia2.show_mtz_cells = xia2.cli.show_mtz_cells:run\n    - xia2.ssx = xia2.cli.ssx:run\n    - xia2.ssx_reduce = xia2.cli.ssx_reduce:run\n    - xia2.add_free_set = xia2.cli.add_free_set:run\n    - xia2.compare_merging_stats = xia2.cli.compare_merging_stats:run\n    - xia2.delta_cc_half = xia2.cli.delta_cc_half:run\n    - xia2.get_image_number = xia2.cli.get_image_number:run\n    - xia2.html = xia2.cli.xia2_html:run_with_log\n    - xia2.index = xia2.cli.index:run_with_log\n    - xia2.integrate = xia2.cli.integrate:run_with_log\n    - xia2.is_doing = xia2.cli.is_doing:main\n    - xia2.ispyb_json = xia2.cli.ispyb_json:run\n    - xia2.ispyb_xml = xia2.cli.ispyb_xml:run\n    - xia2.merging_statistics = xia2.cli.merging_statistics:run\n    - xia2.multiplex = xia2.cli.multiplex:run\n    - xia2.npp = xia2.cli.npp:run\n    - xia2.overload = xia2.cli.overload:run\n    - xia2.plot_multiplicity = xia2.cli.plot_multiplicity:run\n    - xia2.print = xia2.cli.print:run_with_log\n    - xia2.rebatch = xia2.cli.rebatch:run_with_log\n    - xia2.report = xia2.cli.report:run_with_log\n    - xia2.rescale = xia2.cli.rescale:run_with_log\n    - xia2.setup = xia2.cli.setup:run\n    - xia2.small_molecule = xia2.cli.small_molecule:run\n    - xia2.strategy = xia2.cli.strategy:run_with_log\n    - xia2.table1 = xia2.cli.table1:run\n    - xia2.to_shelx = xia2.cli.to_shelx:run\n    - xia2.to_shelxcde = xia2.cli.to_shelxcde:run\n    - xia2 = xia2.cli.xia2_main:run\n    - xia2.cluster_analysis = xia2.cli.cluster_analysis:run\n\n\nrequirements:\n  host:\n    - cctbx-base\n    - dials ={{ version_xy }}\n    - dxtbx ={{ version_xy }}\n    - pip\n    - python {{ python_min }}\n    - setuptools\n  run:\n    - {{ pin_compatible('cctbx-base') }}\n    - {{ pin_compatible('dials', max_pin='x.x', lower_bound=version_xy) }}\n    - {{ pin_compatible('dxtbx', max_pin='x.x', lower_bound=version_xy) }}\n    - jinja2\n    - python >={{ python_min }}\n    - pyyaml\n    - tabulate\n\ntest:\n  source_files:\n    - xia2/tests\n    - xia2/conftest.py\n  imports:\n    - xia2\n  requires:\n    - dials-data\n    - pytest\n    - pytest-mock\n    - pip\n    - python {{ python_min }}\n  commands:\n    - pytest xia2/tests/ --regression-full  # [not win]\n    - pip check\n\nabout:\n  home: https://github.com/xia2/xia2\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: xia2/LICENSE\n  summary: Automated reduction of X-Ray diffraction data\n  description: |\n    An expert system for automated reduction of X-Ray\n    diffraction data from macromolecular crystals\n  doc_url: https://xia2.github.io/\n  dev_url: https://github.com/xia2/xia2\n\nextra:\n  recipe-maintainers:\n    - jbeilstenedmands\n    - ndevenish\n",
  "req": {
    "__set__": true,
    "elements": [
      "cctbx-base",
      "dials",
      "dxtbx",
      "jinja2",
      "pip",
      "python",
      "pyyaml",
      "setuptools",
      "tabulate"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "jinja2",
        "python",
        "pyyaml",
        "tabulate"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials =3.24",
        "dxtbx =3.24",
        "pip",
        "python 3.10",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "dials",
        "dxtbx",
        "jinja2",
        "python >=3.10",
        "pyyaml",
        "tabulate"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock",
        "python 3.10"
      ]
    }
  },
  "url": "https://github.com/xia2/xia2/archive/refs/tags/v3.24.1.tar.gz",
  "version": "3.24.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/xia2.json"
  }
}