{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-cvst",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=CVST",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The fast cross-validation via sequential testing (CVST) procedure is an improved cross-validation procedure which uses non-parametric testing coupled with sequential analysis to determine the best parameter set on linearly increasing subsets of the data. By eliminating under-performing candidates quickly and keeping promising candidates as long as possible, the method speeds up the computation while preserving the capability of a full cross-validation. Additionally to the CVST the package contains an implementation of the ordinary k-fold cross-validation with a flexible and powerful set of helper objects and methods to handle the overall model selection process. The implementations of the Cochran's Q test with permutations and the sequential testing framework of Wald are generic and can therefore also be used in other contexts."
    },
    "build": {
      "noarch": "generic",
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-cvst",
      "version": "0.2_3"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-matrix",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "efa296230395f323c2a398a7b386e3a88e75a5b9b645307459d0b7c14d03f32d",
      "url": [
        "https://cran.r-project.org/src/contrib/CVST_0.2-3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/CVST/CVST_0.2-3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('CVST')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=CVST",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The fast cross-validation via sequential testing (CVST) procedure is an improved cross-validation procedure which uses non-parametric testing coupled with sequential analysis to determine the best parameter set on linearly increasing subsets of the data. By eliminating under-performing candidates quickly and keeping promising candidates as long as possible, the method speeds up the computation while preserving the capability of a full cross-validation. Additionally to the CVST the package contains an implementation of the ordinary k-fold cross-validation with a flexible and powerful set of helper objects and methods to handle the overall model selection process. The implementations of the Cochran's Q test with permutations and the sequential testing framework of Wald are generic and can therefore also be used in other contexts."
    },
    "build": {
      "noarch": "generic",
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-cvst",
      "version": "0.2_3"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-matrix",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "efa296230395f323c2a398a7b386e3a88e75a5b9b645307459d0b7c14d03f32d",
      "url": [
        "https://cran.r-project.org/src/contrib/CVST_0.2-3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/CVST/CVST_0.2-3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('CVST')\""
      ]
    }
  },
  "name": "r-cvst",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-cvst"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-cvst.json"
  },
  "raw_meta_yaml": "{% set version = \"0.2-3\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-cvst\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/CVST_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/CVST/CVST_{{ version }}.tar.gz\n  sha256: efa296230395f323c2a398a7b386e3a88e75a5b9b645307459d0b7c14d03f32d\n\nbuild:\n  number: 4\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-matrix\n    - r-kernlab\n  run:\n    - r-base\n    - r-matrix\n    - r-kernlab\n\ntest:\n  commands:\n    - $R -e \"library('CVST')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('CVST')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=CVST\n  license: GPL-2.0-or-later\n  summary: The fast cross-validation via sequential testing (CVST) procedure is an improved cross-validation procedure which uses non-parametric testing coupled with sequential analysis to determine the best parameter set on linearly increasing subsets of the data. By eliminating under-performing candidates quickly and keeping\n    promising candidates as long as possible, the method speeds up the computation while preserving the capability of a full cross-validation. Additionally to the CVST the package contains an implementation of the ordinary k-fold cross-validation with a flexible and powerful set of helper objects and methods to handle the\n    overall model selection process. The implementations of the Cochran's Q test with permutations and the sequential testing framework of Wald are generic and can therefore also be used in other contexts.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-kernlab",
      "r-matrix"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-kernlab",
        "r-matrix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/CVST_0.2-3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/CVST/CVST_0.2-3.tar.gz"
  ],
  "version": "0.2_3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-cvst.json"
  }
}