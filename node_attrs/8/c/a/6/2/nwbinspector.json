{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "nwbinspector",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Inspect NWB files for compliance with NWB Best Practices.  This inspector\nis meant as a companion to the pynwb validator, which checks for strict\nschema compliance.  In contrast, this tool attempts to apply some common\nsense to find components of the file that are technically compliant, but\nprobably incorrect, or suboptimal, or deviate from best practices.  This\ntool is meant simply as a data review aid.  It does not catch all best\npractice violations, and any warnings it does produce should be checked by\na knowledgeable reviewer.\n",
      "dev_url": "https://github.com/NeurodataWithoutBorders/nwbinspector",
      "doc_url": "https://nwbinspector.readthedocs.io",
      "home": "https://github.com/NeurodataWithoutBorders/nwbinspector",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "license.txt",
      "summary": "Tool to inspect NWB files for best practices compliance"
    },
    "build": {
      "entry_points": [
        "nwbinspector = nwbinspector._nwbinspector_cli:_nwbinspector_cli"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "stephprince",
        "jwodder",
        "yarikoptic",
        "CodyCBakerPhD",
        "rly"
      ]
    },
    "package": {
      "name": "nwbinspector",
      "version": "0.6.3"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools",
        "hatchling",
        "hatch-vcs"
      ],
      "run": [
        "python >=3.9",
        "aiohttp",
        "click",
        "fsspec",
        "hdmf_zarr",
        "jsonschema",
        "natsort",
        "packaging",
        "pynwb >=2.8",
        "PyYAML",
        "requests",
        "tqdm",
        "isodate"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dc6ca28d5620d284987c9e32d3de9741ba342615029018b77f9c59d08b02448e",
      "url": "https://pypi.org/packages/source/n/nwbinspector/nwbinspector-0.6.3.tar.gz"
    },
    "test": {
      "commands": [
        "pytest"
      ],
      "imports": [
        "nwbinspector"
      ],
      "requires": [
        "pytest",
        "pytest-cov",
        "python 3.9"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "click",
        "fsspec",
        "hdmf_zarr",
        "isodate",
        "jsonschema",
        "natsort",
        "packaging",
        "pynwb",
        "python",
        "pyyaml",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Inspect NWB files for compliance with NWB Best Practices.  This inspector\nis meant as a companion to the pynwb validator, which checks for strict\nschema compliance.  In contrast, this tool attempts to apply some common\nsense to find components of the file that are technically compliant, but\nprobably incorrect, or suboptimal, or deviate from best practices.  This\ntool is meant simply as a data review aid.  It does not catch all best\npractice violations, and any warnings it does produce should be checked by\na knowledgeable reviewer.\n",
      "dev_url": "https://github.com/NeurodataWithoutBorders/nwbinspector",
      "doc_url": "https://nwbinspector.readthedocs.io",
      "home": "https://github.com/NeurodataWithoutBorders/nwbinspector",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "license.txt",
      "summary": "Tool to inspect NWB files for best practices compliance"
    },
    "build": {
      "entry_points": [
        "nwbinspector = nwbinspector._nwbinspector_cli:_nwbinspector_cli"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "stephprince",
        "jwodder",
        "yarikoptic",
        "CodyCBakerPhD",
        "rly"
      ]
    },
    "package": {
      "name": "nwbinspector",
      "version": "0.6.3"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools",
        "hatchling",
        "hatch-vcs"
      ],
      "run": [
        "python >=3.9",
        "aiohttp",
        "click",
        "fsspec",
        "hdmf_zarr",
        "jsonschema",
        "natsort",
        "packaging",
        "pynwb >=2.8",
        "PyYAML",
        "requests",
        "tqdm",
        "isodate"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dc6ca28d5620d284987c9e32d3de9741ba342615029018b77f9c59d08b02448e",
      "url": "https://pypi.org/packages/source/n/nwbinspector/nwbinspector-0.6.3.tar.gz"
    },
    "test": {
      "commands": [
        "pytest"
      ],
      "imports": [
        "nwbinspector"
      ],
      "requires": [
        "pytest",
        "pytest-cov",
        "python 3.9"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "name": "nwbinspector",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nwbinspector"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nwbinspector.json"
  },
  "raw_meta_yaml": "{% set name = \"nwbinspector\" %}\n{% set version = \"0.6.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: dc6ca28d5620d284987c9e32d3de9741ba342615029018b77f9c59d08b02448e\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n  entry_points:\n    - nwbinspector = nwbinspector._nwbinspector_cli:_nwbinspector_cli\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n    - hatchling\n    - hatch-vcs\n  run:\n    - python >={{ python_min }}\n    - aiohttp\n    - click\n    - fsspec\n    - hdmf_zarr\n    - jsonschema\n    - natsort\n    - packaging\n    - pynwb >=2.8\n    - PyYAML\n    - requests\n    - tqdm\n    - isodate\n\ntest:\n  requires:\n    - pytest\n    - pytest-cov\n    - python {{ python_min }}\n  source_files:\n    - tests\n  imports:\n    - nwbinspector\n  commands:\n    - pytest\n\nabout:\n  home: https://github.com/NeurodataWithoutBorders/nwbinspector\n  summary: Tool to inspect NWB files for best practices compliance\n  description: |\n    Inspect NWB files for compliance with NWB Best Practices.  This inspector\n    is meant as a companion to the pynwb validator, which checks for strict\n    schema compliance.  In contrast, this tool attempts to apply some common\n    sense to find components of the file that are technically compliant, but\n    probably incorrect, or suboptimal, or deviate from best practices.  This\n    tool is meant simply as a data review aid.  It does not catch all best\n    practice violations, and any warnings it does produce should be checked by\n    a knowledgeable reviewer.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: license.txt\n  doc_url: https://nwbinspector.readthedocs.io\n  dev_url: https://github.com/NeurodataWithoutBorders/nwbinspector\n\nextra:\n  recipe-maintainers:\n    - stephprince\n    - jwodder\n    - yarikoptic\n    - CodyCBakerPhD\n    - rly\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "click",
      "fsspec",
      "hatch-vcs",
      "hatchling",
      "hdmf_zarr",
      "isodate",
      "jsonschema",
      "natsort",
      "packaging",
      "pip",
      "pynwb",
      "python",
      "pyyaml",
      "requests",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "click",
        "fsspec",
        "hdmf_zarr",
        "isodate",
        "jsonschema",
        "natsort",
        "packaging",
        "pynwb",
        "python",
        "pyyaml",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "PyYAML",
        "aiohttp",
        "click",
        "fsspec",
        "hdmf_zarr",
        "isodate",
        "jsonschema",
        "natsort",
        "packaging",
        "pynwb >=2.8",
        "python >=3.9",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest",
        "pytest-cov",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/n/nwbinspector/nwbinspector-0.6.3.tar.gz",
  "version": "0.6.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nwbinspector.json"
  }
}