{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_win": {
        "variables": {
          "SET_PAGEFILE": "True"
        }
      }
    },
    "build_platform": {
      "linux_aarch64": "linux_aarch64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "idle_timeout_minutes": 120,
    "provider": {
      "linux_aarch64": "azure"
    }
  },
  "feedstock_name": "nvmath",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "nvmath-python aims to bring the power and performance of the NVIDIA math libraries to the Python ecosystem with intuitive, pythonic APIs. The ultimate goal is to provide users full access to all of the available library features in a variety of execution spaces.\nTo enable optional features, install any of the following packages: nvmath-python-cpu, nvmath-python-dx.",
      "dev_url": "https://github.com/NVIDIA/nvmath-python",
      "doc_url": "https://docs.nvidia.com/cuda/nvmath-python",
      "home": "https://developer.nvidia.com/nvmath-python",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/nvmath-python/latest/license.html",
      "summary": "NVIDIA Math Libraries for the Python Ecosystem"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "nvmath",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "carterbox",
        "leofang"
      ]
    },
    "outputs": [
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      }
    ],
    "package": {
      "name": "nvmath-split",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-crt",
        "cuda-cudart-dev",
        "cuda-profiler-api",
        "cuda-version",
        "cython",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-cccl",
        "cuda-core",
        "cuda-cudart",
        "cuda-nvcc",
        "cuda-nvrtc",
        "cuda-pathfinder",
        "cuda-version",
        "cupy",
        "libcublas",
        "libcublasmp",
        "libcudss",
        "libcufft",
        "libcufftmp",
        "libcurand",
        "libcurand-dev",
        "libcusolver",
        "libcusparse",
        "libmathdx",
        "libnvshmem3",
        "mkl",
        "mpi4py",
        "numba",
        "numba-cuda",
        "numpy",
        "nvmath-python",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cupy",
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "nvmath-python aims to bring the power and performance of the NVIDIA math libraries to the Python ecosystem with intuitive, pythonic APIs. The ultimate goal is to provide users full access to all of the available library features in a variety of execution spaces.\nTo enable optional features, install any of the following packages: nvmath-python-cpu, nvmath-python-dx.",
      "dev_url": "https://github.com/NVIDIA/nvmath-python",
      "doc_url": "https://docs.nvidia.com/cuda/nvmath-python",
      "home": "https://developer.nvidia.com/nvmath-python",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/nvmath-python/latest/license.html",
      "summary": "NVIDIA Math Libraries for the Python Ecosystem"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "nvmath",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "carterbox",
        "leofang"
      ]
    },
    "outputs": [
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      }
    ],
    "package": {
      "name": "nvmath-split",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-crt",
        "cuda-cudart-dev",
        "cuda-profiler-api",
        "cuda-version",
        "cython",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-cccl",
        "cuda-core",
        "cuda-cudart",
        "cuda-nvcc",
        "cuda-nvrtc",
        "cuda-pathfinder",
        "cuda-version",
        "cupy",
        "libcublas",
        "libcublasmp",
        "libcudss",
        "libcufft",
        "libcufftmp",
        "libcurand",
        "libcurand-dev",
        "libcusolver",
        "libcusparse",
        "libmathdx",
        "libnvpl-fft0",
        "libnvshmem3",
        "mpi4py",
        "numba",
        "numba-cuda",
        "numpy",
        "nvmath-python",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cupy",
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "nvmath-python aims to bring the power and performance of the NVIDIA math libraries to the Python ecosystem with intuitive, pythonic APIs. The ultimate goal is to provide users full access to all of the available library features in a variety of execution spaces.\nTo enable optional features, install any of the following packages: nvmath-python-cpu, nvmath-python-dx.",
      "dev_url": "https://github.com/NVIDIA/nvmath-python",
      "doc_url": "https://docs.nvidia.com/cuda/nvmath-python",
      "home": "https://developer.nvidia.com/nvmath-python",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/nvmath-python/latest/license.html",
      "summary": "NVIDIA Math Libraries for the Python Ecosystem"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "nvmath",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "carterbox",
        "leofang"
      ]
    },
    "outputs": [
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/x86_64-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "200",
          "script": [
            "export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/",
            ""
          ],
          "string": "cuda12_pyh1234567_200"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13",
            "cupy",
            "libcublas",
            "cuda-nvrtc",
            "cuda-cudart",
            "libcudss 0.5.0.16.*",
            "libcufft",
            "libcurand",
            "libcusolver",
            "libcusparse",
            "cuda-version"
          ],
          "run_constrained": [
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "cupy",
            "pip",
            "pytest",
            "pytorch",
            "scipy"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic"
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "export CUDA_PATH=$PREFIX/targets/sbsa-linux/",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "libnvpl-fft0"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest",
            "pytorch"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      }
    ],
    "package": {
      "name": "nvmath-split",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      }
    ]
  },
  "name": "nvmath-split",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nvmath-python",
      "nvmath-python-cpu",
      "nvmath-python-distributed",
      "nvmath-python-dx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nvmath.json"
  },
  "raw_meta_yaml": "{% set version = \"0.6.0\" %}\n{% set number = 0 %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n  {% set cuda_major = 0 %}\n  {% set extras = \"\" %}\n  {% set build_number = number %}\n  {% set build_string = 'core' %}\n{% else %}\n  {% set cuda_major = environ.get(\"cuda_compiler_version\", \"12.*\").split(\".\")[0] | int %}\n  {% set extras = \"[sysctk\" ~ cuda_major ~ \"]\" %}\n  # Prioritize GPU builds\n  {% set build_number = number + 200 %}\n  {% set build_string = 'cuda' ~ cuda_major %}\n{% endif %}\n\n# {{ PYTHON }} is not resolved properly in multi-output recipes...\n{% set PYTHON = \"python\" %}\n{% set PYTHON = \"$PREFIX/bin/python\" %}  # [linux]\n{% set PYTHON = \"%PREFIX%\\\\python\" %}  # [win]\n\n# In addition to switching this to true, GPU tests require enabling the rapidsai channel in\n# the build config\n{% set is_gpu_available = false %}\n\npackage:\n  name: nvmath-split\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v{{ \".\".join(version.split(\".\")[:3]) }}.tar.gz\n    sha256: d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad\n    patches:\n      - patches/0001-BUG-driver-load-failure-cpu.patch\n\nbuild:\n  number: {{ number }}\n  skip: true  # [py < 310 or py > 313 or osx or ppc64le]\n  # debugging skips:\n  # skip: true  # [py != 310]\n\n# Have certain top-level requirements so conda-smithy can render the correct variants\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n  host:\n    - python\n\noutputs:\n\n  - name: nvmath-python\n    version: {{ version }}\n    build:\n      number: {{ build_number }}\n      string: {{ build_string }}_py{{ py }}h{{ PKG_HASH }}_{{ build_number }}\n      script:\n        # do nothing for CUDA 11, as CUDA_PATH is set in the CI images\n        - export CUDA_PATH=$BUILD_PREFIX/targets/x86_64-linux/   # [cuda_compiler_version != \"None\" and linux64]\n        - export CUDA_PATH=$BUILD_PREFIX/targets/sbsa-linux/     # [cuda_compiler_version != \"None\" and aarch64]\n        - set CUDA_PATH=%BUILD_PREFIX%\\Library                   # [cuda_compiler_version != \"None\" and win64]\n        - export CUDA_PATH=$PREFIX/targets/x86_64-linux/         # [cuda_compiler_version == \"None\" and linux64]\n        - export CUDA_PATH=$PREFIX/targets/sbsa-linux/           # [cuda_compiler_version == \"None\" and aarch64]\n        - set CUDA_PATH=%PREFIX%\\Library                         # [cuda_compiler_version == \"None\" and win64]\n        - >-\n          {{ PYTHON }} -m pip install --no-deps --no-build-isolation -v .{{ extras }}\n      ignore_run_exports:\n        - cuda-version\n      ignore_run_exports_from:\n        - cuda-cudart-dev\n      force_ignore_keys:\n        - pytorch\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n        - {{ stdlib('c') }}\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - python                                 # [build_platform != target_platform]\n        - cython >=3.0.4,!=3.1.0,!=3.1.1         # [build_platform != target_platform]\n        - cuda-profiler-api\n      host:\n        - python\n        - cython >=3.0.4,!=3.1.0,!=3.1.1\n        - setuptools >=77.0.3\n        - tomli>=2.0.1  # [py < 311]\n        - pip\n        - cuda-version {{ cuda_compiler_version }}      # [cuda_compiler_version != \"None\"]\n        - cuda-version {{ cuda_compiler_version_min }}  # [cuda_compiler_version == \"None\"]\n        - cuda-cudart-dev\n        - cuda-crt\n        - cuda-bindings\n        - cuda-profiler-api\n      run:\n        - python\n        # requirements/pip/nvmath-python.txt\n        - cuda-bindings\n        - cuda-core >=0.3.2,<0.4\n        - cuda-pathfinder >=1.2.1,<2.0\n        - numpy >=1.25,<3\n        - pywin32                         # [win64]\n        # requirements/pip/nvmath-python-cu12.txt\n        - cuda-bindings >=12.9.1,<13\n        - cuda-core >=0.3.2,<0.4\n        - cupy                            # [cuda_compiler_version != \"None\"]  # TODO: remove me in the next release\n        - libcublas                       # [cuda_compiler_version != \"None\"]\n        - cuda-nvrtc                      # [cuda_compiler_version != \"None\"]\n        - cuda-cudart                     # [cuda_compiler_version != \"None\"]\n        - libcudss 0.5.0.16.*             # [cuda_compiler_version != \"None\"]\n        - libcufft                        # [cuda_compiler_version != \"None\"]\n        - libcurand                       # [cuda_compiler_version != \"None\"]\n        - libcusolver                     # [cuda_compiler_version != \"None\"]\n        - libcusparse                     # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible('cuda-version', max_pin='x', min_pin='x') }}  # [cuda_compiler_version != \"None\"]\n      run_constrained:\n        - cuda-version >=11.0.*,<13.a0    # [cuda_compiler_version == \"None\"]\n        - libnvpl-fft0 >=0.3.0,<1.0a0\n        - mkl >=2024\n    test:\n{% if is_gpu_available %}\n      source_files:\n        - examples/fft\n        - examples/linalg\n        - examples/sparse\n        - tests/example_tests\n{% endif %}\n      requires:\n        - cupy  # [cuda_compiler_version != \"None\"]\n        - pip\n        - pytest  # [cuda_compiler_version != \"None\"]\n        - pytorch  # [(cuda_compiler_version != \"None\") and (not win)]\n      {% if is_gpu_available %}\n        - pytorch-gpu  # [not win]\n      {% endif %}\n        - scipy  # [cuda_compiler_version != \"None\"]\n      imports:\n        - nvmath\n        - nvmath.fft\n        - nvmath.linalg\n        - nvmath.sparse\n      commands:\n        #  - pip check\n{% if is_gpu_available %}\n        - pytest tests/example_tests/matmul_tests/ -k \"not cpu\" -v -ra  # [cuda_compiler_version != \"None\"]\n        - pytest tests/example_tests/fft_tests/ -k \"not (cpu or callback)\" -v -ra  # [cuda_compiler_version != \"None\"]\n        - pytest tests/example_tests/sparse_tests/ -k \"not cpu\" -v -ra  # [cuda_compiler_version != \"None\"]\n{% endif %}\n\n  - name: nvmath-python-dx\n    version: {{ version }}\n    build:\n      noarch: generic\n      force_ignore_keys:\n        - cuda_compiler_version\n        - pytorch\n      # There will be only one variant of this meta-package for all platforms, but we want\n      # to run the tests with multiple variants of the base package.\n      skip: true  # [cuda_compiler_version == \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"nvmath-python\", max_pin='x.x.x') }}\n        - nvmath-python * cuda*\n        # TODO: Move versions to run_constraints on the main package in next release; keep package names\n        - cupy  # TODO: remove me in the next release\n        - numba\n        - numba-cuda >=0.18.1\n        - cuda-cccl >12.4.127\n        - cuda-nvcc\n        - cuda-nvrtc !=12.4.*,!=12.5.0\n        - libmathdx >=0.2.3,<0.3\n        - cuda-version >=12.0,!=12.4,!=12.5.0\n        # Device APIs need headers for JIT compile\n        - libcurand-dev\n    test:\n      requires:\n        - pip\n{% if is_gpu_available %}\n        - pytest\n        - cffi\n      source_files:\n        - examples/device\n        - examples/fft/*callback*.py\n        - tests/example_tests\n{% endif %}\n      imports:\n{% if is_gpu_available %}\n        - nvmath.device\n{% endif %}\n        - nvmath\n        - nvmath.fft\n        - nvmath.linalg\n        - nvmath.sparse\n      commands:\n        #  - pip check\n{% if is_gpu_available %}\n        - pytest tests/example_tests/device_tests/ -v -ra -k \"simple or curand\"\n        - pytest tests/example_tests/fft_tests/ -k \"callback\" -v -ra\n{% endif %}\n    about:\n      license: Apache-2.0\n      license_file: LICENSE\n      summary: Install this meta-package to use nvmath-python device features\n      description: >-\n        This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.\n\n  - name: nvmath-python-cpu\n    version: {{ version }}\n    build:\n      force_ignore_keys:\n        - cuda_compiler_version\n        - pytorch\n      # This meta-package will have only one variant for each platform, but we want to run\n      # the tests with both cuda and non-cuda, so no skips here.\n    requirements:\n      run:\n        - {{ pin_subpackage(\"nvmath-python\", max_pin='x.x.x') }}\n        - mkl  # [x86_64 or linux64]\n        - libnvpl-fft0  # [arm64 or aarch64]\n    test:\n      source_files:\n        - examples/fft/example*cpu_execution.py\n        - tests/example_tests\n      requires:\n        - pip\n        - pytest\n        - pytorch  # [not win]\n      imports:\n        - nvmath\n        - nvmath.fft\n        - nvmath.linalg\n      commands:\n        #  - pip check\n        # We can't run tests with CUDA builds because CuPy complains about no GPUs\n        - pytest tests/example_tests/fft_tests/ -k cpu -v -ra  # [cuda_compiler_version == \"None\"]\n    about:\n      license: Apache-2.0\n      license_file: LICENSE\n      summary: Install this meta-package to use nvmath-python cpu features\n      description: >-\n        This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.\n\n  - name: nvmath-python-distributed\n    version: {{ version }}\n    build:\n      force_ignore_keys:\n        - cuda_compiler_version\n        - pytorch\n      # There will be only one variant of this meta-package for all platforms, but we want\n      # to run the tests with multiple variants of the base package.\n      # distributed support currently requires CUDA 12\n      skip: true  # [(cuda_compiler_version == \"None\") or win]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"nvmath-python\", max_pin='x.x.x') }}\n        - nvmath-python * cuda*\n        - mpi4py\n        - libcublasmp >=0.4.0\n        - libcufftmp\n        - libnvshmem3 >=3.2.5\n    test:\n      source_files:\n        - examples/distributed\n        - tests/example_tests\n      requires:\n        - pip\n        - pytest\n        - pytorch  # [not win]\n      {% if is_gpu_available %}\n        - pytorch-gpu  # [not win]\n      {% endif %}\n      imports:\n        - nvmath\n        - nvmath.distributed\n        - nvmath.distributed.fft\n      commands:\n        #  - pip check\n      {% if is_gpu_available %}\n        - mpiexec -n 2 pytest tests/example_tests/distributed_tests -v -ra -k \"not sync\"\n      {% endif %}\n    about:\n      license: Apache-2.0\n      license_file: LICENSE\n      summary: Install this meta-package to use nvmath-python distributed features\n      description: >-\n        This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.\n\nabout:\n  home: https://developer.nvidia.com/nvmath-python\n  license: Apache-2.0\n  license_url: https://docs.nvidia.com/cuda/nvmath-python/latest/license.html\n  license_file: LICENSE\n  summary: NVIDIA Math Libraries for the Python Ecosystem\n  description: >-\n    nvmath-python aims to bring the power and performance of the NVIDIA math libraries to the Python ecosystem with intuitive, pythonic APIs. The ultimate goal is to provide users full access to all of the available library features in a variety of execution spaces.\n\n    To enable optional features, install any of the following packages: nvmath-python-cpu, nvmath-python-dx.\n  doc_url: https://docs.nvidia.com/cuda/nvmath-python\n  dev_url: https://github.com/NVIDIA/nvmath-python\n\nextra:\n  feedstock-name: nvmath\n  recipe-maintainers:\n    - conda-forge/cuda\n    - carterbox\n    - leofang\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-bindings",
      "cuda-cccl",
      "cuda-core",
      "cuda-crt",
      "cuda-cudart",
      "cuda-cudart-dev",
      "cuda-nvcc",
      "cuda-nvrtc",
      "cuda-pathfinder",
      "cuda-profiler-api",
      "cuda-version",
      "cuda_compiler_stub",
      "cupy",
      "cxx_compiler_stub",
      "cython",
      "libcublas",
      "libcublasmp",
      "libcudss",
      "libcufft",
      "libcufftmp",
      "libcurand",
      "libcurand-dev",
      "libcusolver",
      "libcusparse",
      "libmathdx",
      "libnvpl-fft0",
      "libnvshmem3",
      "mkl",
      "mpi4py",
      "numba",
      "numba-cuda",
      "numpy",
      "nvmath-python",
      "pip",
      "python",
      "pywin32",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-bindings",
        "cuda-crt",
        "cuda-cudart-dev",
        "cuda-profiler-api",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "cython",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-bindings",
        "cuda-cccl",
        "cuda-core",
        "cuda-cudart",
        "cuda-nvcc",
        "cuda-nvrtc",
        "cuda-pathfinder",
        "cuda-version",
        "cuda_compiler_stub",
        "cupy",
        "cxx_compiler_stub",
        "libcublas",
        "libcublasmp",
        "libcudss",
        "libcufft",
        "libcufftmp",
        "libcurand",
        "libcurand-dev",
        "libcusolver",
        "libcusparse",
        "libmathdx",
        "libnvpl-fft0",
        "libnvshmem3",
        "mkl",
        "mpi4py",
        "numba",
        "numba-cuda",
        "numpy",
        "nvmath-python",
        "python",
        "pywin32"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cupy",
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-crt",
        "cuda-cudart-dev",
        "cuda-profiler-api",
        "cuda-version 12.6",
        "cython >=3.0.4,!=3.1.0,!=3.1.1",
        "pip",
        "python",
        "setuptools >=77.0.3"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-bindings >=12.9.1,<13",
        "cuda-cccl >12.4.127",
        "cuda-core >=0.3.2,<0.4",
        "cuda-cudart",
        "cuda-nvcc",
        "cuda-nvrtc",
        "cuda-nvrtc !=12.4.*,!=12.5.0",
        "cuda-pathfinder >=1.2.1,<2.0",
        "cuda-version",
        "cuda-version >=12.0,!=12.4,!=12.5.0",
        "cupy",
        "libcublas",
        "libcublasmp >=0.4.0",
        "libcudss 0.5.0.16.*",
        "libcufft",
        "libcufftmp",
        "libcurand",
        "libcurand-dev",
        "libcusolver",
        "libcusparse",
        "libmathdx >=0.2.3,<0.3",
        "libnvpl-fft0",
        "libnvshmem3 >=3.2.5",
        "mkl",
        "mpi4py",
        "numba",
        "numba-cuda >=0.18.1",
        "numpy >=1.25,<3",
        "nvmath-python",
        "nvmath-python * cuda*",
        "python",
        "pywin32"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cupy",
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz",
  "version": "0.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nvmath.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "nvmath-python aims to bring the power and performance of the NVIDIA math libraries to the Python ecosystem with intuitive, pythonic APIs. The ultimate goal is to provide users full access to all of the available library features in a variety of execution spaces.\nTo enable optional features, install any of the following packages: nvmath-python-cpu, nvmath-python-dx.",
      "dev_url": "https://github.com/NVIDIA/nvmath-python",
      "doc_url": "https://docs.nvidia.com/cuda/nvmath-python",
      "home": "https://developer.nvidia.com/nvmath-python",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/cuda/nvmath-python/latest/license.html",
      "summary": "NVIDIA Math Libraries for the Python Ecosystem"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "nvmath",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "carterbox",
        "leofang"
      ]
    },
    "outputs": [
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "build": {
          "force_ignore_keys": [
            "pytorch"
          ],
          "ignore_run_exports": [
            "cuda-version"
          ],
          "ignore_run_exports_from": [
            "cuda-cudart-dev"
          ],
          "number": "0",
          "script": [
            "set CUDA_PATH=%PREFIX%\\Library",
            "%PREFIX%\\python -m pip install --no-deps --no-build-isolation -v ."
          ],
          "string": "core_pyh1234567_0"
        },
        "name": "nvmath-python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cuda-profiler-api"
          ],
          "host": [
            "python",
            "cython >=3.0.4,!=3.1.0,!=3.1.1",
            "setuptools >=77.0.3",
            "pip",
            "cuda-version 12.6",
            "cuda-cudart-dev",
            "cuda-crt",
            "cuda-bindings",
            "cuda-profiler-api"
          ],
          "run": [
            "python",
            "cuda-bindings",
            "cuda-core >=0.3.2,<0.4",
            "cuda-pathfinder >=1.2.1,<2.0",
            "numpy >=1.25,<3",
            "pywin32",
            "cuda-bindings >=12.9.1,<13"
          ],
          "run_constrained": [
            "cuda-version >=11.0.*,<13.a0",
            "libnvpl-fft0 >=0.3.0,<1.0a0",
            "mkl >=2024"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python device features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "noarch": "generic",
          "skip": true
        },
        "name": "nvmath-python-dx",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "cupy",
            "numba",
            "numba-cuda >=0.18.1",
            "cuda-cccl >12.4.127",
            "cuda-nvcc",
            "cuda-nvrtc !=12.4.*,!=12.5.0",
            "libmathdx >=0.2.3,<0.3",
            "cuda-version >=12.0,!=12.4,!=12.5.0",
            "libcurand-dev"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg",
            "nvmath.sparse"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python cpu features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ]
        },
        "name": "nvmath-python-cpu",
        "requirements": {
          "run": [
            "nvmath-python",
            "mkl"
          ]
        },
        "test": {
          "commands": [
            "pytest tests/example_tests/fft_tests/ -k cpu -v -ra"
          ],
          "imports": [
            "nvmath",
            "nvmath.fft",
            "nvmath.linalg"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/fft/example*cpu_execution.py",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      },
      {
        "about": {
          "description": "This is a meta-package which installs a some optional dependencies. The main package is nvmath-python.",
          "license": "Apache-2.0",
          "license_file": "LICENSE",
          "summary": "Install this meta-package to use nvmath-python distributed features"
        },
        "build": {
          "force_ignore_keys": [
            "cuda_compiler_version",
            "pytorch"
          ],
          "skip": true
        },
        "name": "nvmath-python-distributed",
        "requirements": {
          "run": [
            "nvmath-python",
            "nvmath-python * cuda*",
            "mpi4py",
            "libcublasmp >=0.4.0",
            "libcufftmp",
            "libnvshmem3 >=3.2.5"
          ]
        },
        "test": {
          "commands": null,
          "imports": [
            "nvmath",
            "nvmath.distributed",
            "nvmath.distributed.fft"
          ],
          "requires": [
            "pip",
            "pytest"
          ],
          "source_files": [
            "examples/distributed",
            "tests/example_tests"
          ]
        },
        "version": "0.6.0"
      }
    ],
    "package": {
      "name": "nvmath-split",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-BUG-driver-load-failure-cpu.patch"
        ],
        "sha256": "d6578b8fcb25228c50009914e814cd5d73216841f5b61713a6f58b4ecf0bedad",
        "url": "https://github.com/NVIDIA/nvmath-python/archive/refs/tags/v0.6.0.tar.gz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-profiler-api",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-crt",
        "cuda-cudart-dev",
        "cuda-profiler-api",
        "cuda-version",
        "cython",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-bindings",
        "cuda-cccl",
        "cuda-core",
        "cuda-nvcc",
        "cuda-nvrtc",
        "cuda-pathfinder",
        "cuda-version",
        "cupy",
        "libcublasmp",
        "libcufftmp",
        "libcurand-dev",
        "libmathdx",
        "libnvshmem3",
        "mkl",
        "mpi4py",
        "numba",
        "numba-cuda",
        "numpy",
        "nvmath-python",
        "python",
        "pywin32"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  }
}