{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "f7e833e60c1d0e24898d92e988853a14bb816188",
  "feedstock_hash_ts": 1730885568,
  "feedstock_name": "r-metabma",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/danheck/metaBMA",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Computes the posterior model probabilities for standard meta-analysis models  (null model vs. alternative model assuming either fixed- or random-effects, respectively). These posterior probabilities are used to estimate the overall mean effect size  as the weighted average of the mean effect size estimates of the random- and  fixed-effect model as proposed by Gronau, Van Erp, Heck, Cesario, Jonas, &  Wagenmakers (2017, <doi:10.1080/23743603.2017.1326760>). The user can define  a wide range of non-informative or informative priors for the mean effect size  and the heterogeneity coefficient. Moreover, using pre-compiled Stan models,  meta-analysis with continuous and discrete moderators with Jeffreys-Zellner-Siow (JZS)  priors can be fitted and tested. This allows to compute Bayes factors and  perform Bayesian model averaging across random- and fixed-effects meta-analysis  with and without moderators."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-metabma",
      "version": "0.6.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "r-bh >=1.78.0",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppeigen >=0.3.3.9.1",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0",
        "r-stanheaders >=2.26.0"
      ],
      "run": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c1e43fdc4c866a065c11bfa65b9f895256d0a11a19861c5212fbd4f82a6205f8",
      "url": [
        "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('metaBMA')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppeigen",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools",
        "r-stanheaders"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/danheck/metaBMA",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Computes the posterior model probabilities for standard meta-analysis models  (null model vs. alternative model assuming either fixed- or random-effects, respectively). These posterior probabilities are used to estimate the overall mean effect size  as the weighted average of the mean effect size estimates of the random- and  fixed-effect model as proposed by Gronau, Van Erp, Heck, Cesario, Jonas, &  Wagenmakers (2017, <doi:10.1080/23743603.2017.1326760>). The user can define  a wide range of non-informative or informative priors for the mean effect size  and the heterogeneity coefficient. Moreover, using pre-compiled Stan models,  meta-analysis with continuous and discrete moderators with Jeffreys-Zellner-Siow (JZS)  priors can be fitted and tested. This allows to compute Bayes factors and  perform Bayesian model averaging across random- and fixed-effects meta-analysis  with and without moderators."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-metabma",
      "version": "0.6.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "grep",
        "automake-wrapper",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-bh >=1.78.0",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppeigen >=0.3.3.9.1",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0",
        "r-stanheaders >=2.26.0"
      ],
      "run": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c1e43fdc4c866a065c11bfa65b9f895256d0a11a19861c5212fbd4f82a6205f8",
      "url": [
        "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('metaBMA')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"",
        "\"%R%\" -e \"library('metaBMA')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "name": "r-metabma",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/danheck/metaBMA",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Computes the posterior model probabilities for standard meta-analysis models  (null model vs. alternative model assuming either fixed- or random-effects, respectively). These posterior probabilities are used to estimate the overall mean effect size  as the weighted average of the mean effect size estimates of the random- and  fixed-effect model as proposed by Gronau, Van Erp, Heck, Cesario, Jonas, &  Wagenmakers (2017, <doi:10.1080/23743603.2017.1326760>). The user can define  a wide range of non-informative or informative priors for the mean effect size  and the heterogeneity coefficient. Moreover, using pre-compiled Stan models,  meta-analysis with continuous and discrete moderators with Jeffreys-Zellner-Siow (JZS)  priors can be fitted and tested. This allows to compute Bayes factors and  perform Bayesian model averaging across random- and fixed-effects meta-analysis  with and without moderators."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-metabma",
      "version": "0.6.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "r-bh >=1.78.0",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppeigen >=0.3.3.9.1",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0",
        "r-stanheaders >=2.26.0"
      ],
      "run": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c1e43fdc4c866a065c11bfa65b9f895256d0a11a19861c5212fbd4f82a6205f8",
      "url": [
        "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('metaBMA')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppeigen",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools",
        "r-stanheaders"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-metabma"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-metabma.json"
  },
  "raw_meta_yaml": "{% set version = \"0.6.9\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-metabma\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/metaBMA_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/metaBMA/metaBMA_{{ version }}.tar.gz\n  sha256: c1e43fdc4c866a065c11bfa65b9f895256d0a11a19861c5212fbd4f82a6205f8\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-bh >=1.78.0\n    - r-bridgesampling\n    - r-coda\n    - r-laplacesdemon\n    - r-logspline\n    - r-mvtnorm\n    - r-rcpp >=1.0.0\n    - r-rcppeigen >=0.3.3.9.1\n    - r-rcppparallel >=5.0.1\n    - r-rstan >=2.26.0\n    - r-rstantools >=2.3.0\n    - r-stanheaders >=2.26.0\n  run:\n    ## NB: linking-only packages commented out\n    #- r-bh >=1.78.0\n    #- r-rcppeigen >=0.3.3.9.1\n    #- r-stanheaders >=2.26.0\n    - r-base\n    - r-bridgesampling\n    - r-coda\n    - r-laplacesdemon\n    - r-logspline\n    - r-mvtnorm\n    - r-rcpp >=1.0.0\n    - r-rcppparallel >=5.0.1\n    - r-rstan >=2.26.0\n    - r-rstantools >=2.3.0\n\ntest:\n  requires:\n    - r-testthat\n  source_files:\n    - tests/\n  commands:\n    - $R -e \"library('metaBMA')\"                                                      # [not win]\n    - $R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('metaBMA')\\\"\"                                             # [win]\n    - \"\\\"%R%\\\" -e \\\"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\\\"\"  # [win]\n\nabout:\n  home: https://github.com/danheck/metaBMA\n  license: GPL-3.0-only\n  summary: Computes the posterior model probabilities for standard meta-analysis models  (null model vs. alternative model assuming either fixed- or random-effects, respectively). These posterior probabilities are used to estimate the overall mean effect size  as the weighted average of the mean effect size estimates of\n    the random- and  fixed-effect model as proposed by Gronau, Van Erp, Heck, Cesario, Jonas, &  Wagenmakers (2017, <doi:10.1080/23743603.2017.1326760>). The user can define  a wide range of non-informative or informative priors for the mean effect size  and the heterogeneity coefficient. Moreover, using pre-compiled Stan\n    models,  meta-analysis with continuous and discrete moderators with Jeffreys-Zellner-Siow (JZS)  priors can be fitted and tested. This allows to compute Bayes factors and  perform Bayesian model averaging across random- and fixed-effects meta-analysis  with and without moderators.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "automake-wrapper",
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "grep",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "pkg-config",
      "r-base",
      "r-bh",
      "r-bridgesampling",
      "r-coda",
      "r-laplacesdemon",
      "r-logspline",
      "r-mvtnorm",
      "r-rcpp",
      "r-rcppeigen",
      "r-rcppparallel",
      "r-rstan",
      "r-rstantools",
      "r-stanheaders",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-bh",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppeigen",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools",
        "r-stanheaders"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh >=1.78.0",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppeigen >=0.3.3.9.1",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0",
        "r-stanheaders >=2.26.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz",
    "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz",
    "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz"
  ],
  "version": "0.6.9",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-metabma.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/danheck/metaBMA",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Computes the posterior model probabilities for standard meta-analysis models  (null model vs. alternative model assuming either fixed- or random-effects, respectively). These posterior probabilities are used to estimate the overall mean effect size  as the weighted average of the mean effect size estimates of the random- and  fixed-effect model as proposed by Gronau, Van Erp, Heck, Cesario, Jonas, &  Wagenmakers (2017, <doi:10.1080/23743603.2017.1326760>). The user can define  a wide range of non-informative or informative priors for the mean effect size  and the heterogeneity coefficient. Moreover, using pre-compiled Stan models,  meta-analysis with continuous and discrete moderators with Jeffreys-Zellner-Siow (JZS)  priors can be fitted and tested. This allows to compute Bayes factors and  perform Bayesian model averaging across random- and fixed-effects meta-analysis  with and without moderators."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-metabma",
      "version": "0.6.9"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "grep",
        "autoconf",
        "automake-wrapper",
        "pkg-config",
        "make",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-bh >=1.78.0",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppeigen >=0.3.3.9.1",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0",
        "r-stanheaders >=2.26.0"
      ],
      "run": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp >=1.0.0",
        "r-rcppparallel >=5.0.1",
        "r-rstan >=2.26.0",
        "r-rstantools >=2.3.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c1e43fdc4c866a065c11bfa65b9f895256d0a11a19861c5212fbd4f82a6205f8",
      "url": [
        "https://cran.r-project.org/src/contrib/metaBMA_0.6.9.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/metaBMA/metaBMA_0.6.9.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('metaBMA')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake-wrapper",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppeigen",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools",
        "r-stanheaders"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bridgesampling",
        "r-coda",
        "r-laplacesdemon",
        "r-logspline",
        "r-mvtnorm",
        "r-rcpp",
        "r-rcppparallel",
        "r-rstan",
        "r-rstantools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  }
}