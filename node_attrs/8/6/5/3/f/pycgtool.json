{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "951ece197b4335240c6cc87c65ad641d64a3384d",
  "feedstock_hash_ts": 1730845187,
  "feedstock_name": "pycgtool",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PyCGTOOL is a tool to aid in parametrising coarse-grained (CG) molecular mechanics\nmodels of small molecules, for example for simulations using the popular MARTINI model.\nIt generates coarse-grained model parameters from atomistic simulation trajectories\nusing a user-provided mapping. Equilibrium values and force constants of bonded terms\nare calculated by Boltzmann Inversion of bond distributions collected from the input trajectory.\n",
      "dev_url": "https://github.com/jag1g13/pycgtool",
      "doc_url": "https://pycgtool.readthedocs.io/en/main/",
      "home": "https://github.com/jag1g13/pycgtool",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "Generate coarse-grained molecular dynamics models from atomistic trajectories."
    },
    "build": {
      "entry_points": [
        "pycgtool = pycgtool.__main__:main"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "jag1g13"
      ]
    },
    "package": {
      "name": "pycgtool",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "poetry"
      ],
      "run": [
        "astunparse ==1.6.2",
        "mdtraj >=1.9.5,<2.0.0,!=1.9.6",
        "python",
        "rich >=9.2.0,<10.0.0",
        "wheel >=0.35.1,<0.36.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "308ce3ac6a2bd3d37d397cf47d5e5defc518754012eb757d3a7d46a8776c3826",
      "url": "https://pypi.io/packages/source/p/pycgtool/pycgtool-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pycgtool --help"
      ],
      "imports": [
        "pycgtool",
        "pycgtool.parsers"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astunparse",
        "mdtraj",
        "python",
        "rich",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PyCGTOOL is a tool to aid in parametrising coarse-grained (CG) molecular mechanics\nmodels of small molecules, for example for simulations using the popular MARTINI model.\nIt generates coarse-grained model parameters from atomistic simulation trajectories\nusing a user-provided mapping. Equilibrium values and force constants of bonded terms\nare calculated by Boltzmann Inversion of bond distributions collected from the input trajectory.\n",
      "dev_url": "https://github.com/jag1g13/pycgtool",
      "doc_url": "https://pycgtool.readthedocs.io/en/main/",
      "home": "https://github.com/jag1g13/pycgtool",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "Generate coarse-grained molecular dynamics models from atomistic trajectories."
    },
    "build": {
      "entry_points": [
        "pycgtool = pycgtool.__main__:main"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "jag1g13"
      ]
    },
    "package": {
      "name": "pycgtool",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "poetry"
      ],
      "run": [
        "astunparse ==1.6.2",
        "mdtraj >=1.9.5,<2.0.0,!=1.9.6",
        "python",
        "rich >=9.2.0,<10.0.0",
        "wheel >=0.35.1,<0.36.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "308ce3ac6a2bd3d37d397cf47d5e5defc518754012eb757d3a7d46a8776c3826",
      "url": "https://pypi.io/packages/source/p/pycgtool/pycgtool-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pycgtool --help"
      ],
      "imports": [
        "pycgtool",
        "pycgtool.parsers"
      ]
    }
  },
  "name": "pycgtool",
  "osx_64_meta_yaml": {
    "about": {
      "description": "PyCGTOOL is a tool to aid in parametrising coarse-grained (CG) molecular mechanics\nmodels of small molecules, for example for simulations using the popular MARTINI model.\nIt generates coarse-grained model parameters from atomistic simulation trajectories\nusing a user-provided mapping. Equilibrium values and force constants of bonded terms\nare calculated by Boltzmann Inversion of bond distributions collected from the input trajectory.\n",
      "dev_url": "https://github.com/jag1g13/pycgtool",
      "doc_url": "https://pycgtool.readthedocs.io/en/main/",
      "home": "https://github.com/jag1g13/pycgtool",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "Generate coarse-grained molecular dynamics models from atomistic trajectories."
    },
    "build": {
      "entry_points": [
        "pycgtool = pycgtool.__main__:main"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "jag1g13"
      ]
    },
    "package": {
      "name": "pycgtool",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "poetry"
      ],
      "run": [
        "astunparse ==1.6.2",
        "mdtraj >=1.9.5,<2.0.0,!=1.9.6",
        "python",
        "rich >=9.2.0,<10.0.0",
        "wheel >=0.35.1,<0.36.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "308ce3ac6a2bd3d37d397cf47d5e5defc518754012eb757d3a7d46a8776c3826",
      "url": "https://pypi.io/packages/source/p/pycgtool/pycgtool-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pycgtool --help"
      ],
      "imports": [
        "pycgtool",
        "pycgtool.parsers"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astunparse",
        "mdtraj",
        "python",
        "rich",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pycgtool"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pycgtool.json"
  },
  "raw_meta_yaml": "{% set name = \"pycgtool\" %}\n{% set version = \"2.0.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pycgtool-{{ version }}.tar.gz\n  sha256: 308ce3ac6a2bd3d37d397cf47d5e5defc518754012eb757d3a7d46a8776c3826\n\nbuild:\n  number: 2\n  skip: true  # [py>=40 or py2k]\n  entry_points:\n    - pycgtool = pycgtool.__main__:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n    - poetry\n  run:\n    - astunparse ==1.6.2\n    - mdtraj >=1.9.5,<2.0.0,!=1.9.6\n    - numpy >=1.19.1,<2.0.0  # [py<37]\n    - python\n    - rich >=9.2.0,<10.0.0\n    - wheel >=0.35.1,<0.36.0\n\ntest:\n  imports:\n    - pycgtool\n    - pycgtool.parsers\n  commands:\n    - pycgtool --help\n\nabout:\n  home: https://github.com/jag1g13/pycgtool\n  summary: Generate coarse-grained molecular dynamics models from atomistic trajectories.\n  license: GPL-3.0-only\n  license_file: LICENSE\n  description: |\n    PyCGTOOL is a tool to aid in parametrising coarse-grained (CG) molecular mechanics\n    models of small molecules, for example for simulations using the popular MARTINI model.\n    It generates coarse-grained model parameters from atomistic simulation trajectories\n    using a user-provided mapping. Equilibrium values and force constants of bonded terms\n    are calculated by Boltzmann Inversion of bond distributions collected from the input trajectory.\n  doc_url: https://pycgtool.readthedocs.io/en/main/\n  dev_url: https://github.com/jag1g13/pycgtool\n\nextra:\n  recipe-maintainers:\n    - jag1g13\n",
  "req": {
    "__set__": true,
    "elements": [
      "astunparse",
      "c_compiler_stub",
      "mdtraj",
      "pip",
      "poetry",
      "python",
      "rich",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "pip",
        "poetry",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astunparse",
        "c_compiler_stub",
        "mdtraj",
        "python",
        "rich",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astunparse ==1.6.2",
        "mdtraj >=1.9.5,<2.0.0,!=1.9.6",
        "python",
        "rich >=9.2.0,<10.0.0",
        "wheel >=0.35.1,<0.36.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/p/pycgtool/pycgtool-2.0.0.tar.gz",
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pycgtool.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "PyCGTOOL is a tool to aid in parametrising coarse-grained (CG) molecular mechanics\nmodels of small molecules, for example for simulations using the popular MARTINI model.\nIt generates coarse-grained model parameters from atomistic simulation trajectories\nusing a user-provided mapping. Equilibrium values and force constants of bonded terms\nare calculated by Boltzmann Inversion of bond distributions collected from the input trajectory.\n",
      "dev_url": "https://github.com/jag1g13/pycgtool",
      "doc_url": "https://pycgtool.readthedocs.io/en/main/",
      "home": "https://github.com/jag1g13/pycgtool",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "Generate coarse-grained molecular dynamics models from atomistic trajectories."
    },
    "build": {
      "entry_points": [
        "pycgtool = pycgtool.__main__:main"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "jag1g13"
      ]
    },
    "package": {
      "name": "pycgtool",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "poetry"
      ],
      "run": [
        "astunparse ==1.6.2",
        "mdtraj >=1.9.5,<2.0.0,!=1.9.6",
        "python",
        "rich >=9.2.0,<10.0.0",
        "wheel >=0.35.1,<0.36.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "308ce3ac6a2bd3d37d397cf47d5e5defc518754012eb757d3a7d46a8776c3826",
      "url": "https://pypi.io/packages/source/p/pycgtool/pycgtool-2.0.0.tar.gz"
    },
    "test": {
      "commands": [
        "pycgtool --help"
      ],
      "imports": [
        "pycgtool",
        "pycgtool.parsers"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astunparse",
        "mdtraj",
        "python",
        "rich",
        "wheel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}