{
  "archived": true,
  "branch": "master",
  "conda-forge.yml": {},
  "feedstock_name": "maltpynt",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The MaLTPyNT (Matteo’s Libraries and Tools in Python for NuSTAR Timing)\nsuite is designed for the quick-look timing analysis of NuSTAR data. It\ntreats properly orbital gaps (e.g., occultation, SAA passages) and\nperforms the standard aperiodic timing analysis (power density spectrum,\nlags, etc.), plus the cospectrum, a proxy for the power density spectrum\nthat uses the signals from two detectors instead of a single one.\n",
      "dev_url": "https://bitbucket.org/mbachett/maltpynt",
      "doc_url": "http://maltpynt.readthedocs.org/",
      "home": "https://bitbucket.org/mbachett/maltpynt",
      "license": "BSD 3-clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "\"Matteo's library and tools in Python for NuSTAR timing\""
    },
    "build": {
      "entry_points": [
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main"
      ],
      "number": "0",
      "script": "python setup.py install --offline --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "matteobachetti"
      ]
    },
    "package": {
      "name": "maltpynt",
      "version": "2.0.1"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy"
      ]
    },
    "source": {
      "fn": "maltpynt-2.0.1.tar.gz",
      "sha256": "e23039bad963d53626934ab76d129f5cdc8e8a3e36a9ede247c3d041b1fcaf24",
      "url": "https://pypi.io/packages/source/m/maltpynt/maltpynt-2.0.1.tar.gz"
    },
    "test": {
      "commands": [
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help"
      ],
      "imports": [
        "maltpynt"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy",
        "matplotlib",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The MaLTPyNT (Matteo’s Libraries and Tools in Python for NuSTAR Timing)\nsuite is designed for the quick-look timing analysis of NuSTAR data. It\ntreats properly orbital gaps (e.g., occultation, SAA passages) and\nperforms the standard aperiodic timing analysis (power density spectrum,\nlags, etc.), plus the cospectrum, a proxy for the power density spectrum\nthat uses the signals from two detectors instead of a single one.\n",
      "dev_url": "https://bitbucket.org/mbachett/maltpynt",
      "doc_url": "http://maltpynt.readthedocs.org/",
      "home": "https://bitbucket.org/mbachett/maltpynt",
      "license": "BSD 3-clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "\"Matteo's library and tools in Python for NuSTAR timing\""
    },
    "build": {
      "entry_points": [
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main",
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main",
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main"
      ],
      "number": "0",
      "script": "python setup.py install --offline --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "matteobachetti",
        "mwcraig",
        "bsipocz",
        "matteobachetti",
        "mwcraig",
        "bsipocz",
        "matteobachetti"
      ]
    },
    "package": {
      "name": "maltpynt",
      "version": "2.0.1"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools",
        "python",
        "setuptools",
        "python",
        "setuptools"
      ],
      "run": [
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy",
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy",
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy"
      ]
    },
    "source": {
      "fn": "maltpynt-2.0.1.tar.gz",
      "sha256": "e23039bad963d53626934ab76d129f5cdc8e8a3e36a9ede247c3d041b1fcaf24",
      "url": "https://pypi.io/packages/source/m/maltpynt/maltpynt-2.0.1.tar.gz"
    },
    "test": {
      "commands": [
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help",
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help",
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help"
      ],
      "imports": [
        "maltpynt",
        "maltpynt",
        "maltpynt"
      ]
    }
  },
  "name": "maltpynt",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The MaLTPyNT (Matteo’s Libraries and Tools in Python for NuSTAR Timing)\nsuite is designed for the quick-look timing analysis of NuSTAR data. It\ntreats properly orbital gaps (e.g., occultation, SAA passages) and\nperforms the standard aperiodic timing analysis (power density spectrum,\nlags, etc.), plus the cospectrum, a proxy for the power density spectrum\nthat uses the signals from two detectors instead of a single one.\n",
      "dev_url": "https://bitbucket.org/mbachett/maltpynt",
      "doc_url": "http://maltpynt.readthedocs.org/",
      "home": "https://bitbucket.org/mbachett/maltpynt",
      "license": "BSD 3-clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "\"Matteo's library and tools in Python for NuSTAR timing\""
    },
    "build": {
      "entry_points": [
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main"
      ],
      "number": "0",
      "script": "python setup.py install --offline --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "matteobachetti"
      ]
    },
    "package": {
      "name": "maltpynt",
      "version": "2.0.1"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy"
      ]
    },
    "source": {
      "fn": "maltpynt-2.0.1.tar.gz",
      "sha256": "e23039bad963d53626934ab76d129f5cdc8e8a3e36a9ede247c3d041b1fcaf24",
      "url": "https://pypi.io/packages/source/m/maltpynt/maltpynt-2.0.1.tar.gz"
    },
    "test": {
      "commands": [
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help"
      ],
      "imports": [
        "maltpynt"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy",
        "matplotlib",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "parsing_error": "make_graph: missing parsing_error key",
  "pr_info": {
    "__lazy_json__": "pr_info/maltpynt.json"
  },
  "raw_meta_yaml": "{% set name = \"maltpynt\" %}\n{% set version = \"2.0.1\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"e23039bad963d53626934ab76d129f5cdc8e8a3e36a9ede247c3d041b1fcaf24\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.tar.gz'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  number: 0\n  entry_points:\n    - MPreadevents = maltpynt.read_events:main\n    - MPlcurve = maltpynt.lcurve:main\n    - MPcalibrate = maltpynt.calibrate:main\n    - MPcreategti = maltpynt.create_gti:main\n    - MPdumpdyn = maltpynt.fspec:dumpdyn_main\n    - MPfake = maltpynt.fake:main\n    - MPexposure = maltpynt.exposure:main\n    - MPfspec = maltpynt.fspec:main\n    - MPlags = maltpynt.lags:main\n    - MPplot = maltpynt.plot:main\n    - MPreadfile = maltpynt.io:main\n    - MPrebin = maltpynt.rebin:main\n    - MPscrunchlc = maltpynt.lcurve:scrunch_main\n    - MPsumfspec = maltpynt.sum_fspec:main\n    - MP2xspec = maltpynt.save_as_xspec:main\n  script: python setup.py install --offline --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n    - matplotlib\n    - scipy\n    - numpy\n    - astropy\n\ntest:\n  imports:\n    - maltpynt\n  commands:\n    - MPreadevents --help\n    - MPlcurve --help\n    - MPcalibrate --help\n    - MPcreategti --help\n    - MPdumpdyn --help\n    - MPfake --help\n    - MPexposure --help\n    - MPfspec --help\n    - MPlags --help\n    - MPplot --help\n    - MPreadfile --help\n    - MPrebin --help\n    - MPscrunchlc --help\n    - MPsumfspec --help\n    - MP2xspec --help\n\nabout:\n  home: https://bitbucket.org/mbachett/maltpynt\n  license: BSD 3-clause\n  license_family: BSD\n  license_file: LICENSE.rst\n  summary: '\"Matteo''s library and tools in Python for NuSTAR timing\"'\n  description: |\n    The MaLTPyNT (Matteo’s Libraries and Tools in Python for NuSTAR Timing)\n    suite is designed for the quick-look timing analysis of NuSTAR data. It\n    treats properly orbital gaps (e.g., occultation, SAA passages) and\n    performs the standard aperiodic timing analysis (power density spectrum,\n    lags, etc.), plus the cospectrum, a proxy for the power density spectrum\n    that uses the signals from two detectors instead of a single one.\n  doc_url: http://maltpynt.readthedocs.org/\n  dev_url: https://bitbucket.org/mbachett/maltpynt\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - bsipocz\n    - matteobachetti\n",
  "req": {
    "__set__": true,
    "elements": [
      "astropy",
      "matplotlib",
      "numpy",
      "python",
      "scipy",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy",
        "matplotlib",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy",
        "matplotlib",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/m/maltpynt/maltpynt-2.0.1.tar.gz",
  "version": "2.0.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/maltpynt.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The MaLTPyNT (Matteo’s Libraries and Tools in Python for NuSTAR Timing)\nsuite is designed for the quick-look timing analysis of NuSTAR data. It\ntreats properly orbital gaps (e.g., occultation, SAA passages) and\nperforms the standard aperiodic timing analysis (power density spectrum,\nlags, etc.), plus the cospectrum, a proxy for the power density spectrum\nthat uses the signals from two detectors instead of a single one.\n",
      "dev_url": "https://bitbucket.org/mbachett/maltpynt",
      "doc_url": "http://maltpynt.readthedocs.org/",
      "home": "https://bitbucket.org/mbachett/maltpynt",
      "license": "BSD 3-clause",
      "license_family": "BSD",
      "license_file": "LICENSE.rst",
      "summary": "\"Matteo's library and tools in Python for NuSTAR timing\""
    },
    "build": {
      "entry_points": [
        "MPreadevents = maltpynt.read_events:main",
        "MPlcurve = maltpynt.lcurve:main",
        "MPcalibrate = maltpynt.calibrate:main",
        "MPcreategti = maltpynt.create_gti:main",
        "MPdumpdyn = maltpynt.fspec:dumpdyn_main",
        "MPfake = maltpynt.fake:main",
        "MPexposure = maltpynt.exposure:main",
        "MPfspec = maltpynt.fspec:main",
        "MPlags = maltpynt.lags:main",
        "MPplot = maltpynt.plot:main",
        "MPreadfile = maltpynt.io:main",
        "MPrebin = maltpynt.rebin:main",
        "MPscrunchlc = maltpynt.lcurve:scrunch_main",
        "MPsumfspec = maltpynt.sum_fspec:main",
        "MP2xspec = maltpynt.save_as_xspec:main"
      ],
      "number": "0",
      "script": "python setup.py install --offline --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "matteobachetti"
      ]
    },
    "package": {
      "name": "maltpynt",
      "version": "2.0.1"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python",
        "matplotlib",
        "scipy",
        "numpy",
        "astropy"
      ]
    },
    "source": {
      "fn": "maltpynt-2.0.1.tar.gz",
      "sha256": "e23039bad963d53626934ab76d129f5cdc8e8a3e36a9ede247c3d041b1fcaf24",
      "url": "https://pypi.io/packages/source/m/maltpynt/maltpynt-2.0.1.tar.gz"
    },
    "test": {
      "commands": [
        "MPreadevents --help",
        "MPlcurve --help",
        "MPcalibrate --help",
        "MPcreategti --help",
        "MPdumpdyn --help",
        "MPfake --help",
        "MPexposure --help",
        "MPfspec --help",
        "MPlags --help",
        "MPplot --help",
        "MPreadfile --help",
        "MPrebin --help",
        "MPscrunchlc --help",
        "MPsumfspec --help",
        "MP2xspec --help"
      ],
      "imports": [
        "maltpynt"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy",
        "matplotlib",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}