{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "poap",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "POAP provides an event-driven framework for building and combining\nasynchronous optimization strategies.\n\nThe basic ingredients are a controller capable of asking workers to run\nfunction evaluations and a strategy for choosing where to sample. The\nstrategies send the controller proposed actions, which the controller then\naccepts or rejects; the controller, in turn, informs the strategies of\nrelevant events through callback functions.\n",
      "dev_url": "https://github.com/dbindel/POAP",
      "home": "https://github.com/dbindel/POAP",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Python Optimization Asynchronous Plumbing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu"
      ]
    },
    "package": {
      "name": "poap",
      "version": "0.1.26"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "POAP-0.1.26.tar.gz",
      "sha256": "05d34b8075faf4bc41e1a169151f545ef3e45cfa62ec31f815fa3c06ee2dd4fb",
      "url": "https://pypi.io/packages/source/P/POAP/POAP-0.1.26.tar.gz"
    },
    "test": {
      "commands": [
        "cd poap",
        "cd test",
        "python test_strategies.py",
        "python test_input_strategy.py",
        "python test_coroutine_strategy.py",
        "python test_fixed_strategy.py",
        "python test_maxterm_strategy.py",
        "python test_simteam_controller.py",
        "python test_thread_controller.py",
        "python test_thread_strategy.py",
        "python test_tcpserve.py"
      ],
      "imports": [
        "poap",
        "poap.test"
      ],
      "source_files": [
        "poap/test/*"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "POAP provides an event-driven framework for building and combining\nasynchronous optimization strategies.\n\nThe basic ingredients are a controller capable of asking workers to run\nfunction evaluations and a strategy for choosing where to sample. The\nstrategies send the controller proposed actions, which the controller then\naccepts or rejects; the controller, in turn, informs the strategies of\nrelevant events through callback functions.\n",
      "dev_url": "https://github.com/dbindel/POAP",
      "home": "https://github.com/dbindel/POAP",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Python Optimization Asynchronous Plumbing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu"
      ]
    },
    "package": {
      "name": "poap",
      "version": "0.1.26"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "POAP-0.1.26.tar.gz",
      "sha256": "05d34b8075faf4bc41e1a169151f545ef3e45cfa62ec31f815fa3c06ee2dd4fb",
      "url": "https://pypi.io/packages/source/P/POAP/POAP-0.1.26.tar.gz"
    },
    "test": {
      "commands": [
        "cd poap",
        "cd test",
        "python test_strategies.py",
        "python test_input_strategy.py",
        "python test_coroutine_strategy.py",
        "python test_fixed_strategy.py",
        "python test_maxterm_strategy.py",
        "python test_simteam_controller.py",
        "python test_thread_controller.py",
        "python test_thread_strategy.py",
        "python test_tcpserve.py"
      ],
      "imports": [
        "poap",
        "poap.test"
      ],
      "source_files": [
        "poap/test/*"
      ]
    }
  },
  "name": "poap",
  "osx_64_meta_yaml": {
    "about": {
      "description": "POAP provides an event-driven framework for building and combining\nasynchronous optimization strategies.\n\nThe basic ingredients are a controller capable of asking workers to run\nfunction evaluations and a strategy for choosing where to sample. The\nstrategies send the controller proposed actions, which the controller then\naccepts or rejects; the controller, in turn, informs the strategies of\nrelevant events through callback functions.\n",
      "dev_url": "https://github.com/dbindel/POAP",
      "home": "https://github.com/dbindel/POAP",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Python Optimization Asynchronous Plumbing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu"
      ]
    },
    "package": {
      "name": "poap",
      "version": "0.1.26"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "POAP-0.1.26.tar.gz",
      "sha256": "05d34b8075faf4bc41e1a169151f545ef3e45cfa62ec31f815fa3c06ee2dd4fb",
      "url": "https://pypi.io/packages/source/P/POAP/POAP-0.1.26.tar.gz"
    },
    "test": {
      "commands": [
        "cd poap",
        "cd test",
        "python test_strategies.py",
        "python test_input_strategy.py",
        "python test_coroutine_strategy.py",
        "python test_fixed_strategy.py",
        "python test_maxterm_strategy.py",
        "python test_simteam_controller.py",
        "python test_thread_controller.py",
        "python test_thread_strategy.py",
        "python test_tcpserve.py"
      ],
      "imports": [
        "poap",
        "poap.test"
      ],
      "source_files": [
        "poap/test/*"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "poap"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "win_64",
    "osx_64",
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/poap.json"
  },
  "raw_meta_yaml": "{% set name = \"POAP\" %}\n{% set version = \"0.1.26\" %}\n{% set sha256 = \"05d34b8075faf4bc41e1a169151f545ef3e45cfa62ec31f815fa3c06ee2dd4fb\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n\ntest:\n  imports:\n    - poap\n    - poap.test\n\n  source_files:\n    - poap/test/*\n\n  commands:\n    - cd poap\n    - cd test\n    - python test_strategies.py\n    - python test_input_strategy.py\n    - python test_coroutine_strategy.py\n    - python test_fixed_strategy.py\n    - python test_maxterm_strategy.py\n    - python test_simteam_controller.py\n    - python test_thread_controller.py\n    - python test_thread_strategy.py\n    - python test_tcpserve.py\n\nabout:\n  home: https://github.com/dbindel/POAP\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Python Optimization Asynchronous Plumbing.'\n  description: |\n    POAP provides an event-driven framework for building and combining\n    asynchronous optimization strategies.\n\n    The basic ingredients are a controller capable of asking workers to run\n    function evaluations and a strategy for choosing where to sample. The\n    strategies send the controller proposed actions, which the controller then\n    accepts or rejects; the controller, in turn, informs the strategies of\n    relevant events through callback functions.\n  dev_url: https://github.com/dbindel/POAP\n\nextra:\n  recipe-maintainers:\n    - tadeu\n",
  "req": {
    "__set__": true,
    "elements": [
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/P/POAP/POAP-0.1.26.tar.gz",
  "version": "0.1.26",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/poap.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "POAP provides an event-driven framework for building and combining\nasynchronous optimization strategies.\n\nThe basic ingredients are a controller capable of asking workers to run\nfunction evaluations and a strategy for choosing where to sample. The\nstrategies send the controller proposed actions, which the controller then\naccepts or rejects; the controller, in turn, informs the strategies of\nrelevant events through callback functions.\n",
      "dev_url": "https://github.com/dbindel/POAP",
      "home": "https://github.com/dbindel/POAP",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Python Optimization Asynchronous Plumbing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "tadeu"
      ]
    },
    "package": {
      "name": "poap",
      "version": "0.1.26"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "POAP-0.1.26.tar.gz",
      "sha256": "05d34b8075faf4bc41e1a169151f545ef3e45cfa62ec31f815fa3c06ee2dd4fb",
      "url": "https://pypi.io/packages/source/P/POAP/POAP-0.1.26.tar.gz"
    },
    "test": {
      "commands": [
        "cd poap",
        "cd test",
        "python test_strategies.py",
        "python test_input_strategy.py",
        "python test_coroutine_strategy.py",
        "python test_fixed_strategy.py",
        "python test_maxterm_strategy.py",
        "python test_simteam_controller.py",
        "python test_thread_controller.py",
        "python test_thread_strategy.py",
        "python test_tcpserve.py"
      ],
      "imports": [
        "poap",
        "poap.test"
      ],
      "source_files": [
        "poap/test/*"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}