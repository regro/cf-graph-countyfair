{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "progress_reporter",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "progress reporter enables developers to simply report several working steps\nvia an easy to use interface. The progress bar visualisation backends are\nimplemented for console and Jupyter notebooks.\n",
      "dev_url": "https://github.com/marscher/progress_reporter",
      "doc_url": "https://github.com/marscher/progress_reporter",
      "home": "https://github.com/marscher/progress_reporter",
      "license": "MIT",
      "license_file": "LICENSE.rst",
      "summary": "Python interface for progress reporting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "/tmp/tmp5s6a3k9f/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher"
      ]
    },
    "package": {
      "name": "progress_reporter",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "setuptools",
        "pip",
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "progress-reporter-2.0.tar.gz",
      "sha256": "3268b3281f06894643073dae5205e41e2a3b3811b7a3c34e39ece8b4107e9a7b",
      "url": "https://pypi.io/packages/source/p/progress-reporter/progress-reporter-2.0.tar.gz"
    },
    "test": {
      "imports": [
        "progress_reporter"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "progress reporter enables developers to simply report several working steps\nvia an easy to use interface. The progress bar visualisation backends are\nimplemented for console and Jupyter notebooks.\n",
      "dev_url": "https://github.com/marscher/progress_reporter",
      "doc_url": "https://github.com/marscher/progress_reporter",
      "home": "https://github.com/marscher/progress_reporter",
      "license": "MIT",
      "license_file": "LICENSE.rst",
      "summary": "Python interface for progress reporting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "/tmp/tmp5s6a3k9f/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher"
      ]
    },
    "package": {
      "name": "progress_reporter",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "setuptools",
        "pip",
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "progress-reporter-2.0.tar.gz",
      "sha256": "3268b3281f06894643073dae5205e41e2a3b3811b7a3c34e39ece8b4107e9a7b",
      "url": "https://pypi.io/packages/source/p/progress-reporter/progress-reporter-2.0.tar.gz"
    },
    "test": {
      "imports": [
        "progress_reporter"
      ]
    }
  },
  "name": "progress_reporter",
  "osx_64_meta_yaml": {
    "about": {
      "description": "progress reporter enables developers to simply report several working steps\nvia an easy to use interface. The progress bar visualisation backends are\nimplemented for console and Jupyter notebooks.\n",
      "dev_url": "https://github.com/marscher/progress_reporter",
      "doc_url": "https://github.com/marscher/progress_reporter",
      "home": "https://github.com/marscher/progress_reporter",
      "license": "MIT",
      "license_file": "LICENSE.rst",
      "summary": "Python interface for progress reporting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "/tmp/tmp5s6a3k9f/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher"
      ]
    },
    "package": {
      "name": "progress_reporter",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "setuptools",
        "pip",
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "progress-reporter-2.0.tar.gz",
      "sha256": "3268b3281f06894643073dae5205e41e2a3b3811b7a3c34e39ece8b4107e9a7b",
      "url": "https://pypi.io/packages/source/p/progress-reporter/progress-reporter-2.0.tar.gz"
    },
    "test": {
      "imports": [
        "progress_reporter"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "progress_reporter"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "win_64",
    "osx_64",
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/progress_reporter.json"
  },
  "raw_meta_yaml": "{% set name = \"progress_reporter\" %}\n{% set pypi_name = name.replace('_', '-') %}\n{% set version = \"2.0\" %}\n{% set sha256 = \"3268b3281f06894643073dae5205e41e2a3b3811b7a3c34e39ece8b4107e9a7b\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ pypi_name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ pypi_name}}/{{ pypi_name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n  noarch: python\n\nrequirements:\n  build:\n    - setuptools\n    - pip\n    - python\n\n  run:\n    - python\n\ntest:\n  imports:\n    - progress_reporter\n\nabout:\n  home: https://github.com/marscher/progress_reporter\n  license: MIT\n  license_file: LICENSE.rst\n  summary: 'Python interface for progress reporting'\n  description: |\n    progress reporter enables developers to simply report several working steps\n    via an easy to use interface. The progress bar visualisation backends are \n    implemented for console and Jupyter notebooks.\n  doc_url: https://github.com/marscher/progress_reporter\n  dev_url: https://github.com/marscher/progress_reporter \n\nextra:\n  recipe-maintainers: \n    - marscher\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/p/progress-reporter/progress-reporter-2.0.tar.gz",
  "version": "2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/progress_reporter.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "progress reporter enables developers to simply report several working steps\nvia an easy to use interface. The progress bar visualisation backends are\nimplemented for console and Jupyter notebooks.\n",
      "dev_url": "https://github.com/marscher/progress_reporter",
      "doc_url": "https://github.com/marscher/progress_reporter",
      "home": "https://github.com/marscher/progress_reporter",
      "license": "MIT",
      "license_file": "LICENSE.rst",
      "summary": "Python interface for progress reporting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "/tmp/tmp5s6a3k9f/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher"
      ]
    },
    "package": {
      "name": "progress_reporter",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "setuptools",
        "pip",
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "progress-reporter-2.0.tar.gz",
      "sha256": "3268b3281f06894643073dae5205e41e2a3b3811b7a3c34e39ece8b4107e9a7b",
      "url": "https://pypi.io/packages/source/p/progress-reporter/progress-reporter-2.0.tar.gz"
    },
    "test": {
      "imports": [
        "progress_reporter"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}