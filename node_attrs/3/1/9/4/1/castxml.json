{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "castxml",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      },
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      },
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      },
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      },
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "name": "castxml",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "castxml"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/castxml.json"
  },
  "raw_meta_yaml": "context:\n  version: \"0.6.11\"\n\npackage:\n  name: castxml\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/CastXML/CastXML/archive/refs/tags/v${{ version }}.tar.gz\n  sha256: fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d\n\nbuild:\n  number: 0\n  script:\n    - cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}\n    - cmake --build build\n    - ${{ \"if %errorlevel% neq 0 exit 1\" if win }}\n    - cmake --install build\n    - ${{ \"if %errorlevel% neq 0 exit 1\" if win }}\n\nrequirements:\n  build:\n    - ${{ compiler('cxx') }}\n    - ${{ stdlib('c') }}\n    - cmake\n    - ninja\n  host:\n    - clangdev 20.1.*\n    - libclang-cpp\n    - libllvm20\n    # zlib is a transitive dependency of llvmdev and not needed\n    - zlib\n\n  ignore_run_exports:\n    from_package:\n      # looks like on Windows, libzlib _is_ linked\n      - ${{ \"zlib\" if unix }}\n\n\ntests:\n  - script:\n      - castxml --version\n\n  - script:\n      - if: unix\n        then:\n          - castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp\n        else:\n          - castxml --castxml-cc-msvc %CXX% --castxml-gccxml -o test.xml test.cpp\n          - if %errorlevel% neq 0 exit 1\n\n    files:\n      recipe:\n        - test.cpp\n\n    requirements:\n      run:\n        - ${{ compiler('cxx') }}\n\nabout:\n  homepage: https://github.com/CastXML/CastXML\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: C-family Abstract Syntax Tree XML Output\n\nextra:\n  recipe-maintainers:\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "clangdev",
      "cmake",
      "cxx_compiler_stub",
      "libclang-cpp",
      "libllvm20",
      "ninja",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clangdev",
        "cxx_compiler_stub",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz",
  "version": "0.6.11",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/castxml.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/CastXML/CastXML",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "C-family Abstract Syntax Tree XML Output"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -GNinja -S . -B build ${{ \"$CMAKE_ARGS\" if unix else \"%CMAKE_ARGS%\" }}",
        "cmake --build build",
        "cmake --install build"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "castxml",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clangdev 20.1.*",
            "libclang-cpp",
            "libllvm20",
            "zlib"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "castxml --version"
          },
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "requirements": {
              "run": [
                "cxx_compiler_stub"
              ]
            },
            "script": "castxml --castxml-cc-gnu $CXX --castxml-gccxml -o test.xml test.cpp"
          }
        ]
      }
    ],
    "package": {
      "name": "castxml",
      "version": "0.6.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "clangdev 20.1.*",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "fc5b49f802b67f98ecea10564bc171c660020836a48cecefc416681a2d2e1d3d",
      "url": "https://github.com/CastXML/CastXML/archive/refs/tags/v0.6.11.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "libclang-cpp",
        "libllvm20",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  }
}