{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "gdma",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "ldd -v $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "ldd -v $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "otool -L $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "otool -L $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "otool -L $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "otool -L $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "m2w64_c_stdlib_stub",
            "m2w64_c_compiler_stub",
            "m2w64_fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "bld-cxx.bat",
        "test": {
          "commands": [
            "dir %PREFIX%\\\\Library\\\\lib",
            "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.dll.a exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\libgdma.dll exit 1",
            "if exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.a exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gdma.exe exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\GDMA\\\\GDMA_MANGLE.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-lib.cmake exit 1",
            "cd examples/H2O/ && gdma.exe < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "m2w64_c_stdlib_stub",
            "m2w64_c_compiler_stub",
            "m2w64_cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "bld-py.bat",
        "test": {
          "commands": [
            "if not exist %SP_DIR%\\\\gdma*.pyd exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-Python.cmake exit 1",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "name": "gdma-split",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "otool -L $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "otool -L $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "ls -l $PREFIX/lib",
            "ls -l $PREFIX/share/cmake/gdma",
            "test -f $PREFIX/lib/libgdma$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libgdma.a",
            "test -f $PREFIX/bin/gdma",
            "test -f $PREFIX/include/GDMA/GDMA_MANGLE.h",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake",
            "otool -L $PREFIX/lib/libgdma$SHLIB_EXT",
            "cd examples/H2O/ && gdma < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "build-py.sh",
        "test": {
          "commands": [
            "test -f $SP_DIR/gdma*.so",
            "test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake",
            "test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake",
            "otool -L $SP_DIR/gdma*.so",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "gdma",
      "pygdma"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/gdma.json"
  },
  "raw_meta_yaml": "{% set version = \"2.3.3\" %}\n{% set commit = \"c2e0b548\" %}\n{% set sha256 = \"87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383\" %}\n\npackage:\n  name: gdma-split\n  version: {{ version }}\n\nsource:\n  #url: https://github.com/psi4/gdma/archive/v2.3.3.tar.gz  # equivalent to upstream plus patches\n  url: https://gitlab.com/anthonyjs/gdma/-/archive/{{ commit }}.tar.bz2\n  patches:\n    - 0001-add-CMake-library-pymod-IO-git-avoidance.patch\n  #patches:  # also equivalent to upstream plus single big patch, but c-b predicts patch levels wrong\n  #  - 0001-fix-use-input-bug-build-outside-git-generalize-pytho.patch\n  #  - 0002-add-IO-management-form-library-as-well-as-executable.patch\n  #  - 0003-add-CMake-buildsystem-for-L-M-W-platforms.patch\n  #  - 0004-add-exports-to-Python-module.patch\n  #  - 0005-avoid-git-for-c-f.patch\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 6\n  binary_relocation: true\n\noutputs:\n  - name: gdma\n    script: build-cxx.sh                                                         # [unix]\n    script: bld-cxx.bat                                                          # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('gdma', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ stdlib(\"c\") }}                                                      # [unix]\n        - {{ compiler('c') }}                                                    # [unix]\n        - {{ compiler('fortran') }}                                              # [unix]\n        - {{ stdlib(\"m2w64_c\") }}                                                # [win]\n        - {{ compiler('m2w64_c') }}                                              # [win]\n        - {{ compiler('m2w64_fortran') }}                                        # [win]\n        - cmake\n        - ninja\n        - python 3.12                                                                      # only for generating a source file, so suppress all but one Py version. update as necessary.\n    test:\n      source_files:\n        - examples/H2O/data\n        - examples/H2O/H2O.fchk\n      commands:\n        - ls -l $PREFIX/lib                                                      # [unix]\n        - ls -l $PREFIX/share/cmake/gdma                                         # [unix]\n        - dir %PREFIX%\\\\Library\\\\lib                                             # [win]\n        - dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma                              # [win]\n        # Verify library\n        - test -f $PREFIX/lib/libgdma$SHLIB_EXT                                  # [unix]\n        - test ! -f $PREFIX/lib/libgdma.a                                        # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.dll.a exit 1              # [win]   # gnu import lib\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.lib exit 1                # [win]   # ms import lib\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\libgdma.dll exit 1                # [win]   # gnu/ms dyn lib\n        - if exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.a exit 1                      # [win]   # gnu static lib absent\n        # Verify accessories\n        - test -f $PREFIX/bin/gdma                                               # [unix]\n        - test -f $PREFIX/include/GDMA/GDMA_MANGLE.h                             # [unix]\n        - test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake                      # [unix]\n        - test -f $PREFIX/share/cmake/gdma/gdmaTargets-lib.cmake                 # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\gdma.exe exit 1                   # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\GDMA\\\\GDMA_MANGLE.h exit 1    # [win]\n        - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-lib.cmake exit 1  # [win]\n        # Inspect linkage\n        - ldd -v $PREFIX/lib/libgdma$SHLIB_EXT                                   # [linux and build_platform == target_platform]\n        - otool -L $PREFIX/lib/libgdma$SHLIB_EXT                                 # [osx]\n          # TOO LONG - '%OBJDUMP% %PREFIX%\\\\Library\\\\bin\\\\libgdma.dll | findstr /i \"dll\"'     # [win]\n        # Actually test\n        - cd examples/H2O/ && gdma < data                                        # [unix]\n        - cd examples/H2O/ && gdma.exe < data                                    # [win]\n\n  - name: pygdma\n    script: build-py.sh                                                          # [unix]\n    script: bld-py.bat                                                           # [win]\n    build:\n      skip: true                                                                 # [(aarch64 or ppc64le) and python_impl == 'pypy']\n    requirements:\n      build:\n        - {{ stdlib(\"c\") }}                                                      # [unix]\n        - {{ compiler(\"c\") }}                                                    # [unix]\n        - {{ compiler(\"cxx\") }}                                                  # [unix]\n        - {{ stdlib(\"m2w64_c\") }}                                                # [win]\n        - {{ compiler(\"m2w64_c\") }}                                              # [win]\n        - {{ compiler(\"m2w64_cxx\") }}                                            # [win]\n        - cmake\n        - ninja\n        - python                                                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}                                     # [build_platform != target_platform]\n        - pybind11                                                               # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage('gdma', exact=True) }}\n        - python\n        - pybind11\n        - pybind11-abi\n      run:\n        - {{ pin_subpackage('gdma', exact=True) }}\n        - python\n    test:\n      requires:\n        - pip                                                                              # provides `pip check`\n      source_files:\n        - examples/H2O/data\n        - examples/H2O/H2O.fchk\n      imports:\n        - gdma\n      commands:\n        # Verify module\n        - test -f $SP_DIR/gdma*.so                                               # [unix]\n        - if not exist %SP_DIR%\\\\gdma*.pyd exit 1                                # [win]\n        # Verify accessories\n        - test -f $PREFIX/share/cmake/gdma/gdmaConfig.cmake                      # [unix]\n        - test -f $PREFIX/share/cmake/gdma/gdmaTargets-Python.cmake              # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-Python.cmake exit 1  # [win]\n        # Inspect linkage\n        - ldd -v $SP_DIR/gdma*.so                                                # [linux and build_platform == target_platform]\n        - otool -L $SP_DIR/gdma*.so                                              # [osx]\n          # TOO LONG - '%OBJDUMP% %SP_DIR%\\\\gdma.*.pyd | findstr /i \"dll\"'                    # [win]\n        # Actually test\n        - pip check\n        - cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\"\n\nabout:\n  home: https://www-stone.ch.cam.ac.uk/pub/gdma/\n  dev_url: https://gitlab.com/anthonyjs/gdma\n  doc_url: https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf\n  doc_source_url: https://gitlab.com/anthonyjs/gdma/-/tree/master/doc\n  license: GPL-3.0-only\n  license_url: https://opensource.org/license/gpl-3-0/\n  license_file: LICENCE\n  license_family: GPL\n  summary: \"A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions\"\n\nextra:\n  feedstock-name: gdma\n  recipe-maintainers:\n    - loriab\n    - davpoolechem\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "gdma",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64_fortran_compiler_stub",
      "ninja",
      "pybind11",
      "pybind11-abi",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "ninja",
        "python 3.12"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2",
  "version": "2.3.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/gdma.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://gitlab.com/anthonyjs/gdma",
      "doc_source_url": "https://gitlab.com/anthonyjs/gdma/-/tree/master/doc",
      "doc_url": "https://gitlab.com/anthonyjs/gdma/-/blob/master/doc/manual.pdf",
      "home": "https://www-stone.ch.cam.ac.uk/pub/gdma/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENCE",
      "license_url": "https://opensource.org/license/gpl-3-0/",
      "summary": "A. J. Stone's Distributed Multipole Analysis for Gaussian wavefunctions"
    },
    "build": {
      "binary_relocation": true,
      "number": "6"
    },
    "extra": {
      "feedstock-name": "gdma",
      "recipe-maintainers": [
        "loriab",
        "davpoolechem"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "gdma"
          ]
        },
        "name": "gdma",
        "requirements": {
          "build": [
            "m2w64_c_stdlib_stub",
            "m2w64_c_compiler_stub",
            "m2w64_fortran_compiler_stub",
            "cmake",
            "ninja",
            "python 3.12"
          ]
        },
        "script": "bld-cxx.bat",
        "test": {
          "commands": [
            "dir %PREFIX%\\\\Library\\\\lib",
            "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.dll.a exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\libgdma.dll exit 1",
            "if exist %PREFIX%\\\\Library\\\\lib\\\\libgdma.a exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gdma.exe exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\GDMA\\\\GDMA_MANGLE.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-lib.cmake exit 1",
            "cd examples/H2O/ && gdma.exe < data"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      },
      {
        "build": null,
        "name": "pygdma",
        "requirements": {
          "build": [
            "m2w64_c_stdlib_stub",
            "m2w64_c_compiler_stub",
            "m2w64_cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "gdma",
            "python",
            "pybind11",
            "pybind11-abi"
          ],
          "run": [
            "gdma",
            "python"
          ]
        },
        "script": "bld-py.bat",
        "test": {
          "commands": [
            "if not exist %SP_DIR%\\\\gdma*.pyd exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaConfig.cmake exit 1",
            "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gdma\\\\gdmaTargets-Python.cmake exit 1",
            "pip check",
            "cd examples/H2O/ && python -c \"import gdma; print(gdma.__version__); gdma.run_gdma('stdout', 'data')\""
          ],
          "imports": [
            "gdma"
          ],
          "requires": [
            "pip"
          ],
          "source_files": [
            "examples/H2O/data",
            "examples/H2O/H2O.fchk"
          ]
        }
      }
    ],
    "package": {
      "name": "gdma-split",
      "version": "2.3.3"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-CMake-library-pymod-IO-git-avoidance.patch"
      ],
      "sha256": "87c090b7415cd2126608019cad7a3e008c25171c7c8189adad399b6a86f8d383",
      "url": "https://gitlab.com/anthonyjs/gdma/-/archive/c2e0b548.tar.bz2"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gdma",
        "pybind11",
        "pybind11-abi",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gdma",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}