{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "hierarchicalforecast",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "**HierarchicalForecast** offers a collection of reconciliation methods,\nincluding `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`.\n\n\n\n* Classic reconciliation methods:\n    - `BottomUp`: Simple addition to the upper levels.\n    - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n* Alternative reconciliation methods:\n    - `MiddleOut`: It anchors the base predictions in a middle level. The levels\n      above the base predictions use the bottom-up approach, while the levels below\n      use a top-down.\n    - `MinTrace`: Minimizes the total forecast variance of the space of coherent\n      forecasts, with the Minimum Trace reconciliation.\n    - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\nPyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n",
      "dev_url": "https://github.com/Nixtla/hierarchicalforecast",
      "doc_url": "https://nixtla.github.io/hierarchicalforecast/",
      "home": "https://github.com/Nixtla/hierarchicalforecast/tree/main/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Hierarchical Methods Time series forecasting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "sugatoray",
        "AzulGarza",
        "jmoralez",
        "elephaint"
      ]
    },
    "package": {
      "name": "hierarchicalforecast",
      "version": "1.3.0"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "matplotlib-base",
        "numba",
        "numpy",
        "pandas",
        "quadprog",
        "scikit-learn",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d67f81b82fa44ff6d1a9fb00cc058601e11fc9324d178264430f5d95e986732",
      "url": "https://pypi.org/packages/source/h/hierarchicalforecast/hierarchicalforecast-1.3.0.tar.gz"
    },
    "test": {
      "imports": [
        "hierarchicalforecast"
      ],
      "requires": [
        "python 3.10",
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "numba",
        "numpy",
        "pandas",
        "python",
        "quadprog",
        "scikit-learn",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "**HierarchicalForecast** offers a collection of reconciliation methods,\nincluding `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`.\n\n\n\n* Classic reconciliation methods:\n    - `BottomUp`: Simple addition to the upper levels.\n    - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n* Alternative reconciliation methods:\n    - `MiddleOut`: It anchors the base predictions in a middle level. The levels\n      above the base predictions use the bottom-up approach, while the levels below\n      use a top-down.\n    - `MinTrace`: Minimizes the total forecast variance of the space of coherent\n      forecasts, with the Minimum Trace reconciliation.\n    - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\nPyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n",
      "dev_url": "https://github.com/Nixtla/hierarchicalforecast",
      "doc_url": "https://nixtla.github.io/hierarchicalforecast/",
      "home": "https://github.com/Nixtla/hierarchicalforecast/tree/main/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Hierarchical Methods Time series forecasting"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "sugatoray",
        "AzulGarza",
        "jmoralez",
        "elephaint"
      ]
    },
    "package": {
      "name": "hierarchicalforecast",
      "version": "1.3.0"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "matplotlib-base",
        "numba",
        "numpy",
        "pandas",
        "quadprog",
        "scikit-learn",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d67f81b82fa44ff6d1a9fb00cc058601e11fc9324d178264430f5d95e986732",
      "url": "https://pypi.org/packages/source/h/hierarchicalforecast/hierarchicalforecast-1.3.0.tar.gz"
    },
    "test": {
      "imports": [
        "hierarchicalforecast"
      ],
      "requires": [
        "python 3.10",
        "pip"
      ]
    }
  },
  "name": "hierarchicalforecast",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "hierarchicalforecast"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/hierarchicalforecast.json"
  },
  "raw_meta_yaml": "{% set name = \"hierarchicalforecast\" %}\n{% set version = \"1.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/hierarchicalforecast-{{ version }}.tar.gz\n  sha256: 6d67f81b82fa44ff6d1a9fb00cc058601e11fc9324d178264430f5d95e986732\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - matplotlib-base\n    - numba\n    - numpy\n    - pandas\n    - quadprog\n    - scikit-learn\n    - tqdm\n\ntest:\n  imports:\n    - hierarchicalforecast\n  requires:\n    - python {{ python_min }}\n    - pip\n\nabout:\n  home: https://github.com/Nixtla/hierarchicalforecast/tree/main/\n  summary: Hierarchical Methods Time series forecasting\n  license: Apache-2.0\n  license_file: LICENSE\n  description: |\n    **HierarchicalForecast** offers a collection of reconciliation methods, \n    including `BottomUp`, `TopDown`, `MiddleOut`, `MinTrace` and `ERM`. \n\n    ## ðŸŽŠ Features \n\n    * Classic reconciliation methods:\n        - `BottomUp`: Simple addition to the upper levels.\n        - `TopDown`: Distributes the top levels forecasts trough the hierarchies.\n\n    * Alternative reconciliation methods:\n        - `MiddleOut`: It anchors the base predictions in a middle level. The levels \n          above the base predictions use the bottom-up approach, while the levels below \n          use a top-down.\n        - `MinTrace`: Minimizes the total forecast variance of the space of coherent \n          forecasts, with the Minimum Trace reconciliation.\n        - `ERM`: Optimizes the reconciliation matrix minimizing an L1 regularized objective.\n\n    PyPI: [https://pypi.org/project/hierarchicalforecast/](https://pypi.org/project/hierarchicalforecast/)\n\n  doc_url: https://nixtla.github.io/hierarchicalforecast/\n  dev_url: https://github.com/Nixtla/hierarchicalforecast\n\nextra:\n  recipe-maintainers:\n    - sugatoray\n    - AzulGarza\n    - jmoralez\n    - elephaint\n",
  "req": {
    "__set__": true,
    "elements": [
      "matplotlib-base",
      "numba",
      "numpy",
      "pandas",
      "pip",
      "python",
      "quadprog",
      "scikit-learn",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "numba",
        "numpy",
        "pandas",
        "python",
        "quadprog",
        "scikit-learn",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "numba",
        "numpy",
        "pandas",
        "python >=3.10",
        "quadprog",
        "scikit-learn",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/h/hierarchicalforecast/hierarchicalforecast-1.3.0.tar.gz",
  "version": "1.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/hierarchicalforecast.json"
  }
}