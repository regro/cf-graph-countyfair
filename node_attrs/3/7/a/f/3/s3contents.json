{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "64e04a7709be67e4c3160749fe1f1ab2672ce5c5",
  "feedstock_hash_ts": 1736179940,
  "feedstock_name": "s3contents",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A S3 and GCS backed ContentsManager implementation for Jupyter.\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.",
      "dev_url": "https://github.com/danielfrg/s3contents",
      "home": "https://github.com/danielfrg/s3contents",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE.txt",
      "summary": "A S3-backed ContentsManager implementation for Jupyter"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "mariusvniekerk",
        "danielfrg"
      ]
    },
    "package": {
      "name": "s3contents",
      "version": "0.11.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "hatchling"
      ],
      "run": [
        "python >=3.9",
        "aiobotocore >=1.4.0",
        "boto3",
        "notebook",
        "s3fs >=2021.11.0",
        "gcsfs >=2021.11.0",
        "nbconvert >=6.0,<8.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "s3contents-0.11.1.tar.gz",
      "sha256": "cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e",
      "url": "https://pypi.org/packages/source/s/s3contents/s3contents-0.11.1.tar.gz"
    },
    "test": {
      "imports": [
        "s3contents",
        "s3contents.tests"
      ],
      "requires": [
        "mock",
        "nose",
        "pytest",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore",
        "boto3",
        "gcsfs",
        "nbconvert",
        "notebook",
        "python",
        "s3fs"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "mock",
        "nose",
        "pytest",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A S3 and GCS backed ContentsManager implementation for Jupyter.\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.",
      "dev_url": "https://github.com/danielfrg/s3contents",
      "home": "https://github.com/danielfrg/s3contents",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE.txt",
      "summary": "A S3-backed ContentsManager implementation for Jupyter"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "mariusvniekerk",
        "danielfrg"
      ]
    },
    "package": {
      "name": "s3contents",
      "version": "0.11.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "hatchling"
      ],
      "run": [
        "python >=3.9",
        "aiobotocore >=1.4.0",
        "boto3",
        "notebook",
        "s3fs >=2021.11.0",
        "gcsfs >=2021.11.0",
        "nbconvert >=6.0,<8.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "s3contents-0.11.1.tar.gz",
      "sha256": "cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e",
      "url": "https://pypi.org/packages/source/s/s3contents/s3contents-0.11.1.tar.gz"
    },
    "test": {
      "imports": [
        "s3contents",
        "s3contents.tests"
      ],
      "requires": [
        "mock",
        "nose",
        "pytest",
        "python 3.9"
      ]
    }
  },
  "name": "s3contents",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "s3contents"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/s3contents.json"
  },
  "raw_meta_yaml": "{% set name = \"s3contents\" %}\n{% set version = \"0.11.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: cfcf6c56d9758ee6503b7aff16a7ec39ce1f5bcd1f743755636924b0939c166e\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n  noarch: python\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - hatchling\n  run:\n    - python >={{ python_min }}\n    - aiobotocore >=1.4.0\n    - boto3\n    - notebook\n    - s3fs >=2021.11.0\n    - gcsfs >=2021.11.0\n    - nbconvert >=6.0,<8.0\n\ntest:\n  requires:\n    - mock\n    - nose\n    - pytest\n    - python {{ python_min }}\n  imports:\n    - s3contents\n    - s3contents.tests\n\nabout:\n  home: https://github.com/danielfrg/s3contents\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE.txt\n  summary: A S3-backed ContentsManager implementation for Jupyter\n  description: \"A S3 and GCS backed ContentsManager implementation for Jupyter.\\nIt aims to a be a transparent, drop-in replacement for Jupyter standard filesystem-backed storage system. With this implementation of a Jupyter Contents Manager you can save all your notebooks, regular files, directories structure directly to\n    a S3/GCS bucket, this could be on AWS/GCP or a self hosted S3 API compatible like minio.\"\n  dev_url: https://github.com/danielfrg/s3contents\n\nextra:\n  recipe-maintainers:\n    - mariusvniekerk\n    - danielfrg\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiobotocore",
      "boto3",
      "gcsfs",
      "hatchling",
      "nbconvert",
      "notebook",
      "pip",
      "python",
      "s3fs"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore",
        "boto3",
        "gcsfs",
        "nbconvert",
        "notebook",
        "python",
        "s3fs"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "mock",
        "nose",
        "pytest",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatchling",
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiobotocore >=1.4.0",
        "boto3",
        "gcsfs >=2021.11.0",
        "nbconvert >=6.0,<8.0",
        "notebook",
        "python >=3.9",
        "s3fs >=2021.11.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "mock",
        "nose",
        "pytest",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/s3contents/s3contents-0.11.1.tar.gz",
  "version": "0.11.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/s3contents.json"
  }
}