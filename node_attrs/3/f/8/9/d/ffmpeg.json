{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "ffmpeg",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "807",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_807"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "clangxx",
        "pkg-config",
        "libtool",
        "nasm",
        "make"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "libva",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "libopenvino-dev",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libxcb",
        "xorg-libx11",
        "xorg-xorgproto",
        "alsa-lib",
        "pulseaudio-client",
        "libvorbis",
        "ffnvcodec-headers  12.1.*",
        "ffnvcodec-headers  12.2.*",
        "ffnvcodec-headers  13.0.*"
      ],
      "run_constrained": [
        "__cuda  >=12.2",
        "__cuda  >=12.4",
        "__cuda  >=12.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"vaapi\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -devices | grep \"alsa\"",
        "ffmpeg -hide_banner -devices | grep \"pulse\"",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -codecs | findstr \"h264_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"hevc_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"mjpeg_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg2_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg4_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vc1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp8_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp9_cuvid\""
      ],
      "requires": [
        "libxcb >=1.17"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangxx",
        "cxx_compiler_stub",
        "libtool",
        "make",
        "nasm",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "ffnvcodec-headers",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libva",
        "libvorbis",
        "libvpx",
        "libxcb",
        "libxml2",
        "openh264",
        "openssl",
        "pulseaudio-client",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "libxcb"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "807",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_807"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "pkg-config",
        "libtool",
        "nasm",
        "make"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "libopenvino-dev",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libxcb",
        "xorg-libx11",
        "xorg-xorgproto",
        "alsa-lib",
        "pulseaudio-client",
        "libvorbis",
        "ffnvcodec-headers  12.2.*",
        "ffnvcodec-headers  13.0.*"
      ],
      "run_constrained": [
        "__cuda  >=12.4",
        "__cuda  >=12.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -devices | grep \"alsa\"",
        "ffmpeg -hide_banner -devices | grep \"pulse\"",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -codecs | findstr \"h264_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"hevc_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"mjpeg_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg2_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg4_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vc1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp8_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp9_cuvid\""
      ],
      "requires": [
        "libxcb >=1.17"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libtool",
        "make",
        "nasm",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "ffnvcodec-headers",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libvorbis",
        "libvpx",
        "libxcb",
        "libxml2",
        "openh264",
        "openssl",
        "pulseaudio-client",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "libxcb"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "7",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_7"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "pkg-config",
        "libtool",
        "nasm",
        "make"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libxcb",
        "xorg-libx11",
        "xorg-xorgproto",
        "alsa-lib",
        "pulseaudio-client",
        "libvorbis"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -devices | grep \"alsa\"",
        "ffmpeg -hide_banner -devices | grep \"pulse\"",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
      ],
      "requires": [
        "libxcb >=1.17"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libtool",
        "make",
        "nasm",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopus",
        "librsvg",
        "libvorbis",
        "libvpx",
        "libxcb",
        "libxml2",
        "openh264",
        "openssl",
        "pulseaudio-client",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "libxcb"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "807",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_807"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "clangxx",
        "pkg-config",
        "libtool",
        "nasm",
        "make",
        "yasm",
        "autotools_clang_conda",
        "m2-sed"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "libva",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "libopenvino-dev",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libxcb",
        "xorg-libx11",
        "xorg-xorgproto",
        "alsa-lib",
        "pulseaudio-client",
        "libvorbis",
        "ffnvcodec-headers  12.1.*",
        "ffnvcodec-headers  12.2.*",
        "ffnvcodec-headers  13.0.*"
      ],
      "run_constrained": [
        "__cuda  >=12.2",
        "__cuda  >=12.5",
        "__cuda  >=12.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch",
        "patches/pkgconfig_generate_windows_llvm.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"vaapi\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -devices | grep \"alsa\"",
        "ffmpeg -hide_banner -devices | grep \"pulse\"",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -codecs | findstr \"h264_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"hevc_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"mjpeg_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg2_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg4_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vc1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp8_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp9_cuvid\"",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avdevice.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\swresample.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avfilter.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avcodec.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avformat.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\swscale.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avutil.lib exit 1",
        "echo \"Checking for existance of avdevice-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avdevice-61.dll exit 1",
        "echo \"Checking for existance of swresample-5.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\swresample-5.dll exit 1",
        "echo \"Checking for existance of avfilter-10.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avfilter-10.dll exit 1",
        "echo \"Checking for existance of avcodec-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avcodec-61.dll exit 1",
        "echo \"Checking for existance of avformat-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avformat-61.dll exit 1",
        "echo \"Checking for existance of swscale-8.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\swscale-8.dll exit 1",
        "echo \"Checking for existance of avutil-59.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avutil-59.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1"
      ],
      "requires": null
    }
  },
  "name": "ffmpeg",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "7",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_7"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "pkg-config",
        "libtool",
        "yasm",
        "make"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "libopenvino-dev",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libvorbis"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
      ],
      "requires": null
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libtool",
        "make",
        "pkg-config",
        "yasm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libvorbis",
        "libvpx",
        "libxml2",
        "openh264",
        "openssl",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "7",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_7"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "pkg-config",
        "libtool",
        "nasm",
        "make"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "libass",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "libvpx",
        "zlib",
        "openh264",
        "librsvg",
        "gmp",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "libopenvino-dev",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libvorbis"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"libmp3lame\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "test -f $PREFIX/lib/libavdevice${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswresample${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavfilter${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavcodec${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavformat${SHLIB_EXT}",
        "test -f $PREFIX/lib/libswscale${SHLIB_EXT}",
        "test -f $PREFIX/lib/libavutil${SHLIB_EXT}",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "test -f $PREFIX/lib/libpostproc${SHLIB_EXT}",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")",
        "test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")",
        "test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}"
      ],
      "requires": null
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libtool",
        "make",
        "nasm",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libvorbis",
        "libvpx",
        "libxml2",
        "openh264",
        "openssl",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ffmpeg"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ffmpeg.json"
  },
  "raw_meta_yaml": "{% set version = \"7.1.1\" %} # semver: (x.y.z)\n{% set x,y,z = version.split('.') %}\n{% set version_ffmpeg_style = x ~ '.' ~ y if z == \"0\" else version %}\n{% set build_number_increment = build_number_increment | default(0) %}\n{% set license_family = license_family | default(\"lgpl\") %}\n\npackage:\n  name: ffmpeg\n  version: {{ version }}\n\nsource:\n  url: https://ffmpeg.org/releases/ffmpeg-{{ version_ffmpeg_style }}.tar.gz\n  sha256: 9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601\n  patches:\n    - patches/pkgconfig_generate_windows_llvm.patch  # [win]\n    # I don't really think that the original changes made at FFmpeg make sense for\n    # conda-forge's conmpiler stack on windows\n    # https://github.com/FFmpeg/FFmpeg/commit/f8d6d0fbf12b3247a37885cd0a5cd32ddc1f01b3\n    # https://github.com/conda-forge/ffmpeg-feedstock/pull/193#issuecomment-1484476264\n    - patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch\n\n    # needed for qtwebengine\n    - patches/add-av_stream_get_first_dts-for-chromium.patch\n\n    # Include time_internal header for windows to correctly locate localtime_r and gmtime_r\n    - patches/include_time_internal_header.patch\n\n    # https://gitlab.com/AOMediaCodec/SVT-AV1/-/issues/2249\n    # https://code.ffmpeg.org/FFmpeg/FFmpeg/pulls/12\n    - patches/12-svtav1_300_support.patch\n\n    # Fix for CVE-2025-22921: NULL pointer dereference in JPEG2000 decoder\n    - patches/ffmpeg-CVE-2025-22921.patch\n\n{% set build = 7 %}\n{% set build = build | int + build_number_increment | int %}\n{% if license_family == 'gpl' %}\n    {% set build = build + 100 %}\n{% endif %}\n\nbuild:\n  number: {{ build }}\n  string: {{ license_family }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  run_exports:\n  # seems to be major version compatibility\n  # https://abi-laboratory.pro/tracker/timeline/ffmpeg/\n    - {{ pin_subpackage('ffmpeg', max_pin='x') }}\n  ignore_run_exports_from:\n    - glib\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ stdlib(\"c\") }}\n    # clangxx is required for support of the nvidia encoders and decoders\n    - clangxx  # [linux64]\n    - autotools_clang_conda  # [win]\n    - pkg-config\n    - libtool  # [not win]\n    - nasm  # [not (osx and x86_64)]\n    # osx_64 needs yasm due to https://stackoverflow.com/questions/58796267/building-for-macos-but-linking-in-object-file-built-for-free-standing\n    - yasm  # [osx and x86_64]\n    - make  # [not win]\n    - m2-sed  # [win]\n    # makedef uses the printf command which is provided by coreutils\n    # - m2-coreutils  # [win]\n  host:\n    - openssl\n    - bzip2\n    - freetype\n    - expat\n    - libass   # [unix]\n    - harfbuzz\n    # glib is only required to find harfbuzz with pkg-config at compilation time\n    # but it is not directly linked to the system\n    - glib\n    - fontconfig\n    - libiconv\n    - libxml2\n    {% if license_family == 'gpl' %}\n    - x264\n    - x265\n    {% endif %}\n    - libvpx  # [not win]\n    - zlib\n    - openh264\n    - librsvg\n    - gmp                # [unix]\n    - libva              # [linux64]\n    - aom\n    - svt-av1\n    - ffnvcodec-headers  {{ ffnvcodec_headers }}  # [ffnvcodec_headers != \"None\"]\n    - libopus\n    - lame\n    - libass             # [not win]\n    - libopenvino-dev    # [not win and not ppc64le]\n    - dav1d\n    - liblzma-devel\n    - sdl2\n    - libxcb             # [linux]\n    - xorg-libx11        # [linux]\n    - xorg-xorgproto     # [linux]\n    - alsa-lib           # [linux]\n    - pulseaudio-client  # [linux]\n    - libvorbis\n  run_constrained:\n    - __cuda  >={{ cuda_version_for_ffnvcodec }}  # [ffnvcodec_headers != \"None\"]\n\n{% set grep = \"grep\" %}  # [unix]\n{% set grep = \"findstr\" %}  # [win]\n\ntest:\n  requires:\n    # we had a repodata patch that changed the compatibility from libxcb\n    # to encompass 1.16 and 1.17, for some reason build 0 of ffmpeg 7.1\n    # is only compatibile with libxcb 1.16\n    # libxcb 1.17 is required for Ubuntu 24.10 compatibility\n    - libxcb >=1.17    # [linux]\n  commands:\n    - ffmpeg --help\n    - ffmpeg -hide_banner -codecs\n    - ffmpeg -hide_banner -protocols\n    - ffmpeg -hide_banner -protocols | {{ grep }} \"https\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libmp3lame\"       # [unix]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEVI.S\\ zlib\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"DEV.LS h264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libopenh264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"vaapi\"            # [linux64]\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libaom\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libsvtav1\"\n    # Verify ffplay is available\n    - ffplay -version\n    # Verify dynamic libraries on all systems\n    {% set ffmpeg_libs = [\n        \"avdevice\",\n        \"swresample\",\n        \"avfilter\",\n        \"avcodec\",\n        \"avformat\",\n        \"swscale\",\n        \"avutil\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - test -f $PREFIX/lib/lib{{ each_ffmpeg_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_ffmpeg_lib }}.lib exit 1  # [win]\n    {% endfor %}\n    # Windows dynamic libraries have a suffix\n    # This is useful to keep since it helps detect ABI breakage\n    # One can find the SO versions by reading the release notes\n    # https://ffmpeg.org/download.html#releases\n    {% set ffmpeg_libs = [\n        \"avdevice-61\",\n        \"swresample-5\",\n        \"avfilter-10\",\n        \"avcodec-61\",\n        \"avformat-61\",\n        \"swscale-8\",\n        \"avutil-59\",\n    ] %}\n    {% for each_ffmpeg_lib in ffmpeg_libs %}\n    - echo \"Checking for existance of {{ each_ffmpeg_lib }}.dll\"             # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_ffmpeg_lib }}.dll exit 1  # [win]\n    {% endfor %}\n    {%- if license_family == 'gpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"enable-gpl\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx264\"\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libx265\"\n    - test -f $PREFIX/lib/libpostproc${SHLIB_EXT}                  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1     # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1  # [win]\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -\n    {%- endif %}\n    {%- if license_family == 'lgpl' %}\n    - ffmpeg -hide_banner -buildconf | {{ grep }} \"disable-gpl\"\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx264\")     # [unix]\n    - test ! $(ffmpeg -hide_banner -codecs | grep \"libx265\")     # [unix]\n    - test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}              # [unix]\n    - if exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1       # [win]\n    - if exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1    # [win]\n    {%- endif %}\n    # Verify nvidia codecs on linux\n    {% set nvcodecs = [\n        \"h264_nvenc\",\n        \"hevc_nvenc\",\n        \"mjpeg_cuvid\",\n        \"mpeg1_cuvid\",\n        \"mpeg2_cuvid\",\n        \"mpeg4_cuvid\",\n        \"vc1_cuvid\",\n        \"vp8_cuvid\",\n        \"vp9_cuvid\"\n    ] %}\n    {% for nvcodec in nvcodecs %}\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"{{ nvcodec }}\"  # [ffnvcodec_headers != \"None\"]\n    {% endfor %}\n    # https://trac.ffmpeg.org/wiki/Null\n    - ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -\n    # Verify required devices on linux\n    - ffmpeg -hide_banner -devices | grep \"alsa\"  # [linux]\n    - ffmpeg -hide_banner -devices | grep \"pulse\"  # [linux]\n    # Test presence of certain codecs\n    - ffmpeg -hide_banner -codecs | {{ grep }} \"libvorbis\"\n\nabout:\n  home: https://www.ffmpeg.org/\n  license: GPL-2.0-or-later  # [license_family=='gpl']\n  license: LGPL-2.1-or-later  # [license_family=='lgpl']\n  license_file:\n    - COPYING.GPLv2            # [license_family=='gpl']\n    - COPYING.GPLv3            # [license_family=='gpl']\n    - COPYING.LGPLv2.1         # [license_family=='lgpl']\n    - COPYING.LGPLv3           # [license_family=='lgpl']\n  license_family: GPL  # [license_family=='gpl']\n  license_family: LGPL  # [license_family=='lgpl']\n  summary: Cross-platform solution to record, convert and stream audio and video.\n  dev_url: https://git.ffmpeg.org/ffmpeg.git\n  doc_url: https://ffmpeg.org/documentation.html\n\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n    - danielballan\n    - jakirkham\n    - 183amir\n    - patricksnape\n    - ocefpaf\n    - sdvillal\n    - carlodri\n    - benjaminrwilson\n    - matthiasdiener\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "alsa-lib",
      "aom",
      "autotools_clang_conda",
      "bzip2",
      "c_compiler_stub",
      "c_stdlib_stub",
      "clangxx",
      "cxx_compiler_stub",
      "dav1d",
      "expat",
      "ffnvcodec-headers",
      "fontconfig",
      "freetype",
      "glib",
      "gmp",
      "harfbuzz",
      "lame",
      "libass",
      "libiconv",
      "liblzma-devel",
      "libopenvino-dev",
      "libopus",
      "librsvg",
      "libtool",
      "libva",
      "libvorbis",
      "libvpx",
      "libxcb",
      "libxml2",
      "m2-sed",
      "make",
      "nasm",
      "openh264",
      "openssl",
      "pkg-config",
      "pulseaudio-client",
      "sdl2",
      "svt-av1",
      "x264",
      "x265",
      "xorg-libx11",
      "xorg-xorgproto",
      "yasm",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autotools_clang_conda",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangxx",
        "cxx_compiler_stub",
        "libtool",
        "m2-sed",
        "make",
        "nasm",
        "pkg-config",
        "yasm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "aom",
        "bzip2",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "dav1d",
        "expat",
        "ffnvcodec-headers",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libva",
        "libvorbis",
        "libvpx",
        "libxcb",
        "libxml2",
        "openh264",
        "openssl",
        "pulseaudio-client",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autotools_clang_conda",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangxx",
        "cxx_compiler_stub",
        "libtool",
        "m2-sed",
        "make",
        "nasm",
        "pkg-config",
        "yasm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "ffnvcodec-headers  12.1.*",
        "ffnvcodec-headers  12.2.*",
        "ffnvcodec-headers  13.0.*",
        "fontconfig",
        "freetype",
        "glib",
        "gmp",
        "harfbuzz",
        "lame",
        "libass",
        "libiconv",
        "liblzma-devel",
        "libopenvino-dev",
        "libopus",
        "librsvg",
        "libva",
        "libvorbis",
        "libvpx",
        "libxcb",
        "libxml2",
        "openh264",
        "openssl",
        "pulseaudio-client",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz",
  "version": "7.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ffmpeg.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ffmpeg.org/ffmpeg.git",
      "doc_url": "https://ffmpeg.org/documentation.html",
      "home": "https://www.ffmpeg.org/",
      "license": "LGPL-2.1-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING.GPLv2",
        "COPYING.GPLv3",
        "COPYING.LGPLv2.1",
        "COPYING.LGPLv3"
      ],
      "summary": "Cross-platform solution to record, convert and stream audio and video."
    },
    "build": {
      "ignore_run_exports_from": [
        "glib"
      ],
      "number": "807",
      "run_exports": [
        "ffmpeg"
      ],
      "string": "lgpl_h1234567_807"
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk",
        "danielballan",
        "jakirkham",
        "183amir",
        "patricksnape",
        "ocefpaf",
        "sdvillal",
        "carlodri",
        "benjaminrwilson",
        "matthiasdiener",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "ffmpeg",
      "version": "7.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autotools_clang_conda",
        "pkg-config",
        "nasm",
        "m2-sed"
      ],
      "host": [
        "openssl",
        "bzip2",
        "freetype",
        "expat",
        "harfbuzz",
        "glib",
        "fontconfig",
        "libiconv",
        "libxml2",
        "x264",
        "x265",
        "zlib",
        "openh264",
        "librsvg",
        "aom",
        "svt-av1",
        "libopus",
        "lame",
        "dav1d",
        "liblzma-devel",
        "sdl2",
        "libvorbis",
        "ffnvcodec-headers  12.1.*",
        "ffnvcodec-headers  12.2.*",
        "ffnvcodec-headers  13.0.*"
      ],
      "run_constrained": [
        "__cuda  >=12.2",
        "__cuda  >=12.5",
        "__cuda  >=12.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/pkgconfig_generate_windows_llvm.patch",
        "patches/0001-Revert-compat-Use-instead-of-for-rc.exe-options.patch",
        "patches/add-av_stream_get_first_dts-for-chromium.patch",
        "patches/include_time_internal_header.patch",
        "patches/12-svtav1_300_support.patch",
        "patches/ffmpeg-CVE-2025-22921.patch"
      ],
      "sha256": "9a6e57a446b671012612aaeb9df5126794d5ac8f2015ca220934f99a6a4e0601",
      "url": "https://ffmpeg.org/releases/ffmpeg-7.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "ffmpeg --help",
        "ffmpeg -hide_banner -codecs",
        "ffmpeg -hide_banner -protocols",
        "ffmpeg -hide_banner -protocols | findstr \"https\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEVI.S\\ zlib\"",
        "ffmpeg -hide_banner -codecs | findstr \"DEV.LS h264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libopenh264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libaom\"",
        "ffmpeg -hide_banner -codecs | findstr \"libsvtav1\"",
        "ffplay -version",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avdevice.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\swresample.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avfilter.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avcodec.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avformat.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\swscale.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\avutil.lib exit 1",
        "echo \"Checking for existance of avdevice-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avdevice-61.dll exit 1",
        "echo \"Checking for existance of swresample-5.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\swresample-5.dll exit 1",
        "echo \"Checking for existance of avfilter-10.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avfilter-10.dll exit 1",
        "echo \"Checking for existance of avcodec-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avcodec-61.dll exit 1",
        "echo \"Checking for existance of avformat-61.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avformat-61.dll exit 1",
        "echo \"Checking for existance of swscale-8.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\swscale-8.dll exit 1",
        "echo \"Checking for existance of avutil-59.dll\"",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\avutil-59.dll exit 1",
        "ffmpeg -hide_banner -buildconf | findstr \"enable-gpl\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx264\"",
        "ffmpeg -hide_banner -codecs | findstr \"libx265\"",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx264 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libx265 -f null -",
        "ffmpeg -hide_banner -f lavfi -i nullsrc=s=256x256:d=8 -vcodec libopenh264 -f null -",
        "ffmpeg -hide_banner -codecs | findstr \"libvorbis\"",
        "ffmpeg -hide_banner -buildconf | findstr \"disable-gpl\"",
        "if exist %PREFIX%\\\\Library\\\\lib\\\\postproc.lib exit 1",
        "if exist %PREFIX%\\\\Library\\\\bin\\\\postproc-58.dll exit 1",
        "ffmpeg -hide_banner -codecs | findstr \"h264_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"hevc_nvenc\"",
        "ffmpeg -hide_banner -codecs | findstr \"mjpeg_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg2_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"mpeg4_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vc1_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp8_cuvid\"",
        "ffmpeg -hide_banner -codecs | findstr \"vp9_cuvid\""
      ],
      "requires": null
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autotools_clang_conda",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-sed",
        "nasm",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "aom",
        "bzip2",
        "dav1d",
        "expat",
        "ffnvcodec-headers",
        "fontconfig",
        "freetype",
        "glib",
        "harfbuzz",
        "lame",
        "libiconv",
        "liblzma-devel",
        "libopus",
        "librsvg",
        "libvorbis",
        "libxml2",
        "openh264",
        "openssl",
        "sdl2",
        "svt-av1",
        "x264",
        "x265",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}