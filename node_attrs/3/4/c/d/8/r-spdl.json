{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-spdl",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/eddelbuettel/spdl",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Logging functions in 'RcppSpdlog' provide access to the logging functionality from the 'spdlog' 'C++' library. This package offers shorter convenience wrappers for the 'R' functions which match the 'C++' functions, namely via, say, 'spdl::debug()' at the debug level. The actual formatting is done by the 'fmt::format()' function from the 'fmtlib' library (that is also 'std::format()' in 'C++20' or later)."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "shelnutt2",
        "eddelbuettel"
      ]
    },
    "package": {
      "name": "r-spdl",
      "version": "0.0.5"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ],
      "run": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d7a888eec3f582df61ba7a2dcf27cbf886dc3696cdf6e44c04c1da638fdb8a0",
      "url": [
        "https://cran.r-project.org/src/contrib/spdl_0.0.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/spdl/spdl_0.0.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('spdl')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/eddelbuettel/spdl",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Logging functions in 'RcppSpdlog' provide access to the logging functionality from the 'spdlog' 'C++' library. This package offers shorter convenience wrappers for the 'R' functions which match the 'C++' functions, namely via, say, 'spdl::debug()' at the debug level. The actual formatting is done by the 'fmt::format()' function from the 'fmtlib' library (that is also 'std::format()' in 'C++20' or later)."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "shelnutt2",
        "eddelbuettel"
      ]
    },
    "package": {
      "name": "r-spdl",
      "version": "0.0.5"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ],
      "run": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d7a888eec3f582df61ba7a2dcf27cbf886dc3696cdf6e44c04c1da638fdb8a0",
      "url": [
        "https://cran.r-project.org/src/contrib/spdl_0.0.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/spdl/spdl_0.0.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('spdl')\""
      ]
    }
  },
  "name": "r-spdl",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-spdl"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-spdl.json"
  },
  "raw_meta_yaml": "{% set version = \"0.0.5\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-spdl\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/spdl_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/spdl/spdl_{{ version }}.tar.gz\n  sha256: 2d7a888eec3f582df61ba7a2dcf27cbf886dc3696cdf6e44c04c1da638fdb8a0\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rcppspdlog >=0.0.10\n  run:\n    - r-base\n    - r-rcppspdlog >=0.0.10\n\ntest:\n  commands:\n    - $R -e \"library('spdl')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('spdl')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/eddelbuettel/spdl\n  license: GPL-2.0-or-later\n  summary: Logging functions in 'RcppSpdlog' provide access to the logging functionality from the 'spdlog' 'C++' library. This package offers shorter convenience wrappers for the 'R' functions which match the 'C++' functions, namely via, say, 'spdl::debug()' at the debug level. The actual formatting is done by the 'fmt::format()'\n    function from the 'fmtlib' library (that is also 'std::format()' in 'C++20' or later).\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - shelnutt2\n    - eddelbuettel\n\n# Package: spdl\n# Type: Package\n# Title: Wrapper for 'RcppSpdlog' Functions\n# Description: Logging functions in 'RcppSpdlog' provide access to the logging functionality from the 'spdlog' 'C++' library. This package offers shorter convenience wrappers for the 'R' functions which match the 'C++' functions, namely via, say, 'spdl::debug()' at the debug level. The actual formatting is done by the 'fmt::format()' function from the 'fmtlib' library (that is also 'std::format()' in 'C++20' or later).\n# Version: 0.0.2\n# Date: 2022-12-01\n# Authors@R: person(\"Dirk\", \"Eddelbuettel\", role = c(\"aut\",\"cre\"), email = \"edd@debian.org\")\n# License: GPL (>= 2)\n# Imports: RcppSpdlog (>= 0.0.10)\n# URL: https://github.com/eddelbuettel/spdl\n# BugReports: https://github.com/eddelbuettel/spdl/issues\n# RoxygenNote: 6.0.1\n# NeedsCompilation: no\n# Packaged: 2022-12-01 13:23:16 UTC; edd\n# Author: Dirk Eddelbuettel [aut, cre]\n# Maintainer: Dirk Eddelbuettel <edd@debian.org>\n# Repository: CRAN\n# Date/Publication: 2022-12-01 13:40:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-rcppspdlog"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcppspdlog >=0.0.10"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/spdl_0.0.5.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/spdl/spdl_0.0.5.tar.gz"
  ],
  "version": "0.0.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-spdl.json"
  }
}