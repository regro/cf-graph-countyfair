{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "4763c4b1d71b4f8dd4c816ba9cedc5619558aed3",
  "feedstock_hash_ts": 1730849729,
  "feedstock_name": "freefem",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "FreeFEM is a popular 2D and 3D partial differential equations (PDE) solver used by thousands of researchers across the world. It allows you to easily implement your own physics modules using the provided FreeFEM language. FreeFEM offers a large list of finite elements, like the Lagrange, Taylor-Hood, etc., usable in the continuous and discontinuous Galerkin method framework.\n",
      "dev_url": "https://github.com/FreeFem",
      "doc_url": "https://doc.freefem.org",
      "home": "https://freefem.org/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE.txt",
      "summary": "FreeFem : A high level multiphysics finite element software"
    },
    "build": {
      "number": "16",
      "run_exports": [
        "freefem mpi_mpich_*",
        "freefem nompi_*",
        "freefem mpi_openmpi_*"
      ],
      "string": "mpi_openmpi_h1234567_16"
    },
    "extra": {
      "recipe-maintainers": [
        "ldallolio",
        "cnrdn",
        "fbordeu"
      ]
    },
    "package": {
      "name": "freefem",
      "version": "4.13"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "autoconf",
        "automake",
        "bison",
        "flex",
        "m4",
        "make",
        "patch",
        "unzip"
      ],
      "host": [
        "arpack",
        "fftw",
        "gmm",
        "gsl",
        "freeglut",
        "ipopt",
        "nlopt",
        "metis",
        "mumps-mpi",
        "petsc",
        "slepc",
        "parmetis",
        "mmgsuite",
        "scalapack",
        "scotch",
        "hdf5",
        "lapack",
        "openblas",
        "suitesparse",
        "superlu",
        "tetgen",
        "zlib",
        "zstd",
        "mpich",
        "mumps-seq",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hdf5",
        "lapack",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "Makefile.am_conda.patch",
        "Makefile.am_src_bin-win32_conda.patch"
      ],
      "sha256": "aefd4ff02333209f7433abef2e74acb621b6946063ff27e81cf2da43120b6ae4",
      "url": "https://github.com/FreeFem/FreeFem-sources/archive/refs/tags/v4.13.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/FreeFem++",
        "test -f $PREFIX/bin/FreeFem++-nw",
        "test -f $PREFIX/bin/ff-c++",
        "test -f $PREFIX/bin/ff-get-dep",
        "test -f $PREFIX/bin/ff-pkg-download",
        "FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/tutorial/beam.edp",
        "FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/3dSurf/buildMeshSfromMesh3.edp"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "fortran_compiler_stub",
        "m4",
        "make",
        "patch",
        "unzip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arpack",
        "fftw",
        "freeglut",
        "gmm",
        "gsl",
        "hdf5",
        "ipopt",
        "lapack",
        "metis",
        "mmgsuite",
        "mpich",
        "mumps-mpi",
        "mumps-seq",
        "nlopt",
        "openblas",
        "openmpi",
        "parmetis",
        "petsc",
        "scalapack",
        "scotch",
        "slepc",
        "suitesparse",
        "superlu",
        "tetgen",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hdf5",
        "lapack",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "FreeFEM is a popular 2D and 3D partial differential equations (PDE) solver used by thousands of researchers across the world. It allows you to easily implement your own physics modules using the provided FreeFEM language. FreeFEM offers a large list of finite elements, like the Lagrange, Taylor-Hood, etc., usable in the continuous and discontinuous Galerkin method framework.\n",
      "dev_url": "https://github.com/FreeFem",
      "doc_url": "https://doc.freefem.org",
      "home": "https://freefem.org/",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": "LICENSE.txt",
      "summary": "FreeFem : A high level multiphysics finite element software"
    },
    "build": {
      "number": "16",
      "run_exports": [
        "freefem mpi_mpich_*",
        "freefem nompi_*",
        "freefem mpi_openmpi_*"
      ],
      "string": "mpi_openmpi_h1234567_16"
    },
    "extra": {
      "recipe-maintainers": [
        "ldallolio",
        "cnrdn",
        "fbordeu"
      ]
    },
    "package": {
      "name": "freefem",
      "version": "4.13"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "autoconf",
        "automake",
        "bison",
        "flex",
        "m4",
        "make",
        "patch",
        "unzip"
      ],
      "host": [
        "arpack",
        "fftw",
        "gmm",
        "gsl",
        "freeglut",
        "ipopt",
        "nlopt",
        "metis",
        "mumps-mpi",
        "petsc",
        "slepc",
        "parmetis",
        "mmgsuite",
        "scalapack",
        "scotch",
        "hdf5",
        "lapack",
        "openblas",
        "suitesparse",
        "superlu",
        "tetgen",
        "zlib",
        "zstd",
        "mpich",
        "mumps-seq",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hdf5",
        "lapack",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "Makefile.am_conda.patch",
        "Makefile.am_src_bin-win32_conda.patch"
      ],
      "sha256": "aefd4ff02333209f7433abef2e74acb621b6946063ff27e81cf2da43120b6ae4",
      "url": "https://github.com/FreeFem/FreeFem-sources/archive/refs/tags/v4.13.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/FreeFem++",
        "test -f $PREFIX/bin/FreeFem++-nw",
        "test -f $PREFIX/bin/ff-c++",
        "test -f $PREFIX/bin/ff-get-dep",
        "test -f $PREFIX/bin/ff-pkg-download",
        "FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/tutorial/beam.edp",
        "FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/3dSurf/buildMeshSfromMesh3.edp"
      ]
    }
  },
  "name": "freefem",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "freefem"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/freefem.json"
  },
  "raw_meta_yaml": "{% set name = \"FreeFem\" %}\n{% set version = \"4.13\" %}\n{% set build = 16 %}\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\n{% if mpi == 'nompi' %}\n# prioritize nompi variant via build number\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}-sources/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: aefd4ff02333209f7433abef2e74acb621b6946063ff27e81cf2da43120b6ae4\n  patches:\n    - Makefile.am_conda.patch\n    - Makefile.am_src_bin-win32_conda.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [osx or win or py2ks]\n  # Per https://conda-forge.org/docs/maintainer/knowledge_base.html#preferring-a-provider-usually-nompi\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n  run_exports:\n    - {{ pin_subpackage('freefem', max_pin='x.x') }} {{ mpi_prefix }}_*  \n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [unix]\n    - {{ stdlib(\"c\") }}    # [unix]\n    - {{ compiler('cxx') }}  # [unix]\n    - {{ compiler('fortran') }}  # [unix]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ stdlib(\"c\") }}          # [win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ compiler('m2w64_fortran') }}  # [win]    \n    - autoconf  # [unix]\n    - m2-autoconf  # [win]\n    - m2-automake-wrapper  # [win]\n    - automake  # [unix]\n    - bison  # [unix]\n    - m2-bison  # [win]\n    - flex  # [unix]\n    - m2-flex  # [win]\n    - m4  # [unix]\n    - m2-m4  # [win]\n    - make  # [unix]\n    - m2w64-make  # [win]    \n    - patch  # [unix]\n    - m2-patch  # [win]\n    - m2-base  # [win]    \n    - unzip  # [unix]\n    - m2-unzip  # [win]\n  host:\n    - arpack\n    - fftw\n    - gmm  # [unix]\n    - gsl\n    - freeglut  # [linux]\n    - ipopt\n    - nlopt\n    - metis\n    - mumps-seq  # [not osx and mpi == 'nompi']\n    - mumps-mpi  # [mpi != 'nompi']\n    - petsc  # [not osx]\n    - slepc  # [unix]\n    - parmetis\n    - mmgsuite\n    - scalapack\n    - scotch\n    - hdf5\n    - lapack\n    - openblas\n    - suitesparse\n    - superlu  # [unix]\n    - tetgen\n    - zlib\n    - zstd\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - {{ pin_compatible('hdf5', max_pin='x.x') }}\n    - {{ pin_compatible('lapack', max_pin='x.x') }}\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/FreeFem++  # [unix]\n    - if not exist $PREFIX\\\\bin\\\\FreeFem++ exit 1  # [win]    \n    - test -f $PREFIX/bin/FreeFem++-nw  # [unix]\n    - if not exist $PREFIX\\\\bin\\\\FreeFem++-nw exit 1  # [win] \n    - test -f $PREFIX/bin/ff-c++  # [unix]\n    - if not exist $PREFIX\\\\bin\\\\ff-c++ exit 1  # [win] \n    - test -f $PREFIX/bin/ff-get-dep  # [unix]\n    - if not exist $PREFIX\\\\bin\\\\ff-get-dep exit 1  # [win]\n    - test -f $PREFIX/bin/ff-pkg-download  # [unix\n    - if not exist $PREFIX\\\\bin\\\\ff-pkg-download exit 1  # [win]\n    - FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/tutorial/beam.edp  # [linux]\n    - FreeFem++ $PREFIX/share/FreeFEM/${PKG_VERSION}/examples/3dSurf/buildMeshSfromMesh3.edp  # [linux]\n\nabout:\n  home: https://freefem.org/\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'FreeFem : A high level multiphysics finite element software'\n  description: >\n    FreeFEM is a popular 2D and 3D partial differential equations (PDE) solver used by thousands of researchers across the world. It allows you to easily implement your own physics modules using the provided FreeFEM language. FreeFEM offers a large list of finite elements, like the Lagrange, Taylor-Hood, etc., usable in\n    the continuous and discontinuous Galerkin method framework.\n  doc_url: https://doc.freefem.org\n  dev_url: https://github.com/FreeFem\n\nextra:\n  recipe-maintainers:\n    - ldallolio\n    - cnrdn\n    - fbordeu\n",
  "req": {
    "__set__": true,
    "elements": [
      "arpack",
      "autoconf",
      "automake",
      "bison",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "fftw",
      "flex",
      "fortran_compiler_stub",
      "freeglut",
      "gmm",
      "gsl",
      "hdf5",
      "ipopt",
      "lapack",
      "m4",
      "make",
      "metis",
      "mmgsuite",
      "mpich",
      "mumps-mpi",
      "mumps-seq",
      "nlopt",
      "openblas",
      "openmpi",
      "parmetis",
      "patch",
      "petsc",
      "scalapack",
      "scotch",
      "slepc",
      "suitesparse",
      "superlu",
      "tetgen",
      "unzip",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "fortran_compiler_stub",
        "m4",
        "make",
        "patch",
        "unzip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arpack",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fftw",
        "fortran_compiler_stub",
        "freeglut",
        "gmm",
        "gsl",
        "hdf5",
        "ipopt",
        "lapack",
        "metis",
        "mmgsuite",
        "mpich",
        "mumps-mpi",
        "mumps-seq",
        "nlopt",
        "openblas",
        "openmpi",
        "parmetis",
        "petsc",
        "scalapack",
        "scotch",
        "slepc",
        "suitesparse",
        "superlu",
        "tetgen",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "hdf5",
        "lapack",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "fortran_compiler_stub",
        "m4",
        "make",
        "patch",
        "unzip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arpack",
        "fftw",
        "freeglut",
        "gmm",
        "gsl",
        "hdf5",
        "ipopt",
        "lapack",
        "metis",
        "mmgsuite",
        "mpich",
        "mumps-mpi",
        "mumps-seq",
        "nlopt",
        "openblas",
        "openmpi",
        "parmetis",
        "petsc",
        "scalapack",
        "scotch",
        "slepc",
        "suitesparse",
        "superlu",
        "tetgen",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hdf5",
        "lapack",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/FreeFem/FreeFem-sources/archive/refs/tags/v4.13.tar.gz",
  "version": "4.13",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/freefem.json"
  }
}