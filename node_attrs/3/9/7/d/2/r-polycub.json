{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-polycub",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/bastistician/polyCub",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-polycub",
      "version": "0.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-sp >=1.0_11"
      ],
      "run": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a6d34e21e031762951120d93858a305c948afa15032218e28bfa16c57ef6bda6",
      "url": [
        "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('polyCub')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/bastistician/polyCub",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-polycub",
      "version": "0.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-sp >=1.0_11"
      ],
      "run": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a6d34e21e031762951120d93858a305c948afa15032218e28bfa16c57ef6bda6",
      "url": [
        "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('polyCub')\"",
        "\"%R%\" -e \"library('polyCub')\""
      ]
    }
  },
  "name": "r-polycub",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/bastistician/polyCub",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-polycub",
      "version": "0.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-sp >=1.0_11"
      ],
      "run": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a6d34e21e031762951120d93858a305c948afa15032218e28bfa16c57ef6bda6",
      "url": [
        "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('polyCub')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-polycub"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-polycub.json"
  },
  "raw_meta_yaml": "{% set version = \"0.9.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-polycub\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/polyCub_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/polyCub/polyCub_{{ version }}.tar.gz\n  sha256: a6d34e21e031762951120d93858a305c948afa15032218e28bfa16c57ef6bda6\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-sp >=1.0_11\n  run:\n    - r-base\n    - r-sp >=1.0_11\n\ntest:\n  commands:\n    - $R -e \"library('polyCub')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('polyCub')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/bastistician/polyCub\n  license: GPL-2.0-only\n  summary: \"Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions),\n    adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.\"\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: polyCub\n# Title: Cubature over Polygonal Domains\n# Version: 0.7.1\n# Date: 2019-02-07\n# Authors@R: c( person(\"Sebastian\", \"Meyer\", email = \"seb.meyer@fau.de\", role = c(\"aut\",\"cre\",\"trl\"), comment = c(ORCID = \"0000-0002-1791-9449\")), person(\"Leonhard\", \"Held\", email = \"Leonhard.Held@uzh.ch\", role = \"ths\"), person(\"Michael\", \"Hoehle\", email = \"hoehle@math.su.se\", role = \"ths\") )\n# Description: Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.\n# License: GPL-2\n# URL: https://github.com/bastistician/polyCub\n# BugReports: https://github.com/bastistician/polyCub/issues\n# Depends: R (>= 2.15.0), methods\n# Imports: grDevices, graphics, stats, sp (>= 1.0-11)\n# Suggests: spatstat, lattice, testthat, mvtnorm, statmod, rgeos, gpclib, cubature, knitr, rmarkdown, microbenchmark\n# RoxygenNote: 6.1.1\n# VignetteBuilder: knitr, rmarkdown\n# NeedsCompilation: yes\n# Packaged: 2019-02-07 10:20:59 UTC; smeyer\n# Author: Sebastian Meyer [aut, cre, trl] (<https://orcid.org/0000-0002-1791-9449>), Leonhard Held [ths], Michael Hoehle [ths]\n# Maintainer: Sebastian Meyer <seb.meyer@fau.de>\n# Repository: CRAN\n# Date/Publication: 2019-02-07 16:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "make",
      "r-base",
      "r-sp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-sp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-sp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz",
    "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz",
    "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz"
  ],
  "version": "0.9.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-polycub.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/bastistician/polyCub",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-polycub",
      "version": "0.9.2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-sp >=1.0_11"
      ],
      "run": [
        "r-base",
        "r-sp >=1.0_11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a6d34e21e031762951120d93858a305c948afa15032218e28bfa16c57ef6bda6",
      "url": [
        "https://cran.r-project.org/src/contrib/polyCub_0.9.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/polyCub/polyCub_0.9.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('polyCub')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-sp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}