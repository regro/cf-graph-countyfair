{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true,
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "nnunet",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/MIC-DKFZ/nnUNet",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "nnU-Net. Framework for out-of-the box biomedical image segmentation."
    },
    "build": {
      "entry_points": [
        "nnUNet_convert_decathlon_task = nnunet.experiment_planning.nnUNet_convert_decathlon_task:main",
        "nnUNet_plan_and_preprocess = nnunet.experiment_planning.nnUNet_plan_and_preprocess:main",
        "nnUNet_train = nnunet.run.run_training:main",
        "nnUNet_train_DP = nnunet.run.run_training_DP:main",
        "nnUNet_train_DDP = nnunet.run.run_training_DDP:main",
        "nnUNet_predict = nnunet.inference.predict_simple:main",
        "nnUNet_ensemble = nnunet.inference.ensemble_predictions:main",
        "nnUNet_find_best_configuration = nnunet.evaluation.model_selection.figure_out_what_to_submit:main",
        "nnUNet_print_available_pretrained_models = nnunet.inference.pretrained_models.download_pretrained_model:print_available_pretrained_models",
        "nnUNet_print_pretrained_model_info = nnunet.inference.pretrained_models.download_pretrained_model:print_pretrained_model_requirements",
        "nnUNet_download_pretrained_model = nnunet.inference.pretrained_models.download_pretrained_model:download_by_name",
        "nnUNet_download_pretrained_model_by_url = nnunet.inference.pretrained_models.download_pretrained_model:download_by_url",
        "nnUNet_determine_postprocessing = nnunet.postprocessing.consolidate_postprocessing_simple:main",
        "nnUNet_export_model_to_zip = nnunet.inference.pretrained_models.collect_pretrained_models:export_entry_point",
        "nnUNet_install_pretrained_model_from_zip = nnunet.inference.pretrained_models.download_pretrained_model:install_from_zip_entry_point",
        "nnUNet_change_trainer_class = nnunet.inference.change_trainer:main",
        "nnUNet_evaluate_folder = nnunet.evaluation.evaluator:nnunet_evaluate_folder",
        "nnUNet_plot_task_pngs = nnunet.utilities.overlay_plots:entry_point_generate_overlay"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "nnunet",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.9",
        "pytorch >1.10.0",
        "tqdm",
        "dicom2nifti",
        "scikit-image >=0.14",
        "medpy",
        "scipy",
        "batchgenerators >=0.23",
        "numpy",
        "scikit-learn",
        "simpleitk",
        "pandas",
        "requests",
        "nibabel",
        "tifffile",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e4836ab1df049585b60c152fc2b4b2cf882728cd93c78e49288c6db90f9f703",
      "url": "https://pypi.org/packages/source/n/nnunet/nnunet-1.7.1.tar.gz"
    },
    "test": {
      "commands": [
        "nnUNet_convert_decathlon_task --help",
        "nnUNet_plan_and_preprocess --help",
        "nnUNet_train --help",
        "nnUNet_train_DP --help",
        "nnUNet_train_DDP --help",
        "nnUNet_predict --help",
        "nnUNet_ensemble --help",
        "nnUNet_find_best_configuration --help",
        "nnUNet_print_available_pretrained_models --help",
        "nnUNet_print_pretrained_model_info --help",
        "nnUNet_download_pretrained_model --help",
        "nnUNet_download_pretrained_model_by_url --help",
        "nnUNet_determine_postprocessing --help",
        "nnUNet_export_model_to_zip --help",
        "nnUNet_install_pretrained_model_from_zip --help",
        "nnUNet_change_trainer_class --help",
        "nnUNet_evaluate_folder --help",
        "nnUNet_plot_task_pngs --help"
      ],
      "imports": [
        "nnunet"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "batchgenerators",
        "dicom2nifti",
        "matplotlib-base",
        "medpy",
        "nibabel",
        "numpy",
        "pandas",
        "python",
        "pytorch",
        "requests",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "simpleitk",
        "tifffile",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/MIC-DKFZ/nnUNet",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "nnU-Net. Framework for out-of-the box biomedical image segmentation."
    },
    "build": {
      "entry_points": [
        "nnUNet_convert_decathlon_task = nnunet.experiment_planning.nnUNet_convert_decathlon_task:main",
        "nnUNet_plan_and_preprocess = nnunet.experiment_planning.nnUNet_plan_and_preprocess:main",
        "nnUNet_train = nnunet.run.run_training:main",
        "nnUNet_train_DP = nnunet.run.run_training_DP:main",
        "nnUNet_train_DDP = nnunet.run.run_training_DDP:main",
        "nnUNet_predict = nnunet.inference.predict_simple:main",
        "nnUNet_ensemble = nnunet.inference.ensemble_predictions:main",
        "nnUNet_find_best_configuration = nnunet.evaluation.model_selection.figure_out_what_to_submit:main",
        "nnUNet_print_available_pretrained_models = nnunet.inference.pretrained_models.download_pretrained_model:print_available_pretrained_models",
        "nnUNet_print_pretrained_model_info = nnunet.inference.pretrained_models.download_pretrained_model:print_pretrained_model_requirements",
        "nnUNet_download_pretrained_model = nnunet.inference.pretrained_models.download_pretrained_model:download_by_name",
        "nnUNet_download_pretrained_model_by_url = nnunet.inference.pretrained_models.download_pretrained_model:download_by_url",
        "nnUNet_determine_postprocessing = nnunet.postprocessing.consolidate_postprocessing_simple:main",
        "nnUNet_export_model_to_zip = nnunet.inference.pretrained_models.collect_pretrained_models:export_entry_point",
        "nnUNet_install_pretrained_model_from_zip = nnunet.inference.pretrained_models.download_pretrained_model:install_from_zip_entry_point",
        "nnUNet_change_trainer_class = nnunet.inference.change_trainer:main",
        "nnUNet_evaluate_folder = nnunet.evaluation.evaluator:nnunet_evaluate_folder",
        "nnUNet_plot_task_pngs = nnunet.utilities.overlay_plots:entry_point_generate_overlay"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "nnunet",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.9",
        "pytorch >1.10.0",
        "tqdm",
        "dicom2nifti",
        "scikit-image >=0.14",
        "medpy",
        "scipy",
        "batchgenerators >=0.23",
        "numpy",
        "scikit-learn",
        "simpleitk",
        "pandas",
        "requests",
        "nibabel",
        "tifffile",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e4836ab1df049585b60c152fc2b4b2cf882728cd93c78e49288c6db90f9f703",
      "url": "https://pypi.org/packages/source/n/nnunet/nnunet-1.7.1.tar.gz"
    },
    "test": {
      "commands": [
        "nnUNet_convert_decathlon_task --help",
        "nnUNet_plan_and_preprocess --help",
        "nnUNet_train --help",
        "nnUNet_train_DP --help",
        "nnUNet_train_DDP --help",
        "nnUNet_predict --help",
        "nnUNet_ensemble --help",
        "nnUNet_find_best_configuration --help",
        "nnUNet_print_available_pretrained_models --help",
        "nnUNet_print_pretrained_model_info --help",
        "nnUNet_download_pretrained_model --help",
        "nnUNet_download_pretrained_model_by_url --help",
        "nnUNet_determine_postprocessing --help",
        "nnUNet_export_model_to_zip --help",
        "nnUNet_install_pretrained_model_from_zip --help",
        "nnUNet_change_trainer_class --help",
        "nnUNet_evaluate_folder --help",
        "nnUNet_plot_task_pngs --help"
      ],
      "imports": [
        "nnunet"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "name": "nnunet",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nnunet"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nnunet.json"
  },
  "raw_meta_yaml": "{% set name = \"nnunet\" %}\n{% set version = \"1.7.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/nnunet-{{ version }}.tar.gz\n  sha256: 0e4836ab1df049585b60c152fc2b4b2cf882728cd93c78e49288c6db90f9f703\n\nbuild:\n  entry_points:\n    - nnUNet_convert_decathlon_task = nnunet.experiment_planning.nnUNet_convert_decathlon_task:main\n    - nnUNet_plan_and_preprocess = nnunet.experiment_planning.nnUNet_plan_and_preprocess:main\n    - nnUNet_train = nnunet.run.run_training:main\n    - nnUNet_train_DP = nnunet.run.run_training_DP:main\n    - nnUNet_train_DDP = nnunet.run.run_training_DDP:main\n    - nnUNet_predict = nnunet.inference.predict_simple:main\n    - nnUNet_ensemble = nnunet.inference.ensemble_predictions:main\n    - nnUNet_find_best_configuration = nnunet.evaluation.model_selection.figure_out_what_to_submit:main\n    - nnUNet_print_available_pretrained_models = nnunet.inference.pretrained_models.download_pretrained_model:print_available_pretrained_models\n    - nnUNet_print_pretrained_model_info = nnunet.inference.pretrained_models.download_pretrained_model:print_pretrained_model_requirements\n    - nnUNet_download_pretrained_model = nnunet.inference.pretrained_models.download_pretrained_model:download_by_name\n    - nnUNet_download_pretrained_model_by_url = nnunet.inference.pretrained_models.download_pretrained_model:download_by_url\n    - nnUNet_determine_postprocessing = nnunet.postprocessing.consolidate_postprocessing_simple:main\n    - nnUNet_export_model_to_zip = nnunet.inference.pretrained_models.collect_pretrained_models:export_entry_point\n    - nnUNet_install_pretrained_model_from_zip = nnunet.inference.pretrained_models.download_pretrained_model:install_from_zip_entry_point\n    - nnUNet_change_trainer_class = nnunet.inference.change_trainer:main\n    - nnUNet_evaluate_folder = nnunet.evaluation.evaluator:nnunet_evaluate_folder\n    - nnUNet_plot_task_pngs = nnunet.utilities.overlay_plots:entry_point_generate_overlay\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 0\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - pytorch >1.10.0\n    - tqdm\n    - dicom2nifti\n    - scikit-image >=0.14\n    - medpy\n    - scipy\n    - batchgenerators >=0.23\n    - numpy\n    - scikit-learn\n    - simpleitk\n    - pandas\n    - requests\n    - nibabel\n    - tifffile\n    - matplotlib-base\n\ntest:\n  imports:\n    - nnunet\n  commands:\n    - nnUNet_convert_decathlon_task --help\n    - nnUNet_plan_and_preprocess --help\n    - nnUNet_train --help\n    - nnUNet_train_DP --help\n    - nnUNet_train_DDP --help\n    - nnUNet_predict --help\n    - nnUNet_ensemble --help\n    - nnUNet_find_best_configuration --help\n    - nnUNet_print_available_pretrained_models --help\n    - nnUNet_print_pretrained_model_info --help\n    - nnUNet_download_pretrained_model --help\n    - nnUNet_download_pretrained_model_by_url --help\n    - nnUNet_determine_postprocessing --help\n    - nnUNet_export_model_to_zip --help\n    - nnUNet_install_pretrained_model_from_zip --help\n    - nnUNet_change_trainer_class --help\n    - nnUNet_evaluate_folder --help\n    - nnUNet_plot_task_pngs --help\n  requires:\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/MIC-DKFZ/nnUNet\n  summary: nnU-Net. Framework for out-of-the box biomedical image segmentation.\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "batchgenerators",
      "dicom2nifti",
      "matplotlib-base",
      "medpy",
      "nibabel",
      "numpy",
      "pandas",
      "pip",
      "python",
      "pytorch",
      "requests",
      "scikit-image",
      "scikit-learn",
      "scipy",
      "setuptools",
      "simpleitk",
      "tifffile",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "batchgenerators",
        "dicom2nifti",
        "matplotlib-base",
        "medpy",
        "nibabel",
        "numpy",
        "pandas",
        "python",
        "pytorch",
        "requests",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "simpleitk",
        "tifffile",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "batchgenerators >=0.23",
        "dicom2nifti",
        "matplotlib-base",
        "medpy",
        "nibabel",
        "numpy",
        "pandas",
        "python >=3.9",
        "pytorch >1.10.0",
        "requests",
        "scikit-image >=0.14",
        "scikit-learn",
        "scipy",
        "simpleitk",
        "tifffile",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/n/nnunet/nnunet-1.7.1.tar.gz",
  "version": "1.7.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nnunet.json"
  }
}