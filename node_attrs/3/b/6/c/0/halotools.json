{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "halotools",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Halotools is a specialized python package for building and testing models\nof the galaxy-halo connection, and analyzing catalogs of dark matter\nhalos. The core functionality of the package includes: Fast generation of\nsynthetic galaxy populations using HODs, abundance matching, and related\nmethods; Efficient algorithms for calculating galaxy clustering, lensing,\nz-space distortions, and other astronomical statistics; A modular, object-\noriented framework for designing your own galaxy evolution model; End-to-\nend support for reducing halo catalogs and caching them as fast-loading\nhdf5 files\n",
      "dev_url": "https://github.com/astropy/halotools",
      "doc_url": "http://halotools.readthedocs.io",
      "home": "http://halotools.readthedocs.io",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "aphearin"
      ]
    },
    "package": {
      "name": "halotools",
      "version": "0.9.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "setuptools",
        "setuptools_scm",
        "pip",
        "wheel",
        "numpy",
        "cython >=3.0.2",
        "extension-helpers"
      ],
      "run": [
        "python",
        "astropy-base",
        "scipy",
        "beautifulsoup4",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600",
      "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz"
    },
    "test": {
      "imports": [
        "halotools",
        "halotools.empirical_models",
        "halotools.empirical_models.abunmatch",
        "halotools.empirical_models.assembias_models",
        "halotools.empirical_models.component_model_templates",
        "halotools.empirical_models.composite_models",
        "halotools.empirical_models.composite_models.hod_models",
        "halotools.empirical_models.composite_models.sfr_models",
        "halotools.empirical_models.composite_models.smhm_models",
        "halotools.empirical_models.factories",
        "halotools.empirical_models.occupation_models",
        "halotools.empirical_models.occupation_models.engines",
        "halotools.empirical_models.phase_space_models",
        "halotools.empirical_models.phase_space_models.analytic_models",
        "halotools.empirical_models.phase_space_models.analytic_models.centrals",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
        "halotools.empirical_models.phase_space_models.subhalo_based_models",
        "halotools.empirical_models.sfr_models",
        "halotools.empirical_models.smhm_models",
        "halotools.extern",
        "halotools.mock_observables",
        "halotools.mock_observables.counts_in_cells",
        "halotools.mock_observables.counts_in_cells.engines",
        "halotools.mock_observables.group_identification",
        "halotools.mock_observables.group_identification.test_groups",
        "halotools.mock_observables.isolation_functions",
        "halotools.mock_observables.isolation_functions.engines",
        "halotools.mock_observables.large_scale_density",
        "halotools.mock_observables.pair_counters",
        "halotools.mock_observables.pair_counters.cpairs",
        "halotools.mock_observables.pair_counters.marked_cpairs",
        "halotools.mock_observables.pair_counters.test_pair_counters",
        "halotools.mock_observables.pairwise_velocities",
        "halotools.mock_observables.pairwise_velocities.engines",
        "halotools.mock_observables.radial_profiles",
        "halotools.mock_observables.radial_profiles.engines",
        "halotools.mock_observables.surface_density",
        "halotools.mock_observables.surface_density.engines",
        "halotools.mock_observables.two_point_clustering",
        "halotools.mock_observables.void_statistics",
        "halotools.sim_manager",
        "halotools.utils"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Halotools is a specialized python package for building and testing models\nof the galaxy-halo connection, and analyzing catalogs of dark matter\nhalos. The core functionality of the package includes: Fast generation of\nsynthetic galaxy populations using HODs, abundance matching, and related\nmethods; Efficient algorithms for calculating galaxy clustering, lensing,\nz-space distortions, and other astronomical statistics; A modular, object-\noriented framework for designing your own galaxy evolution model; End-to-\nend support for reducing halo catalogs and caching them as fast-loading\nhdf5 files\n",
      "dev_url": "https://github.com/astropy/halotools",
      "doc_url": "http://halotools.readthedocs.io",
      "home": "http://halotools.readthedocs.io",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "aphearin"
      ]
    },
    "package": {
      "name": "halotools",
      "version": "0.9.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "setuptools",
        "setuptools_scm",
        "pip",
        "wheel",
        "numpy",
        "cython >=3.0.2",
        "extension-helpers"
      ],
      "run": [
        "python",
        "astropy-base",
        "scipy",
        "beautifulsoup4",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600",
      "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz"
    },
    "test": {
      "imports": [
        "halotools",
        "halotools.empirical_models",
        "halotools.empirical_models.abunmatch",
        "halotools.empirical_models.assembias_models",
        "halotools.empirical_models.component_model_templates",
        "halotools.empirical_models.composite_models",
        "halotools.empirical_models.composite_models.hod_models",
        "halotools.empirical_models.composite_models.sfr_models",
        "halotools.empirical_models.composite_models.smhm_models",
        "halotools.empirical_models.factories",
        "halotools.empirical_models.occupation_models",
        "halotools.empirical_models.occupation_models.engines",
        "halotools.empirical_models.phase_space_models",
        "halotools.empirical_models.phase_space_models.analytic_models",
        "halotools.empirical_models.phase_space_models.analytic_models.centrals",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
        "halotools.empirical_models.phase_space_models.subhalo_based_models",
        "halotools.empirical_models.sfr_models",
        "halotools.empirical_models.smhm_models",
        "halotools.extern",
        "halotools.mock_observables",
        "halotools.mock_observables.counts_in_cells",
        "halotools.mock_observables.counts_in_cells.engines",
        "halotools.mock_observables.group_identification",
        "halotools.mock_observables.group_identification.test_groups",
        "halotools.mock_observables.isolation_functions",
        "halotools.mock_observables.isolation_functions.engines",
        "halotools.mock_observables.large_scale_density",
        "halotools.mock_observables.pair_counters",
        "halotools.mock_observables.pair_counters.cpairs",
        "halotools.mock_observables.pair_counters.marked_cpairs",
        "halotools.mock_observables.pair_counters.test_pair_counters",
        "halotools.mock_observables.pairwise_velocities",
        "halotools.mock_observables.pairwise_velocities.engines",
        "halotools.mock_observables.radial_profiles",
        "halotools.mock_observables.radial_profiles.engines",
        "halotools.mock_observables.surface_density",
        "halotools.mock_observables.surface_density.engines",
        "halotools.mock_observables.two_point_clustering",
        "halotools.mock_observables.void_statistics",
        "halotools.sim_manager",
        "halotools.utils"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "name": "halotools",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Halotools is a specialized python package for building and testing models\nof the galaxy-halo connection, and analyzing catalogs of dark matter\nhalos. The core functionality of the package includes: Fast generation of\nsynthetic galaxy populations using HODs, abundance matching, and related\nmethods; Efficient algorithms for calculating galaxy clustering, lensing,\nz-space distortions, and other astronomical statistics; A modular, object-\noriented framework for designing your own galaxy evolution model; End-to-\nend support for reducing halo catalogs and caching them as fast-loading\nhdf5 files\n",
      "dev_url": "https://github.com/astropy/halotools",
      "doc_url": "http://halotools.readthedocs.io",
      "home": "http://halotools.readthedocs.io",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "aphearin"
      ]
    },
    "package": {
      "name": "halotools",
      "version": "0.9.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "setuptools",
        "setuptools_scm",
        "pip",
        "wheel",
        "numpy",
        "cython >=3.0.2",
        "extension-helpers"
      ],
      "run": [
        "python",
        "astropy-base",
        "scipy",
        "beautifulsoup4",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600",
      "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz"
    },
    "test": {
      "imports": [
        "halotools",
        "halotools.empirical_models",
        "halotools.empirical_models.abunmatch",
        "halotools.empirical_models.assembias_models",
        "halotools.empirical_models.component_model_templates",
        "halotools.empirical_models.composite_models",
        "halotools.empirical_models.composite_models.hod_models",
        "halotools.empirical_models.composite_models.sfr_models",
        "halotools.empirical_models.composite_models.smhm_models",
        "halotools.empirical_models.factories",
        "halotools.empirical_models.occupation_models",
        "halotools.empirical_models.occupation_models.engines",
        "halotools.empirical_models.phase_space_models",
        "halotools.empirical_models.phase_space_models.analytic_models",
        "halotools.empirical_models.phase_space_models.analytic_models.centrals",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
        "halotools.empirical_models.phase_space_models.subhalo_based_models",
        "halotools.empirical_models.sfr_models",
        "halotools.empirical_models.smhm_models",
        "halotools.extern",
        "halotools.mock_observables",
        "halotools.mock_observables.counts_in_cells",
        "halotools.mock_observables.counts_in_cells.engines",
        "halotools.mock_observables.group_identification",
        "halotools.mock_observables.group_identification.test_groups",
        "halotools.mock_observables.isolation_functions",
        "halotools.mock_observables.isolation_functions.engines",
        "halotools.mock_observables.large_scale_density",
        "halotools.mock_observables.pair_counters",
        "halotools.mock_observables.pair_counters.cpairs",
        "halotools.mock_observables.pair_counters.marked_cpairs",
        "halotools.mock_observables.pair_counters.test_pair_counters",
        "halotools.mock_observables.pairwise_velocities",
        "halotools.mock_observables.pairwise_velocities.engines",
        "halotools.mock_observables.radial_profiles",
        "halotools.mock_observables.radial_profiles.engines",
        "halotools.mock_observables.surface_density",
        "halotools.mock_observables.surface_density.engines",
        "halotools.mock_observables.two_point_clustering",
        "halotools.mock_observables.void_statistics",
        "halotools.sim_manager",
        "halotools.utils"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Halotools is a specialized python package for building and testing models\nof the galaxy-halo connection, and analyzing catalogs of dark matter\nhalos. The core functionality of the package includes: Fast generation of\nsynthetic galaxy populations using HODs, abundance matching, and related\nmethods; Efficient algorithms for calculating galaxy clustering, lensing,\nz-space distortions, and other astronomical statistics; A modular, object-\noriented framework for designing your own galaxy evolution model; End-to-\nend support for reducing halo catalogs and caching them as fast-loading\nhdf5 files\n",
      "dev_url": "https://github.com/astropy/halotools",
      "doc_url": "http://halotools.readthedocs.io",
      "home": "http://halotools.readthedocs.io",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "aphearin"
      ]
    },
    "package": {
      "name": "halotools",
      "version": "0.9.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "setuptools",
        "setuptools_scm",
        "pip",
        "wheel",
        "numpy",
        "cython >=3.0.2",
        "extension-helpers"
      ],
      "run": [
        "python",
        "astropy-base",
        "scipy",
        "beautifulsoup4",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600",
      "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz"
    },
    "test": {
      "imports": [
        "halotools",
        "halotools.empirical_models",
        "halotools.empirical_models.abunmatch",
        "halotools.empirical_models.assembias_models",
        "halotools.empirical_models.component_model_templates",
        "halotools.empirical_models.composite_models",
        "halotools.empirical_models.composite_models.hod_models",
        "halotools.empirical_models.composite_models.sfr_models",
        "halotools.empirical_models.composite_models.smhm_models",
        "halotools.empirical_models.factories",
        "halotools.empirical_models.occupation_models",
        "halotools.empirical_models.occupation_models.engines",
        "halotools.empirical_models.phase_space_models",
        "halotools.empirical_models.phase_space_models.analytic_models",
        "halotools.empirical_models.phase_space_models.analytic_models.centrals",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
        "halotools.empirical_models.phase_space_models.subhalo_based_models",
        "halotools.empirical_models.sfr_models",
        "halotools.empirical_models.smhm_models",
        "halotools.extern",
        "halotools.mock_observables",
        "halotools.mock_observables.counts_in_cells",
        "halotools.mock_observables.counts_in_cells.engines",
        "halotools.mock_observables.group_identification",
        "halotools.mock_observables.group_identification.test_groups",
        "halotools.mock_observables.isolation_functions",
        "halotools.mock_observables.isolation_functions.engines",
        "halotools.mock_observables.large_scale_density",
        "halotools.mock_observables.pair_counters",
        "halotools.mock_observables.pair_counters.cpairs",
        "halotools.mock_observables.pair_counters.marked_cpairs",
        "halotools.mock_observables.pair_counters.test_pair_counters",
        "halotools.mock_observables.pairwise_velocities",
        "halotools.mock_observables.pairwise_velocities.engines",
        "halotools.mock_observables.radial_profiles",
        "halotools.mock_observables.radial_profiles.engines",
        "halotools.mock_observables.surface_density",
        "halotools.mock_observables.surface_density.engines",
        "halotools.mock_observables.two_point_clustering",
        "halotools.mock_observables.void_statistics",
        "halotools.sim_manager",
        "halotools.utils"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "halotools"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/halotools.json"
  },
  "raw_meta_yaml": "{% set name = \"halotools\" %}\n{% set version = \"0.9.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600\n\nbuild:\n  number: 1\n  skip: true  # [py<311]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - cython >=3.0.2                         # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]    \n  host:\n    - python\n    - setuptools\n    - setuptools_scm\n    - pip\n    - wheel\n    - numpy\n    - cython >=3.0.2\n    - extension-helpers\n  run:\n    - python\n    - astropy-base\n    - scipy\n    - beautifulsoup4\n    - requests\n\ntest:\n  requires:\n    - pytest-astropy\n  imports:\n    - halotools\n    - halotools.empirical_models\n    - halotools.empirical_models.abunmatch\n    - halotools.empirical_models.assembias_models\n    - halotools.empirical_models.component_model_templates\n    - halotools.empirical_models.composite_models\n    - halotools.empirical_models.composite_models.hod_models\n    - halotools.empirical_models.composite_models.sfr_models\n    - halotools.empirical_models.composite_models.smhm_models\n    - halotools.empirical_models.factories\n    - halotools.empirical_models.occupation_models\n    - halotools.empirical_models.occupation_models.engines\n    - halotools.empirical_models.phase_space_models\n    - halotools.empirical_models.phase_space_models.analytic_models\n    - halotools.empirical_models.phase_space_models.analytic_models.centrals\n    - halotools.empirical_models.phase_space_models.analytic_models.satellites\n    - halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw\n    - halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass\n    - halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels\n    - halotools.empirical_models.phase_space_models.subhalo_based_models\n    - halotools.empirical_models.sfr_models\n    - halotools.empirical_models.smhm_models\n    - halotools.extern\n    - halotools.mock_observables\n    - halotools.mock_observables.counts_in_cells\n    - halotools.mock_observables.counts_in_cells.engines\n    - halotools.mock_observables.group_identification\n    - halotools.mock_observables.group_identification.test_groups\n    - halotools.mock_observables.isolation_functions\n    - halotools.mock_observables.isolation_functions.engines\n    - halotools.mock_observables.large_scale_density\n    - halotools.mock_observables.pair_counters\n    - halotools.mock_observables.pair_counters.cpairs\n    - halotools.mock_observables.pair_counters.marked_cpairs\n    - halotools.mock_observables.pair_counters.test_pair_counters\n    - halotools.mock_observables.pairwise_velocities\n    - halotools.mock_observables.pairwise_velocities.engines\n    - halotools.mock_observables.radial_profiles\n    - halotools.mock_observables.radial_profiles.engines\n    - halotools.mock_observables.surface_density\n    - halotools.mock_observables.surface_density.engines\n    - halotools.mock_observables.two_point_clustering\n    - halotools.mock_observables.void_statistics\n    - halotools.sim_manager\n    - halotools.utils\n\nabout:\n  home: http://halotools.readthedocs.io\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models.\n  description: |\n    Halotools is a specialized python package for building and testing models\n    of the galaxy-halo connection, and analyzing catalogs of dark matter\n    halos. The core functionality of the package includes: Fast generation of\n    synthetic galaxy populations using HODs, abundance matching, and related\n    methods; Efficient algorithms for calculating galaxy clustering, lensing,\n    z-space distortions, and other astronomical statistics; A modular, object-\n    oriented framework for designing your own galaxy evolution model; End-to-\n    end support for reducing halo catalogs and caching them as fast-loading\n    hdf5 files\n  doc_url: http://halotools.readthedocs.io\n  dev_url: https://github.com/astropy/halotools\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - bsipocz\n    - aphearin\n",
  "req": {
    "__set__": true,
    "elements": [
      "astropy-base",
      "beautifulsoup4",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "cython",
      "extension-helpers",
      "numpy",
      "pip",
      "python",
      "requests",
      "scipy",
      "setuptools",
      "setuptools_scm",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython >=3.0.2",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz",
  "version": "0.9.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/halotools.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Halotools is a specialized python package for building and testing models\nof the galaxy-halo connection, and analyzing catalogs of dark matter\nhalos. The core functionality of the package includes: Fast generation of\nsynthetic galaxy populations using HODs, abundance matching, and related\nmethods; Efficient algorithms for calculating galaxy clustering, lensing,\nz-space distortions, and other astronomical statistics; A modular, object-\noriented framework for designing your own galaxy evolution model; End-to-\nend support for reducing halo catalogs and caching them as fast-loading\nhdf5 files\n",
      "dev_url": "https://github.com/astropy/halotools",
      "doc_url": "http://halotools.readthedocs.io",
      "home": "http://halotools.readthedocs.io",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Package for studying large scale structure, cosmology, and galaxy evolution using N-body simulations and halo models."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mwcraig",
        "bsipocz",
        "aphearin"
      ]
    },
    "package": {
      "name": "halotools",
      "version": "0.9.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "setuptools",
        "setuptools_scm",
        "pip",
        "wheel",
        "numpy",
        "cython >=3.0.2",
        "extension-helpers"
      ],
      "run": [
        "python",
        "astropy-base",
        "scipy",
        "beautifulsoup4",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d7448f00b489cc8a7552bbac57b894f1339280c0a103465fdfe991d3dc59600",
      "url": "https://pypi.org/packages/source/h/halotools/halotools-0.9.3.tar.gz"
    },
    "test": {
      "imports": [
        "halotools",
        "halotools.empirical_models",
        "halotools.empirical_models.abunmatch",
        "halotools.empirical_models.assembias_models",
        "halotools.empirical_models.component_model_templates",
        "halotools.empirical_models.composite_models",
        "halotools.empirical_models.composite_models.hod_models",
        "halotools.empirical_models.composite_models.sfr_models",
        "halotools.empirical_models.composite_models.smhm_models",
        "halotools.empirical_models.factories",
        "halotools.empirical_models.occupation_models",
        "halotools.empirical_models.occupation_models.engines",
        "halotools.empirical_models.phase_space_models",
        "halotools.empirical_models.phase_space_models.analytic_models",
        "halotools.empirical_models.phase_space_models.analytic_models.centrals",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.conc_mass",
        "halotools.empirical_models.phase_space_models.analytic_models.satellites.nfw.kernels",
        "halotools.empirical_models.phase_space_models.subhalo_based_models",
        "halotools.empirical_models.sfr_models",
        "halotools.empirical_models.smhm_models",
        "halotools.extern",
        "halotools.mock_observables",
        "halotools.mock_observables.counts_in_cells",
        "halotools.mock_observables.counts_in_cells.engines",
        "halotools.mock_observables.group_identification",
        "halotools.mock_observables.group_identification.test_groups",
        "halotools.mock_observables.isolation_functions",
        "halotools.mock_observables.isolation_functions.engines",
        "halotools.mock_observables.large_scale_density",
        "halotools.mock_observables.pair_counters",
        "halotools.mock_observables.pair_counters.cpairs",
        "halotools.mock_observables.pair_counters.marked_cpairs",
        "halotools.mock_observables.pair_counters.test_pair_counters",
        "halotools.mock_observables.pairwise_velocities",
        "halotools.mock_observables.pairwise_velocities.engines",
        "halotools.mock_observables.radial_profiles",
        "halotools.mock_observables.radial_profiles.engines",
        "halotools.mock_observables.surface_density",
        "halotools.mock_observables.surface_density.engines",
        "halotools.mock_observables.two_point_clustering",
        "halotools.mock_observables.void_statistics",
        "halotools.sim_manager",
        "halotools.utils"
      ],
      "requires": [
        "pytest-astropy"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "extension-helpers",
        "numpy",
        "pip",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "beautifulsoup4",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pytest-astropy"
      ]
    }
  }
}