{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "qme",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "\"Queue-me\" is a jobs queue and dashboard generation tool that can be used\nto specify executors (entities that run jobs) and actions for them. You can\nuse qme only on the command line, or if desired, via an interactive web dashboard.\nThe dashboard (and it's dependencies) are not required for using the base library.\n",
      "dev_url": "https://github.com/vsoch/qme",
      "doc_url": "https://vsoch.github.io/qme",
      "home": "https://github.com/vsoch/qme",
      "license": "MPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "reproducible job submission and dashboard library"
    },
    "build": {
      "entry_points": [
        "qme=qme.client:main"
      ],
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed -vv "
    },
    "extra": {
      "recipe-maintainers": [
        "vsoch"
      ]
    },
    "package": {
      "name": "qme",
      "version": "0.0.14"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "pytest-runner"
      ],
      "run": [
        "python >=3.9",
        "sqlalchemy",
        "flask",
        "flask-restful",
        "flask-socketio",
        "gevent-websocket"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9dc4ce377f3fef3adc0d5100935f0e13ae17bd96f52439b6def2f4025be5567e",
      "url": "https://pypi.org/packages/source/q/qme/qme-0.0.14.tar.gz"
    },
    "test": {
      "commands": [
        "qme --help"
      ],
      "imports": [
        "qme",
        "qme.defaults",
        "qme.version",
        "qme.app",
        "qme.app.server",
        "qme.client",
        "qme.client.config",
        "qme.client.get",
        "qme.client.listing",
        "qme.client.run",
        "qme.client.start",
        "qme.client.clear",
        "qme.client.generate",
        "qme.client.search",
        "qme.logger",
        "qme.logger.message",
        "qme.logger.namer",
        "qme.logger.progress",
        "qme.logger.spinner",
        "qme.main",
        "qme.main.executor",
        "qme.main.executor.base",
        "qme.main.executor.shell",
        "qme.main.executor.slurm",
        "qme.main.config",
        "qme.main.database",
        "qme.main.database.base",
        "qme.main.database.models",
        "qme.main.database.sqlite",
        "qme.main.database.relational",
        "qme.main.database.filesystem",
        "qme.utils",
        "qme.utils.command",
        "qme.utils.file",
        "qme.utils.prompt",
        "qme.utils.regex"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask",
        "flask-restful",
        "flask-socketio",
        "gevent-websocket",
        "python",
        "sqlalchemy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "\"Queue-me\" is a jobs queue and dashboard generation tool that can be used\nto specify executors (entities that run jobs) and actions for them. You can\nuse qme only on the command line, or if desired, via an interactive web dashboard.\nThe dashboard (and it's dependencies) are not required for using the base library.\n",
      "dev_url": "https://github.com/vsoch/qme",
      "doc_url": "https://vsoch.github.io/qme",
      "home": "https://github.com/vsoch/qme",
      "license": "MPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "reproducible job submission and dashboard library"
    },
    "build": {
      "entry_points": [
        "qme=qme.client:main"
      ],
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed -vv "
    },
    "extra": {
      "recipe-maintainers": [
        "vsoch"
      ]
    },
    "package": {
      "name": "qme",
      "version": "0.0.14"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "pytest-runner"
      ],
      "run": [
        "python >=3.9",
        "sqlalchemy",
        "flask",
        "flask-restful",
        "flask-socketio",
        "gevent-websocket"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9dc4ce377f3fef3adc0d5100935f0e13ae17bd96f52439b6def2f4025be5567e",
      "url": "https://pypi.org/packages/source/q/qme/qme-0.0.14.tar.gz"
    },
    "test": {
      "commands": [
        "qme --help"
      ],
      "imports": [
        "qme",
        "qme.defaults",
        "qme.version",
        "qme.app",
        "qme.app.server",
        "qme.client",
        "qme.client.config",
        "qme.client.get",
        "qme.client.listing",
        "qme.client.run",
        "qme.client.start",
        "qme.client.clear",
        "qme.client.generate",
        "qme.client.search",
        "qme.logger",
        "qme.logger.message",
        "qme.logger.namer",
        "qme.logger.progress",
        "qme.logger.spinner",
        "qme.main",
        "qme.main.executor",
        "qme.main.executor.base",
        "qme.main.executor.shell",
        "qme.main.executor.slurm",
        "qme.main.config",
        "qme.main.database",
        "qme.main.database.base",
        "qme.main.database.models",
        "qme.main.database.sqlite",
        "qme.main.database.relational",
        "qme.main.database.filesystem",
        "qme.utils",
        "qme.utils.command",
        "qme.utils.file",
        "qme.utils.prompt",
        "qme.utils.regex"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "name": "qme",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "qme"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/qme.json"
  },
  "raw_meta_yaml": "{% set name = \"qme\" %}\n{% set version = \"0.0.14\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9dc4ce377f3fef3adc0d5100935f0e13ae17bd96f52439b6def2f4025be5567e\n\nbuild:\n  number: 1\n  noarch: python\n  entry_points:\n    - qme=qme.client:main\n  script: '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n    - pytest-runner\n  run:\n    - python >={{ python_min }}\n    - sqlalchemy\n    - flask\n    - flask-restful\n    - flask-socketio\n    - gevent-websocket\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - qme\n    - qme.defaults\n    - qme.version\n    - qme.app\n    - qme.app.server\n    - qme.client\n    - qme.client.config\n    - qme.client.get\n    - qme.client.listing\n    - qme.client.run\n    - qme.client.start\n    - qme.client.clear\n    - qme.client.generate\n    - qme.client.search\n    - qme.logger\n    - qme.logger.message\n    - qme.logger.namer\n    - qme.logger.progress\n    - qme.logger.spinner\n    - qme.main\n    - qme.main.executor\n    - qme.main.executor.base\n    - qme.main.executor.shell\n    - qme.main.executor.slurm\n    - qme.main.config\n    - qme.main.database\n    - qme.main.database.base\n    - qme.main.database.models\n    - qme.main.database.sqlite\n    - qme.main.database.relational\n    - qme.main.database.filesystem\n    - qme.utils\n    - qme.utils.command\n    - qme.utils.file\n    - qme.utils.prompt\n    - qme.utils.regex\n  commands:\n    - qme --help\n\n\nabout:\n  home: https://github.com/vsoch/qme\n  license: MPL-2.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: reproducible job submission and dashboard library\n  description: |\n    \"Queue-me\" is a jobs queue and dashboard generation tool that can be used\n    to specify executors (entities that run jobs) and actions for them. You can\n    use qme only on the command line, or if desired, via an interactive web dashboard.\n    The dashboard (and it's dependencies) are not required for using the base library.\n  doc_url: https://vsoch.github.io/qme\n  dev_url: https://github.com/vsoch/qme\n\nextra:\n  recipe-maintainers:\n    - vsoch\n",
  "req": {
    "__set__": true,
    "elements": [
      "flask",
      "flask-restful",
      "flask-socketio",
      "gevent-websocket",
      "pip",
      "pytest-runner",
      "python",
      "sqlalchemy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask",
        "flask-restful",
        "flask-socketio",
        "gevent-websocket",
        "python",
        "sqlalchemy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest-runner",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask",
        "flask-restful",
        "flask-socketio",
        "gevent-websocket",
        "python >=3.9",
        "sqlalchemy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/q/qme/qme-0.0.14.tar.gz",
  "version": "0.0.14",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/qme.json"
  }
}