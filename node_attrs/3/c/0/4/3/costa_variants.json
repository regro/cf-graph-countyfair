{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "024276dc6fc266fec7b3d9d1b4a4eac60a35d704",
  "feedstock_hash_ts": 1730845472,
  "feedstock_name": "costa_variants",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "COSTA is a communication-optimal, highly-optimised algorithm for data redistribution accross multiple processors, using MPI and OpenMP and offering the possibility to transpose and scale some or all data. It implements scalapack routines for matrix scale & transpose operations (sub(C) = alpha * sub(A)^T + beta * C, provided by pxtran(u)) and data redistribution (sub(C) = sub(A), provided by pxgemr2d) and outperforms other scalapack implementations by orders of magnitude in some cases. Unlike previous redistribution algorithms, COSTA will also propose the relabelling of MPI ranks that minimizes the data reshuffling cost, leaving to users to decide if they want to use it. This way, if the initial and the target data distributions differ up to a rank permutation, COSTA will perform no communication, whereas other algorithms will reshuffle all the data. Thanks to its optimizations, significant speedups will be achieved even if the proposed rank relabelling is not used.\n",
      "dev_url": "https://github.com/eth-cscs/COSTA",
      "doc_url": "https://github.com/eth-cscs/COSTA",
      "home": "https://github.com/eth-cscs/COSTA",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Communication-Optimal Shuffle & Transpose Algorithm"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kabicm",
        "ltalirz"
      ]
    },
    "outputs": [
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "libgomp"
          ],
          "run": [
            "mpich"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "scalapack",
            "libgomp"
          ],
          "run": [
            "mpich",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "libgomp"
          ],
          "run": [
            "openmpi"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "scalapack",
            "libgomp"
          ],
          "run": [
            "openmpi",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      }
    ],
    "package": {
      "name": "costa_variants",
      "version": "2.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0692a9c962282899894ccdbc7006216c835473a6999f1080c10bf94f23094521",
      "url": "https://github.com/eth-cscs/COSTA/archive/refs/tags/v2.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "COSTA is a communication-optimal, highly-optimised algorithm for data redistribution accross multiple processors, using MPI and OpenMP and offering the possibility to transpose and scale some or all data. It implements scalapack routines for matrix scale & transpose operations (sub(C) = alpha * sub(A)^T + beta * C, provided by pxtran(u)) and data redistribution (sub(C) = sub(A), provided by pxgemr2d) and outperforms other scalapack implementations by orders of magnitude in some cases. Unlike previous redistribution algorithms, COSTA will also propose the relabelling of MPI ranks that minimizes the data reshuffling cost, leaving to users to decide if they want to use it. This way, if the initial and the target data distributions differ up to a rank permutation, COSTA will perform no communication, whereas other algorithms will reshuffle all the data. Thanks to its optimizations, significant speedups will be achieved even if the proposed rank relabelling is not used.\n",
      "dev_url": "https://github.com/eth-cscs/COSTA",
      "doc_url": "https://github.com/eth-cscs/COSTA",
      "home": "https://github.com/eth-cscs/COSTA",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Communication-Optimal Shuffle & Transpose Algorithm"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kabicm",
        "ltalirz"
      ]
    },
    "outputs": [
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "libgomp"
          ],
          "run": [
            "mpich"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "scalapack",
            "libgomp"
          ],
          "run": [
            "mpich",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "libgomp"
          ],
          "run": [
            "openmpi"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "scalapack",
            "libgomp"
          ],
          "run": [
            "openmpi",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "llvm-openmp"
          ],
          "run": [
            "mpich"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "scalapack",
            "llvm-openmp"
          ],
          "run": [
            "mpich",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "llvm-openmp"
          ],
          "run": [
            "openmpi"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "scalapack",
            "llvm-openmp"
          ],
          "run": [
            "openmpi",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      }
    ],
    "package": {
      "name": "costa_variants",
      "version": "2.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0692a9c962282899894ccdbc7006216c835473a6999f1080c10bf94f23094521",
      "url": "https://github.com/eth-cscs/COSTA/archive/refs/tags/v2.0.tar.gz"
    }
  },
  "name": "costa_variants",
  "osx_64_meta_yaml": {
    "about": {
      "description": "COSTA is a communication-optimal, highly-optimised algorithm for data redistribution accross multiple processors, using MPI and OpenMP and offering the possibility to transpose and scale some or all data. It implements scalapack routines for matrix scale & transpose operations (sub(C) = alpha * sub(A)^T + beta * C, provided by pxtran(u)) and data redistribution (sub(C) = sub(A), provided by pxgemr2d) and outperforms other scalapack implementations by orders of magnitude in some cases. Unlike previous redistribution algorithms, COSTA will also propose the relabelling of MPI ranks that minimizes the data reshuffling cost, leaving to users to decide if they want to use it. This way, if the initial and the target data distributions differ up to a rank permutation, COSTA will perform no communication, whereas other algorithms will reshuffle all the data. Thanks to its optimizations, significant speedups will be achieved even if the proposed rank relabelling is not used.\n",
      "dev_url": "https://github.com/eth-cscs/COSTA",
      "doc_url": "https://github.com/eth-cscs/COSTA",
      "home": "https://github.com/eth-cscs/COSTA",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Communication-Optimal Shuffle & Transpose Algorithm"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "kabicm",
        "ltalirz"
      ]
    },
    "outputs": [
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "llvm-openmp"
          ],
          "run": [
            "mpich"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "mpich",
            "scalapack",
            "llvm-openmp"
          ],
          "run": [
            "mpich",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "Communication-Optimal Shuffle & Transpose Algorithm (COSTA)"
        },
        "name": "costa",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "llvm-openmp"
          ],
          "run": [
            "openmpi"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\""
          ]
        }
      },
      {
        "about": {
          "summary": "COSTA with scalapack wrappers for drop-in replacement"
        },
        "name": "costa-scalapack",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "openmpi",
            "scalapack",
            "llvm-openmp"
          ],
          "run": [
            "openmpi",
            "scalapack"
          ]
        },
        "script": "build-costa.sh",
        "test": {
          "commands": [
            "test -f \"${PREFIX}/lib/libcosta.a\"",
            "test -f \"${PREFIX}/lib/libcosta_scalapack.a\"",
            "test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\""
          ]
        }
      }
    ],
    "package": {
      "name": "costa_variants",
      "version": "2.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0692a9c962282899894ccdbc7006216c835473a6999f1080c10bf94f23094521",
      "url": "https://github.com/eth-cscs/COSTA/archive/refs/tags/v2.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "costa",
      "costa-scalapack"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/costa_variants.json"
  },
  "raw_meta_yaml": "{% set name = \"costa\" %}\n{% set version = \"2.0\" %}\n\npackage:\n  name: {{ name }}_variants\n  version: {{ version }}\n\nsource:\n  url: https://github.com/eth-cscs/COSTA/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 0692a9c962282899894ccdbc7006216c835473a6999f1080c10bf94f23094521\n\nbuild:\n  number: 1\n  skip: True  # [win]\n\noutputs:\n  - name: costa\n    script: build-costa.sh\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - make\n        - pkg-config\n      host:\n        - {{ mpi }}\n        - libgomp      # [linux]\n        - llvm-openmp  # [osx]\n      run:\n        - {{ mpi }}\n    \n    test:\n      commands:\n        - test -f \"${PREFIX}/lib/libcosta.a\"\n\n    about:\n      summary: Communication-Optimal Shuffle & Transpose Algorithm (COSTA)\n\n  - name: costa-scalapack\n    script: build-costa.sh\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - make\n        - pkg-config\n      host:\n        - {{ mpi }}\n        - scalapack\n        - libgomp      # [linux]\n        - llvm-openmp  # [osx]\n      run:\n        - {{ mpi }}\n        - scalapack\n    \n    test:\n      commands:\n        - test -f \"${PREFIX}/lib/libcosta.a\"\n        - test -f \"${PREFIX}/lib/libcosta_scalapack.a\"\n        - test -f \"${PREFIX}/lib/libcosta_prefixed_scalapack.a\"\n\n    about:\n      summary: COSTA with scalapack wrappers for drop-in replacement\n\n\nabout:\n  home: https://github.com/eth-cscs/COSTA\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Communication-Optimal Shuffle & Transpose Algorithm\n  description: |\n    COSTA is a communication-optimal, highly-optimised algorithm for data redistribution accross multiple processors, using MPI and OpenMP and offering the possibility to transpose and scale some or all data. It implements scalapack routines for matrix scale & transpose operations (sub(C) = alpha * sub(A)^T + beta * C, provided by pxtran(u)) and data redistribution (sub(C) = sub(A), provided by pxgemr2d) and outperforms other scalapack implementations by orders of magnitude in some cases. Unlike previous redistribution algorithms, COSTA will also propose the relabelling of MPI ranks that minimizes the data reshuffling cost, leaving to users to decide if they want to use it. This way, if the initial and the target data distributions differ up to a rank permutation, COSTA will perform no communication, whereas other algorithms will reshuffle all the data. Thanks to its optimizations, significant speedups will be achieved even if the proposed rank relabelling is not used.\n  doc_url: https://github.com/eth-cscs/COSTA\n  dev_url: https://github.com/eth-cscs/COSTA\n\nextra:\n  recipe-maintainers:\n    - kabicm\n    - ltalirz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libgomp",
      "llvm-openmp",
      "make",
      "mpich",
      "openmpi",
      "pkg-config",
      "scalapack"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "mpich",
        "openmp",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "mpich",
        "openmp",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "llvm-openmp",
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi",
        "scalapack"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/eth-cscs/COSTA/archive/refs/tags/v2.0.tar.gz",
  "version": "2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/costa_variants.json"
  }
}