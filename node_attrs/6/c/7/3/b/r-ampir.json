{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "osx_arm64": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-ampir",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\"",
        "\"%R%\" -e \"library('ampir')\""
      ]
    }
  },
  "name": "r-ampir",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ampir')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ampir"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ampir.json"
  },
  "raw_meta_yaml": "{% set version = '1.1.0' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ampir\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ampir_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ampir/ampir_{{ version }}.tar.gz\n  sha256: d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a\n\nbuild:\n  number: 4\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-peptides                   # [build_platform != target_platform]\n    - r-rcpp                       # [build_platform != target_platform]\n    - r-caret                      # [build_platform != target_platform]\n    - r-kernlab                    # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-peptides\n    - r-rcpp\n    - r-caret >=6.0.0\n    - r-kernlab\n  run:\n    - r-base\n    - r-peptides\n    - r-rcpp\n    - r-caret >=6.0.0\n    - r-kernlab\n\ntest:\n  commands:\n    - $R -e \"library('ampir')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ampir')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/Legana/ampir\n  license: GPL-2.0-or-later\n  summary: 'A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide\n    scale. It incorporates two support vector machine models (\"precursor\" and \"mature\")\n    trained on publicly available antimicrobial peptide data using calculated physico-chemical\n    and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>.\n    In order to support genome-wide analyses, these models are designed to accept any\n    type of protein as input and calculation of compositional properties has been optimised\n    for high-throughput use. For best results it is important to select the model that\n    accurately represents your sequence type: for full length proteins, it is recommended\n    to use the default \"precursor\" model. The alternative, \"mature\", model is best suited\n    for mature peptide sequences that represent the final antimicrobial peptide sequence\n    after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>.\n    The ''ampir'' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>.'\n  license_family: GPL2\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - jasmezz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-caret",
      "r-kernlab",
      "r-peptides",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret >=6.0.0",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret >=6.0.0",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
  ],
  "version": "1.1.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ampir.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/Legana/ampir",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A toolkit to predict antimicrobial peptides from protein sequences on a genome-wide scale. It incorporates two support vector machine models (\"precursor\" and \"mature\") trained on publicly available antimicrobial peptide data using calculated physico-chemical and compositional sequence properties described in Meher et al. (2017) <doi:10.1038/srep42362>. In order to support genome-wide analyses, these models are designed to accept any type of protein as input and calculation of compositional properties has been optimised for high-throughput use. For best results it is important to select the model that accurately represents your sequence type: for full length proteins, it is recommended to use the default \"precursor\" model. The alternative, \"mature\", model is best suited for mature peptide sequences that represent the final antimicrobial peptide sequence after post-translational processing. For details see Fingerhut et al. (2020) <doi:10.1093/bioinformatics/btaa653>. The 'ampir' package is also available via a Shiny based GUI at <https://ampir.marine-omics.net/>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jasmezz"
      ]
    },
    "package": {
      "name": "r-ampir",
      "version": "1.1.0"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ],
      "run": [
        "r-base",
        "r-peptides",
        "r-rcpp",
        "r-caret >=6.0.0",
        "r-kernlab"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d2c1ad0f0aebf4525fe7c72ccf34a0b69b7e4c850bc57165ce2ed4816deeda5a",
      "url": [
        "https://cran.r-project.org/src/contrib/ampir_1.1.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ampir/ampir_1.1.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('ampir')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-caret",
        "r-kernlab",
        "r-peptides",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}