{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "f8d2e2db106faf5077f39ea976f3913c93472def",
  "feedstock_hash_ts": 1757773316,
  "feedstock_name": "parallelproj",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "libgomp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "array-api-compat",
        "cuda-version",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "202"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "libgomp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "array-api-compat",
        "cuda-version",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "array-api-compat",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ]
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp",
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake",
            "test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_cuda.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "libgomp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "name": "parallelproj-split",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "array-api-compat",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "llvm-openmp"
          ],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "build-parallelproj.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT",
            "test -f $PREFIX/include/parallelproj_c.h",
            "test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "build-python.sh",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "array-api-compat",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libparallelproj",
      "parallelproj"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/parallelproj.json"
  },
  "raw_meta_yaml": "{% set name = \"parallelproj\" %}\n{% set version = \"1.10.2\" %}\n{% set build_number = 2 %}\n\n{% if cuda_compiler_version != \"None\" %}\n{% set build_number = build_number + 200 %}\n{% endif %}\n\npackage:\n  name: parallelproj-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gschramm/parallelproj/archive/v{{ version }}.tar.gz\n  sha256: 0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa\n\nbuild:\n  number: {{ build_number }}\n\noutputs:\n  - name: libparallelproj\n    script: build-parallelproj.sh  # [unix]\n    script: bld-parallelproj.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libparallelproj', max_pin='x.x') }}\n        - libparallelproj =*=cuda*  # [cuda_compiler_version != \"None\"]\n        - libparallelproj =*=cpu*  # [cuda_compiler_version == \"None\"]\n      ignore_run_exports:\n        - cudatoolkit  # [(cuda_compiler_version or \"None\").startswith(\"11\")]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n\n\n    requirements:\n      build:\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}  # [cuda_compiler_version != \"None\"]\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - cmake >=3.23\n        - ninja\n        - python\n      host:\n        - libgomp      # [linux]\n        - llvm-openmp  # [osx]\n        - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or \"None\") != \"None\"]\n      run:\n        - __cuda  # [cuda_compiler_version != \"None\"]\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\") }}  # [(cuda_compiler_version or \"None\") != \"None\"]\n      run_constrained:\n        - parallelproj >=1.3.4  # parallelproj output renamed to libparallelproj\n    test:\n      commands:\n        - test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT  # [unix]\n        - test -f $PREFIX/include/parallelproj_c.h  # [unix]\n        - test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake  # [unix]\n        - test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT  # [linux and cuda_compiler_version != \"None\"]\n        - test -f $PREFIX/include/parallelproj_cuda.h  # [linux and cuda_compiler_version != \"None\"]\n        - if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1  # [win]\n        - if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1  # [win]\n        - if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1  # [win]\n        - if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1  # [win]\n\n  - name: parallelproj\n    script: build-python.sh  # [unix]\n    script: bld-python.bat  # [win]\n    build:\n      skip: true  # [not linux64]\n      noarch: python\n      script_env:\n        - SETUPTOOLS_SCM_PRETEND_VERSION={{ PKG_VERSION }}\n    requirements:\n      build:\n        - python  # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n      host:\n        - python {{ python_min }}\n        - pip\n        - pdm-backend\n      run:\n        - {{ pin_subpackage('libparallelproj') }}\n        - python >={{ python_min }}\n        - numpy >=1.23\n        - matplotlib-base ~=3.8\n        - array-api-compat ~=1.7\n        - scipy ~=1.0\n    test:\n      requires:\n        - python {{ python_min }}\n        - pip\n        - pytest\n        - array-api-strict ~=2.0\n      imports:\n        - parallelproj\n      source_files:\n        - tests/*\n      commands:\n        - pip check\n        - pytest tests -vs\n\nabout:\n  home: https://github.com/gschramm/parallelproj\n  license: MIT\n  license_file: LICENSE\n  summary: parallelized TOF PET projectors\n\nextra:\n  recipe-maintainers:\n    - gschramm\n  feedstock-name: parallelproj\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "array-api-compat",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "libgomp",
      "libparallelproj",
      "llvm-openmp",
      "matplotlib-base",
      "ninja",
      "numpy",
      "pdm-backend",
      "pip",
      "python",
      "scipy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "openmp",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "array-api-compat",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "openmp",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake >=3.23",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 12.9",
        "cuda-version 13.0",
        "libgomp",
        "llvm-openmp",
        "pdm-backend",
        "pip",
        "python 3.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "array-api-compat ~=1.7",
        "cuda-version",
        "libparallelproj",
        "matplotlib-base ~=3.8",
        "numpy >=1.23",
        "python >=3.10",
        "scipy ~=1.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict ~=2.0",
        "pip",
        "pytest",
        "python 3.10"
      ]
    }
  },
  "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz",
  "version": "1.10.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/parallelproj.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/gschramm/parallelproj",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "parallelized TOF PET projectors"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "parallelproj",
      "recipe-maintainers": [
        "gschramm"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda129_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "cuda-version 12.9"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cuda*"
          ],
          "string": "cuda130_h1234567_202"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "__cuda",
            "cuda-version"
          ],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": null,
          "run_exports": [
            "libparallelproj",
            "libparallelproj =*=cpu*"
          ],
          "string": "cpu_h1234567_2"
        },
        "name": "libparallelproj",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cmake >=3.23",
            "ninja",
            "python"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "parallelproj >=1.3.4"
          ]
        },
        "script": "bld-parallelproj.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\parallelproj_c.lib exit 1",
            "if not exist %LIBRARY_BIN%\\parallelproj_c.dll exit 1",
            "if not exist %LIBRARY_INC%\\parallelproj_c.h exit 1",
            "if not exist %LIBRARY_LIB%\\cmake\\parallelproj\\parallelprojConfig.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script_env": [
            "SETUPTOOLS_SCM_PRETEND_VERSION=1.10.2"
          ],
          "skip": true
        },
        "name": "parallelproj",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10",
            "pip",
            "pdm-backend"
          ],
          "run": [
            "libparallelproj",
            "python >=3.10",
            "numpy >=1.23",
            "matplotlib-base ~=3.8",
            "array-api-compat ~=1.7",
            "scipy ~=1.0"
          ]
        },
        "script": "bld-python.bat",
        "test": {
          "commands": [
            "pip check",
            "pytest tests -vs"
          ],
          "imports": [
            "parallelproj"
          ],
          "requires": [
            "python 3.10",
            "pip",
            "pytest",
            "array-api-strict ~=2.0"
          ],
          "source_files": [
            "tests/*"
          ]
        }
      }
    ],
    "package": {
      "name": "parallelproj-split",
      "version": "1.10.2"
    },
    "schema_version": 0,
    "source": {
      "sha256": "0e51f5203802e37f5af85452128914d55cb4096d6f4b8b7d738173a4ed9a9efa",
      "url": "https://github.com/gschramm/parallelproj/archive/v1.10.2.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pdm-backend",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "array-api-compat",
        "cuda-version",
        "libparallelproj",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "array-api-strict",
        "pip",
        "pytest",
        "python"
      ]
    }
  }
}