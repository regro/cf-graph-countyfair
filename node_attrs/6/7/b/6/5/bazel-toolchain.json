{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native"
  },
  "feedstock_name": "bazel-toolchain",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "name": "bazel-toolchain",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This package generates a crosstool toolchain for Bazel that uses the currently\nactivated compilers / linker as defined by the environment variables. It does\ntake various conda(-forge) specifics into account for this. In addition to generating\na toolchain, it also sets various environment variables that need to be set for\nthe toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\nto ensure that cross-compiling also works.\n\nIn build.sh\n\n  source gen-bazel-toolchain\n  bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n",
      "home": "https://github.com/conda-forge/bazel-toolchain-feedstock",
      "license": "BSD-3-Clause AND Apache-2.0",
      "license_file": "LICENSE.txt",
      "summary": "Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy",
        "wolfv"
      ]
    },
    "package": {
      "name": "bazel-toolchain",
      "version": "0.3.1"
    },
    "requirements": {
      "run_constrained": [
        "bazel >=6",
        "sed"
      ]
    },
    "schema_version": 0,
    "test": {
      "requires": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "bazel"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "bazel-toolchain"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/bazel-toolchain.json"
  },
  "raw_meta_yaml": "{% set name = \"bazel-toolchain\" %}\n{% set version = \"0.3.1\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  run_constrained:\n    # This can be used without bazel from conda-forge,\n    # e.g. when bootstrapping bazel itself.\n    - bazel >=6\n    - sed\n\ntest:\n  requires:\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - bazel\n\nabout:\n  home: https://github.com/conda-forge/bazel-toolchain-feedstock\n  summary: Helper script to generate a crosscompile toolchain for Bazel with the currently activated compiler settings.\n  description: |\n    This package generates a crosstool toolchain for Bazel that uses the currently\n    activated compilers / linker as defined by the environment variables. It does\n    take various conda(-forge) specifics into account for this. In addition to generating\n    a toolchain, it also sets various environment variables that need to be set for\n    the toolchain to work. Especially you will need to pass in the correct ${TARGET_CPU}\n    to ensure that cross-compiling also works.\n\n    In build.sh\n\n      source gen-bazel-toolchain\n      bazel build --crosstool_top=//bazel_toolchain:toolchain --cpu ${TARGET_CPU} …\n\n  license: BSD-3-Clause AND Apache-2.0\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - xhochy\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": []
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "version": "0.3.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/bazel-toolchain.json"
  }
}