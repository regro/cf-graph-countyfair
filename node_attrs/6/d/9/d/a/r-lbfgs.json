{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-lbfgs",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\"",
        "\"%R%\" -e \"library('lbfgs')\""
      ]
    }
  },
  "name": "r-lbfgs",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('lbfgs')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-lbfgs"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-lbfgs.json"
  },
  "raw_meta_yaml": "{% set version = \"1.2.1.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-lbfgs\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/lbfgs_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/lbfgs/lbfgs_{{ version }}.tar.gz\n  sha256: 7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11\n\nbuild:\n  number: 4\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-rcpp >=0.11.2              # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rcpp >=0.11.2\n  run:\n    - r-base\n    - r-rcpp >=0.11.2\n\ntest:\n  commands:\n    - $R -e \"library('lbfgs')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('lbfgs')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=lbfgs\n  license: GPL-2.0-or-later\n  summary: A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an\n    objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly\n    suited for high-dimensional problems.\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: lbfgs\n# Type: Package\n# Title: Limited-memory BFGS Optimization\n# Version: 1.2.1\n# Date: 2014-07-08\n# Authors@R: c(person(\"Antonio\", \"Coppola\", role = c(\"aut\", \"cre\", \"cph\"), email = \"acoppola@college.harvard.edu\"), person(\"Brandon\", \"Stewart\", role = c(\"aut\", \"cph\")), person(\"Naoaki\", \"Okazaki\", role = c(\"aut\", \"cph\")), person(\"David\", \"Ardia\", role = c(\"ctb\", \"cph\")), person(\"Dirk\", \"Eddelbuettel\", role = c(\"ctb\", \"cph\")), person(\"Katharine\", \"Mullen\", role = c(\"ctb\", \"cph\")), person(\"Jorge\", \"Nocedal\", role = c(\"ctb\", \"cph\")))\n# Maintainer: Antonio Coppola <acoppola@college.harvard.edu>\n# Description: A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems.\n# License: GPL (>= 2)\n# Imports: Rcpp (>= 0.11.2)\n# LinkingTo: Rcpp\n# Packaged: 2014-08-30 10:14:37 UTC; antonio12\n# Author: Antonio Coppola [aut, cre, cph], Brandon Stewart [aut, cph], Naoaki Okazaki [aut, cph], David Ardia [ctb, cph], Dirk Eddelbuettel [ctb, cph], Katharine Mullen [ctb, cph], Jorge Nocedal [ctb, cph]\n# NeedsCompilation: yes\n# Repository: CRAN\n# Date/Publication: 2014-08-31 11:23:32\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
  ],
  "version": "1.2.1.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-lbfgs.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=lbfgs",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A wrapper built around the libLBFGS optimization library by Naoaki Okazaki. The lbfgs package implements both the Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) and the Orthant-Wise Quasi-Newton Limited-Memory (OWL-QN) optimization algorithms. The L-BFGS algorithm solves the problem of minimizing an objective, given its gradient, by iteratively computing approximations of the inverse Hessian matrix. The OWL-QN algorithm finds the optimum of an objective plus the L1-norm of the problem's parameters. The package offers a fast and memory-efficient implementation of these optimization routines, which is particularly suited for high-dimensional problems."
    },
    "build": {
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-lbfgs",
      "version": "1.2.1.2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.11.2"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.11.2"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7b09d886c377c8b5eb812085cd2aacb2c5ce7e38b77f9460023623dbc24edd11",
      "url": [
        "https://cran.r-project.org/src/contrib/lbfgs_1.2.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/lbfgs/lbfgs_1.2.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('lbfgs')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}