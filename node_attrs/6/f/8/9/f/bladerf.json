{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native"
  },
  "feedstock_hash": "84cb7ef173f5f876be83872f72e1cc4be74489dd",
  "feedstock_hash_ts": 1741636740,
  "feedstock_name": "bladerf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      },
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      },
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.2",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "post-link": "post-link"
        },
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules",
            "test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules"
          ]
        }
      },
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      },
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      },
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb",
            "winpthreads-devel"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-2.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF1.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF2.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\libbladeRF.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-2.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\libbladeRF.pc exit 1"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2",
            "winpthreads-devel"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "name": "bladerf-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/include/bladeRF1.h",
            "test -f $PREFIX/include/bladeRF2.h",
            "test -f $PREFIX/include/libbladeRF.h",
            "test -f $PREFIX/lib/libbladeRF.2${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/libbladeRF.pc"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.sh",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "bladerf",
      "libbladerf",
      "libbladerf-python",
      "libbladerf2"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/bladerf.json"
  },
  "raw_meta_yaml": "{% set version = \"2024.05\" %}\n{% set lib_major_version = \"2\" %}\n{% set build = 2 %}\n\npackage:\n  name: bladerf-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Nuand/bladeRF/archive/refs/tags/{{ version }}.tar.gz\n  sha256: ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2\n  patches:\n    - 0001-Add-required-ad9361-files-directly.patch\n    - 0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch\n    - 0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch\n    - 0004-Add-an-option-for-bundling-external-libraries-on-Win.patch\n    - 0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch\n    - 0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch\n\nbuild:\n  number: {{ build }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - pkg-config\n  host:\n    - libusb\n    - winpthreads-devel  # [win]\n\noutputs:\n  - name: libbladerf{{ lib_major_version }}\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - ninja\n      host:\n        - libusb\n        - winpthreads-devel  # [win]\n    test:\n      commands:\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.{{ lib_major_version }}  # [linux]\n        - test -f $PREFIX/lib/libbladeRF.{{ lib_major_version }}${SHLIB_EXT}  # [osx]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-{{ lib_major_version }}.dll exit 1  # [win]\n  - name: libbladerf\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libbladerf' + lib_major_version, max_pin=False) }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage('libbladerf' + lib_major_version, exact=True) }}\n      run:\n        - {{ pin_subpackage('libbladerf' + lib_major_version, exact=True) }}\n    test:\n      commands:\n        # verify that headers get installed\n        - test -f $PREFIX/include/bladeRF1.h  # [not win]\n        - test -f $PREFIX/include/bladeRF2.h  # [not win]\n        - test -f $PREFIX/include/libbladeRF.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF1.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF2.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\libbladeRF.h exit 1  # [win]\n\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/libbladeRF${SHLIB_EXT}.{{ lib_major_version }}  # [linux]\n        - test -f $PREFIX/lib/libbladeRF.{{ lib_major_version }}${SHLIB_EXT}  # [osx]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-{{ lib_major_version }}.dll exit 1  # [win]\n\n        # verify that pkgconfig files get installed\n        - test -f $PREFIX/lib/pkgconfig/libbladeRF.pc  # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\libbladeRF.pc exit 1  # [win]\n  - name: libbladerf-python\n    build:\n      string: py_{{ build }}\n      noarch: python\n      script: python -m pip install -vv host/libraries/libbladeRF_bindings/python\n      entry_points:\n        - bladerf-tool = bladerf._tool:main\n    requirements:\n      build:\n        # cross-compilation dependencies\n        - python {{ python_min }}             # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n      host:\n        - cffi\n        - {{ pin_subpackage('libbladerf' + lib_major_version, exact=True) }}\n        - pip\n        - python {{ python_min }}\n      run:\n        - cffi\n        - libbladerf{{ lib_major_version }} {{ version }}\n        - python >={{ python_min }}\n    test:\n      requires:\n        - python {{ python_min }}\n      imports:\n        - bladerf\n      commands:\n        - bladerf-tool version\n  - name: bladerf\n    script: install.sh  # [unix]\n    script: install.bat  # [not unix]\n    build:\n      # instructions for manually linking udev rules\n      post-link: post-link  # [linux]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - ninja\n      host:\n        - {{ pin_subpackage('libbladerf' + lib_major_version, exact=True) }}\n        - winpthreads-devel  # [win]\n      run:\n        - {{ pin_subpackage('libbladerf' + lib_major_version, exact=True) }}\n        - {{ pin_subpackage('libbladerf-python', exact=True) }}\n    test:\n      commands:\n        # verify that executables get installed\n        - bladeRF-cli --version\n        - bladeRF-cli --lib-version\n        - bladeRF-fsk --help\n\n        # verify that udev rule gets installed\n        - test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules  # [linux]\n        - test -f $PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules  # [linux]\n        - test -f $PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules  # [linux]\n\nabout:\n  home: https://www.nuand.com/\n  license: LGPL-2.1-or-later AND GPL-2.0-or-later\n  license_family: LGPL\n  license_file:\n    - COPYING\n    - legal/licenses/\n  summary: Host software for bladeRF source software radio devices.\n  description: >\n    This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n      - `libbladerf{{ lib_major_version }}` contains the library for bladeRF devices\n      - `libbladerf` contains the development files for compiling against the bladeRF library\n      - `libbladerf-python` contains the Python bindings for the bladeRF library\n      - `bladerf` package contains command line tools for using the devices\n\n    For Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n        sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n        sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n        sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n        sudo udevadm control --reload\n        sudo udevadm trigger\n\n    Then, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n        sudo usermod -a -G plugdev <user>\n\n    You may have to restart for this change to take effect.\n  doc_url: https://github.com/Nuand/bladeRF/wiki\n  dev_url: https://github.com/Nuand/bladeRF\n\nextra:\n  feedstock-name: bladerf\n  recipe-maintainers:\n    - ryanvolz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cffi",
      "cmake",
      "cxx_compiler_stub",
      "libbladerf-python",
      "libbladerf2",
      "libusb",
      "ninja",
      "pip",
      "pkg-config",
      "python",
      "winpthreads-devel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "cxx_compiler_stub",
        "libbladerf2",
        "libusb",
        "pip",
        "python",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "cxx_compiler_stub",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python 3.9",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "libbladerf2 2024.05",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9"
      ]
    }
  },
  "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz",
  "version": "2024.05",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/bladerf.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This software supports the Nuand bladeRF and bladeRF Micro USB 3.0 Software Defined Radio (SDR) devices:\n\n  - `libbladerf2` contains the library for bladeRF devices\n  - `libbladerf` contains the development files for compiling against the bladeRF library\n  - `libbladerf-python` contains the Python bindings for the bladeRF library\n  - `bladerf` package contains command line tools for using the devices\n\nFor Linux users of `bladerf`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nThen, make sure your user account belongs to the plugdev group in order to be able to access your device:\n\n    sudo usermod -a -G plugdev <user>\n\nYou may have to restart for this change to take effect.\n",
      "dev_url": "https://github.com/Nuand/bladeRF",
      "doc_url": "https://github.com/Nuand/bladeRF/wiki",
      "home": "https://www.nuand.com/",
      "license": "LGPL-2.1-or-later AND GPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "legal/licenses/"
      ],
      "summary": "Host software for bladeRF source software radio devices."
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "bladerf",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "name": "libbladerf2",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libusb",
            "winpthreads-devel"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-2.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libbladerf2"
          ]
        },
        "name": "libbladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2"
          ],
          "run": [
            "libbladerf2"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF1.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\bladeRF2.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\libbladeRF.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\bladeRF-2.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\libbladeRF.pc exit 1"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "bladerf-tool = bladerf._tool:main"
          ],
          "noarch": "python",
          "script": "python -m pip install -vv host/libraries/libbladeRF_bindings/python",
          "string": "py_2"
        },
        "name": "libbladerf-python",
        "requirements": {
          "build": [],
          "host": [
            "cffi",
            "libbladerf2",
            "pip",
            "python 3.9"
          ],
          "run": [
            "cffi",
            "libbladerf2 2024.05",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "bladerf-tool version"
          ],
          "imports": [
            "bladerf"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      },
      {
        "build": null,
        "name": "bladerf",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libbladerf2",
            "winpthreads-devel"
          ],
          "run": [
            "libbladerf2",
            "libbladerf-python"
          ]
        },
        "script": "install.bat",
        "test": {
          "commands": [
            "bladeRF-cli --version",
            "bladeRF-cli --lib-version",
            "bladeRF-fsk --help"
          ]
        }
      }
    ],
    "package": {
      "name": "bladerf-split",
      "version": "2024.05"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Add-required-ad9361-files-directly.patch",
        "0002-Rename-bladeRF.dll-to-bladeRF-2.dll-on-Windows.patch",
        "0003-Modify-Python-bindings-to-load-major-versioned-libbl.patch",
        "0004-Add-an-option-for-bundling-external-libraries-on-Win.patch",
        "0005-Fix-test-linking-with-rt-when-glibc-2.17-is-used.patch",
        "0006-bladeRF-cli-Include-cmath.h-for-M_PI-in-generate.c.patch"
      ],
      "sha256": "ac7d7991bc1e5faa2509da3c3046c60e9076ac293e479835aea5f19fa71f1fd2",
      "url": "https://github.com/Nuand/bladeRF/archive/refs/tags/2024.05.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf2",
        "libusb",
        "pip",
        "python",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "libbladerf-python",
        "libbladerf2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  }
}