{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "check_solvable": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "protobuf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "openjdk",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "openjdk",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "openjdk",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "posix",
        "m2-sed"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-linux-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "protobuf",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-x86_64"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "openjdk",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "bazel-toolchain >=0.3.1",
        "openjdk 21.*",
        "sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "libabseil",
        "zlib"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch",
          "patches/0009-unvendor-abseil-zlib.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel-standalone",
        "sha256": "ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel_nojdk-7.2.1-darwin-arm64"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "openjdk",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "protobuf"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/protobuf.json"
  },
  "raw_meta_yaml": "# keep this without major version to let the bot pick it up\n{% set version = \"32.1\" %}\n# protobuf doesn't add the major version in the tag, it's defined per language in\n# https://github.com/protocolbuffers/protobuf/blob/main/version.json\n{% set major = \"6\" %}\n# libprotobuf can have a different major version than protobuf\n{% set lib_major = \"6\" %}\n\npackage:\n  name: protobuf\n  version: {{ major ~ \".\" ~ version }}\n\nsource:\n  - url: https://github.com/protocolbuffers/protobuf/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e\n    patches:\n      # backport https://github.com/protocolbuffers/protobuf/pull/17207 to avoid upb leakage\n      - patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch\n      - patches/0002-don-t-mark-windows-as-unsupported.patch\n      - patches/0003-don-t-link-statically-on-windows.patch\n      - patches/0004-enable-windows-as-a-target-for-python-bindings.patch\n      - patches/0005-Support-more-architectures-for-Python-bindings.patch\n      - patches/0006-Compatible-windows-changes.patch\n      - patches/0007-Hacky-windows-workarounds.patch                                # [win]\n      - patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch\n      # TF_SYSTEM_LIBS (or rather: abseil_dll setup) not compatible with windows\n      - patches/0009-unvendor-abseil-zlib.patch                                     # [not win]\n\n  {% set bz_url = \"https://github.com/bazelbuild/bazel/releases/download\" %}\n  {% set bz_ver = \"7.2.1\" %}\n  - fn: bazel-standalone    # [unix]\n  - fn: bazel.exe           # [win]\n    url: {{ bz_url }}/{{ bz_ver }}/bazel_nojdk-{{ bz_ver }}-linux-x86_64        # [build_platform == \"linux-64\"]\n    sha256: 1c7a167ad2c45374afb19f60093465f58f9209a5142d53d63bc4aadb567323fa    # [build_platform == \"linux-64\"]\n    url: {{ bz_url }}/{{ bz_ver }}/bazel_nojdk-{{ bz_ver }}-darwin-x86_64       # [build_platform == \"osx-64\"]\n    sha256: ba0a10ecbdaa70bf348bfdbad2fbcf0ba926a5ee07b613f6656046a1d3f60e07    # [build_platform == \"osx-64\"]\n    url: {{ bz_url }}/{{ bz_ver }}/bazel_nojdk-{{ bz_ver }}-darwin-arm64        # [build_platform == \"osx-arm64\"]\n    sha256: ef15ff2c9ca3cbf2b09dcc88ea6d7d89575cfd6904e560d7691831a1d7daaf82    # [build_platform == \"osx-arm64\"]\n    url: {{ bz_url }}/{{ bz_ver }}/bazel-{{ bz_ver }}-windows-x86_64.exe        # [build_platform == \"win-64\"]\n    sha256: 4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49    # [build_platform == \"win-64\"]\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - python                                # [build_platform != target_platform or win]\n    - cross-python_{{ target_platform }}    # [build_platform != target_platform]\n    - libabseil                             # [build_platform != target_platform]\n    - zlib                                  # [build_platform != target_platform]\n    # - libprotobuf {{ lib_major ~ \".\" ~ version }}  # [build_platform != target_platform]\n    - bazel-toolchain >=0.3.1  # [unix]\n    - openjdk 21.*             # [unix]\n    - sed                      # [unix]\n    - posix                    # [not unix]\n    - m2-sed                   # [not unix]\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - setuptools\n    - libabseil     # [unix]\n    - zlib          # [unix]\n    # - libprotobuf {{ lib_major ~ \".\" ~ version }}\n  run:\n    - python\n  run_constrained:\n    - libprotobuf {{ lib_major ~ \".\" ~ version }}\n\ntest:\n  requires:\n    - pip\n  imports:\n    - google\n    - google.protobuf\n    - google.protobuf.descriptor\n    - google.protobuf.internal\n    - google.protobuf.pyext\n    - google.protobuf.util\n    - google.protobuf.compiler\n    - google._upb._message\n  commands:\n    - python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"\n    - python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"\n    - pip check\n\nabout:\n  home: https://developers.google.com/protocol-buffers/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Protocol Buffers - Google's data interchange format.\n  description: |\n    Protocol buffers are Google's language-neutral, platform-neutral, extensible\n    mechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n  dev_url: https://github.com/protocolbuffers/protobuf\n  doc_url: https://developers.google.com/protocol-buffers/docs/tutorials\n  doc_source_url: https://github.com/protocolbuffers/protobuf/blob/master/README.md\n\nextra:\n  recipe-maintainers:\n    - jjerphan\n    - JohanMabille\n    - xylar\n    - dopplershift\n    - jakirkham\n    - ocefpaf\n    - hajapy\n    - xhochy\n    - conda-forge/libprotobuf\n",
  "req": {
    "__set__": true,
    "elements": [
      "bazel-toolchain",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "libabseil",
      "m2-sed",
      "openjdk",
      "pip",
      "posix",
      "python",
      "sed",
      "setuptools",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-sed",
        "openjdk",
        "posix",
        "python",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel-toolchain >=0.3.1",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-sed",
        "openjdk 21.*",
        "posix",
        "python",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz",
  "version": "6.32.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/protobuf.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
      "dev_url": "https://github.com/protocolbuffers/protobuf",
      "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
      "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
      "home": "https://developers.google.com/protocol-buffers/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Protocol Buffers - Google's data interchange format."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jjerphan",
        "JohanMabille",
        "xylar",
        "dopplershift",
        "jakirkham",
        "ocefpaf",
        "hajapy",
        "xhochy",
        "conda-forge/libprotobuf"
      ]
    },
    "package": {
      "name": "protobuf",
      "version": "6.32.1"
    },
    "requirements": {
      "build": [
        "python",
        "posix",
        "m2-sed",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools"
      ],
      "run": [
        "python"
      ],
      "run_constrained": [
        "libprotobuf 6.32.1"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      },
      {
        "patches": [
          "patches/0001-Make-our-Python-source-wheel-use-the-version-script-.patch",
          "patches/0002-don-t-mark-windows-as-unsupported.patch",
          "patches/0003-don-t-link-statically-on-windows.patch",
          "patches/0004-enable-windows-as-a-target-for-python-bindings.patch",
          "patches/0005-Support-more-architectures-for-Python-bindings.patch",
          "patches/0006-Compatible-windows-changes.patch",
          "patches/0007-Hacky-windows-workarounds.patch",
          "patches/0008-Add-osx-64-and-linux-ppc64le-as-supported-wheel-tags.patch"
        ],
        "sha256": "d2081ab9528292f7980ef2d88d2be472453eea4222141046ad4f660874d5f24e",
        "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v32.1.tar.gz"
      },
      {
        "fn": "bazel.exe",
        "sha256": "4926bd3bf580b8b3323e0d09bde5dc6120fdd262d99f753eb61fedfb9a2cfc49",
        "url": "https://github.com/bazelbuild/bazel/releases/download/7.2.1/bazel-7.2.1-windows-x86_64.exe"
      }
    ],
    "test": {
      "commands": [
        "python -c \"from google.protobuf.internal import api_implementation; print(api_implementation.Type())\"",
        "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'upb'\"",
        "pip check"
      ],
      "imports": [
        "google",
        "google.protobuf",
        "google.protobuf.descriptor",
        "google.protobuf.internal",
        "google.protobuf.pyext",
        "google.protobuf.util",
        "google.protobuf.compiler",
        "google._upb._message"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-sed",
        "posix",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}