{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "bot": {
      "abi_migration_branches": [
        "rtaudio5"
      ],
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "567bc2985b3e52e98e8b5b137936676df6ff15d9",
  "feedstock_hash_ts": 1730856831,
  "feedstock_name": "rtaudio",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "alsa-lib",
        "jack",
        "pulseaudio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "jack",
        "librtaudio7",
        "pulseaudio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "alsa-lib",
        "jack",
        "pulseaudio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "jack",
        "librtaudio7",
        "pulseaudio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "alsa-lib",
        "jack",
        "pulseaudio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "jack",
        "librtaudio7",
        "pulseaudio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      },
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      },
      {
        "files": [
          "lib/librtaudio.so.7*"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "pulseaudio"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.so.7"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.so",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "alsa-lib",
            "jack",
            "librtaudio7",
            "pulseaudio"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      },
      {
        "files": [
          "lib/librtaudio.7*.dylib"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.7.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.dylib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      },
      {
        "files": [
          "lib/librtaudio.7*.dylib"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.7.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.dylib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      },
      {
        "files": [
          "Library/bin/rtaudio-7*.dll"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\rtaudio-7.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "Library/lib/rtaudio.lib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\RtAudio.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\rtaudio_c.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtaudio.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\rtaudio.pc exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "alsa-lib",
        "jack",
        "pulseaudio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "name": "rtaudio-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.7*.dylib"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.7.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.dylib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "lib/librtaudio.7*.dylib"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/librtaudio.7.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "lib/librtaudio.dylib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/rtaudio/RtAudio.h",
            "test -f $PREFIX/include/rtaudio/rtaudio_c.h",
            "test -f $PREFIX/lib/librtaudio${SHLIB_EXT}",
            "test -f $PREFIX/lib/pkgconfig/rtaudio.pc"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "librtaudio7",
      "rtaudio"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/rtaudio.json"
  },
  "raw_meta_yaml": "{% set version = \"6.0.1\" %}\n{% set libversion = \"7\" %}\n{% set library = \"Library/\" if win else \"\" %}\n\npackage:\n  name: rtaudio-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/thestk/rtaudio/archive/{{ version }}.tar.gz\n  sha256: 7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - meson\n    - ninja\n    - pkg-config\n  host:\n    - alsa-lib  # [linux]\n    - jack  # [linux]\n    - pulseaudio  # [linux]\n\noutputs:\n  - name: librtaudio{{ libversion }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - alsa-lib  # [linux]\n        - jack  # [linux]\n        - pulseaudio  # [linux]\n    files:\n      - lib/librtaudio.so.{{ libversion }}*  # [linux]\n      - lib/librtaudio.{{ libversion }}*.dylib  # [osx]\n      - Library/bin/rtaudio-{{ libversion }}*.dll  # [win]\n    test:\n      commands:\n        # verify that libraries get installed\n        - test -f $PREFIX/lib/librtaudio.so.{{ libversion }}  # [linux]\n        - test -f $PREFIX/lib/librtaudio.{{ libversion }}.dylib  # [osx]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\rtaudio-{{ libversion }}.dll exit 1  # [win]\n\n  - name: rtaudio\n    build:\n      run_exports:\n        - {{ pin_subpackage('librtaudio' + libversion, max_pin=False) }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - alsa-lib  # [linux]\n        - jack  # [linux]\n        - {{ pin_subpackage('librtaudio' + libversion, exact=True) }}\n        - pulseaudio  # [linux]\n      run:\n        - {{ pin_subpackage('librtaudio' + libversion, exact=True) }}\n    files:\n      - {{ library }}include/rtaudio\n      - lib/librtaudio.so  # [linux]\n      - lib/librtaudio.dylib  # [osx]\n      - Library/lib/rtaudio.lib  # [win]\n      - {{ library }}lib/pkgconfig/rtaudio.pc\n    test:\n      commands:\n        # verify that headers get installed\n        - test -f $PREFIX/include/rtaudio/RtAudio.h  # [not win]\n        - test -f $PREFIX/include/rtaudio/rtaudio_c.h  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\RtAudio.h exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\rtaudio_c.h exit 1  # [win]\n\n        # verify that import libraries get installed\n        - test -f $PREFIX/lib/librtaudio${SHLIB_EXT}  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\rtaudio.lib exit 1  # [win]\n\n        # verify that pkgconfig files get installed\n        - test -f $PREFIX/lib/pkgconfig/rtaudio.pc  # [unix]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\rtaudio.pc exit 1  # [win]\n\nabout:\n  home: https://www.music.mcgill.ca/~gary/rtaudio/\n  license: MIT\n  license_file: LICENSE\n  summary: Cross-platform C++ API for realtime audio input/output\n  description: >\n    RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting\n    with computer audio hardware. It was designed with the following objectives:\n\n        - object-oriented C++ design\n        - simple, common API across all supported platforms\n        - only one source and one header file for easy inclusion in programming\n            projects\n        - allow simultaneous multi-api support\n        - support dynamic connection of devices\n        - provide extensive audio device parameter control\n        - allow audio device capability probing\n        - automatic internal conversion for data format, channel number\n            compensation, (de)interleaving, and byte-swapping\n\n    RtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating\n    an RtAudio instance.\n  doc_url: https://www.music.mcgill.ca/~gary/rtaudio/index.html\n  dev_url: https://github.com/thestk/rtaudio\n\nextra:\n  feedstock-name: rtaudio\n  recipe-maintainers:\n    - ryanvolz\n",
  "req": {
    "__set__": true,
    "elements": [
      "alsa-lib",
      "c_compiler_stub",
      "cxx_compiler_stub",
      "jack",
      "librtaudio7",
      "meson",
      "ninja",
      "pkg-config",
      "pulseaudio"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "jack",
        "librtaudio7",
        "pulseaudio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "alsa-lib",
        "jack",
        "librtaudio7",
        "pulseaudio"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz",
  "version": "6.0.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/rtaudio.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "RtAudio is a set of C++ classes that provides a common API (Application Programming Interface) for realtime audio input/output across Linux (native ALSA, JACK, PulseAudio and OSS), Macintosh OS X and Windows (DirectSound, ASIO and WASAPI) operating systems. RtAudio significantly simplifies the process of interacting with computer audio hardware. It was designed with the following objectives:\n\n    - object-oriented C++ design\n    - simple, common API across all supported platforms\n    - only one source and one header file for easy inclusion in programming\n        projects\n    - allow simultaneous multi-api support\n    - support dynamic connection of devices\n    - provide extensive audio device parameter control\n    - allow audio device capability probing\n    - automatic internal conversion for data format, channel number\n        compensation, (de)interleaving, and byte-swapping\n\nRtAudio incorporates the concept of audio streams, which represent audio output (playback) and/or input (recording). Available audio devices and their capabilities can be enumerated and then specified when opening a stream. Where applicable, multiple API support can be compiled and a particular API specified when creating an RtAudio instance.\n",
      "dev_url": "https://github.com/thestk/rtaudio",
      "doc_url": "https://www.music.mcgill.ca/~gary/rtaudio/index.html",
      "home": "https://www.music.mcgill.ca/~gary/rtaudio/",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Cross-platform C++ API for realtime audio input/output"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "rtaudio",
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "outputs": [
      {
        "files": [
          "Library/bin/rtaudio-7*.dll"
        ],
        "name": "librtaudio7",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": []
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\rtaudio-7.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "librtaudio7"
          ]
        },
        "files": [
          "include/rtaudio",
          "Library/lib/rtaudio.lib",
          "lib/pkgconfig/rtaudio.pc"
        ],
        "name": "rtaudio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "librtaudio7"
          ],
          "run": [
            "librtaudio7"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\RtAudio.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\include\\\\rtaudio\\\\rtaudio_c.h exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtaudio.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\rtaudio.pc exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "rtaudio-split",
      "version": "6.0.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7206c8b6cee43b474f43d64988fefaadfdcfc4264ed38d8de5f5d0e6ddb0a123",
      "url": "https://github.com/thestk/rtaudio/archive/6.0.1.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "librtaudio7"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}