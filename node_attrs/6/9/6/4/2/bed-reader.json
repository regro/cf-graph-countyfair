{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "bed-reader",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/fastlmm/bed-reader",
      "doc_url": "https://fastlmm.github.io/bed-reader/",
      "home": "https://github.com/fastlmm/bed-reader",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.md",
      "summary": "Read and write the PLINK BED format, simply and efficiently."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeromekelleher",
        "CarlKCarlK"
      ]
    },
    "package": {
      "name": "bed-reader",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "maturin >=0.14,<0.15",
        "cython",
        "numpy",
        "pybind11"
      ],
      "run": [
        "python",
        "numpy >=1.13.3",
        "pooch >=1.5.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9",
      "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "bed_reader"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pooch",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/fastlmm/bed-reader",
      "doc_url": "https://fastlmm.github.io/bed-reader/",
      "home": "https://github.com/fastlmm/bed-reader",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.md",
      "summary": "Read and write the PLINK BED format, simply and efficiently."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeromekelleher",
        "CarlKCarlK"
      ]
    },
    "package": {
      "name": "bed-reader",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "maturin >=0.14,<0.15",
        "cython",
        "numpy",
        "pybind11"
      ],
      "run": [
        "python",
        "numpy >=1.13.3",
        "pooch >=1.5.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9",
      "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "bed_reader"
      ]
    }
  },
  "name": "bed-reader",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/fastlmm/bed-reader",
      "doc_url": "https://fastlmm.github.io/bed-reader/",
      "home": "https://github.com/fastlmm/bed-reader",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.md",
      "summary": "Read and write the PLINK BED format, simply and efficiently."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeromekelleher",
        "CarlKCarlK"
      ]
    },
    "package": {
      "name": "bed-reader",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "maturin >=0.14,<0.15",
        "cython",
        "numpy",
        "pybind11"
      ],
      "run": [
        "python",
        "numpy >=1.13.3",
        "pooch >=1.5.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9",
      "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "bed_reader"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pooch",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/fastlmm/bed-reader",
      "doc_url": "https://fastlmm.github.io/bed-reader/",
      "home": "https://github.com/fastlmm/bed-reader",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.md",
      "summary": "Read and write the PLINK BED format, simply and efficiently."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeromekelleher",
        "CarlKCarlK"
      ]
    },
    "package": {
      "name": "bed-reader",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "maturin >=0.14,<0.15",
        "cython",
        "numpy",
        "pybind11"
      ],
      "run": [
        "python",
        "numpy >=1.13.3",
        "pooch >=1.5.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9",
      "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "bed_reader"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pooch",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "bed-reader"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/bed-reader.json"
  },
  "raw_meta_yaml": "{% set name = \"bed-reader\" %}\n{% set version = \"1.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # Can't use the standard pattern because of the hypen/underscore remapping.\n  url: https://pypi.io/packages/source/b/bed-reader/bed_reader-{{ version }}.tar.gz\n  sha256: fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9\n\nbuild:\n  number: 0\n  skip: true  # [py<37]\n\nrequirements:\n  build:\n    # Support for osx_arm64 as recommended by\n    # https://conda-forge.org/blog/posts/2020-10-29-macos-arm64/#how-to-add-a-osx-arm64-build-to-a-feedstock\n    - {{ compiler('rust') }}\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - maturin >=0.14,<0.15                   # [build_platform != target_platform]\n\n  host:\n    - python\n    - pip\n    - maturin >=0.14,<0.15\n    - cython\n    - numpy\n    - pybind11\n\n  run:\n    - python\n    # Versions taken from pyproject.toml\n    - numpy >=1.13.3\n    - pooch >=1.5.0\n    # Note: leaving out scipy for 1.0 as it's only used in one optional feature.\n    # May be included as a default dependency in future releases.\n    # - scipy >=1.4\n\ntest:\n  imports:\n    - bed_reader\n\nabout:\n  home: https://github.com/fastlmm/bed-reader\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.md\n  summary: Read and write the PLINK BED format, simply and efficiently.\n  doc_url: https://fastlmm.github.io/bed-reader/\n  dev_url: https://github.com/fastlmm/bed-reader\n\nextra:\n  recipe-maintainers:\n    - jeromekelleher\n    - CarlKCarlK\n",
  "req": {
    "__set__": true,
    "elements": [
      "cython",
      "maturin",
      "numpy",
      "pip",
      "pooch",
      "pybind11",
      "python",
      "rust_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pooch",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin >=0.14,<0.15",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy >=1.13.3",
        "pooch >=1.5.0",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz",
  "version": "1.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/bed-reader.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/fastlmm/bed-reader",
      "doc_url": "https://fastlmm.github.io/bed-reader/",
      "home": "https://github.com/fastlmm/bed-reader",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.md",
      "summary": "Read and write the PLINK BED format, simply and efficiently."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeromekelleher",
        "CarlKCarlK"
      ]
    },
    "package": {
      "name": "bed-reader",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "maturin >=0.14,<0.15",
        "cython",
        "numpy",
        "pybind11"
      ],
      "run": [
        "python",
        "numpy >=1.13.3",
        "pooch >=1.5.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fea2ef4562ca3211b6087185d8ff73e60b75915066c10d2d1b398ab87ece4ed9",
      "url": "https://pypi.io/packages/source/b/bed-reader/bed_reader-1.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "bed_reader"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "maturin",
        "numpy",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pooch",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}