{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "gau2grid",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "ldd -v $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "ldd -v $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "ldd -v $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "ldd -v $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake",
        "otool -L $PREFIX/lib/libgg$SHLIB_EXT",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\gg.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\gg.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\gau2grid\\\\gau2grid.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gau2grid\\\\gau2gridConfig.cmake exit 1"
      ]
    }
  },
  "name": "gau2grid",
  "osx_64_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "otool -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libgg.a",
        "otool -L $PREFIX/lib/libgg$SHLIB_EXT",
        "test -f $PREFIX/include/gau2grid/gau2grid.h",
        "test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "gau2grid"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/gau2grid.json"
  },
  "raw_meta_yaml": "{% set name = \"gau2grid\" %}\n{% set version = \"2.0.8\" %}\n{% set sha256 = \"c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/psi4/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('gau2grid', max_pin='x') }}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - ninja\n    #  numpy and python in build, not host, since used as build tools and to avoid python_abi dependency\n    - numpy\n    - python 3.12.*\n\ntest:\n  commands:\n    # Verify library\n    - test -L $PREFIX/lib/libgg$SHLIB_EXT                                   # [unix]\n    - test ! -f $PREFIX/lib/libgg.a                                         # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\gg.lib exit 1                    # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\gg.dll exit 1                    # [win]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libgg$SHLIB_EXT                                    # [linux and build_platform == target_platform]\n    - otool -L $PREFIX/lib/libgg$SHLIB_EXT                                  # [osx]\n    # Verify accessories\n    - test -f $PREFIX/include/gau2grid/gau2grid.h                           # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\gau2grid\\\\gau2grid.h exit 1  # [win]\n    - test -f $PREFIX/share/cmake/gau2grid/gau2gridConfig.cmake             # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gau2grid\\\\gau2gridConfig.cmake exit 1  # [win]\n\nabout:\n  home: https://github.com/dgasmith/gau2grid\n  dev_url: https://github.com/dgasmith/gau2grid\n  doc_url: https://github.com/dgasmith/gau2grid/blob/master/README.md\n  doc_source_url: https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst\n  license: BSD-3-Clause\n  license_url: https://opensource.org/licenses/BSD-3-Clause\n  license_file: LICENSE\n  license_family: BSD\n  summary: \"D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid\"\n  description: >\n    A collocation code for computing gaussians on a grid of the form:\n    ```\n    out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2)\n    ```\n    , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n\nextra:\n  recipe-maintainers:\n    - dgasmith\n    - loriab\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "ninja",
      "numpy",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz",
  "version": "2.0.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/gau2grid.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "A collocation code for computing gaussians on a grid of the form: ``` out_Lp = x^l y^m z^n \\sum_i coeff_i e^(exponent_i * (|center - p|)^2) ``` , where the returned matrix dimension are the angular momentum (L) by number of requested points (p).\n",
      "dev_url": "https://github.com/dgasmith/gau2grid",
      "doc_source_url": "https://github.com/dgasmith/gau2grid/blob/master/docs/source/index.rst",
      "doc_url": "https://github.com/dgasmith/gau2grid/blob/master/README.md",
      "home": "https://github.com/dgasmith/gau2grid",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D.G.A. Smith's C library for fast computation of a Gaussian and its derivative on a grid"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "gau2grid"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dgasmith",
        "loriab"
      ]
    },
    "package": {
      "name": "gau2grid",
      "version": "2.0.8"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "numpy",
        "python 3.12.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c5f445344a465c1d9afc6516544dc4a2fba588af7ba0f1ac1a6b538260f0cd96",
      "url": "https://github.com/psi4/gau2grid/archive/v2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\gg.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\gg.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\gau2grid\\\\gau2grid.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\gau2grid\\\\gau2gridConfig.cmake exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "numpy",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}