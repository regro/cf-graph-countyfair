{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "damask",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "xorg-libxfixes",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "xorg-libxfixes",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv",
          "skip": true
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv",
          "skip": true
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "xorg-libxfixes",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv",
          "skip": true
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "libgomp",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv",
          "skip": true
        },
        "name": "python-damask",
        "requirements": {
          "build": [
            "cdt_stub"
          ],
          "host": [
            "xorg-libxfixes",
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "name": "damask-pkgs",
  "osx_64_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": null,
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "llvm-openmp",
            "pkg-config",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ]
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "damask",
      "damask-grid",
      "damask-mesh",
      "python-damask"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/damask.json"
  },
  "raw_meta_yaml": "{% set build_number = 1 %}\n{% set version = \"3.0.2\" %}\n{% set sha256 = \"82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4\" %}\n\n# win: no PETSc => only python\n\npackage:\n  name: damask-pkgs\n  version: {{ version }}\n\nsource:\n  url: https://damask-multiphysics.org/download/damask-{{ version }}.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - HDF5-Fortran.patch\n    - compiler-options.patch\n    - ldflags.patch\n\nbuild:\n  number: {{ build_number }}\n  force_use_keys:\n    - mpi\n\noutputs:\n  - name: damask-grid\n    script: build_grid.sh\n    build:\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - {{ stdlib('c') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n        - make\n        - sed\n        - openmpi  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - liblapack\n        - libblas\n        - petsc\n        - petsc * real_*\n        - hdf5\n        - hdf5 * mpi_{{ mpi }}_*\n        - libfyaml\n        - zlib\n        - fftw\n        - fftw * mpi_{{ mpi }}_*\n      run:\n        - hypre\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version }}\n    test:\n      source_files:\n        - examples/grid/tensionX.yaml\n        - examples/grid/20grains16x16x16.vti\n        - examples/grid/material.yaml\n      commands:\n        - export OMP_NUM_THREADS=2\n        - export EXAMPLE_DIR=$(pwd)/examples/grid\n        - if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi\n        # simulation is extremly slow, resulting in timeout\n        #- if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid -w $(mktemp -d) -l ${EXAMPLE_DIR}/tensionX.yaml -g ${EXAMPLE_DIR}/20grains16x16x16.vti -m ${EXAMPLE_DIR}/material.yaml; fi\n\n  - name: damask-mesh\n    script: build_mesh.sh\n    build:\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('fortran') }}\n        - {{ stdlib('c') }}\n        - libgomp  # [linux]\n        - llvm-openmp  # [osx]\n        - pkg-config  # [osx]\n        - cmake\n        - make\n        - sed\n        - openmpi  # [mpi == 'openmpi' and build_platform != target_platform]\n      host:\n        - {{ mpi }}\n        - liblapack\n        - libblas\n        - petsc\n        - petsc * real_*\n        - hdf5\n        - hdf5 * mpi_{{ mpi }}_*\n        - libfyaml\n        - zlib\n      run:\n        - hypre\n        - {{ pin_compatible('petsc', max_pin='x.x') }}\n        - {{ pin_compatible('hdf5', max_pin='x.x') }}\n      run_constrained:\n        - damask =={{ version }}\n    test:\n      source_files:\n        - examples/mesh/tensionY_mono.yaml\n        - examples/mesh/monocrystal.msh\n        - examples/mesh/material.yaml\n      commands:\n        - export OMP_NUM_THREADS=2\n        - export EXAMPLE_DIR=$(pwd)/examples/mesh\n        - if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi\n\n  - name: python-damask\n    build:\n      script: python -m pip install ./python --no-deps -vv\n      skip: true  # [ppc64le]\n    requirements:\n      build:\n        - {{ cdt('mesa-libgl-devel') }}  # [linux]\n        - {{ cdt('mesa-dri-drivers') }}  # [linux]\n        - {{ cdt('libselinux') }}  # [linux]\n        - {{ cdt('libxdamage') }}  # [linux]\n        - {{ cdt('libxxf86vm') }}  # [linux]\n        - {{ cdt('libxext') }}     # [linux]\n        - python                                 # [build_platform != target_platform]\n        - pip                                    # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n      host:\n        - xorg-libxfixes  # [linux]\n        - python\n        - pip\n        - setuptools\n      run:\n        - python\n        - pandas\n        - scipy\n        - h5py >=3.3.0\n        - vtk\n        - matplotlib-base\n        - pyyaml\n      run_constrained:\n        - damask =={{ version }}\n    test:\n      imports:\n        - damask\n\n  - name: damask\n    build:\n      script:\n        - \"echo DAMASK metapackage\"\n      skip: true  # [win or ppc64le]\n    requirements:\n      host:\n        - python\n      run:\n        - python\n        - {{ mpi }}\n        - {{ pin_subpackage('damask-mesh', exact=True) }}\n        - {{ pin_subpackage('damask-grid', exact=True) }}\n        - {{ pin_subpackage('python-damask', exact=True) }}\n    test:\n      commands:\n        - if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi\n      imports:\n        - damask\n\nabout:\n  home: https://damask-multiphysics.org\n  license: AGPL-3.0-or-later\n  license_file:\n    - LICENSE\n    - COPYING\n  summary: 'Duesseldorf Advanced Material Simulation Kit'\n\n  description: |\n    At the core of DAMASK is a flexible and hierarchically structured\n    model of material point behavior for the solution of elastoplastic\n    boundary value problems along with damage and thermal physics. Its\n    main purpose is the simulation of crystal plasticity within a\n    finite-strain continuum mechanical framework.\n  doc_url: https://damask-multiphysics.org/documentation\n  dev_url: https://damask-multiphysics.org/development\n\nextra:\n  recipe-maintainers:\n    - MarDiehl\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cdt_stub",
      "cmake",
      "cxx_compiler_stub",
      "damask-grid",
      "damask-mesh",
      "fftw",
      "fortran_compiler_stub",
      "h5py",
      "hdf5",
      "hypre",
      "libblas",
      "libfyaml",
      "libgomp",
      "liblapack",
      "llvm-openmp",
      "make",
      "matplotlib-base",
      "mpich",
      "openmpi",
      "pandas",
      "petsc",
      "pip",
      "pkg-config",
      "python",
      "python-damask",
      "pyyaml",
      "scipy",
      "sed",
      "setuptools",
      "vtk",
      "xorg-libxfixes",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "fftw",
        "fortran_compiler_stub",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmp",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "xorg-libxfixes",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "damask-grid",
        "damask-mesh",
        "fortran_compiler_stub",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmp",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "fftw * mpi_mpich_*",
        "fftw * mpi_openmpi_*",
        "hdf5",
        "hdf5 * mpi_mpich_*",
        "hdf5 * mpi_openmpi_*",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "petsc * real_*",
        "pip",
        "python",
        "setuptools",
        "xorg-libxfixes",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py >=3.3.0",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz",
  "version": "3.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/damask.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "At the core of DAMASK is a flexible and hierarchically structured\nmodel of material point behavior for the solution of elastoplastic\nboundary value problems along with damage and thermal physics. Its\nmain purpose is the simulation of crystal plasticity within a\nfinite-strain continuum mechanical framework.\n",
      "dev_url": "https://damask-multiphysics.org/development",
      "doc_url": "https://damask-multiphysics.org/documentation",
      "home": "https://damask-multiphysics.org",
      "license": "AGPL-3.0-or-later",
      "license_file": [
        "LICENSE",
        "COPYING"
      ],
      "summary": "Duesseldorf Advanced Material Simulation Kit"
    },
    "build": {
      "force_use_keys": [
        "mpi"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "MarDiehl"
      ]
    },
    "outputs": [
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_mpich_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "mpich",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_mpich_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "mpich",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-grid",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib",
            "fftw",
            "fftw * mpi_openmpi_*"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_grid.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/grid",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_grid; fi"
          ],
          "source_files": [
            "examples/grid/tensionX.yaml",
            "examples/grid/20grains16x16x16.vti",
            "examples/grid/material.yaml"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "damask-mesh",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "sed"
          ],
          "host": [
            "openmpi",
            "liblapack",
            "libblas",
            "petsc",
            "petsc * real_*",
            "hdf5",
            "hdf5 * mpi_openmpi_*",
            "libfyaml",
            "zlib"
          ],
          "run": [
            "hypre",
            "petsc",
            "hdf5"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "script": "build_mesh.sh",
        "test": {
          "commands": [
            "export OMP_NUM_THREADS=2",
            "export EXAMPLE_DIR=$(pwd)/examples/mesh",
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then mpirun -np 2 DAMASK_mesh; fi"
          ],
          "source_files": [
            "examples/mesh/tensionY_mono.yaml",
            "examples/mesh/monocrystal.msh",
            "examples/mesh/material.yaml"
          ]
        }
      },
      {
        "build": {
          "script": "python -m pip install ./python --no-deps -vv"
        },
        "name": "python-damask",
        "requirements": {
          "build": [],
          "host": [
            "python",
            "pip",
            "setuptools"
          ],
          "run": [
            "python",
            "pandas",
            "scipy",
            "h5py >=3.3.0",
            "vtk",
            "matplotlib-base",
            "pyyaml"
          ],
          "run_constrained": [
            "damask ==3.0.2"
          ]
        },
        "test": {
          "imports": [
            "damask"
          ]
        }
      },
      {
        "build": {
          "script": [
            "echo DAMASK metapackage"
          ],
          "skip": true
        },
        "name": "damask",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "openmpi",
            "damask-mesh",
            "damask-grid",
            "python-damask"
          ]
        },
        "test": {
          "commands": [
            "if [[ $CONDA_BUILD_CROSS_COMPILATION != '1' ]]; then DAMASK_grid -h; DAMASK_mesh -h; fi"
          ],
          "imports": [
            "damask"
          ]
        }
      }
    ],
    "package": {
      "name": "damask-pkgs",
      "version": "3.0.2"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "HDF5-Fortran.patch",
        "compiler-options.patch",
        "ldflags.patch"
      ],
      "sha256": "82f9b3aefde87193c12a7c908f42b711b278438f6cad650918989e37fb6dbde4",
      "url": "https://damask-multiphysics.org/download/damask-3.0.2.tar.xz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "hdf5",
        "libblas",
        "libfyaml",
        "liblapack",
        "mpich",
        "openmpi",
        "petsc",
        "pip",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "damask-grid",
        "damask-mesh",
        "h5py",
        "hdf5",
        "hypre",
        "matplotlib-base",
        "mpich",
        "openmpi",
        "pandas",
        "petsc",
        "python",
        "python-damask",
        "pyyaml",
        "scipy",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}