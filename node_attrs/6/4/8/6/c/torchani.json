{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": [
        "docker",
        "cache",
        "apt"
      ],
      "settings_linux": {
        "swapfile_size": "20GiB"
      }
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "6f682536121f966c64c2b8470a92102b066ed7d5",
  "feedstock_hash_ts": 1739905179,
  "feedstock_name": "torchani",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/aiqm/torchani",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Accurate Neural Network Potential on PyTorch"
    },
    "build": {
      "number": "13",
      "script": [
        "export CPATH=PREFIX/include",
        "PYTHON -m pip install . -vvv --no-deps",
        "PYTHON -m pip install . --config-settings='--global-option=--cuaev-all-sms' -vvv --no-deps"
      ],
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
      ],
      "string": "cuda126py39h1234567_13"
    },
    "extra": {
      "recipe-maintainers": [
        "yueyericardo",
        "mikemhenry"
      ]
    },
    "package": {
      "name": "torchani",
      "version": "2.2.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm",
        "cuda_compiler_stub",
        "cuda-version ==12.6"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "pytorch",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*",
        "cuda-version ==12.6"
      ],
      "run": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "lark-parser",
        "requests",
        "h5py",
        "numpy >=1.22"
      ],
      "run_constrained": [
        "pytorch =*=cpu*",
        "pytorch =*=cuda*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/remove-distutils-and-pkg_resources.patch",
        "patches/make_download_robust.patch"
      ],
      "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
      "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
    },
    "test": {
      "commands": [
        "./download.sh",
        "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
        "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
        "cd tests; python -m pytest -v -s *.py"
      ],
      "imports": [
        "torchani",
        "torchani.cuaev"
      ],
      "requires": [
        "wget",
        "unzip",
        "tensorboard",
        "tqdm",
        "ase <3.24.0",
        "h5py",
        "pillow",
        "pyyaml",
        "pytest",
        "expecttest",
        "pkbar"
      ],
      "source_files": [
        "torchani/resources/*",
        "tests/*",
        "tools/*",
        "download.sh",
        "dataset/*",
        "test_requirements.txt"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "importlib-metadata",
        "pip",
        "python",
        "pytorch",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "importlib-metadata",
        "lark-parser",
        "numpy",
        "pip",
        "python",
        "requests",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "ase",
        "expecttest",
        "h5py",
        "pillow",
        "pkbar",
        "pytest",
        "pyyaml",
        "tensorboard",
        "tqdm",
        "unzip",
        "wget"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/aiqm/torchani",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Accurate Neural Network Potential on PyTorch"
    },
    "build": {
      "number": "13",
      "script": [
        "export CPATH=PREFIX/include",
        "PYTHON -m pip install . -vvv --no-deps",
        "PYTHON -m pip install . --config-settings='--global-option=--cuaev-all-sms' -vvv --no-deps"
      ],
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
      ],
      "string": "cpu_py39h1234567_13"
    },
    "extra": {
      "recipe-maintainers": [
        "yueyericardo",
        "mikemhenry"
      ]
    },
    "package": {
      "name": "torchani",
      "version": "2.2.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm",
        "cuda_compiler_stub",
        "cuda-version ==12.6"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "pytorch",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*",
        "cuda-version ==12.6"
      ],
      "run": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "lark-parser",
        "requests",
        "h5py",
        "numpy >=1.22"
      ],
      "run_constrained": [
        "pytorch =*=cpu*",
        "pytorch =*=cuda*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/remove-distutils-and-pkg_resources.patch",
        "patches/make_download_robust.patch"
      ],
      "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
      "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
    },
    "test": {
      "commands": [
        "./download.sh",
        "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
        "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
        "cd tests; python -m pytest -v -s *.py"
      ],
      "imports": [
        "torchani",
        "torchani.cuaev"
      ],
      "requires": [
        "wget",
        "unzip",
        "tensorboard",
        "tqdm",
        "ase <3.24.0",
        "h5py",
        "pillow",
        "pyyaml",
        "pytest",
        "expecttest",
        "pkbar"
      ],
      "source_files": [
        "torchani/resources/*",
        "tests/*",
        "tools/*",
        "download.sh",
        "dataset/*",
        "test_requirements.txt"
      ]
    }
  },
  "name": "torchani",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/aiqm/torchani",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Accurate Neural Network Potential on PyTorch"
    },
    "build": {
      "number": "13",
      "script": [
        "export CPATH=PREFIX/include",
        "PYTHON -m pip install . -vvv --no-deps"
      ],
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
      ],
      "string": "cpu_py39h1234567_13"
    },
    "extra": {
      "recipe-maintainers": [
        "yueyericardo",
        "mikemhenry"
      ]
    },
    "package": {
      "name": "torchani",
      "version": "2.2.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "pytorch",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "lark-parser",
        "requests",
        "h5py",
        "numpy >=1.22"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/remove-distutils-and-pkg_resources.patch",
        "patches/make_download_robust.patch"
      ],
      "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
      "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
    },
    "test": {
      "commands": [
        "./download.sh",
        "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
        "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
        "cd tests; python -m pytest -v -s *.py"
      ],
      "imports": [
        "torchani"
      ],
      "requires": [
        "wget",
        "unzip",
        "tensorboard",
        "tqdm",
        "ase <3.24.0",
        "h5py",
        "pillow",
        "pyyaml",
        "pytest",
        "expecttest",
        "pkbar"
      ],
      "source_files": [
        "torchani/resources/*",
        "tests/*",
        "tools/*",
        "download.sh",
        "dataset/*",
        "test_requirements.txt"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "pip",
        "python",
        "pytorch",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "importlib-metadata",
        "lark-parser",
        "numpy",
        "pip",
        "python",
        "requests",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "ase",
        "expecttest",
        "h5py",
        "pillow",
        "pkbar",
        "pytest",
        "pyyaml",
        "tensorboard",
        "tqdm",
        "unzip",
        "wget"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/aiqm/torchani",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Accurate Neural Network Potential on PyTorch"
    },
    "build": {
      "number": "13",
      "script": [
        "export CPATH=PREFIX/include",
        "PYTHON -m pip install . -vvv --no-deps"
      ],
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=2.2.4"
      ],
      "string": "cpu_py39h1234567_13"
    },
    "extra": {
      "recipe-maintainers": [
        "yueyericardo",
        "mikemhenry"
      ]
    },
    "package": {
      "name": "torchani",
      "version": "2.2.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "pytorch",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "pip",
        "setuptools",
        "setuptools_scm",
        "importlib-metadata",
        "lark-parser",
        "requests",
        "h5py",
        "numpy >=1.22"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/remove-distutils-and-pkg_resources.patch",
        "patches/make_download_robust.patch"
      ],
      "sha256": "8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d",
      "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz"
    },
    "test": {
      "commands": [
        "./download.sh",
        "ln -s ../download/dataset/ani-1x/ dataset/ani-1x",
        "ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4",
        "cd tests; python -m pytest -v -s *.py"
      ],
      "imports": [
        "torchani"
      ],
      "requires": [
        "wget",
        "unzip",
        "tensorboard",
        "tqdm",
        "ase <3.24.0",
        "h5py",
        "pillow",
        "pyyaml",
        "pytest",
        "expecttest",
        "pkbar"
      ],
      "source_files": [
        "torchani/resources/*",
        "tests/*",
        "tools/*",
        "download.sh",
        "dataset/*",
        "test_requirements.txt"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "pip",
        "python",
        "pytorch",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "importlib-metadata",
        "lark-parser",
        "numpy",
        "pip",
        "python",
        "requests",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "ase",
        "expecttest",
        "h5py",
        "pillow",
        "pkbar",
        "pytest",
        "pyyaml",
        "tensorboard",
        "tqdm",
        "unzip",
        "wget"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "torchani"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/torchani.json"
  },
  "raw_meta_yaml": "# Notes: this receipt is based on torchvision-feedstock:\n# https://github.com/conda-forge/torchvision-feedstock/blob/master/recipe/meta.yaml\n\n{% set version = \"2.2.4\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: torchani\n  version: {{ version }}\n\nsource:\n  url: https://github.com/aiqm/torchani/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 8b9afee45494d3f0dad56ec57d40ec3095948d83c84fc1bb6e36748d3c33ac0d\n  patches:\n    - patches/remove-distutils-and-pkg_resources.patch\n    - patches/make_download_robust.patch\n\nbuild:\n  number: 13\n  skip: true  # [win]\n  # as of pytorch 2.5, conda-forge only builds for CUDA 12+\n  skip: true  # [cuda_compiler_version == \"11.8\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == \"None\"]\n  script_env:\n  - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script:\n    # The torchani setup.py does not look in the conda folder for includes.\n    # I added this so that nvcc finds $PREFIX/include/crypt.h\n    - \"export CPATH={{ PREFIX }}/include\"\n    - \"{{ PYTHON }} -m pip install . --config-settings='--global-option=--cuaev-all-sms' -vvv --no-deps\"  # [cuda_compiler_version != \"None\"]\n    - \"{{ PYTHON }} -m pip install . -vvv --no-deps\"                                     # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}              # [cuda_compiler_version != \"None\"]\n    - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n    - python                              # [build_platform != target_platform]\n    - cython                              # [build_platform != target_platform]\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - setuptools_scm\n  host:\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - importlib-metadata\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    - cuda-version =={{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')] \n  run:\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - importlib-metadata\n    - lark-parser\n    - requests\n    - h5py\n    # While there is no strict lower bound on numpy\n    # Historically the package has had a lower bound on numpy 1.22\n    # so we add this to avoid a surprise downgrade\n    # hmaarrfk -- 2024/08\n    # https://conda-metadata-app.streamlit.app/?q=conda-forge%2Flinux-64%2Ftorchani-2.2.4-cuda120py39h4b2872a_8.conda\n    - numpy >=1.22\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchani\n    - torchani.cuaev                     # [cuda_compiler_version != \"None\"]\n  source_files:\n    - torchani/resources/*\n    - tests/*\n    - tools/*\n    - download.sh\n    - dataset/*\n    - test_requirements.txt\n  requires:\n    - wget\n    - unzip\n    - tensorboard\n    - tqdm\n    - ase <3.24.0\n    - h5py\n    - pillow\n    - pyyaml\n    - pytest\n    - expecttest\n    - pkbar\n  commands:\n    # download testing datasets\n    - ./download.sh                                                           # [unix]\n    # broken symlink that got ignored when copying\n    - ln -s ../download/dataset/ani-1x/ dataset/ani-1x                        # [unix]\n    - ln -s ../download/dataset/ani1-up_to_gdb4/ dataset/ani1-up_to_gdb4      # [unix]\n    - cd tests; python -m pytest -v -s *.py  # [unix]\nabout:\n  home: https://github.com/aiqm/torchani\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Accurate Neural Network Potential on PyTorch'\n\nextra:\n  recipe-maintainers:\n    - yueyericardo\n    - mikemhenry\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "h5py",
      "importlib-metadata",
      "lark-parser",
      "numpy",
      "pip",
      "python",
      "pytorch",
      "requests",
      "setuptools",
      "setuptools_scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "importlib-metadata",
        "pip",
        "python",
        "pytorch",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "h5py",
        "importlib-metadata",
        "lark-parser",
        "numpy",
        "pip",
        "python",
        "requests",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "ase",
        "expecttest",
        "h5py",
        "pillow",
        "pkbar",
        "pytest",
        "pyyaml",
        "tensorboard",
        "tqdm",
        "unzip",
        "wget"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version ==12.6",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "setuptools_scm"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version ==12.6",
        "importlib-metadata",
        "pip",
        "python",
        "pytorch",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "importlib-metadata",
        "lark-parser",
        "numpy >=1.22",
        "pip",
        "python",
        "requests",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "ase <3.24.0",
        "expecttest",
        "h5py",
        "pillow",
        "pkbar",
        "pytest",
        "pyyaml",
        "tensorboard",
        "tqdm",
        "unzip",
        "wget"
      ]
    }
  },
  "url": "https://github.com/aiqm/torchani/archive/refs/tags/2.2.4.tar.gz",
  "version": "2.2.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/torchani.json"
  }
}