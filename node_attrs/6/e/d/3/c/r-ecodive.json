{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-ecodive",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/cmmr/ecodive",
      "home": "https://cmmr.github.io/ecodive",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Computes alpha and beta diversity metrics using concurrent 'C' threads. Metrics include 'UniFrac', Faith's phylogenetic diversity, Bray-Curtis dissimilarity, Shannon diversity index, and many others. Also parses newick trees into 'phylo' objects and rarefies feature tables."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "dansmith01"
      ]
    },
    "package": {
      "name": "r-ecodive",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04edd5b9a84bb3a5bc1844f751487400ef10c474db7e64282bea8c1c6a972e24",
      "url": [
        "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ecodive')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/cmmr/ecodive",
      "home": "https://cmmr.github.io/ecodive",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Computes alpha and beta diversity metrics using concurrent 'C' threads. Metrics include 'UniFrac', Faith's phylogenetic diversity, Bray-Curtis dissimilarity, Shannon diversity index, and many others. Also parses newick trees into 'phylo' objects and rarefies feature tables."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "dansmith01"
      ]
    },
    "package": {
      "name": "r-ecodive",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "make",
        "m2w64_c_stdlib_stub",
        "m2w64_c_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04edd5b9a84bb3a5bc1844f751487400ef10c474db7e64282bea8c1c6a972e24",
      "url": [
        "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ecodive')\"",
        "\"%R%\" -e \"library('ecodive')\""
      ]
    }
  },
  "name": "r-ecodive",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/cmmr/ecodive",
      "home": "https://cmmr.github.io/ecodive",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Computes alpha and beta diversity metrics using concurrent 'C' threads. Metrics include 'UniFrac', Faith's phylogenetic diversity, Bray-Curtis dissimilarity, Shannon diversity index, and many others. Also parses newick trees into 'phylo' objects and rarefies feature tables."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "dansmith01"
      ]
    },
    "package": {
      "name": "r-ecodive",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04edd5b9a84bb3a5bc1844f751487400ef10c474db7e64282bea8c1c6a972e24",
      "url": [
        "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ecodive')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ecodive"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ecodive.json"
  },
  "raw_meta_yaml": "{% set version = \"2.0.0\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ecodive\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ecodive_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ecodive/ecodive_{{ version }}.tar.gz\n  sha256: 04edd5b9a84bb3a5bc1844f751487400ef10c474db7e64282bea8c1c6a972e24\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('ecodive')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ecodive')\\\"\"  # [win]\n\nabout:\n  home: https://cmmr.github.io/ecodive\n  dev_url: https://github.com/cmmr/ecodive\n  summary: Computes alpha and beta diversity metrics using concurrent 'C' threads. Metrics include 'UniFrac', Faith's phylogenetic diversity, Bray-Curtis dissimilarity, Shannon diversity index, and many others. Also parses newick trees into 'phylo' objects and rarefies feature tables.\n  license: MIT\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - dansmith01\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "make",
      "r-base",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz"
  ],
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ecodive.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/cmmr/ecodive",
      "home": "https://cmmr.github.io/ecodive",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Computes alpha and beta diversity metrics using concurrent 'C' threads. Metrics include 'UniFrac', Faith's phylogenetic diversity, Bray-Curtis dissimilarity, Shannon diversity index, and many others. Also parses newick trees into 'phylo' objects and rarefies feature tables."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "dansmith01"
      ]
    },
    "package": {
      "name": "r-ecodive",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "m2w64_c_stdlib_stub",
        "m2w64_c_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04edd5b9a84bb3a5bc1844f751487400ef10c474db7e64282bea8c1c6a972e24",
      "url": [
        "https://cran.r-project.org/src/contrib/ecodive_2.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ecodive/ecodive_2.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('ecodive')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}