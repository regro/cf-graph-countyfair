{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "c8266e5e94b1e4ac7b944a00c004d3973a4db3d9",
  "feedstock_hash_ts": 1761076174,
  "feedstock_name": "dxtbx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
      "dev_url": "https://github.com/cctbx/dxtbx",
      "doc_url": "https://dials.github.io/documentation/index.html",
      "home": "https://github.com/cctbx/dxtbx",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "dxtbx/LICENSE.txt",
      "summary": "Diffraction Experiment Toolbox"
    },
    "build": {
      "entry_points": [
        "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
        "cxi.image_average = dxtbx.command_line.image_average:run",
        "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
        "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
        "dxtbx.any2nexus = dxtbx.command_line.any2nexus:run",
        "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
        "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
        "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
        "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
        "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
        "dxtbx.image_average = dxtbx.command_line.image_average:run",
        "dxtbx.install_format = dxtbx.command_line.install_format:run",
        "dxtbx.overload = dxtbx.command_line.overload:run",
        "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
        "dxtbx.print_header = dxtbx.command_line.print_header:run",
        "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
        "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
        "dxtbx.saturation = dxtbx.command_line.saturation:run",
        "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
        "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
        "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
      ],
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "dxtbx",
      "version": "3.25.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libboost-python-devel",
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "hdf5",
        "h5py",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "dxtbx",
      "patches": null,
      "sha256": "25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae",
      "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest $SRC_DIR/dxtbx/tests --regression",
        "pip check"
      ],
      "imports": [
        "dxtbx.ext"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip"
      ],
      "source_files": [
        "dxtbx/tests",
        "dxtbx/conftest.py"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
      "dev_url": "https://github.com/cctbx/dxtbx",
      "doc_url": "https://dials.github.io/documentation/index.html",
      "home": "https://github.com/cctbx/dxtbx",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "dxtbx/LICENSE.txt",
      "summary": "Diffraction Experiment Toolbox"
    },
    "build": {
      "entry_points": [
        "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
        "cxi.image_average = dxtbx.command_line.image_average:run",
        "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
        "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
        "dxtbx.any2nexus = dxtbx.command_line.any2nexus:run",
        "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
        "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
        "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
        "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
        "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
        "dxtbx.image_average = dxtbx.command_line.image_average:run",
        "dxtbx.install_format = dxtbx.command_line.install_format:run",
        "dxtbx.overload = dxtbx.command_line.overload:run",
        "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
        "dxtbx.print_header = dxtbx.command_line.print_header:run",
        "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
        "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
        "dxtbx.saturation = dxtbx.command_line.saturation:run",
        "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
        "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
        "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
      ],
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "dxtbx",
      "version": "3.25.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libboost-python-devel",
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "hdf5",
        "h5py",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "dxtbx",
      "patches": [
        "patch_windows_entrypoint.diff",
        "patch_nxmx_xfail.diff",
        "patch_nxmx_get_raw_data_single_panel_xfail.diff"
      ],
      "sha256": "25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae",
      "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest $SRC_DIR/dxtbx/tests --regression",
        "pip check",
        "pytest %SRC_DIR%/dxtbx/tests --regression"
      ],
      "imports": [
        "dxtbx.ext"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip"
      ],
      "source_files": [
        "dxtbx/tests",
        "dxtbx/conftest.py"
      ]
    }
  },
  "name": "dxtbx",
  "osx_64_meta_yaml": {
    "about": {
      "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
      "dev_url": "https://github.com/cctbx/dxtbx",
      "doc_url": "https://dials.github.io/documentation/index.html",
      "home": "https://github.com/cctbx/dxtbx",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "dxtbx/LICENSE.txt",
      "summary": "Diffraction Experiment Toolbox"
    },
    "build": {
      "entry_points": [
        "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
        "cxi.image_average = dxtbx.command_line.image_average:run",
        "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
        "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
        "dxtbx.any2nexus = dxtbx.command_line.any2nexus:run",
        "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
        "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
        "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
        "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
        "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
        "dxtbx.image_average = dxtbx.command_line.image_average:run",
        "dxtbx.install_format = dxtbx.command_line.install_format:run",
        "dxtbx.overload = dxtbx.command_line.overload:run",
        "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
        "dxtbx.print_header = dxtbx.command_line.print_header:run",
        "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
        "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
        "dxtbx.saturation = dxtbx.command_line.saturation:run",
        "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
        "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
        "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
      ],
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "dxtbx",
      "version": "3.25.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libboost-python-devel",
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "hdf5",
        "h5py",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "dxtbx",
      "patches": null,
      "sha256": "25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae",
      "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest $SRC_DIR/dxtbx/tests --regression",
        "pip check"
      ],
      "imports": [
        "dxtbx.ext"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip"
      ],
      "source_files": [
        "dxtbx/tests",
        "dxtbx/conftest.py"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
      "dev_url": "https://github.com/cctbx/dxtbx",
      "doc_url": "https://dials.github.io/documentation/index.html",
      "home": "https://github.com/cctbx/dxtbx",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "dxtbx/LICENSE.txt",
      "summary": "Diffraction Experiment Toolbox"
    },
    "build": {
      "entry_points": [
        "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
        "cxi.image_average = dxtbx.command_line.image_average:run",
        "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
        "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
        "dxtbx.any2nexus = dxtbx.command_line.any2nexus:run",
        "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
        "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
        "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
        "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
        "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
        "dxtbx.image_average = dxtbx.command_line.image_average:run",
        "dxtbx.install_format = dxtbx.command_line.install_format:run",
        "dxtbx.overload = dxtbx.command_line.overload:run",
        "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
        "dxtbx.print_header = dxtbx.command_line.print_header:run",
        "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
        "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
        "dxtbx.saturation = dxtbx.command_line.saturation:run",
        "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
        "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
        "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
      ],
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "dxtbx",
      "version": "3.25.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libboost-python-devel",
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "hdf5",
        "h5py",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "dxtbx",
      "patches": null,
      "sha256": "25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae",
      "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest $SRC_DIR/dxtbx/tests --regression",
        "pip check"
      ],
      "imports": [
        "dxtbx.ext"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip"
      ],
      "source_files": [
        "dxtbx/tests",
        "dxtbx/conftest.py"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "dxtbx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/dxtbx.json"
  },
  "raw_meta_yaml": "{% set name = \"dxtbx\" %}\n{% set version = \"3.25.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cctbx/dxtbx/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae\n  folder: dxtbx\n  patches:\n    - patch_windows_entrypoint.diff  # [win]\n    - patch_nxmx_xfail.diff  # [win]\n    - patch_nxmx_get_raw_data_single_panel_xfail.diff  # [win]\n\nbuild:\n  skip: true  # [py<311]\n  number: 3\n  entry_points:\n    - cxi.image2pickle = dxtbx.command_line.image2pickle:run\n    - cxi.image_average = dxtbx.command_line.image_average:run\n    - dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run\n    - dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run\n    - dxtbx.any2nexus = dxtbx.command_line.any2nexus:run\n    - dxtbx.depends_on = dxtbx.command_line.depends_on:run\n    - dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run\n    - dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run\n    - dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run\n    - dxtbx.image2pickle = dxtbx.command_line.image2pickle:run\n    - dxtbx.image_average = dxtbx.command_line.image_average:run\n    - dxtbx.install_format = dxtbx.command_line.install_format:run\n    - dxtbx.overload = dxtbx.command_line.overload:run\n    - dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run\n    - dxtbx.print_header = dxtbx.command_line.print_header:run\n    - dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run\n    - dxtbx.radial_average = dxtbx.command_line.radial_average:run\n    - dxtbx.saturation = dxtbx.command_line.saturation:run\n    - dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run\n    - dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run\n    - dxtbx.show_registry = dxtbx.command_line.show_registry:run\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n  host:\n    - libboost-python-devel\n    - cctbx-base >=2025.5\n    - hatchling\n    - hdf5\n    - numpy\n    - pip\n    - pybind11\n    - python\n    - setuptools\n  run:\n    - {{ pin_compatible('cctbx-base') }}\n    - {{ pin_compatible('hdf5') }}\n    - h5py\n    - hdf5plugin\n    - matplotlib-base\n    - natsort\n    - {{ pin_compatible('numpy') }}\n    - nxmx >=0.0.4\n    - ordered-set\n    - pint\n    - pycbf\n    - python\n    - python-dateutil >=2.7.0\n    - scipy\n    - tqdm\n\ntest:\n  source_files:\n    - dxtbx/tests\n    - dxtbx/conftest.py\n  requires:\n    - dials-data\n    - pytest\n    - pytest-mock\n    - pip\n  imports:\n    - dxtbx.ext\n  commands:\n    - pytest $SRC_DIR/dxtbx/tests --regression  # [not win]\n    - pytest %SRC_DIR%/dxtbx/tests --regression  # [win]\n    - pip check\n\nabout:\n  home: https://github.com/cctbx/dxtbx\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: dxtbx/LICENSE.txt\n  summary: Diffraction Experiment Toolbox\n  description: |\n    A cctbx-style toolbox to describe single-crystal diffraction experiments,\n    where a monochromatic beam is used to illuminate a sample which is rotated\n    during the exposure and diffraction recorded on a flat area detector.\n  doc_url: https://dials.github.io/documentation/index.html\n  dev_url: https://github.com/cctbx/dxtbx\n\nextra:\n  recipe-maintainers:\n    - jbeilstenedmands\n    - ndevenish\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cctbx-base",
      "cmake",
      "cxx_compiler_stub",
      "h5py",
      "hatchling",
      "hdf5",
      "hdf5plugin",
      "libboost-python-devel",
      "matplotlib-base",
      "natsort",
      "ninja",
      "numpy",
      "nxmx",
      "ordered-set",
      "pint",
      "pip",
      "pybind11",
      "pycbf",
      "python",
      "python-dateutil",
      "scipy",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cctbx-base",
        "cxx_compiler_stub",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cctbx-base",
        "cxx_compiler_stub",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  },
  "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz",
  "version": "3.25.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/dxtbx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "A cctbx-style toolbox to describe single-crystal diffraction experiments,\nwhere a monochromatic beam is used to illuminate a sample which is rotated\nduring the exposure and diffraction recorded on a flat area detector.\n",
      "dev_url": "https://github.com/cctbx/dxtbx",
      "doc_url": "https://dials.github.io/documentation/index.html",
      "home": "https://github.com/cctbx/dxtbx",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "dxtbx/LICENSE.txt",
      "summary": "Diffraction Experiment Toolbox"
    },
    "build": {
      "entry_points": [
        "cxi.image2pickle = dxtbx.command_line.image2pickle:run",
        "cxi.image_average = dxtbx.command_line.image_average:run",
        "dev.dxtbx.debug_memory = dxtbx.command_line.debug_memory:run",
        "dev.dxtbx.read_sequence = dxtbx.command_line.read_sequence:run",
        "dxtbx.any2nexus = dxtbx.command_line.any2nexus:run",
        "dxtbx.depends_on = dxtbx.command_line.depends_on:run",
        "dxtbx.detector_superpose = dxtbx.command_line.detector_superpose:run",
        "dxtbx.display_parallax_correction = dxtbx.command_line.display_parallax_correction:run",
        "dxtbx.dlsnxs2cbf = dxtbx.command_line.dlsnxs2cbf:run",
        "dxtbx.image2pickle = dxtbx.command_line.image2pickle:run",
        "dxtbx.image_average = dxtbx.command_line.image_average:run",
        "dxtbx.install_format = dxtbx.command_line.install_format:run",
        "dxtbx.overload = dxtbx.command_line.overload:run",
        "dxtbx.plot_detector_models = dxtbx.command_line.plot_detector_models:run",
        "dxtbx.print_header = dxtbx.command_line.print_header:run",
        "dxtbx.print_matching_images = dxtbx.command_line.print_matching_images:run",
        "dxtbx.radial_average = dxtbx.command_line.radial_average:run",
        "dxtbx.saturation = dxtbx.command_line.saturation:run",
        "dxtbx.show_mask_info = dxtbx.command_line.show_mask_info:run",
        "dxtbx.show_matching_formats = dxtbx.command_line.show_matching_formats:run",
        "dxtbx.show_registry = dxtbx.command_line.show_registry:run"
      ],
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "jbeilstenedmands",
        "ndevenish"
      ]
    },
    "package": {
      "name": "dxtbx",
      "version": "3.25.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libboost-python-devel",
        "cctbx-base >=2025.5",
        "hatchling",
        "hdf5",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ],
      "run": [
        "cctbx-base",
        "hdf5",
        "h5py",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx >=0.0.4",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil >=2.7.0",
        "scipy",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "dxtbx",
      "patches": [
        "patch_windows_entrypoint.diff",
        "patch_nxmx_xfail.diff",
        "patch_nxmx_get_raw_data_single_panel_xfail.diff"
      ],
      "sha256": "25cd66211de7cef0cbf260f81a498a573d64299583fe10249243bc01b0f50dae",
      "url": "https://github.com/cctbx/dxtbx/archive/refs/tags/v3.25.0.tar.gz"
    },
    "test": {
      "commands": [
        "pytest %SRC_DIR%/dxtbx/tests --regression",
        "pip check"
      ],
      "imports": [
        "dxtbx.ext"
      ],
      "requires": [
        "dials-data",
        "pytest",
        "pytest-mock",
        "pip"
      ],
      "source_files": [
        "dxtbx/tests",
        "dxtbx/conftest.py"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "hatchling",
        "hdf5",
        "libboost-python-devel",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cctbx-base",
        "h5py",
        "hdf5",
        "hdf5plugin",
        "matplotlib-base",
        "natsort",
        "numpy",
        "nxmx",
        "ordered-set",
        "pint",
        "pycbf",
        "python",
        "python-dateutil",
        "scipy",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dials-data",
        "pip",
        "pytest",
        "pytest-mock"
      ]
    }
  }
}