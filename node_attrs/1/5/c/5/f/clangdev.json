{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\",
          "MINIFORGE_HOME": "C:\\Miniforge",
          "SET_PAGEFILE": "True"
        }
      }
    },
    "bot": {
      "abi_migration_branches": [
        "20.x",
        "19.x"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "clangdev",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-64",
            "sysroot_linux-64",
            "libgcc-devel_linux-64",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-x86_64.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-64",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libgcc-devel_linux-64",
        "libstdcxx-devel_linux-64",
        "llvm-openmp",
        "llvmdev",
        "python",
        "sysroot_linux-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-aarch64",
            "sysroot_linux-aarch64",
            "libgcc-devel_linux-aarch64",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-aarch64.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-aarch64",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-aarch64",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libgcc-devel_linux-aarch64",
        "libstdcxx-devel_linux-aarch64",
        "llvm-openmp",
        "llvmdev",
        "python",
        "sysroot_linux-aarch64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-ppc64le",
            "sysroot_linux-ppc64le",
            "libgcc-devel_linux-ppc64le",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-powerpc64le.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-ppc64le",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-ppc64le",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libgcc-devel_linux-ppc64le",
        "libstdcxx-devel_linux-ppc64le",
        "llvm-openmp",
        "llvmdev",
        "python",
        "sysroot_linux-ppc64le"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-64",
            "sysroot_linux-64",
            "libgcc-devel_linux-64",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-x86_64.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-64",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-aarch64",
            "sysroot_linux-aarch64",
            "libgcc-devel_linux-aarch64",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-aarch64.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-aarch64",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so.21.1"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.so"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so.13"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so.13",
            "test ! -f $PREFIX/lib/libclang.so",
            "test ! -f $PREFIX/lib/libclang.so.21",
            "test ! -f $PREFIX/lib/libclang.so.21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.so"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.so.21.1",
            "test ! -f $PREFIX/lib/libclang-cpp.so",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "binutils_impl_linux-ppc64le",
            "sysroot_linux-ppc64le",
            "libgcc-devel_linux-ppc64le",
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/linux/clang_rt.crtend-powerpc64le.o"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libstdcxx-devel_linux-ppc64le",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.21.1.dylib"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.dylib"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.13.dylib"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.13.dylib",
            "test ! -f $PREFIX/lib/libclang.dylib",
            "test ! -f $PREFIX/lib/libclang.21.dylib",
            "test ! -f $PREFIX/lib/libclang.21.1.4.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.dylib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "ld64_osx-64 * llvm21_1_*",
            "ld64",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx-devel 21.1",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.21.1.dylib"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.dylib"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.13.dylib"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.13.dylib",
            "test ! -f $PREFIX/lib/libclang.dylib",
            "test ! -f $PREFIX/lib/libclang.21.dylib",
            "test ! -f $PREFIX/lib/libclang.21.1.4.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.dylib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "ld64_osx-arm64 * llvm21_1_*",
            "ld64",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx-devel 21.1",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clangAST.lib exit 1",
            "if not exist %LIBRARY_LIB%\\clangBasic.lib exit 1",
            "if not exist %LIBRARY_INC%\\clang\\Config\\config.h exit 1",
            "if not exist %LIBRARY_INC%\\clang\\Lex\\Lexer.h exit 1",
            "%LIBRARY_BIN%/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "run_exports": null,
          "skip": true,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": null,
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": [
            "if exist %LIBRARY_BIN%\\libclang-cpp.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/bin/libclang-13.dll"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\libclang-13.dll exit 1",
            "if exist %LIBRARY_BIN%\\libclang.dll exit 1",
            "if exist %LIBRARY_LIB%\\libclang.lib exit 1",
            "if exist %LIBRARY_BIN%\\libclang-21.dll exit 1",
            "if exist %LIBRARY_BIN%\\libclang-21.1.4.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/lib/libclang.lib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\libclang.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/lib/clang",
          "Library/bin/clang-21.exe",
          "Library/bin/clang++-21.exe"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4"
          ]
        },
        "script": "install_clang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\include\\stdatomic.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\21\\include\\omp.h exit 1",
            "clang-21 --version",
            "clang++-21 --version",
            "if exist %LIBRARY_BIN%\\clang.exe exit 1",
            "if exist %LIBRARY_BIN%\\clang-cl.exe exit 1",
            "if exist %LIBRARY_BIN%\\clang-cpp.exe exit 1"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.bat",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang"
          ]
        },
        "script": "install_clangxx.bat",
        "test": {
          "commands": [
            "del /s /q \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\Llvm\\x64\\bin\\clang++.exe\"",
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "set \"CONDA_BUILD_SYSROOT=\"",
            "clang++ -v mytest.cxx --target=x86_64-w64-mingw32"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub",
            "gxx_impl_win-64"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "skip": true,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": null,
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": [
            "clang-format-21 --version"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/bin/clang-format.exe"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_clang_format.bat",
        "test": {
          "commands": [
            "clang-format --version",
            "if exist %LIBRARY_BIN%\\c-index-test.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "ucrt",
            "clang-format",
            "libclang13"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.bat",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd",
        "libcxx-devel 19"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      },
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      },
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      },
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      },
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      },
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "name": "clang_packages",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.21.1.dylib"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.dylib"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.13.dylib"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.13.dylib",
            "test ! -f $PREFIX/lib/libclang.dylib",
            "test ! -f $PREFIX/lib/libclang.21.dylib",
            "test ! -f $PREFIX/lib/libclang.21.1.4.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.dylib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "ld64_osx-64 * llvm21_1_*",
            "ld64",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx-devel 21.1",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3"
      ],
      "host": [
        "libcxx-devel 19",
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx-devel",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "ld64",
        "ld64_osx-64",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx",
        "libcxx-devel",
        "llvm-openmp",
        "llvmdev",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clangdev.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclangAST.a",
            "test -f $PREFIX/lib/libclangBasic.a",
            "test -f $PREFIX/include/clang/Config/config.h",
            "test -f $PREFIX/include/clang/Lex/Lexer.h",
            "$PREFIX/bin/clang --version",
            "$PREFIX/bin/clang++ --version",
            "$PREFIX/bin/clang-check --version",
            "$PREFIX/bin/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.21.1.dylib"
        ],
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang-cpp21.1"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang-cpp.dylib"
        ],
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang_cpp.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.13.dylib"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.13.dylib",
            "test ! -f $PREFIX/lib/libclang.dylib",
            "test ! -f $PREFIX/lib/libclang.21.dylib",
            "test ! -f $PREFIX/lib/libclang.21.1.4.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/libclang.dylib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_libclang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang.dylib"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "lib/clang",
          "bin/clang-21",
          "bin/clang++-21"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "llvm 21.1.4",
            "libclang-cpp21.1",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libclang-cpp.21.1.dylib",
            "test ! -f $PREFIX/lib/libclang-cpp.dylib",
            "test -f $PREFIX/lib/clang/21/include/stdatomic.h",
            "test -f $PREFIX/lib/clang/21/include/omp.h",
            "clang-21 --version",
            "clang++-21 --version",
            "test ! -f $PREFIX/bin/clang",
            "test ! -f $PREFIX/bin/clang-cl",
            "test ! -f $PREFIX/bin/clang-cpp"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "ld64_osx-arm64 * llvm21_1_*",
            "ld64",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.sh",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version",
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "host": [
            "clang-21",
            "libcxx-devel 19",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx-devel 21.1",
            "clang"
          ]
        },
        "script": "install_clangxx.sh",
        "test": {
          "commands": [
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "unset CONDA_BUILD_SYSROOT"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format-21"
        ],
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format-21 --version",
            "test ! -f ${PREFIX}/bin/clang-format",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "bin/clang-format"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format-21",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang-cpp21.1",
            "clang-format-21",
            "libcxx >=21.1.4"
          ]
        },
        "script": "install_clang_format.sh",
        "test": {
          "commands": [
            "clang-format --version",
            "test ! -f ${PREFIX}/bin/c-index-test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "make"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "libcxx-devel 21.1",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-format",
            "libclang13",
            "libclang-cpp21.1",
            "libcxx >=21.1.4"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.sh",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "python >3"
      ],
      "host": [
        "libcxx-devel 19",
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx-devel",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "ld64",
        "ld64_osx-arm64",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx",
        "libcxx-devel",
        "llvm-openmp",
        "llvmdev",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "clang",
      "clang-21",
      "clang-format",
      "clang-format-21",
      "clang-tools",
      "clangdev",
      "clangxx",
      "libclang",
      "libclang-cpp",
      "libclang-cpp21.1",
      "libclang13",
      "python-clang"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/clangdev.json"
  },
  "raw_meta_yaml": "{% set version = \"21.1.4\" %}\n{% set major_version = version.split(\".\")[0] %}\n{% set tail_version = version.split(\".\")[-1] %}\n{% set build_number = 0 %}\n\n# always includes minor as of v18, see https://github.com/llvm/llvm-project/issues/76273\n{% set maj_min = major_version ~ \".\" ~ version.split(\".\")[1] %}\n\n# construct full sover, which contains extra suffixes for rc/dev builds\n# as of LLVM 19, we expect an \"-rcX\" suffix for the release candidates\n{% set extra = \"-\" ~ tail_version if tail_version not in \"0123456789\" else \"\" %}\n{% set extra = \"git\" if tail_version|trim(\"0123456789\") == \"dev\" else extra %}\n{% set sover = maj_min ~ extra %}\n\n{% if libclang_soversion is not defined %}\n# see https://github.com/llvm/llvm-project/blob/release/18.x/clang/tools/libclang/CMakeLists.txt\n{% set libclang_soversion = \"13\" %}\n{% endif %}\n\npackage:\n  name: clang_packages\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n    sha256: 3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c\n    patches:\n      - patches/0001-Find-conda-gcc-installation.patch\n      - patches/0002-Fix-sysroot-detection-for-linux.patch\n      - patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch\n      - patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch\n      - patches/0005-Set-VERSION-in-osx-as-well.patch\n      - patches/0006-Fix-crosscompiling-LLVM-tools.patch\n      - patches/0007-set-libclang-SOVERSION-unconditionally.patch\n      - patches/0008-Make-PIE-default-on-macOS-too.patch\n      - patches/0009-Find-ROCm-device-library-in-conda-layout.patch\n      - patches/0010-Add-conda-mingw-paths.patch\n    # name folder for easier deletion; we do the equivalent of downloading\n    # the subproject sources, so the work folder then has clang in it;\n    # for details see build scripts\n    folder: llvm-project\n\nbuild:\n  number: {{ build_number }}\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja  # [win]\n    - make   # [unix]\n    # \"compiling .pyc files\" fails without this\n    - python >3\n    - llvmdev {{ version }}     # [build_platform != target_platform]\n    - libxml2-devel             # [build_platform != target_platform]\n    - zlib                      # [build_platform != target_platform]\n    - zstd                      # [build_platform != target_platform]\n  host:\n    - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n    - llvmdev {{ version }}\n    - libxml2-devel\n    - zlib\n    - zstd\n\noutputs:\n  - name: clangdev\n    script: install_clangdev.sh  # [unix]\n    script: install_clangdev.bat  # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel     # [unix]\n        - zlib              # [unix]\n        - zstd              # [unix]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        # cannot pin to `cxx_compiler_version` here,\n        # because clangxx pins libcxx-devel to `maj_min`\n        - libcxx-devel {{ maj_min }}    # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"clang-tools\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - llvmdev {{ version }}\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - cmake\n      files:\n        - mytest.c\n      commands:\n        # static library\n        - test -f $PREFIX/lib/libclangAST.a                         # [unix]\n        - test -f $PREFIX/lib/libclangBasic.a                       # [unix]\n        - if not exist %LIBRARY_LIB%\\clangAST.lib exit 1            # [win]\n        - if not exist %LIBRARY_LIB%\\clangBasic.lib exit 1          # [win]\n\n        # headers\n        - test -f $PREFIX/include/clang/Config/config.h             # [unix]\n        - test -f $PREFIX/include/clang/Lex/Lexer.h                 # [unix]\n        - if not exist %LIBRARY_INC%\\clang\\Config\\config.h exit 1   # [win]\n        - if not exist %LIBRARY_INC%\\clang\\Lex\\Lexer.h exit 1       # [win]\n\n        # symlinks\n        - $PREFIX/bin/clang --version           # [unix]\n        - $PREFIX/bin/clang++ --version         # [unix]\n        - $PREFIX/bin/clang-check --version     # [unix]\n\n        # basic compilation\n        - $PREFIX/bin/clang -v -c mytest.c      # [unix]\n        - '%LIBRARY_BIN%/clang -v -c mytest.c'  # [win]\n\n  - name: libclang-cpp{{ maj_min }}\n    script: install_libclang_cpp.sh  # [unix]\n    files:\n      - lib/libclang-cpp.so.{{ sover }}     # [linux]\n      - lib/libclang-cpp.{{ sover }}.dylib  # [osx]\n    build:\n      skip: true  # [win]\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, max_pin=\"x.x\") }}   # [unix]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel     # [unix]\n        - zlib              # [unix]\n        - zstd              # [unix]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - llvm {{ version }}\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        # presence of versioned library\n        - test -f $PREFIX/lib/libclang-cpp.so.{{ sover }}       # [linux]\n        - test -f $PREFIX/lib/libclang-cpp.{{ sover }}.dylib    # [osx]\n\n        # absence of unversioned library\n        - test ! -f $PREFIX/lib/libclang-cpp.so                 # [linux]\n        - test ! -f $PREFIX/lib/libclang-cpp.dylib              # [osx]\n\n  - name: libclang-cpp\n    # note that this is just an empty wrapper on windows\n    script: install_libclang_cpp.sh  # [unix]\n    files:                      # [unix]\n      - lib/libclang-cpp.so     # [linux]\n      - lib/libclang-cpp.dylib  # [osx]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:   # [unix]\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, max_pin=\"x.x\") }}   # [unix]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel     # [unix]\n        - zlib              # [unix]\n        - zstd              # [unix]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - llvm {{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, exact=True) }}  # [unix]\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, exact=True) }}  # [unix]\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        # presence on unix\n        - test -f $PREFIX/lib/libclang-cpp.so                     # [linux]\n        - test -f $PREFIX/lib/libclang-cpp.dylib                  # [osx]\n\n        # absence on windows\n        - if exist %LIBRARY_BIN%\\libclang-cpp.dll exit 1          # [win]\n\n  - name: libclang{{ libclang_soversion }}\n    script: install_libclang.sh  # [unix]\n    script: install_libclang.bat  # [win]\n    files:\n      - Library/bin/libclang-{{ libclang_soversion }}.dll   # [win]\n      - lib/libclang.so.{{ libclang_soversion }}            # [linux]\n      - lib/libclang.{{ libclang_soversion }}.dylib         # [osx]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        # note that the name (e.g. libclang13) does not necessarily\n        # match the version lower bound (e.g. >=14.0.0)\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                     # [win]\n        - make                      # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - llvm {{ version }}\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        # presence of versioned libraries\n        - test -f $PREFIX/lib/libclang.so.{{ libclang_soversion }}                  # [linux]\n        - test -f $PREFIX/lib/libclang.{{ libclang_soversion }}.dylib               # [osx]\n        - if not exist %LIBRARY_BIN%\\libclang-{{ libclang_soversion }}.dll exit 1   # [win]\n\n        # absence of unversioned libraries\n        - test ! -f $PREFIX/lib/libclang.so                                 # [linux]\n        - test ! -f $PREFIX/lib/libclang.dylib                              # [osx]\n        - if exist %LIBRARY_BIN%\\libclang.dll exit 1                        # [win]\n        - if exist %LIBRARY_LIB%\\libclang.lib exit 1                        # [win]\n\n        {% if libclang_soversion != major_version %}\n        # absence of major version if soversion is different\n        - test ! -f $PREFIX/lib/libclang.so.{{ major_version }}             # [linux]\n        - test ! -f $PREFIX/lib/libclang.{{ major_version }}.dylib          # [osx]\n        - if exist %LIBRARY_BIN%\\libclang-{{ major_version }}.dll exit 1    # [win]\n\n        # same for full version (i.e. with major that doesn't match soversion)\n        - test ! -f $PREFIX/lib/libclang.so.{{ version }}                   # [linux]\n        - test ! -f $PREFIX/lib/libclang.{{ version }}.dylib                # [osx]\n        - if exist %LIBRARY_BIN%\\libclang-{{ version }}.dll exit 1          # [win]\n        {% endif %}\n\n  - name: libclang\n    script: install_libclang.sh  # [unix]\n    script: install_libclang.bat  # [win]\n    files:\n      - Library/lib/libclang.lib  # [win]\n      - lib/libclang.so           # [linux]\n      - lib/libclang.dylib        # [osx]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      run_exports:\n        # note that the name (e.g. libclang13) does not necessarily\n        # match the version lower bound (e.g. >=14.0.0)\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel     # [unix]\n        - zlib              # [unix]\n        - zstd              # [unix]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                     # [win]\n        - make                      # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - llvm {{ version }}\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, exact=True) }}\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        - test -f $PREFIX/lib/libclang.so                   # [linux]\n        - test -f $PREFIX/lib/libclang.dylib                # [osx]\n        - if not exist %LIBRARY_LIB%\\libclang.lib exit 1    # [win]\n\n  - name: clang-{{ major_version }}\n    script: install_clang.sh  # [unix]\n    script: install_clang.bat  # [win]\n    files:\n      - lib/clang                                    # [unix]\n      - bin/clang-{{ major_version }}                # [unix]\n      - bin/clang++-{{ major_version }}              # [unix]\n      - Library/lib/clang                            # [win]\n      - Library/bin/clang-{{ major_version }}.exe    # [win]\n      - Library/bin/clang++-{{ major_version }}.exe  # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel\n        - zlib     # [unix]\n        - zstd     # [unix]\n        - llvm-openmp\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja                     # [win]\n        - make                      # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - llvm {{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, exact=True) }}  # [unix]\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n        - compiler-rt{{ major_version }} {{ version }}\n        - llvm-openmp {{ version }}\n      run:\n        - compiler-rt{{ major_version }} {{ version }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, exact=True) }}  # [unix]\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      requires:\n        - llvm-openmp {{ version }}\n      commands:\n        # presence of versioned libraries\n        - test -f $PREFIX/lib/libclang-cpp.so.{{ sover }}       # [linux]\n        - test -f $PREFIX/lib/libclang-cpp.{{ sover }}.dylib    # [osx]\n\n        # absence of unversioned libraries\n        - test ! -f $PREFIX/lib/libclang-cpp.so                 # [linux]\n        - test ! -f $PREFIX/lib/libclang-cpp.dylib              # [osx]\n\n        # headers\n        - test -f $PREFIX/lib/clang/{{ major_version }}/include/stdatomic.h                 # [unix]\n        - test -f $PREFIX/lib/clang/{{ major_version }}/include/omp.h                       # [unix]\n        - if not exist %LIBRARY_LIB%\\clang\\{{ major_version }}\\include\\stdatomic.h exit 1   # [win]\n        - if not exist %LIBRARY_LIB%\\clang\\{{ major_version }}\\include\\omp.h exit 1         # [win]\n\n        # versioned binaries\n        - clang-{{ major_version }} --version\n        - clang++-{{ major_version }} --version\n\n        # absence of unversioned binaries\n        - test ! -f $PREFIX/bin/clang                   # [unix]\n        - test ! -f $PREFIX/bin/clang-cl                # [unix]\n        - test ! -f $PREFIX/bin/clang-cpp               # [unix]\n        - if exist %LIBRARY_BIN%\\clang.exe exit 1       # [win]\n        - if exist %LIBRARY_BIN%\\clang-cl.exe exit 1    # [win]\n        - if exist %LIBRARY_BIN%\\clang-cpp.exe exit 1   # [win]\n\n  - name: clang\n    script: install_clang_symlinks.sh  # [unix]\n    script: install_clang_symlinks.bat  # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      # for run-exports\n      build:                        # [win]\n        - {{ stdlib('c') }}         # [win]\n        - {{ compiler('cxx') }}     # [win]\n      host:\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - binutils_impl_{{ target_platform }}  # [linux]\n        - sysroot_{{ target_platform }}        # [linux]\n        - libgcc-devel_{{ target_platform }}   # [linux]\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n        - ld64_{{ target_platform }} * llvm{{ maj_min.replace(\".\", \"_\") }}_*    # [osx]\n        - ld64                                 # [osx]\n        - llvm-openmp >={{ version }}\n    test:\n      commands:\n        - clang --version\n        - clang-cl --version\n        - clang-cpp --version\n\n        # test that compiler-rt bits are available where clang expects them to be\n        - test -f $PREFIX/lib/clang/{{ major_version }}/lib/linux/clang_rt.crtend-x86_64.o       # [linux and x86_64]\n        - test -f $PREFIX/lib/clang/{{ major_version }}/lib/linux/clang_rt.crtend-aarch64.o      # [linux and aarch64]\n        - test -f $PREFIX/lib/clang/{{ major_version }}/lib/linux/clang_rt.crtend-powerpc64le.o  # [linux and ppc64le]\n        - test -f $PREFIX/lib/clang/{{ major_version }}/lib/darwin/libclang_rt.osx.a             # [osx]\n        - if not exist %LIBRARY_LIB%\\clang\\{{ major_version }}\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1  # [win and x64_64]\n\n  - name: clangxx\n    script: install_clangxx.sh  # [unix]\n    script: install_clangxx.bat  # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      # for run-exports\n      build:                        # [win]\n        - {{ stdlib('c') }}         # [win]\n        - {{ compiler('cxx') }}     # [win]\n      host:\n        - {{ pin_subpackage(\"clang-\" ~ major_version, exact=True) }}\n        # Use the same requirements as the top-level requirements\n        - libcxx-devel {{ cxx_compiler_version }}   # [osx]\n        - llvmdev {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - libstdcxx-devel_{{ target_platform }}  # [linux]\n        # only minor-pin to avoid issues when building new libcxx versions\n        - libcxx-devel {{ maj_min }}             # [osx]\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n    test:\n      requires:\n        - {{ compiler(\"cxx\") }}\n        - gxx_impl_{{ target_platform }}  # [win64]\n      files:\n        - mytest.cxx\n      commands:\n        # avoid CMake picking up random clang in image when using unactivated compilers\n        - del /s /q \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\Llvm\\x64\\bin\\clang++.exe\"  # [win]\n        - clang++ --version\n        - clang++-{{ major_version }} --version\n        - clang++ -v -c mytest.cxx\n        - unset CONDA_BUILD_SYSROOT   # [unix]\n        - set \"CONDA_BUILD_SYSROOT=\"  # [win]\n        - clang++ -v -c mytest.cxx\n        - clang++ -v mytest.cxx --target=x86_64-w64-mingw32  # [win64]\n\n  - name: clang-format-{{ major_version }}\n    script: install_clang_format.sh  # [unix]\n    files:\n      - bin/clang-format-{{ major_version }}                # [unix]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      # for windows, use the clang-format package.\n      skip: true  # [win]\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel     # [unix]\n        - zlib              # [unix]\n        - zstd              # [unix]\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        # cannot pin to `cxx_compiler_version` here,\n        # because clangxx pins libcxx-devel to `maj_min`\n        - libcxx-devel {{ maj_min }}    # [osx]\n        - llvmdev {{ version }}\n        - llvm {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, max_pin=\"x.x\") }}   # [unix]\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        - clang-format-{{ major_version }} --version\n        - test ! -f ${PREFIX}/bin/clang-format                   # [unix]\n        - test ! -f ${PREFIX}/bin/c-index-test                   # [unix]\n\n  - name: clang-format\n    script: install_clang_format.sh  # [unix]\n    script: install_clang_format.bat  # [win]\n    files:\n      - bin/clang-format               # [unix]\n      - Library/bin/clang-format.exe   # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - libxml2-devel\n        - zlib\n        - zstd\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_subpackage(\"clang-format-\" ~ major_version, exact=True) }}      # [unix]\n        # cannot pin to `cxx_compiler_version` here,\n        # because clangxx pins libcxx-devel to `maj_min`\n        - libcxx-devel {{ maj_min }}    # [osx]\n        - llvmdev {{ version }}\n        - llvm {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, max_pin=\"x.x\") }}          # [unix]\n        - {{ pin_subpackage(\"clang-format-\" ~ major_version, exact=True) }}      # [unix]\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n    test:\n      commands:\n        - clang-format --version\n        - test ! -f ${PREFIX}/bin/c-index-test                   # [unix]\n        - if exist %LIBRARY_BIN%\\c-index-test.exe exit 1         # [win]\n\n  - name: clang-tools\n    script: install_clang_tools.sh  # [unix]\n    script: install_clang_tools.bat  # [win]\n    build:\n      track_features:\n        - root         # [variant and variant.startswith(\"root_\")]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n      ignore_run_exports_from:\n        # the build fails if it doesn't find the following, but it's not used\n        - zlib     # [unix]\n        - zstd     # [unix]\n    requirements:\n      build:\n        # \"compiling .pyc files\" fails without this\n        - python >3\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja  # [win]\n        - make   # [unix]\n        - llvmdev {{ version }}     # [build_platform != target_platform]\n      host:\n        - {{ pin_subpackage(\"clang\", exact=True) }}\n        - {{ pin_subpackage(\"clangxx\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\", exact=True) }}\n        - {{ pin_subpackage(\"libclang-cpp\", exact=True) }}\n        - {{ pin_subpackage(\"clang-format\", exact=True) }}\n        # cannot pin to `cxx_compiler_version` here,\n        # because clangxx pins libcxx-devel to `maj_min`\n        - libcxx-devel {{ maj_min }}    # [osx]\n        - llvmdev {{ version }}\n        - llvm {{ version }}\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:\n        - ucrt                                          # [win]\n        - {{ pin_subpackage(\"clang-format\", exact=True) }}\n        - {{ pin_subpackage(\"libclang\" ~ libclang_soversion, max_pin=None) }}\n        - {{ pin_subpackage(\"libclang-cpp\" ~ maj_min, max_pin=\"x.x\") }}   # [unix]\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ version }}    # [osx]\n      run_constrained:\n        - clangdev {{ version }}\n    test:\n      commands:\n        - clang-check --version\n        - clang-tidy --version\n\n  - name: python-clang\n    build:\n      noarch: python\n      # Building this output using this recipe is only supported on unix\n      # It can still be installed on Windows as it is marked as `noarch: python`\n      skip: true  # [not linux64]\n      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }}\n    script: build_python_bindings.sh\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - python >={{ python_min }}\n        - libclang {{ version }}\n    test:\n      requires:\n        - python {{ python_min }}\n      source_files:\n        - clang/bindings/python/tests\n        - clang/bindings/python/examples/cindex\n      imports:\n        - clang\n        - clang.cindex\n      commands:\n        - cd clang/bindings/python\n        - python -m unittest discover -v\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: clang/LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for Clang\n  dev_url: https://github.com/llvm/llvm-project\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - inducer\n    - isuruf\n    - jakirkham\n    - katietz\n    - SylvainCorlay\n    - timsnyder\n    - chrisburr\n    - xhochy\n    - h-vetinari\n  feedstock-name: clangdev\n",
  "req": {
    "__set__": true,
    "elements": [
      "binutils_impl_linux-64",
      "binutils_impl_linux-aarch64",
      "binutils_impl_linux-ppc64le",
      "c_stdlib_stub",
      "clang",
      "clang-21",
      "clang-format",
      "clang-format-21",
      "clang-tools",
      "clangxx",
      "cmake",
      "compiler-rt21",
      "cxx_compiler_stub",
      "ld64",
      "ld64_osx-64",
      "ld64_osx-arm64",
      "libclang",
      "libclang-cpp",
      "libclang-cpp21.1",
      "libclang13",
      "libcxx",
      "libcxx-devel",
      "libgcc-devel_linux-64",
      "libgcc-devel_linux-aarch64",
      "libgcc-devel_linux-ppc64le",
      "libstdcxx-devel_linux-64",
      "libstdcxx-devel_linux-aarch64",
      "libstdcxx-devel_linux-ppc64le",
      "libxml2-devel",
      "llvm",
      "llvm-openmp",
      "llvmdev",
      "make",
      "ninja",
      "python",
      "sysroot_linux-64",
      "sysroot_linux-aarch64",
      "sysroot_linux-ppc64le",
      "ucrt",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx-devel",
        "libxml2-devel",
        "linux-sysroot",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "openmp",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "c_stdlib_stub",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "ctng-compilers",
        "cxx_compiler_stub",
        "ld64",
        "ld64_osx-64",
        "ld64_osx-arm64",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx",
        "libcxx-devel",
        "libgcc-devel_linux-64",
        "libgcc-devel_linux-aarch64",
        "libgcc-devel_linux-ppc64le",
        "libstdcxx-devel_linux-64",
        "libstdcxx-devel_linux-aarch64",
        "libstdcxx-devel_linux-ppc64le",
        "linux-sysroot",
        "llvm-openmp",
        "llvmdev",
        "openmp",
        "python",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "gxx_impl_win-64",
        "llvm-openmp",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "python >3"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21 21.1.4",
        "libclang",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx-devel 19",
        "libcxx-devel 21.1",
        "libxml2-devel",
        "llvm 21.1.4",
        "llvm-openmp 21.1.4",
        "llvmdev 21.1.4",
        "python 3.10",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "clang",
        "clang-21",
        "clang-format",
        "clang-format-21",
        "clang-tools",
        "clangxx",
        "compiler-rt21 21.1.4",
        "ld64",
        "ld64_osx-64 * llvm21_1_*",
        "ld64_osx-arm64 * llvm21_1_*",
        "libclang",
        "libclang 21.1.4",
        "libclang-cpp",
        "libclang-cpp21.1",
        "libclang13",
        "libcxx >=21.1.4",
        "libcxx-devel 21.1",
        "libgcc-devel_linux-64",
        "libgcc-devel_linux-aarch64",
        "libgcc-devel_linux-ppc64le",
        "libstdcxx-devel_linux-64",
        "libstdcxx-devel_linux-aarch64",
        "libstdcxx-devel_linux-ppc64le",
        "llvm-openmp >=21.1.4",
        "llvmdev 21.1.4",
        "python >=3.10",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "gxx_impl_win-64",
        "llvm-openmp 21.1.4",
        "python 3.10"
      ]
    }
  },
  "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz",
  "version": "21.1.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/clangdev.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "clang/LICENSE.TXT",
      "summary": "Development headers and libraries for Clang"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "clangdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "isuruf",
        "jakirkham",
        "katietz",
        "SylvainCorlay",
        "timsnyder",
        "chrisburr",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang",
            "clangxx",
            "clang-tools",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4"
          ]
        },
        "script": "install_clangdev.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clangAST.lib exit 1",
            "if not exist %LIBRARY_LIB%\\clangBasic.lib exit 1",
            "if not exist %LIBRARY_INC%\\clang\\Config\\config.h exit 1",
            "if not exist %LIBRARY_INC%\\clang\\Lex\\Lexer.h exit 1",
            "%LIBRARY_BIN%/clang -v -c mytest.c"
          ],
          "files": [
            "mytest.c"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "run_exports": null,
          "skip": true,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": null,
        "name": "libclang-cpp21.1",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "libclang-cpp",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": [
            "if exist %LIBRARY_BIN%\\libclang-cpp.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/bin/libclang-13.dll"
        ],
        "name": "libclang13",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_libclang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\libclang-13.dll exit 1",
            "if exist %LIBRARY_BIN%\\libclang.dll exit 1",
            "if exist %LIBRARY_LIB%\\libclang.lib exit 1",
            "if exist %LIBRARY_BIN%\\libclang-21.dll exit 1",
            "if exist %LIBRARY_BIN%\\libclang-21.1.4.dll exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "run_exports": [
            "libclang13"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/lib/libclang.lib"
        ],
        "name": "libclang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "clang",
            "libclang13",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libclang13"
          ]
        },
        "script": "install_libclang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\libclang.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "llvm-openmp"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/lib/clang",
          "Library/bin/clang-21.exe",
          "Library/bin/clang++-21.exe"
        ],
        "name": "clang-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "llvm 21.1.4",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd",
            "compiler-rt21 21.1.4",
            "llvm-openmp 21.1.4"
          ],
          "run": [
            "compiler-rt21 21.1.4"
          ]
        },
        "script": "install_clang.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\include\\stdatomic.h exit 1",
            "if not exist %LIBRARY_LIB%\\clang\\21\\include\\omp.h exit 1",
            "clang-21 --version",
            "clang++-21 --version",
            "if exist %LIBRARY_BIN%\\clang.exe exit 1",
            "if exist %LIBRARY_BIN%\\clang-cl.exe exit 1",
            "if exist %LIBRARY_BIN%\\clang-cpp.exe exit 1"
          ],
          "requires": [
            "llvm-openmp 21.1.4"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang-21",
            "llvm-openmp >=21.1.4"
          ]
        },
        "script": "install_clang_symlinks.bat",
        "test": {
          "commands": [
            "clang --version",
            "clang-cl --version",
            "clang-cpp --version"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clangxx",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "clang-21",
            "llvmdev 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "clang"
          ]
        },
        "script": "install_clangxx.bat",
        "test": {
          "commands": [
            "del /s /q \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\Llvm\\x64\\bin\\clang++.exe\"",
            "clang++ --version",
            "clang++-21 --version",
            "clang++ -v -c mytest.cxx",
            "set \"CONDA_BUILD_SYSROOT=\"",
            "clang++ -v mytest.cxx --target=x86_64-w64-mingw32"
          ],
          "files": [
            "mytest.cxx"
          ],
          "requires": [
            "cxx_compiler_stub",
            "gxx_impl_win-64"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "skip": true,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": null,
        "name": "clang-format-21",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": [
            "clang-format-21 --version"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "string": "default_h1234567_0",
          "track_features": null
        },
        "files": [
          "Library/bin/clang-format.exe"
        ],
        "name": "clang-format",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_clang_format.bat",
        "test": {
          "commands": [
            "clang-format --version",
            "if exist %LIBRARY_BIN%\\c-index-test.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": null,
          "string": "default_h1234567_0",
          "track_features": null
        },
        "name": "clang-tools",
        "requirements": {
          "build": [
            "python >3",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "clang",
            "clangxx",
            "libclang",
            "libclang-cpp",
            "clang-format",
            "llvmdev 21.1.4",
            "llvm 21.1.4",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "ucrt",
            "clang-format",
            "libclang13"
          ],
          "run_constrained": [
            "clangdev 21.1.4"
          ]
        },
        "script": "install_clang_tools.bat",
        "test": {
          "commands": [
            "clang-check --version",
            "clang-tidy --version"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true,
          "string": "default_h1234567_0"
        },
        "name": "python-clang",
        "requirements": {
          "host": [
            "python 3.10"
          ],
          "run": [
            "python >=3.10",
            "libclang 21.1.4"
          ]
        },
        "script": "build_python_bindings.sh",
        "test": {
          "commands": [
            "cd clang/bindings/python",
            "python -m unittest discover -v"
          ],
          "imports": [
            "clang",
            "clang.cindex"
          ],
          "requires": [
            "python 3.10"
          ],
          "source_files": [
            "clang/bindings/python/tests",
            "clang/bindings/python/examples/cindex"
          ]
        }
      }
    ],
    "package": {
      "name": "clang_packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >3"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "llvm-project",
        "patches": [
          "patches/0001-Find-conda-gcc-installation.patch",
          "patches/0002-Fix-sysroot-detection-for-linux.patch",
          "patches/0003-clang-add-conda-specific-env-var-CONDA_BUILD_SYSROOT.patch",
          "patches/0004-Fix-normalizeProgramName-s-handling-of-dots-outside-.patch",
          "patches/0005-Set-VERSION-in-osx-as-well.patch",
          "patches/0006-Fix-crosscompiling-LLVM-tools.patch",
          "patches/0007-set-libclang-SOVERSION-unconditionally.patch",
          "patches/0008-Make-PIE-default-on-macOS-too.patch",
          "patches/0009-Find-ROCm-device-library-in-conda-layout.patch",
          "patches/0010-Add-conda-mingw-paths.patch"
        ],
        "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
        "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang13",
        "libxml2-devel",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "python",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clang-21",
        "clang-format",
        "clang-tools",
        "clangxx",
        "compiler-rt21",
        "libclang",
        "libclang-cpp",
        "libclang13",
        "llvm-openmp",
        "llvmdev",
        "python",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "gxx_impl_win-64",
        "llvm-openmp",
        "python"
      ]
    }
  }
}