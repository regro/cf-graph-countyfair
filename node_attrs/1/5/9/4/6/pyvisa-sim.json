{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pyvisa-sim",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PyVISA started as a wrapper for the NI-VISA library and therefore you need to install\nthe National Instruments VISA library in your system. This works most of the time,\nfor most people. But sometimes you need to test PyVISA without the physical devices\nor even without NI-VISA.\n\nStarting from version 1.6, PyVISA allows to use different backends. These backends can\nbe dynamically loaded. PyVISA-sim is one of such backends. It implements most of the\nmethods for Message Based communication (Serial/USB/GPIB/Ethernet) in a simulated\nenvironment. The behaviour of simulated devices can be controlled by a simple plain\ntext configuration file.\n",
      "dev_url": "https://github.com/pyvisa/pyvisa-sim",
      "doc_url": "https://pyvisa.readthedocs.io/projects/pyvisa-sim/",
      "home": "https://github.com/pyvisa/pyvisa-sim",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Simulated backend for PyVISA implementing TCPIP, GPIB, RS232, and USB resources"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": [
        "PYTHON -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "MatthieuDartiailh",
        "mtsolmn"
      ]
    },
    "package": {
      "name": "pyvisa-sim",
      "version": "0.6.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools",
        "setuptools_scm"
      ],
      "run": [
        "python >=3.9",
        "pyvisa >=1.11.0",
        "PyYAML",
        "stringparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9076a16912a8114b43c44b1d32894fc1f132d4389d8b2b719af62241e42161c1",
      "url": "https://pypi.org/packages/source/P/PyVISA-sim/PyVISA-sim-0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -c \"import pyvisa; rm = pyvisa.ResourceManager('@sim'); rm.list_resources(); inst = rm.open_resource('ASRL1::INSTR', read_termination='\\n'); print(inst.query('?IDN'))\""
      ],
      "imports": [
        "pyvisa_sim",
        "pyvisa_sim.testsuite"
      ],
      "requires": [
        "pip",
        "pyvisa >=1.11.0",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python",
        "pyvisa",
        "pyyaml",
        "stringparser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pyvisa"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PyVISA started as a wrapper for the NI-VISA library and therefore you need to install\nthe National Instruments VISA library in your system. This works most of the time,\nfor most people. But sometimes you need to test PyVISA without the physical devices\nor even without NI-VISA.\n\nStarting from version 1.6, PyVISA allows to use different backends. These backends can\nbe dynamically loaded. PyVISA-sim is one of such backends. It implements most of the\nmethods for Message Based communication (Serial/USB/GPIB/Ethernet) in a simulated\nenvironment. The behaviour of simulated devices can be controlled by a simple plain\ntext configuration file.\n",
      "dev_url": "https://github.com/pyvisa/pyvisa-sim",
      "doc_url": "https://pyvisa.readthedocs.io/projects/pyvisa-sim/",
      "home": "https://github.com/pyvisa/pyvisa-sim",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Simulated backend for PyVISA implementing TCPIP, GPIB, RS232, and USB resources"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": [
        "PYTHON -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "MatthieuDartiailh",
        "mtsolmn"
      ]
    },
    "package": {
      "name": "pyvisa-sim",
      "version": "0.6.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools",
        "setuptools_scm"
      ],
      "run": [
        "python >=3.9",
        "pyvisa >=1.11.0",
        "PyYAML",
        "stringparser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9076a16912a8114b43c44b1d32894fc1f132d4389d8b2b719af62241e42161c1",
      "url": "https://pypi.org/packages/source/P/PyVISA-sim/PyVISA-sim-0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -c \"import pyvisa; rm = pyvisa.ResourceManager('@sim'); rm.list_resources(); inst = rm.open_resource('ASRL1::INSTR', read_termination='\\n'); print(inst.query('?IDN'))\""
      ],
      "imports": [
        "pyvisa_sim",
        "pyvisa_sim.testsuite"
      ],
      "requires": [
        "pip",
        "pyvisa >=1.11.0",
        "python 3.9"
      ]
    }
  },
  "name": "pyvisa-sim",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyvisa-sim"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyvisa-sim.json"
  },
  "raw_meta_yaml": "{% set name = \"PyVISA-sim\" %}\n{% set version = \"0.6.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 9076a16912a8114b43c44b1d32894fc1f132d4389d8b2b719af62241e42161c1\n\nbuild:\n  noarch: python\n  number: 1\n  script:\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n    - setuptools_scm\n  run:\n    - python >={{ python_min }}\n    - pyvisa >=1.11.0\n    - PyYAML\n    - stringparser\n\ntest:\n  imports:\n    - pyvisa_sim\n    - pyvisa_sim.testsuite\n  commands:\n    - pip check\n    - python -c \"import pyvisa; rm = pyvisa.ResourceManager('@sim'); rm.list_resources(); inst = rm.open_resource('ASRL1::INSTR', read_termination='\\n'); print(inst.query('?IDN'))\"\n  requires:\n    - pip\n    - pyvisa >=1.11.0\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/pyvisa/pyvisa-sim\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Simulated backend for PyVISA implementing TCPIP, GPIB, RS232, and USB resources'\n  description: |\n    PyVISA started as a wrapper for the NI-VISA library and therefore you need to install\n    the National Instruments VISA library in your system. This works most of the time, \n    for most people. But sometimes you need to test PyVISA without the physical devices \n    or even without NI-VISA.\n\n    Starting from version 1.6, PyVISA allows to use different backends. These backends can \n    be dynamically loaded. PyVISA-sim is one of such backends. It implements most of the \n    methods for Message Based communication (Serial/USB/GPIB/Ethernet) in a simulated \n    environment. The behaviour of simulated devices can be controlled by a simple plain \n    text configuration file.\n  doc_url: https://pyvisa.readthedocs.io/projects/pyvisa-sim/\n  dev_url: https://github.com/pyvisa/pyvisa-sim\n\nextra:\n  recipe-maintainers:\n    - MatthieuDartiailh\n    - mtsolmn\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "python",
      "pyvisa",
      "pyyaml",
      "setuptools",
      "setuptools_scm",
      "stringparser"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python",
        "pyvisa",
        "pyyaml",
        "stringparser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pyvisa"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "PyYAML",
        "python >=3.9",
        "pyvisa >=1.11.0",
        "stringparser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "pyvisa >=1.11.0"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/P/PyVISA-sim/PyVISA-sim-0.6.0.tar.gz",
  "version": "0.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyvisa-sim.json"
  }
}