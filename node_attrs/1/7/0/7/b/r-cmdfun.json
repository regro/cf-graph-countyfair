{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-cmdfun",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework for building function calls to seamlessly interface with shell commands by allowing lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling user-specific paths to tool installs or secrets like API keys. Its focus is to equally serve package builders who wish to wrap command line software, and to help analysts stay inside R when they might usually leave to execute non-R software."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-cmdfun",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r.utils",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ],
      "run": [
        "r-base",
        "r-r.utils",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7288d35777260156bf67ea0c036af12e3130b51378f80a9fc5955111e1c16cdd",
      "url": [
        "https://cran.r-project.org/src/contrib/cmdfun_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/cmdfun/cmdfun_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('cmdfun')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework for building function calls to seamlessly interface with shell commands by allowing lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling user-specific paths to tool installs or secrets like API keys. Its focus is to equally serve package builders who wish to wrap command line software, and to help analysts stay inside R when they might usually leave to execute non-R software."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-cmdfun",
      "version": "1.0.2"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r.utils",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ],
      "run": [
        "r-base",
        "r-r.utils",
        "r-magrittr",
        "r-purrr",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7288d35777260156bf67ea0c036af12e3130b51378f80a9fc5955111e1c16cdd",
      "url": [
        "https://cran.r-project.org/src/contrib/cmdfun_1.0.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/cmdfun/cmdfun_1.0.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('cmdfun')\""
      ]
    }
  },
  "name": "r-cmdfun",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-cmdfun"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-cmdfun.json"
  },
  "raw_meta_yaml": "{% set version = '1.0.2' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-cmdfun\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/cmdfun_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/cmdfun/cmdfun_{{ version }}.tar.gz\n  sha256: 7288d35777260156bf67ea0c036af12e3130b51378f80a9fc5955111e1c16cdd\n\nbuild:\n  number: 3\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-r.utils\n    - r-magrittr\n    - r-purrr\n    - r-rlang\n    - r-testthat\n    - r-usethis\n  run:\n    - r-base\n    - r-r.utils\n    - r-magrittr\n    - r-purrr\n    - r-rlang\n    - r-testthat\n    - r-usethis\n\ntest:\n  commands:\n    - $R -e \"library('cmdfun')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('cmdfun')\\\"\"  # [win]\n\nabout:\n  home: https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun\n  license: MIT\n  summary: Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework\n    for building function calls to seamlessly interface with shell commands by allowing\n    lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling\n    user-specific paths to tool installs or secrets like API keys. Its focus is to equally\n    serve package builders who wish to wrap command line software, and to help analysts\n    stay inside R when they might usually leave to execute non-R software.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: cmdfun\n# Type: Package\n# Title: Framework for Building Interfaces to Shell Commands\n# Version: 1.0.2\n# Authors@R: person(\"Spencer\", \"Nystrom\", email = \"nystromdev@gmail.com\", role = c(\"aut\", \"cre\", \"cph\"), comment = c(ORCID = \"0000-0003-1000-1579\"))\n# Description: Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework for building function calls to seamlessly interface with shell commands by allowing lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling user-specific paths to tool installs or secrets like API keys. Its focus is to equally serve package builders who wish to wrap command line software, and to help analysts stay inside R when they might usually leave to execute non-R software.\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# LazyData: true\n# Imports: magrittr, purrr, R.utils, rlang, testthat, usethis, utils\n# RoxygenNote: 7.0.2\n# Suggests: cli, covr, knitr, processx, rmarkdown\n# VignetteBuilder: knitr\n# URL: https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun\n# BugReports: https://github.com/snystrom/cmdfun\n# NeedsCompilation: no\n# Packaged: 2020-10-02 14:16:21 UTC; snystrom\n# Author: Spencer Nystrom [aut, cre, cph] (<https://orcid.org/0000-0003-1000-1579>)\n# Maintainer: Spencer Nystrom <nystromdev@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2020-10-10 09:30:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-magrittr",
      "r-purrr",
      "r-r.utils",
      "r-rlang",
      "r-testthat",
      "r-usethis"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-magrittr",
        "r-purrr",
        "r-r.utils",
        "r-rlang",
        "r-testthat",
        "r-usethis"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/cmdfun_1.0.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/cmdfun/cmdfun_1.0.2.tar.gz"
  ],
  "version": "1.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-cmdfun.json"
  }
}