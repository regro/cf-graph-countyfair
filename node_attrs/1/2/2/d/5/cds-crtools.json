{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "os_version": {
      "linux_64": "cos7"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "90c99c3eacc80cc47b1f4dbd4ef6b0991614e2d1",
  "feedstock_hash_ts": 1747179968,
  "feedstock_name": "cds-crtools",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ligo.org/cds/software/dtt.git",
      "home": "https://git.ligo.org/cds/software/dtt",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "COPYING",
        "COPYING-GPL-3"
      ],
      "summary": "CDS Control Room tools"
    },
    "build": {
      "error_overlinking": true,
      "number": "7"
    },
    "extra": {
      "feedstock-name": "cds-crtools",
      "recipe-maintainers": [
        "duncanmmacleod",
        "evonreis"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.so*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.so*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/libdtt.so*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.so*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.so*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.so*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.so*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.so*",
          "lib/libdmtview.so*",
          "lib/libdttgui.so*",
          "lib/liblidax.so*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.so*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.so*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.so*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
            "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.so*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.so*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/libdtt.so*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.so*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.so*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.so*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.so*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.so*",
          "lib/libdmtview.so*",
          "lib/libdttgui.so*",
          "lib/liblidax.so*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.so*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.so*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.so*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
            "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      }
    ],
    "package": {
      "name": "cds-crtools-split",
      "version": "4.1.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-base-gdstrig",
        "gds-lsmp",
        "gds-root-extensions-crtools",
        "liblzma-devel",
        "nds2-client",
        "readline",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-fix-use-of-unittest.TestCase.assertEquals.patch"
      ],
      "sha256": "bb935ae3442d06f05aa706ad518bcce6f0b591ad8003fd5001c54bc307734c43",
      "url": "https://git.ligo.org/cds/software/dtt/-/archive/4.1.4/4.1.4.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crtools-gui-libraries",
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-base-gdstrig",
        "gds-lsmp",
        "gds-root-extensions-crtools",
        "libawg",
        "libdfm",
        "libdtt",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "liblzma-devel",
        "libsistr",
        "libtestpoint",
        "nds2-client",
        "python",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "chndump",
        "crtools-gui-libraries",
        "dmtviewer",
        "dtt-awggui",
        "dtt-awgstream",
        "dtt-diag",
        "dtt-diagd",
        "dtt-diaggui",
        "dtt-multiawgstream",
        "dtt-tpcmd",
        "dtt-xml-tools",
        "foton",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libexpat",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "libsistr",
        "libtestpoint",
        "lidax",
        "nds2-client",
        "numpy",
        "python",
        "python-awg",
        "python-foton",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://git.ligo.org/cds/software/dtt.git",
      "home": "https://git.ligo.org/cds/software/dtt",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "COPYING",
        "COPYING-GPL-3"
      ],
      "summary": "CDS Control Room tools"
    },
    "build": {
      "error_overlinking": true,
      "number": "7"
    },
    "extra": {
      "feedstock-name": "cds-crtools",
      "recipe-maintainers": [
        "duncanmmacleod",
        "evonreis"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.so*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.so*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/libdtt.so*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.so*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.so*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.so*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.so*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.so*",
          "lib/libdmtview.so*",
          "lib/libdttgui.so*",
          "lib/liblidax.so*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.so*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.so*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.so*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
            "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.so*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.so*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/libdtt.so*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.so*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.so*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.so*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.so*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.so*",
          "lib/libdmtview.so*",
          "lib/libdttgui.so*",
          "lib/liblidax.so*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.so*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.so*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.so*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}",
            "root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      }
    ],
    "package": {
      "name": "cds-crtools-split",
      "version": "4.1.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-base-gdstrig",
        "gds-lsmp",
        "gds-root-extensions-crtools",
        "liblzma-devel",
        "nds2-client",
        "readline",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-fix-use-of-unittest.TestCase.assertEquals.patch"
      ],
      "sha256": "bb935ae3442d06f05aa706ad518bcce6f0b591ad8003fd5001c54bc307734c43",
      "url": "https://git.ligo.org/cds/software/dtt/-/archive/4.1.4/4.1.4.tar.gz"
    }
  },
  "name": "cds-crtools-split",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ligo.org/cds/software/dtt.git",
      "home": "https://git.ligo.org/cds/software/dtt",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "COPYING",
        "COPYING-GPL-3"
      ],
      "summary": "CDS Control Room tools"
    },
    "build": {
      "error_overlinking": true,
      "number": "7"
    },
    "extra": {
      "feedstock-name": "cds-crtools",
      "recipe-maintainers": [
        "duncanmmacleod",
        "evonreis"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      }
    ],
    "package": {
      "name": "cds-crtools-split",
      "version": "4.1.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "liblzma-devel",
        "readline",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-fix-use-of-unittest.TestCase.assertEquals.patch"
      ],
      "sha256": "bb935ae3442d06f05aa706ad518bcce6f0b591ad8003fd5001c54bc307734c43",
      "url": "https://git.ligo.org/cds/software/dtt/-/archive/4.1.4/4.1.4.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crtools-gui-libraries",
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "liblzma-devel",
        "libsistr",
        "libtestpoint",
        "nds2-client",
        "python",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "chndump",
        "crtools-gui-libraries",
        "dmtviewer",
        "dtt-awggui",
        "dtt-awgstream",
        "dtt-diag",
        "dtt-diagd",
        "dtt-diaggui",
        "dtt-multiawgstream",
        "dtt-tpcmd",
        "dtt-xml-tools",
        "foton",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libexpat",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "libsistr",
        "libtestpoint",
        "lidax",
        "nds2-client",
        "numpy",
        "python",
        "python-awg",
        "python-foton",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://git.ligo.org/cds/software/dtt.git",
      "home": "https://git.ligo.org/cds/software/dtt",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "COPYING",
        "COPYING-GPL-3"
      ],
      "summary": "CDS Control Room tools"
    },
    "build": {
      "error_overlinking": true,
      "number": "7"
    },
    "extra": {
      "feedstock-name": "cds-crtools",
      "recipe-maintainers": [
        "duncanmmacleod",
        "evonreis"
      ]
    },
    "outputs": [
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "`libawg` is an interface for opening, configuring, and controlling excitations\non the LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library used to interface with awgtpman, the waveform excitation program used at LIGO"
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/awg*.h",
          "include/gds/dtt/gdsrand.h",
          "lib/libawg.dylib*"
        ],
        "name": "libawg",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libawg${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "DMT is part of the LIGO real-time data acquisition system\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for interfacing with LIGO's data flow manager"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dfm/dataacc.hh",
          "include/gds/dfm/dfm.hh",
          "include/gds/dfm/dfmapi.hh",
          "include/gds/dfm/dfmfunc.hh",
          "include/gds/dfm/dfmlars.hh",
          "include/gds/dfm/dfmnds.hh",
          "include/gds/dfm/dfmsends.hh",
          "include/gds/dfm/dfmsm.hh",
          "include/gds/dfm/dfmtype.hh",
          "include/gds/dfm/udn.hh",
          "lib/libdfm.dylib*"
        ],
        "name": "libdfm",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libfantom",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libdtt` is an interface for creating and running diagnostics tests on\nthe LIGO real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library containing the functionality of LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/libdtt.dylib*"
        ],
        "name": "libdtt",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "expat",
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libawg",
            "libdfm",
            "libexpat",
            "libfantom",
            "libtestpoint",
            "nds2-client",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfantom` is a LIGO data access library for\ntranslating data frames and NDS data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for translation of LIGO data frames and LIGO NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/fantom/",
          "lib/libfantom.dylib*"
        ],
        "name": "libfantom",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ],
          "run": [
            "gds-base",
            "gds-lsmp",
            "readline"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libfilterfile` is an interface for reading and writing foton filter files,\nused at LIGO to encode filter coefficients.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "C++ library for manipulating foton filter files."
        },
        "files": [
          "include/foton/Filter*.hh",
          "lib/libfilterfile.*so*"
        ],
        "name": "libfilterfile",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterfile.so"
          ]
        }
      },
      {
        "about": {
          "description": "Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n`foton`-style filter design windows for one-off filters.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Functions for creating foton-style filter design windows."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/foton/TLGFilter*.hh",
          "lib/libfilterwiz.dylib*"
        ],
        "name": "libfilterwiz",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libsistr` is a library used for streaming custom excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for sending arbitrary data as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/gds/dtt/SIStr.h",
          "lib/libSIStr.dylib*"
        ],
        "name": "libsistr",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "`libtestpoint` allows opening and closing of test points on the LIGO\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Library for manipulating LIGO test points."
        },
        "build": {
          "error_overlinking": false,
          "skip": true
        },
        "files": [
          "include/gds/dtt/testpoint*",
          "lib/libtestpoint.dylib*"
        ],
        "name": "libtestpoint",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base"
          ],
          "run": [
            "gds-base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "The gui libraries provide basic widgets to control room tools apps.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common libraries used by LIGO control room graphical programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "include/dmtview/",
          "include/dtt/dttgui/",
          "include/gds/dfm/dfmgui.hh",
          "include/gds/dfm/montype.hh",
          "include/gds/dfm/TLGDfmChannels.hh",
          "include/gds/dfm/TLGDfmMonitors.hh",
          "include/gds/dfm/TLGDfmSel.hh",
          "include/gds/dfm/TLGDfmServer.hh",
          "include/gds/dfm/TLGDfmTimes.hh",
          "include/gds/libdax/",
          "lib/libdfmgui.dylib*",
          "lib/libdmtview.dylib*",
          "lib/libdttgui.dylib*",
          "lib/liblidax.dylib*"
        ],
        "name": "crtools-gui-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ],
          "run": [
            "gds-base",
            "gds-base-crtools",
            "libdfm",
            "libfantom",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "ROOT dictionaries allow dynamic access to C++ objects.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Common ROOT dictionary libraries used by LIGO control room programs."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "lib/dmtview*.pcm",
          "lib/libRdmtview.dylib*",
          "lib/dttgui*.pcm",
          "lib/libRdttgui.dylib*",
          "lib/filterfile*.pcm",
          "lib/libRfilterfile.dylib*"
        ],
        "name": "crtools-root-libraries",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "libfilterfile",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}"
          ]
        }
      },
      {
        "about": {
          "description": "Library for design, inspection and manipulation of filters and\nLIGO style filter files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings for foton functions"
        },
        "build": {
          "ignore_run_exports": [
            "numpy"
          ]
        },
        "name": "python-foton",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "gds-base",
            "libfilterfile",
            "python",
            "scipy"
          ],
          "run": [
            "gds-base",
            "libfilterfile",
            "numpy >=1.20",
            "python",
            "scipy"
          ]
        },
        "script": "build-python-foton.sh",
        "test": {
          "commands": [
            "(cd src/python/foton/; python foton_test.py)",
            "(cd src/python/foton/; python pydmtsigp_test.py)",
            "(cd src/python/foton/; python pyfilterfile_test.py)",
            "(cd src/python/foton/; python foton_unit_test.py)"
          ],
          "source_files": [
            "src/python/foton/"
          ]
        }
      },
      {
        "about": {
          "description": "Create excitations using LIGO\\'s awgtpman using Python.\nThe awg module allows simple python scripting of excitations\non the LIGO data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Python bindings to libawg"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "python-awg",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "pkg-config"
          ],
          "host": [
            "nds2-client",
            "python",
            "root_base"
          ],
          "run": [
            "libawg",
            "libsistr",
            "libtestpoint",
            "numpy >=1.20",
            "python",
            "root_base",
            "scipy"
          ]
        },
        "script": "build-python-awg.sh",
        "test": {
          "imports": [
            "awg"
          ]
        }
      },
      {
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/chndump"
        ],
        "name": "chndump",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "chndump -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "DMT viewer is used in LIGO control rooms to display DMT data.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for viewing output of DMT monitors."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/dmtviewer"
        ],
        "name": "dmtviewer",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "gds-base-crtools",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "dmtviewer -h"
          ]
        }
      },
      {
        "about": {
          "description": "`awggui` is an interface for creating excitations on LIGO's data\nacquisition system, including many periodic functions, random noise\nexcitations, and custom user-defined excitations.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awggui"
        ],
        "name": "dtt-awggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libawg",
            "libtestpoint",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "awggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Includes awgexec_run program for streaming excitations from Matlab.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream arbitrary data as an excitation using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/awgstream",
          "bin/awgexc_run"
        ],
        "name": "dtt-awgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libsistr",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "awgstream",
            "awgexc_run || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`diag` is suitable for scripting diagnostics test and excitations on LIGO's\nreal-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line program for running LIGO's Diagnostics Test Tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diag"
        ],
        "name": "dtt-diag",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "diag -help"
          ]
        }
      },
      {
        "about": {
          "description": "`diagd` is suitable for remotely running diagnostics test\nand excitations on LIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Daemon for running LIGO's Diagnostics Test Tools remotely"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diagd"
        ],
        "name": "dtt-diagd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libdtt"
          ],
          "run": [
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "test -x ${PREFIX}/bin/diagd"
          ]
        }
      },
      {
        "about": {
          "description": "`diaggui` is a user interface for running diagnostics tests, creating\nexcitations, calculating results on LIGO's real time system data\nacquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for running LIGO's Diagnostics Test Tools."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/diaggui"
        ],
        "name": "dtt-diaggui",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "nds2-client",
            "root_base"
          ],
          "run": [
            "gds-base",
            "crtools-gui-libraries",
            "libdfm",
            "libdtt",
            "libfantom",
            "root_base",
            "nds2-client"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h"
          ]
        }
      },
      {
        "about": {
          "description": "Monitors include InspiralRange.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Monitors used in LIGO control rooms."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/InspiralRange"
        ],
        "name": "dtt-monitors",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ]
        },
        "test": {
          "commands": [
            "echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000"
          ]
        }
      },
      {
        "about": {
          "description": "Stream arbitrary data to multiple exciatation channels at once on\nLIGO's real-time data acquisition system.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Stream multiple arbitrary data sets as excitations using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/multiawgstream"
        ],
        "name": "dtt-multiawgstream",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ],
          "run": [
            "gds-base",
            "libawg",
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "multiawgstream"
          ]
        }
      },
      {
        "about": {
          "description": "Close and open test points on LIGO's real-time data acquisition system\nconda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tool for manipulating test points using LIGO's awgtpman."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/tpcmd"
        ],
        "name": "dtt-tpcmd",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libtestpoint"
          ],
          "run": [
            "libtestpoint"
          ]
        },
        "test": {
          "commands": [
            "tpcmd -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command line tools for XML files produced using DTT."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/xmlconv",
          "bin/xmldata",
          "bin/xmldir"
        ],
        "name": "dtt-xml-tools",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "gds-base",
            "libdtt"
          ],
          "run": [
            "gds-base",
            "libdtt"
          ]
        },
        "test": {
          "commands": [
            "xmlconv -h",
            "xmldata -h",
            "xmldir -h"
          ]
        }
      },
      {
        "about": {
          "description": "`fantom` can be used to translate from different LIGO data formats.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Command-line program for translation of LIGO frame and NDS data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/fantom"
        ],
        "name": "fantom",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "libfantom"
          ],
          "run": [
            "libfantom"
          ]
        },
        "test": {
          "commands": [
            "fantom -h || test $? -eq 1"
          ]
        }
      },
      {
        "about": {
          "description": "`foton` is used at LIGO to design and display filters,\nthen generate filter files usable by the LIGO real-time\ndata acquisition system.\nA variety of design strategies are supported.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for designing and generating filters."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/foton"
        ],
        "name": "foton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libfilterfile",
            "libfilterwiz",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "foton -h"
          ]
        }
      },
      {
        "about": {
          "description": "lidax reads LIGO frame files.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "Graphical program for retrieving LIGO data."
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "files": [
          "bin/lidax",
          "bin/udnls"
        ],
        "name": "lidax",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "make"
          ],
          "host": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ],
          "run": [
            "crtools-gui-libraries",
            "gds-base",
            "libdfm",
            "root_base"
          ]
        },
        "test": {
          "commands": [
            "lidax -h",
            "lidax -H NDSSERVER",
            "udnls -h"
          ]
        }
      },
      {
        "about": {
          "description": "cds-crtools is a metapackage that installs several programs\nused to control LIGO-style interfrometers. The package includes\n`diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\nalong with `foton`, the filter design program, and others.\n",
          "dev_url": "https://git.ligo.org/cds/software/dtt.git",
          "home": "https://git.ligo.org/cds/software/dtt",
          "license": "GPL-2.0-or-later",
          "license_family": "GPL",
          "license_file": [
            "COPYING",
            "COPYING-GPL-3"
          ],
          "summary": "CDS Control Room tools"
        },
        "build": {
          "error_overlinking": true,
          "skip": true
        },
        "name": "cds-crtools",
        "requirements": {
          "host": [
            "python",
            "root_base"
          ],
          "run": [
            "python",
            "chndump",
            "dmtviewer",
            "dtt-diag",
            "dtt-diagd",
            "dtt-diaggui",
            "dtt-awggui",
            "dtt-awgstream",
            "dtt-multiawgstream",
            "dtt-tpcmd",
            "dtt-xml-tools",
            "foton",
            "lidax",
            "python-awg",
            "python-foton"
          ]
        },
        "test": {
          "commands": [
            "diaggui -h",
            "foton -h"
          ]
        }
      }
    ],
    "package": {
      "name": "cds-crtools-split",
      "version": "4.1.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "liblzma-devel",
        "readline",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-fix-use-of-unittest.TestCase.assertEquals.patch"
      ],
      "sha256": "bb935ae3442d06f05aa706ad518bcce6f0b591ad8003fd5001c54bc307734c43",
      "url": "https://git.ligo.org/cds/software/dtt/-/archive/4.1.4/4.1.4.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crtools-gui-libraries",
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "liblzma-devel",
        "libsistr",
        "libtestpoint",
        "nds2-client",
        "python",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "chndump",
        "crtools-gui-libraries",
        "dmtviewer",
        "dtt-awggui",
        "dtt-awgstream",
        "dtt-diag",
        "dtt-diagd",
        "dtt-diaggui",
        "dtt-multiawgstream",
        "dtt-tpcmd",
        "dtt-xml-tools",
        "foton",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libexpat",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "libsistr",
        "libtestpoint",
        "lidax",
        "nds2-client",
        "numpy",
        "python",
        "python-awg",
        "python-foton",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cds-crtools",
      "chndump",
      "crtools-gui-libraries",
      "crtools-root-libraries",
      "dmtviewer",
      "dtt-awggui",
      "dtt-awgstream",
      "dtt-diag",
      "dtt-diagd",
      "dtt-diaggui",
      "dtt-monitors",
      "dtt-multiawgstream",
      "dtt-tpcmd",
      "dtt-xml-tools",
      "fantom",
      "foton",
      "libawg",
      "libdfm",
      "libdtt",
      "libfantom",
      "libfilterfile",
      "libfilterwiz",
      "libsistr",
      "libtestpoint",
      "lidax",
      "python-awg",
      "python-foton"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cds-crtools.json"
  },
  "raw_meta_yaml": "{% set name = \"cds-crtools\" %}\n{% set version = \"4.1.4\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version|replace('_', '.') }}\n\nsource:\n  url: https://git.ligo.org/cds/software/dtt/-/archive/{{ version }}/{{ version }}.tar.gz\n  sha256: bb935ae3442d06f05aa706ad518bcce6f0b591ad8003fd5001c54bc307734c43\n  patches:\n    # backport https://git.ligo.org/cds/software/dtt/-/merge_requests/39\n    - 0001-fix-use-of-unittest.TestCase.assertEquals.patch\n\nbuild:\n  error_overlinking: true\n  number: 7\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make  # [not win]\n    - pkg-config  # [not win]\n  host:\n    - cyrus-sasl\n    - expat\n    - fftw\n    - gds-base\n    - gds-base-crtools\n    - gds-base-gdstrig  # [not osx]\n    - gds-lsmp  # [not osx]\n    - gds-root-extensions-crtools  # [not osx]\n    - liblzma-devel\n    - nds2-client  # [not osx]\n    - readline\n    - root_base\n\noutputs:\n  # -- C libraries ----------\n\n  - name: libawg\n    build:\n      error_overlinking: false\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n      run:\n        - gds-base\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dtt/awg*.h\n      - include/gds/dtt/gdsrand.h\n      - lib/libawg{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libawg${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library used to interface with awgtpman, the waveform excitation program used at LIGO\n      description: |\n        `libawg` is an interface for opening, configuring, and controlling excitations\n        on the LIGO real-time data acquisition system.\n\n  - name: libdfm\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n      run:\n        - gds-base\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        # - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dfm/dataacc.hh\n      - include/gds/dfm/dfm.hh\n      - include/gds/dfm/dfmapi.hh\n      - include/gds/dfm/dfmfunc.hh\n      - include/gds/dfm/dfmlars.hh\n      - include/gds/dfm/dfmnds.hh\n      - include/gds/dfm/dfmsends.hh\n      - include/gds/dfm/dfmsm.hh\n      - include/gds/dfm/dfmtype.hh\n      - include/gds/dfm/udn.hh\n      - lib/libdfm{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdfm${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for interfacing with LIGO's data flow manager\n      description: |\n        DMT is part of the LIGO real-time data acquisition system\n\n  - name: libdtt\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - expat\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - readline\n      run:\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - libexpat\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - nds2-client\n        - readline\n\n    files:\n      - lib/libdtt{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdtt${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library containing the functionality of LIGO's Diagnostics Test Tools.\n      description: |\n        `libdtt` is an interface for creating and running diagnostics tests on\n        the LIGO real-time data acquisition system.\n\n  - name: libfantom\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - gds-lsmp\n        - readline\n      run:\n        - gds-base\n        - gds-lsmp\n        - readline\n    files:\n      - include/gds/fantom/\n      - lib/libfantom{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfantom${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for translation of LIGO data frames and LIGO NDS data.\n      description: |\n        `libfantom` is a LIGO data access library for\n        translating data frames and NDS data.\n\n  - name: libfilterfile\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n      run:\n        - gds-base\n    files:\n      - include/foton/Filter*.hh\n      - lib/libfilterfile.*so*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfilterfile.so  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: C++ library for manipulating foton filter files.\n      description: |\n        `libfilterfile` is an interface for reading and writing foton filter files,\n        used at LIGO to encode filter coefficients.\n\n  - name: libfilterwiz\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [not win]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - root_base\n    files:\n      - include/foton/TLGFilter*.hh\n      - lib/libfilterwiz{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libfilterwiz${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Functions for creating foton-style filter design windows.\n      description: |\n        Other LIGO programs such as `awggui` and `diaggui` use `libfilterwiz` to create\n        `foton`-style filter design windows for one-off filters.\n\n  - name: libsistr\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n      run:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - include/gds/dtt/SIStr.h\n      - lib/libSIStr{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libSIStr${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for sending arbitrary data as excitations using LIGO's awgtpman.\n      description: |\n        `libsistr` is a library used for streaming custom excitations.\n\n  - name: libtestpoint\n    build:\n      error_overlinking: false\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n      run:\n        - gds-base\n    files:\n      - include/gds/dtt/testpoint*\n      - lib/libtestpoint{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libtestpoint${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Library for manipulating LIGO test points.\n      description: |\n        `libtestpoint` allows opening and closing of test points on the LIGO\n        real-time data acquisition system.\n\n  - name: crtools-gui-libraries\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - root_base\n      run:\n        - gds-base\n        - gds-base-crtools\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - root_base\n    files:\n      - include/dmtview/\n      - include/dtt/dttgui/\n      - include/gds/dfm/dfmgui.hh\n      - include/gds/dfm/montype.hh\n      - include/gds/dfm/TLGDfmChannels.hh\n      - include/gds/dfm/TLGDfmMonitors.hh\n      - include/gds/dfm/TLGDfmSel.hh\n      - include/gds/dfm/TLGDfmServer.hh\n      - include/gds/dfm/TLGDfmTimes.hh\n      - include/gds/libdax/\n      - lib/libdfmgui{{ SHLIB_EXT }}*\n      - lib/libdmtview{{ SHLIB_EXT }}*\n      - lib/libdttgui{{ SHLIB_EXT }}*\n      - lib/liblidax{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libdfmgui${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/libdttgui${SHLIB_EXT}  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Common libraries used by LIGO control room graphical programs.\n      description: |\n        The gui libraries provide basic widgets to control room tools apps.\n\n  - name: crtools-root-libraries\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - root_base\n    files:\n      - lib/dmtview*.pcm\n      - lib/libRdmtview{{ SHLIB_EXT }}*\n      - lib/dttgui*.pcm\n      - lib/libRdttgui{{ SHLIB_EXT }}*\n      - lib/filterfile*.pcm\n      - lib/libRfilterfile{{ SHLIB_EXT }}*\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libRdttgui${SHLIB_EXT}  # [unix]\n        - root -b -l -x -q -e 'gSystem->Load(\"libRdttgui\");'  # [linux]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Common ROOT dictionary libraries used by LIGO control room programs.\n      description: |\n        ROOT dictionaries allow dynamic access to C++ objects.\n\n  # -- python libraries -----\n\n  - name: python-foton\n    script: build-python-foton.sh\n    build:\n      ignore_run_exports:\n        - numpy\n      skip: true  # [py == 312 and root_base == '6.30.4']\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - make  # [unix]\n        - pkg-config\n        # extras for cross-compiling\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - python                              # [build_platform != target_platform]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - python\n        - scipy\n      run:\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - numpy >=1.20\n        - python\n        - scipy\n    test:\n      source_files:\n        - src/python/foton/\n      commands:\n        - (cd src/python/foton/; python foton_test.py)\n        - (cd src/python/foton/; python pydmtsigp_test.py)\n        - (cd src/python/foton/; python pyfilterfile_test.py)\n        - (cd src/python/foton/; python foton_unit_test.py)\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Python bindings for foton functions\n      description: |\n        Library for design, inspection and manipulation of filters and\n        LIGO style filter files.\n\n  - name: python-awg\n    script: build-python-awg.sh\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n      skip: true  # [py == 312 and root_base == '6.30.4']\n    requirements:\n      build:\n        - cmake\n        - make  # [unix]\n        - pkg-config\n        # extras for cross-compiling\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - python                              # [build_platform != target_platform]\n      host:\n        - nds2-client\n        - python\n        - root_base\n      run:\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - numpy >=1.20\n        - python\n        - root_base\n        - scipy\n    test:\n      imports:\n        - awg\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Python bindings to libawg\n      description: |\n        Create excitations using LIGO\\'s awgtpman using Python.\n        The awg module allows simple python scripting of excitations\n        on the LIGO data acquisition system.\n\n  # -- script packages ------\n\n  - name: chndump\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/chndump\n    test:\n      commands:\n        # chndump -h returns exit code 1 (command not found is 127)\n        - chndump -h || test $? -eq 1  # [unix]\n\n  - name: dmtviewer\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-base-crtools\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - gds-base-crtools\n        - root_base\n    files:\n      - bin/dmtviewer\n    test:\n      commands:\n        - dmtviewer -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for viewing output of DMT monitors.\n      description: |\n        DMT viewer is used in LIGO control rooms to display DMT data.\n\n  - name: dtt-awggui\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        - root_base\n    files:\n      - bin/awggui\n    test:\n      commands:\n        - awggui -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for running excitations using LIGO's awgtpman.\n      description: |\n        `awggui` is an interface for creating excitations on LIGO's data\n        acquisition system, including many periodic functions, random noise\n        excitations, and custom user-defined excitations.\n\n  - name: dtt-awgstream\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        #- {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        #- root_base\n      run:\n        #- {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libsistr', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n        #- root_base\n    files:\n      - bin/awgstream\n      - bin/awgexc_run\n    test:\n      commands:\n        - awgstream\n        - awgexc_run || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Stream arbitrary data as an excitation using LIGO's awgtpman.\n      description: |\n        Includes awgexec_run program for streaming excitations from Matlab.\n\n  - name: dtt-diag\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/diag\n    test:\n      commands:\n        - diag -help\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line program for running LIGO's Diagnostics Test Tools\n      description: |\n        `diag` is suitable for scripting diagnostics test and excitations on LIGO's\n        real-time data acquisition system.\n\n  - name: dtt-diagd\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n      run:\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/diagd\n    test:\n      commands:\n        - test -x ${PREFIX}/bin/diagd  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Daemon for running LIGO's Diagnostics Test Tools remotely\n      description: |\n        `diagd` is suitable for remotely running diagnostics test\n        and excitations on LIGO's real-time data acquisition system.\n\n  - name: dtt-diaggui\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - nds2-client\n        - root_base\n      run:\n        - gds-base\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - {{ pin_subpackage('libdtt', exact=True) }}\n        - {{ pin_subpackage('libfantom', exact=True) }}\n        - root_base\n        - nds2-client\n    files:\n      - bin/diaggui\n    test:\n      commands:\n        - diaggui -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for running LIGO's Diagnostics Test Tools.\n      description: |\n        `diaggui` is a user interface for running diagnostics tests, creating\n        excitations, calculating results on LIGO's real time system data\n        acquisition system.\n\n  - name: dtt-monitors\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n    files:\n      - bin/InspiralRange\n    test:\n      commands:\n        - echo -e \"10 1e-21\\n50 1e-22\\n100 1e-23\\n200 1e-22\" | InspiralRange 4000\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Monitors used in LIGO control rooms.\n      description: |\n        Monitors include InspiralRange.\n\n  - name: dtt-multiawgstream\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n      run:\n        - gds-base\n        - {{ pin_subpackage('libawg', exact=True) }}\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/multiawgstream\n    test:\n      commands:\n        - multiawgstream\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Stream multiple arbitrary data sets as excitations using LIGO's awgtpman.\n      description: |\n        Stream arbitrary data to multiple exciatation channels at once on\n        LIGO's real-time data acquisition system.\n\n  - name: dtt-tpcmd\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n      run:\n        - {{ pin_subpackage('libtestpoint', exact=True) }}\n    files:\n      - bin/tpcmd\n    test:\n      commands:\n        - tpcmd -h || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line tool for manipulating test points using LIGO's awgtpman.\n      description: |\n        Close and open test points on LIGO's real-time data acquisition system\n        conda update --prefix /build/jenkins/home/mambaforge/envs/buildenvs anaconda\n\n  - name: dtt-xml-tools\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - gds-base\n        - {{ pin_subpackage('libdtt', exact=True) }}\n      run:\n        - gds-base\n        - {{ pin_subpackage('libdtt', exact=True) }}\n    files:\n      - bin/xmlconv\n      - bin/xmldata\n      - bin/xmldir\n    test:\n      commands:\n        - xmlconv -h\n        - xmldata -h\n        - xmldir -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command line tools for XML files produced using DTT.\n      description: |\n        Includes xmlconv, xmldata, and xmldir.  Files can be produced by diag or diaggui.\n\n  - name: fantom\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('libfantom', exact=True) }}\n      run:\n        - {{ pin_subpackage('libfantom', exact=True) }}\n    files:\n      - bin/fantom\n    test:\n      commands:\n        - fantom -h || test $? -eq 1  # [unix]\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Command-line program for translation of LIGO frame and NDS data.\n      description: |\n        `fantom` can be used to translate from different LIGO data formats.\n\n  - name: foton\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - {{ pin_subpackage('libfilterwiz', exact=True) }}\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libfilterfile', exact=True) }}\n        - {{ pin_subpackage('libfilterwiz', exact=True) }}\n        - root_base\n    files:\n      - bin/foton\n    test:\n      commands:\n        - foton -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for designing and generating filters.\n      description: |\n        `foton` is used at LIGO to design and display filters,\n        then generate filter files usable by the LIGO real-time\n        data acquisition system.\n        A variety of design strategies are supported.\n\n  - name: lidax\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n      host:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - root_base\n      run:\n        - {{ pin_subpackage('crtools-gui-libraries', exact=True) }}\n        - gds-base\n        - {{ pin_subpackage('libdfm', exact=True) }}\n        - root_base\n    files:\n      - bin/lidax\n      - bin/udnls\n    test:\n      commands:\n        - lidax -h\n        - lidax -H NDSSERVER\n        - udnls -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: Graphical program for retrieving LIGO data.\n      description: |\n        lidax reads LIGO frame files.\n\n  # -- metapackage ----------\n\n  - name: cds-crtools\n    build:\n      error_overlinking: true\n      skip: true  # [osx]\n      skip: true  # [py == 312 and root_base == '6.30.4']\n    requirements:\n      host:\n        - python\n        - root_base\n      run:\n        - python\n        # all of the outputs\n        - {{ pin_subpackage('chndump', exact=True) }}\n        - {{ pin_subpackage('dmtviewer', exact=True) }}\n        - {{ pin_subpackage('dtt-diag', exact=True) }}\n        - {{ pin_subpackage('dtt-diagd', exact=True) }}\n        - {{ pin_subpackage('dtt-diaggui', exact=True) }}\n        - {{ pin_subpackage('dtt-awggui', exact=True) }}\n        - {{ pin_subpackage('dtt-awgstream', exact=True) }}\n        - {{ pin_subpackage('dtt-multiawgstream', exact=True) }}\n        - {{ pin_subpackage('dtt-tpcmd', exact=True) }}\n        - {{ pin_subpackage('dtt-xml-tools', exact=True) }}\n        - {{ pin_subpackage('foton', exact=True) }}\n        - {{ pin_subpackage('lidax', exact=True) }}\n        - {{ pin_subpackage('python-awg', exact=True) }}\n        - {{ pin_subpackage('python-foton', exact=True) }}\n    test:\n      commands:\n        - diaggui -h\n        - foton -h\n    about:\n      home: https://git.ligo.org/cds/software/dtt\n      dev_url: https://git.ligo.org/cds/software/dtt.git\n      license: GPL-2.0-or-later\n      license_family: GPL\n      license_file:\n        - COPYING\n        - COPYING-GPL-3\n      summary: CDS Control Room tools\n      description: |\n        cds-crtools is a metapackage that installs several programs\n        used to control LIGO-style interfrometers. The package includes\n        `diag`, `diagd`, `diaggui`, `awggui`, `tpcmd`, `chndump`\n        along with `foton`, the filter design program, and others.\n\nabout:\n  home: https://git.ligo.org/cds/software/dtt\n  dev_url: https://git.ligo.org/cds/software/dtt.git\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file:\n    - COPYING\n    - COPYING-GPL-3\n  summary: CDS Control Room tools\n\nextra:\n  feedstock-name: cds-crtools\n  recipe-maintainers:\n    - duncanmmacleod\n    - evonreis\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "chndump",
      "cmake",
      "crtools-gui-libraries",
      "cxx_compiler_stub",
      "cyrus-sasl",
      "dmtviewer",
      "dtt-awggui",
      "dtt-awgstream",
      "dtt-diag",
      "dtt-diagd",
      "dtt-diaggui",
      "dtt-multiawgstream",
      "dtt-tpcmd",
      "dtt-xml-tools",
      "expat",
      "fftw",
      "foton",
      "gds-base",
      "gds-base-crtools",
      "gds-base-gdstrig",
      "gds-lsmp",
      "gds-root-extensions-crtools",
      "libawg",
      "libdfm",
      "libdtt",
      "libexpat",
      "libfantom",
      "libfilterfile",
      "libfilterwiz",
      "liblzma-devel",
      "libsistr",
      "libtestpoint",
      "lidax",
      "make",
      "nds2-client",
      "numpy",
      "pkg-config",
      "python",
      "python-awg",
      "python-foton",
      "readline",
      "root_base",
      "scipy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "crtools-gui-libraries",
        "cxx_compiler_stub",
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-base-gdstrig",
        "gds-lsmp",
        "gds-root-extensions-crtools",
        "libawg",
        "libdfm",
        "libdtt",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "liblzma-devel",
        "libsistr",
        "libtestpoint",
        "nds2-client",
        "python",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "chndump",
        "crtools-gui-libraries",
        "cxx_compiler_stub",
        "dmtviewer",
        "dtt-awggui",
        "dtt-awgstream",
        "dtt-diag",
        "dtt-diagd",
        "dtt-diaggui",
        "dtt-multiawgstream",
        "dtt-tpcmd",
        "dtt-xml-tools",
        "foton",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libexpat",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "libsistr",
        "libtestpoint",
        "lidax",
        "nds2-client",
        "numpy",
        "python",
        "python-awg",
        "python-foton",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crtools-gui-libraries",
        "cyrus-sasl",
        "expat",
        "fftw",
        "gds-base",
        "gds-base-crtools",
        "gds-base-gdstrig",
        "gds-lsmp",
        "gds-root-extensions-crtools",
        "libawg",
        "libdfm",
        "libdtt",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "liblzma-devel",
        "libsistr",
        "libtestpoint",
        "nds2-client",
        "python",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "chndump",
        "crtools-gui-libraries",
        "dmtviewer",
        "dtt-awggui",
        "dtt-awgstream",
        "dtt-diag",
        "dtt-diagd",
        "dtt-diaggui",
        "dtt-multiawgstream",
        "dtt-tpcmd",
        "dtt-xml-tools",
        "foton",
        "gds-base",
        "gds-base-crtools",
        "gds-lsmp",
        "libawg",
        "libdfm",
        "libdtt",
        "libexpat",
        "libfantom",
        "libfilterfile",
        "libfilterwiz",
        "libsistr",
        "libtestpoint",
        "lidax",
        "nds2-client",
        "numpy >=1.20",
        "python",
        "python-awg",
        "python-foton",
        "readline",
        "root_base",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://git.ligo.org/cds/software/dtt/-/archive/4.1.4/4.1.4.tar.gz",
  "version": "4.1.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cds-crtools.json"
  }
}