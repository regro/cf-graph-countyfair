{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "noarch_platforms": [
      "linux_64",
      "win_64"
    ]
  },
  "feedstock_name": "ctre",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Fast compile-time regular expressions with support for\nmatching/searching/capturing during compile-time or runtime.\n",
      "home": "https://github.com/hanikadot/compile-time-regular-expressions",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Compile Time Regular Expression in C++"
    },
    "build": {
      "noarch": "generic",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "faceprint"
      ]
    },
    "package": {
      "name": "ctre",
      "version": "3.9.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "run": [
        "__unix"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "55778712968d4f3ad00e9d20fc4d2149d14d96b4ff3dab086613797cd2ccd2b2",
      "url": "https://github.com/hanickadot/compile-time-regular-expressions/archive/v3.9.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/ctll",
        "test -d ${PREFIX}/include/ctre",
        "test -d ${PREFIX}/include/unicode-db",
        "test -f ${PREFIX}/include/ctll.hpp",
        "test -f ${PREFIX}/include/ctre.hpp",
        "test -f ${PREFIX}/include/ctre-unicode.hpp",
        "test -f ${PREFIX}/include/unicode-db.hpp"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Fast compile-time regular expressions with support for\nmatching/searching/capturing during compile-time or runtime.\n",
      "home": "https://github.com/hanikadot/compile-time-regular-expressions",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Compile Time Regular Expression in C++"
    },
    "build": {
      "noarch": "generic",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "faceprint"
      ]
    },
    "package": {
      "name": "ctre",
      "version": "3.9.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "run": [
        "__unix",
        "__win"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "55778712968d4f3ad00e9d20fc4d2149d14d96b4ff3dab086613797cd2ccd2b2",
      "url": "https://github.com/hanickadot/compile-time-regular-expressions/archive/v3.9.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/ctll",
        "test -d ${PREFIX}/include/ctre",
        "test -d ${PREFIX}/include/unicode-db",
        "test -f ${PREFIX}/include/ctll.hpp",
        "test -f ${PREFIX}/include/ctre.hpp",
        "test -f ${PREFIX}/include/ctre-unicode.hpp",
        "test -f ${PREFIX}/include/unicode-db.hpp",
        "if not exist %LIBRARY_PREFIX%\\include\\ctll\\fixed_string.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\ctre\\pcre.hpp (exit 1)"
      ]
    }
  },
  "name": "ctre",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ctre"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ctre.json"
  },
  "raw_meta_yaml": "{% set name = \"ctre\" %}\n{% set version = \"3.9.0\" %}\n{% set sha256 = \"55778712968d4f3ad00e9d20fc4d2149d14d96b4ff3dab086613797cd2ccd2b2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/hanickadot/compile-time-regular-expressions/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: generic\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make  # [unix]\n  run:\n    - __unix  # [unix]\n    - __win  # [win]\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/ctll  # [unix]\n    - test -d ${PREFIX}/include/ctre  # [unix]\n    - test -d ${PREFIX}/include/unicode-db  # [unix]\n    - test -f ${PREFIX}/include/ctll.hpp  # [unix]\n    - test -f ${PREFIX}/include/ctre.hpp  # [unix]\n    - test -f ${PREFIX}/include/ctre-unicode.hpp  # [unix]\n    - test -f ${PREFIX}/include/unicode-db.hpp  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\ctll\\fixed_string.hpp (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\ctre\\pcre.hpp (exit 1)  # [win]\n\n\nabout:\n  home: https://github.com/hanikadot/compile-time-regular-expressions\n  summary: 'Compile Time Regular Expression in C++'\n  description: |\n    Fast compile-time regular expressions with support for\n    matching/searching/capturing during compile-time or runtime.\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - faceprint\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "__win",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/hanickadot/compile-time-regular-expressions/archive/v3.9.0.tar.gz",
  "version": "3.9.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ctre.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Fast compile-time regular expressions with support for\nmatching/searching/capturing during compile-time or runtime.\n",
      "home": "https://github.com/hanikadot/compile-time-regular-expressions",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Compile Time Regular Expression in C++"
    },
    "build": {
      "noarch": "generic",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "faceprint"
      ]
    },
    "package": {
      "name": "ctre",
      "version": "3.9.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake"
      ],
      "run": [
        "__win"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "55778712968d4f3ad00e9d20fc4d2149d14d96b4ff3dab086613797cd2ccd2b2",
      "url": "https://github.com/hanickadot/compile-time-regular-expressions/archive/v3.9.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\include\\ctll\\fixed_string.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\ctre\\pcre.hpp (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}