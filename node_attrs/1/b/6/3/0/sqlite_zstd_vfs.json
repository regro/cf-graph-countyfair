{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "emulated",
      "linux_ppc64le": "emulated"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "sqlite_zstd_vfs",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "name": "sqlite_zstd_vfs",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This SQLite VFS extension provides streaming storage compression with\nZstandard, transparently compressing pages of the main database file as\nthey're written out, and later decompressing them as they're read in. It\nruns page de/compression on background threads and occasionally generates\ndictionaries to improve subsequent compression.\n",
      "home": "https://github.com/mlin/sqlite_zstd_vfs",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "SQLite3 extension for read/write storage compression with Zstandard"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "sqlite_zstd_vfs",
      "version": "0.0.2024.01.13"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "sed"
      ],
      "host": [
        "sqlite",
        "zstd",
        "libcurl"
      ],
      "run": [
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "update.diff"
      ],
      "sha256": "a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0",
      "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz"
    },
    "test": {
      "commands": [
        "echo '.quit' | sqlite3 -cmd \".load zstd_vfs\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "sqlite_zstd_vfs"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/sqlite_zstd_vfs.json"
  },
  "raw_meta_yaml": "{% set name = \"sqlite_zstd_vfs\" %}\n{% set version = \"0.0.2024.01.13\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz\n  sha256: a43a8c939d150a7e37ef9f0a4cf93cdf0c554d6de025ef25677e973c95b79db0\n  patches:\n    - update.diff\n\n\nbuild:\n  skip: true  # [win]\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n    - cmake\n    - make\n    - sed\n  host:\n    - sqlite\n    - zstd\n    - libcurl\n  run:\n    - sqlite\n\ntest:\n  commands:\n    - echo '.quit' | sqlite3 -cmd \".load zstd_vfs\"  # [build_platform == target_platform]\n\nabout:\n  home: https://github.com/mlin/sqlite_zstd_vfs\n  summary: 'SQLite3 extension for read/write storage compression with Zstandard'\n  description: |\n    This SQLite VFS extension provides streaming storage compression with\n    Zstandard, transparently compressing pages of the main database file as\n    they're written out, and later decompressing them as they're read in. It\n    runs page de/compression on background threads and occasionally generates\n    dictionaries to improve subsequent compression.\n  license: Apache-2.0\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - matthiasdiener\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libcurl",
      "make",
      "sed",
      "sqlite",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcurl",
        "sqlite",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/mlin/sqlite_zstd_vfs/archive/228f6d12c55f69e584d909024d8ef9d599f2f398.tar.gz",
  "version": "0.0.2024.01.13",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/sqlite_zstd_vfs.json"
  }
}