{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "8729ac3c1d8ffe70308f2b10c9cf39575632ab7b",
  "feedstock_hash_ts": 1755479279,
  "feedstock_name": "rust-script",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n- Caching compiled artifacts for speed.\n- Reading Cargo manifests embedded in Rust scripts.\n- Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n- Using expressions as stream filters (i.e. for use in command pipelines).\n- Running unit tests and benchmarks from scripts.\n- Custom templates for command-line expressions and filters.\n",
      "dev_url": "https://github.com/fornwall/rust-script",
      "doc_url": "https://rust-script.org/",
      "home": "https://rust-script.org",
      "license": "MIT AND Apache-2.0",
      "license_file": [
        "LICENSE-MIT",
        "LICENSE-APACHE",
        "THIRDPARTY.yml"
      ],
      "summary": "Run Rust files and expressions without any setup or compilation necessary."
    },
    "build": {
      "number": "0",
      "script": [
        "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
        "cargo install --no-track --locked --verbose --root \"${PREFIX}\" --path ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "tedil",
        "dlaehnemann",
        "mbhall88"
      ]
    },
    "package": {
      "name": "rust-script",
      "version": "0.36.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses"
      ],
      "host": [],
      "run": [
        "rust >=1.74"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8",
      "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz"
    },
    "test": {
      "commands": [
        "rust-script --version | grep -qF '0.36.0'",
        "rust-script --expr 'println!(\"Hello, World!\");' | grep -qF 'Hello, World!'"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "rust"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n- Caching compiled artifacts for speed.\n- Reading Cargo manifests embedded in Rust scripts.\n- Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n- Using expressions as stream filters (i.e. for use in command pipelines).\n- Running unit tests and benchmarks from scripts.\n- Custom templates for command-line expressions and filters.\n",
      "dev_url": "https://github.com/fornwall/rust-script",
      "doc_url": "https://rust-script.org/",
      "home": "https://rust-script.org",
      "license": "MIT AND Apache-2.0",
      "license_file": [
        "LICENSE-MIT",
        "LICENSE-APACHE",
        "THIRDPARTY.yml"
      ],
      "summary": "Run Rust files and expressions without any setup or compilation necessary."
    },
    "build": {
      "number": "0",
      "script": [
        "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
        "cargo install --no-track --locked --verbose --root \"${PREFIX}\" --path .",
        "cargo install --no-track --locked --verbose --root \"%PREFIX%\" --path ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "tedil",
        "dlaehnemann",
        "mbhall88"
      ]
    },
    "package": {
      "name": "rust-script",
      "version": "0.36.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses"
      ],
      "host": [],
      "run": [
        "rust >=1.74"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8",
      "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz"
    },
    "test": {
      "commands": [
        "rust-script --version | grep -qF '0.36.0'",
        "rust-script --expr 'println!(\"Hello, World!\");' | grep -qF 'Hello, World!'",
        "rust-script --version | findstr \"/C:0.36.0\"",
        "rust-script --expr \"println!(\\\"Hello, World!\\\");\" | findstr /B \"/C:Hello, World!\""
      ]
    }
  },
  "name": "rust-script",
  "osx_64_meta_yaml": {
    "about": {
      "description": "With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n- Caching compiled artifacts for speed.\n- Reading Cargo manifests embedded in Rust scripts.\n- Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n- Using expressions as stream filters (i.e. for use in command pipelines).\n- Running unit tests and benchmarks from scripts.\n- Custom templates for command-line expressions and filters.\n",
      "dev_url": "https://github.com/fornwall/rust-script",
      "doc_url": "https://rust-script.org/",
      "home": "https://rust-script.org",
      "license": "MIT AND Apache-2.0",
      "license_file": [
        "LICENSE-MIT",
        "LICENSE-APACHE",
        "THIRDPARTY.yml"
      ],
      "summary": "Run Rust files and expressions without any setup or compilation necessary."
    },
    "build": {
      "number": "0",
      "script": [
        "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
        "cargo install --no-track --locked --verbose --root \"${PREFIX}\" --path ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "tedil",
        "dlaehnemann",
        "mbhall88"
      ]
    },
    "package": {
      "name": "rust-script",
      "version": "0.36.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses"
      ],
      "host": [],
      "run": [
        "rust >=1.74"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8",
      "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz"
    },
    "test": {
      "commands": [
        "rust-script --version | grep -qF '0.36.0'",
        "rust-script --expr 'println!(\"Hello, World!\");' | grep -qF 'Hello, World!'"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "rust"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n- Caching compiled artifacts for speed.\n- Reading Cargo manifests embedded in Rust scripts.\n- Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n- Using expressions as stream filters (i.e. for use in command pipelines).\n- Running unit tests and benchmarks from scripts.\n- Custom templates for command-line expressions and filters.\n",
      "dev_url": "https://github.com/fornwall/rust-script",
      "doc_url": "https://rust-script.org/",
      "home": "https://rust-script.org",
      "license": "MIT AND Apache-2.0",
      "license_file": [
        "LICENSE-MIT",
        "LICENSE-APACHE",
        "THIRDPARTY.yml"
      ],
      "summary": "Run Rust files and expressions without any setup or compilation necessary."
    },
    "build": {
      "number": "0",
      "script": [
        "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
        "cargo install --no-track --locked --verbose --root \"${PREFIX}\" --path ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "tedil",
        "dlaehnemann",
        "mbhall88"
      ]
    },
    "package": {
      "name": "rust-script",
      "version": "0.36.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses"
      ],
      "host": [],
      "run": [
        "rust >=1.74"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8",
      "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz"
    },
    "test": {
      "commands": [
        "rust-script --version | grep -qF '0.36.0'",
        "rust-script --expr 'println!(\"Hello, World!\");' | grep -qF 'Hello, World!'"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "rust"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "rust-script"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/rust-script.json"
  },
  "raw_meta_yaml": "{% set version = \"0.36.0\" %}\n{% set sha256 = \"9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8\" %}\n\npackage:\n  name: rust-script\n  version: {{ version }}\n\nsource:\n  url: https://github.com/fornwall/rust-script/archive/refs/tags/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script:\n    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml\n    - cargo install --no-track --locked --verbose --root \"${PREFIX}\" --path .    # [not win]\n    - cargo install --no-track --locked --verbose --root \"%PREFIX%\" --path .     # [win]\n\nrequirements:\n  build:\n    - {{ compiler('rust') }}\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - cargo-bundle-licenses\n  host:\n  run:\n    - rust >=1.74\n\ntest:\n  commands:\n    - rust-script --version | grep -qF '{{ version }}'    # [not win]\n    - rust-script --version | findstr \"/C:{{ version }}\"  # [win]\n    - rust-script --expr 'println!(\"Hello, World!\");' | grep -qF 'Hello, World!'         # [not win]\n    - rust-script --expr \"println!(\\\"Hello, World!\\\");\" | findstr /B \"/C:Hello, World!\"  # [win]\n\nabout:\n  home: https://rust-script.org\n  license: MIT AND Apache-2.0\n  license_file:\n    - LICENSE-MIT\n    - LICENSE-APACHE\n    - THIRDPARTY.yml\n  summary: Run Rust files and expressions without any setup or compilation necessary.\n  description: |\n    With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n    - Caching compiled artifacts for speed.\n    - Reading Cargo manifests embedded in Rust scripts.\n    - Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n    - Using expressions as stream filters (i.e. for use in command pipelines).\n    - Running unit tests and benchmarks from scripts.\n    - Custom templates for command-line expressions and filters.\n  doc_url: https://rust-script.org/\n  dev_url: https://github.com/fornwall/rust-script\n\nextra:\n  recipe-maintainers:\n    - tedil\n    - dlaehnemann\n    - mbhall88\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cargo-bundle-licenses",
      "rust",
      "rust_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "rust"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "rust >=1.74"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz",
  "version": "0.36.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/rust-script.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "With rust-script Rust files and expressions can be executed just like a shell or Python script. Features include:\n- Caching compiled artifacts for speed.\n- Reading Cargo manifests embedded in Rust scripts.\n- Supporting executable Rust scripts via Unix shebangs and Windows file associations.\n- Using expressions as stream filters (i.e. for use in command pipelines).\n- Running unit tests and benchmarks from scripts.\n- Custom templates for command-line expressions and filters.\n",
      "dev_url": "https://github.com/fornwall/rust-script",
      "doc_url": "https://rust-script.org/",
      "home": "https://rust-script.org",
      "license": "MIT AND Apache-2.0",
      "license_file": [
        "LICENSE-MIT",
        "LICENSE-APACHE",
        "THIRDPARTY.yml"
      ],
      "summary": "Run Rust files and expressions without any setup or compilation necessary."
    },
    "build": {
      "number": "0",
      "script": [
        "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
        "cargo install --no-track --locked --verbose --root \"%PREFIX%\" --path ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "tedil",
        "dlaehnemann",
        "mbhall88"
      ]
    },
    "package": {
      "name": "rust-script",
      "version": "0.36.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses"
      ],
      "host": [],
      "run": [
        "rust >=1.74"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b6d04ad4dd34838c1b55a8ec4b69e8d7f3008a67d85ef1c35b49502c359b6d8",
      "url": "https://github.com/fornwall/rust-script/archive/refs/tags/0.36.0.tar.gz"
    },
    "test": {
      "commands": [
        "rust-script --version | findstr \"/C:0.36.0\"",
        "rust-script --expr \"println!(\\\"Hello, World!\\\");\" | findstr /B \"/C:Hello, World!\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "rust"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}