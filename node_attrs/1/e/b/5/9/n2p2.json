{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "64c2c9040d5bba6255784c5107983ffb31e8de78",
  "feedstock_hash_ts": 1756306158,
  "feedstock_name": "n2p2",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
      "dev_url": "https://github.com/CompPhysVienna/n2p2",
      "doc_url": "https://compphysvienna.github.io/n2p2/",
      "home": "https://compphysvienna.github.io/n2p2/",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "n2p2 - A Neural Network Potential Package"
    },
    "build": {
      "number": "102",
      "run_exports": [
        "n2p2"
      ],
      "string": "mpi_openmpi_py314_h1234567_102"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "n2p2",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "python",
        "cython",
        "mpich",
        "libblas",
        "libcblas",
        "gsl",
        "eigen",
        "setuptools",
        "openmpi"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "app.patch",
        "cflags.patch",
        "shared.patch"
      ],
      "sha256": "1cc724ef30dd989008516c5cb9567992974b1b63cd3ab453275b1c512f1495ca",
      "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/nnp-convert",
        "test -f ${PREFIX}/bin/nnp-cutoff",
        "test -f ${PREFIX}/bin/nnp-dist",
        "test -f ${PREFIX}/bin/nnp-predict",
        "test -f ${PREFIX}/bin/nnp-prune",
        "test -f ${PREFIX}/bin/nnp-select",
        "test -f ${PREFIX}/bin/nnp-symfunc",
        "test -f ${PREFIX}/bin/nnp-comp2",
        "test -f ${PREFIX}/bin/nnp-dataset",
        "test -f ${PREFIX}/bin/nnp-norm",
        "test -f ${PREFIX}/bin/nnp-scaling",
        "test -f ${PREFIX}/bin/nnp-train"
      ],
      "imports": [
        "pynnp"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "eigen",
        "gsl",
        "libblas",
        "libcblas",
        "mpich",
        "openmpi",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This repository (obtain source code here) provides ready-to-use\nsoftware for high-dimensional neural network potentials in\ncomputational physics and chemistry. The methodology behind the\nBehler-Parinello neural network potentials was first described here:\nJ. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n",
      "dev_url": "https://github.com/CompPhysVienna/n2p2",
      "doc_url": "https://compphysvienna.github.io/n2p2/",
      "home": "https://compphysvienna.github.io/n2p2/",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "n2p2 - A Neural Network Potential Package"
    },
    "build": {
      "number": "102",
      "run_exports": [
        "n2p2"
      ],
      "string": "mpi_openmpi_py314_h1234567_102"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "n2p2",
      "version": "2.3.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "python",
        "cython",
        "mpich",
        "libblas",
        "libcblas",
        "gsl",
        "eigen",
        "setuptools",
        "openmpi"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "app.patch",
        "cflags.patch",
        "shared.patch"
      ],
      "sha256": "1cc724ef30dd989008516c5cb9567992974b1b63cd3ab453275b1c512f1495ca",
      "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/nnp-convert",
        "test -f ${PREFIX}/bin/nnp-cutoff",
        "test -f ${PREFIX}/bin/nnp-dist",
        "test -f ${PREFIX}/bin/nnp-predict",
        "test -f ${PREFIX}/bin/nnp-prune",
        "test -f ${PREFIX}/bin/nnp-select",
        "test -f ${PREFIX}/bin/nnp-symfunc",
        "test -f ${PREFIX}/bin/nnp-comp2",
        "test -f ${PREFIX}/bin/nnp-dataset",
        "test -f ${PREFIX}/bin/nnp-norm",
        "test -f ${PREFIX}/bin/nnp-scaling",
        "test -f ${PREFIX}/bin/nnp-train"
      ],
      "imports": [
        "pynnp"
      ]
    }
  },
  "name": "n2p2",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "n2p2"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/n2p2.json"
  },
  "raw_meta_yaml": "{% set name = \"n2p2\" %}\n{% set version = \"2.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CompPhysVienna/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 1cc724ef30dd989008516c5cb9567992974b1b63cd3ab453275b1c512f1495ca\n  patches:\n    - app.patch\n    - cflags.patch\n    - shared.patch\n\nbuild:\n  # prefer mpi as libnnptrain is not supported for nompi\n  {% set build = 2 %}\n  {% set build = build + 100 %}  # [mpi != 'nompi']\n  number: {{ build }}\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: {{ mpi_prefix }}_py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n  skip: true  # [not linux]\n  run_exports:\n     - {{ pin_subpackage(\"n2p2\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - make\n  host:\n    - python\n    - cython\n    - {{ mpi }}  # [mpi != 'nompi']\n    - libblas\n    - libcblas\n    - gsl\n    - eigen\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - pynnp\n  commands:\n    - test -f ${PREFIX}/bin/nnp-convert  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-cutoff  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-dist  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-predict  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-prune  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-select  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-symfunc  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-comp2  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-dataset  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-norm  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-scaling  # [mpi != 'nompi']\n    - test -f ${PREFIX}/bin/nnp-train  # [mpi != 'nompi']\n\nabout:\n  home: https://compphysvienna.github.io/n2p2/\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: n2p2 - A Neural Network Potential Package\n  description: |\n    This repository (obtain source code here) provides ready-to-use \n    software for high-dimensional neural network potentials in \n    computational physics and chemistry. The methodology behind the \n    Behler-Parinello neural network potentials was first described here:\n    J. Behler and M. Parrinello, Phys. Rev. Lett. 98, 146401 (2007)\n  doc_url: https://compphysvienna.github.io/n2p2/\n  dev_url: https://github.com/CompPhysVienna/n2p2\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "cython",
      "eigen",
      "gsl",
      "libblas",
      "libcblas",
      "make",
      "mpich",
      "openmpi",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cython",
        "eigen",
        "gsl",
        "libblas",
        "libcblas",
        "mpich",
        "openmpi",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "eigen",
        "gsl",
        "libblas",
        "libcblas",
        "mpich",
        "openmpi",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/CompPhysVienna/n2p2/archive/v2.3.0.tar.gz",
  "version": "2.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/n2p2.json"
  }
}