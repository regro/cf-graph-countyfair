{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "7d6736a2a0003fac499fe3cfd9f5cfa39a81a683",
  "feedstock_hash_ts": 1730839923,
  "feedstock_name": "runner",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "In order to develop Neural Network potential-energy surfaces for a\nvariety of system, we have developed our in-house NN code for\nhigh-dimensional systems called RuNNer, which was the first\nimplementation of high-dimensional NN potentials. Much of the\nmethodology has been originally developed with this code.\n",
      "dev_url": "https://gitlab.com/TheochemGoettingen/runner-wfas/",
      "doc_url": "https://www.uni-goettingen.de/de/560580.html",
      "home": "https://www.uni-goettingen.de/de/560580.html",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "RuNNer - a Neural Network code for high-dimensional systems"
    },
    "build": {
      "number": "4"
    },
    "extra": {
      "recipe-maintainers": [
        "lxknll",
        "jan-janssen"
      ]
    },
    "package": {
      "name": "runner",
      "version": "1.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make",
        "libgomp",
        "mpich-mpifort",
        "openmpi-mpifort"
      ],
      "host": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ],
      "run": [
        "mpich",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "mpi.patch",
        "gnu.patch"
      ],
      "sha256": "69965dcfde64530b7a75708c25e6243363e0a5745e66ac458a1e7086592538a2",
      "url": "https://gitlab.com/runner-suite/runner-conda/-/archive/1.3/runner-conda-1.3.tar.gz"
    },
    "test": {
      "commands": [
        "RuNNer.serial.x"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "libgomp",
        "make",
        "mpich-mpifort",
        "openmpi-mpifort"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "In order to develop Neural Network potential-energy surfaces for a\nvariety of system, we have developed our in-house NN code for\nhigh-dimensional systems called RuNNer, which was the first\nimplementation of high-dimensional NN potentials. Much of the\nmethodology has been originally developed with this code.\n",
      "dev_url": "https://gitlab.com/TheochemGoettingen/runner-wfas/",
      "doc_url": "https://www.uni-goettingen.de/de/560580.html",
      "home": "https://www.uni-goettingen.de/de/560580.html",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "RuNNer - a Neural Network code for high-dimensional systems"
    },
    "build": {
      "number": "4"
    },
    "extra": {
      "recipe-maintainers": [
        "lxknll",
        "jan-janssen"
      ]
    },
    "package": {
      "name": "runner",
      "version": "1.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make",
        "libgomp",
        "mpich-mpifort",
        "openmpi-mpifort",
        "llvm-openmp"
      ],
      "host": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ],
      "run": [
        "mpich",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "mpi.patch",
        "gnu.patch"
      ],
      "sha256": "69965dcfde64530b7a75708c25e6243363e0a5745e66ac458a1e7086592538a2",
      "url": "https://gitlab.com/runner-suite/runner-conda/-/archive/1.3/runner-conda-1.3.tar.gz"
    },
    "test": {
      "commands": [
        "RuNNer.serial.x"
      ]
    }
  },
  "name": "runner",
  "osx_64_meta_yaml": {
    "about": {
      "description": "In order to develop Neural Network potential-energy surfaces for a\nvariety of system, we have developed our in-house NN code for\nhigh-dimensional systems called RuNNer, which was the first\nimplementation of high-dimensional NN potentials. Much of the\nmethodology has been originally developed with this code.\n",
      "dev_url": "https://gitlab.com/TheochemGoettingen/runner-wfas/",
      "doc_url": "https://www.uni-goettingen.de/de/560580.html",
      "home": "https://www.uni-goettingen.de/de/560580.html",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "RuNNer - a Neural Network code for high-dimensional systems"
    },
    "build": {
      "number": "4"
    },
    "extra": {
      "recipe-maintainers": [
        "lxknll",
        "jan-janssen"
      ]
    },
    "package": {
      "name": "runner",
      "version": "1.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make",
        "llvm-openmp",
        "mpich-mpifort",
        "openmpi-mpifort"
      ],
      "host": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ],
      "run": [
        "mpich",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "mpi.patch",
        "gnu.patch"
      ],
      "sha256": "69965dcfde64530b7a75708c25e6243363e0a5745e66ac458a1e7086592538a2",
      "url": "https://gitlab.com/runner-suite/runner-conda/-/archive/1.3/runner-conda-1.3.tar.gz"
    },
    "test": {
      "commands": [
        "RuNNer.serial.x"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "make",
        "mpich-mpifort",
        "openmpi-mpifort"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "runner"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/runner.json"
  },
  "raw_meta_yaml": "{% set name = \"runner\" %}\n{% set version = \"1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/runner-suite/runner-conda/-/archive/{{ version }}/runner-conda-{{ version }}.tar.gz\n  sha256: 69965dcfde64530b7a75708c25e6243363e0a5745e66ac458a1e7086592538a2\n  patches:\n    - mpi.patch  # [mpi != 'nompi']\n    - gnu.patch\n\nbuild:\n  number: 4\n  skip: ture  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('fortran') }}\n    - make\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - {{ mpi }}-mpifort  # [mpi != 'nompi']\n  host:\n    - libblas\n    - liblapack\n    - {{ mpi }}  # [mpi != 'nompi']\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n\ntest:\n  commands:\n    - RuNNer.serial.x\n\nabout:\n  home: https://www.uni-goettingen.de/de/560580.html\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'RuNNer - a Neural Network code for high-dimensional systems'\n  description: |\n    In order to develop Neural Network potential-energy surfaces for a \n    variety of system, we have developed our in-house NN code for \n    high-dimensional systems called RuNNer, which was the first \n    implementation of high-dimensional NN potentials. Much of the \n    methodology has been originally developed with this code.\n  doc_url: https://www.uni-goettingen.de/de/560580.html\n  dev_url: https://gitlab.com/TheochemGoettingen/runner-wfas/\n\nextra:\n  recipe-maintainers:\n    - lxknll\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "fortran_compiler_stub",
      "libblas",
      "libgomp",
      "liblapack",
      "llvm-openmp",
      "make",
      "mpich",
      "mpich-mpifort",
      "openmpi",
      "openmpi-mpifort"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "mpich-mpifort",
        "openmpi-mpifort"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "fortran_compiler_stub",
        "libblas",
        "liblapack",
        "mpich",
        "openmp",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "fortran_compiler_stub",
        "mpich",
        "openmp",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "mpich-mpifort",
        "openmpi-mpifort"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://gitlab.com/runner-suite/runner-conda/-/archive/1.3/runner-conda-1.3.tar.gz",
  "version": "1.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/runner.json"
  }
}