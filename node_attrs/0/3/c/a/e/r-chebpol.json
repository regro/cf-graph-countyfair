{
  "archived": true,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    }
  },
  "feedstock_name": "r-chebpol",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/sgaure/chebpol",
      "license": "Artistic-2.0",
      "license_family": "OTHER",
      "license_file": [
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0"
      ],
      "summary": "Contains methods for creating multivariate/multidimensional interpolations of functions on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter method. For scattered data polyharmonic splines with a linear term is provided. The time-critical parts are written in C for speed. All interpolants are parallelized if used to evaluate more than one point."
    },
    "build": {
      "ignore_run_exports": "r-geometry",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-chebpol",
      "version": "2.1_2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-geometry",
        "gsl",
        "_openmp_mutex",
        "r-base",
        "r-geometry",
        "gsl",
        "_openmp_mutex"
      ]
    },
    "source": {
      "sha256": "f17f23a4e038f7cc7a5853710e5954019316426ee9710fb018c3cb442d7ecc88",
      "url": [
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('chebpol')\"",
        "$R -e \"library('chebpol')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-geometry"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "_openmp_mutex",
        "gsl",
        "r-base",
        "r-geometry"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/sgaure/chebpol",
      "license": "Artistic-2.0",
      "license_family": "OTHER",
      "license_file": [
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0"
      ],
      "summary": "Contains methods for creating multivariate/multidimensional interpolations of functions on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter method. For scattered data polyharmonic splines with a linear term is provided. The time-critical parts are written in C for speed. All interpolants are parallelized if used to evaluate more than one point."
    },
    "build": {
      "ignore_run_exports": "r-geometry",
      "merge_build_host": true,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-chebpol",
      "version": "2.1_2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "m2w64_c_compiler_stub",
        "filesystem",
        "sed",
        "grep",
        "autoconf",
        "automake-wrapper",
        "pkg-config",
        "make",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-geometry",
        "gsl",
        "_openmp_mutex",
        "r-base",
        "r-geometry",
        "gsl",
        "_openmp_mutex",
        "r-base",
        "r-geometry",
        "gsl",
        "r-base",
        "r-geometry",
        "gsl",
        "r-base",
        "gcc-libs",
        "r-geometry",
        "gsl"
      ]
    },
    "source": {
      "sha256": "f17f23a4e038f7cc7a5853710e5954019316426ee9710fb018c3cb442d7ecc88",
      "url": [
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('chebpol')\"",
        "$R -e \"library('chebpol')\"",
        "$R -e \"library('chebpol')\"",
        "$R -e \"library('chebpol')\"",
        "\"%R%\" -e \"library('chebpol')\""
      ]
    }
  },
  "name": "r-chebpol",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/sgaure/chebpol",
      "license": "Artistic-2.0",
      "license_family": "OTHER",
      "license_file": [
        "/lib/R/share/licenses/Artistic-2.0",
        "/lib/R/share/licenses/Artistic-2.0"
      ],
      "summary": "Contains methods for creating multivariate/multidimensional interpolations of functions on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter method. For scattered data polyharmonic splines with a linear term is provided. The time-critical parts are written in C for speed. All interpolants are parallelized if used to evaluate more than one point."
    },
    "build": {
      "ignore_run_exports": "r-geometry",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/",
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "zdk123",
        "conda-forge/r",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-chebpol",
      "version": "2.1_2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "c_compiler_stub",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack",
        "llvm-openmp"
      ],
      "run": [
        "r-base",
        "r-geometry",
        "gsl",
        "r-base",
        "r-geometry",
        "gsl"
      ]
    },
    "source": {
      "sha256": "f17f23a4e038f7cc7a5853710e5954019316426ee9710fb018c3cb442d7ecc88",
      "url": [
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('chebpol')\"",
        "$R -e \"library('chebpol')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-geometry"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gsl",
        "r-base",
        "r-geometry"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-chebpol"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-chebpol.json"
  },
  "raw_meta_yaml": "{% set version = '2.1-2' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-chebpol\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/chebpol_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/chebpol/chebpol_{{ version }}.tar.gz\n  sha256: f17f23a4e038f7cc7a5853710e5954019316426ee9710fb018c3cb442d7ecc88\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  ignore_run_exports: r-geometry\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed               # [win]\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n\n  host:\n    - r-base\n    - r-geometry\n    - libblas\n    - liblapack\n    - llvm-openmp  # [osx]\n\n  run:\n    - r-base\n    - {{ native }}gcc-libs         # [win]\n    - r-geometry\n    - gsl\n    - _openmp_mutex  # [linux]\n    \ntest:\n  commands:\n    - $R -e \"library('chebpol')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('chebpol')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/sgaure/chebpol\n\n  license: Artistic-2.0\n  summary: Contains methods for creating multivariate/multidimensional interpolations of functions\n    on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients\n    for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian\n    grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter\n    method. For scattered data polyharmonic splines with a linear term is provided.\n    The time-critical parts are written in C for speed. All interpolants are parallelized\n    if used to evaluate more than one point.\n\n  license_family: OTHER\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/Artistic-2.0'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - zdk123\n\n# Package: chebpol\n# Version: 2.1-2\n# Date: 2019-12-09\n# Title: Multivariate Interpolation\n# Authors@R: person(\"Simen\", \"Gaure\", email=\"Simen.Gaure@frisch.uio.no\", role=c(\"aut\",\"cre\"), comment=c(ORCID=\"https://orcid.org/0000-0001-7251-8747\"))\n# Copyright: 2013-2019, Simen Gaure\n# Imports: compiler, stats, geometry\n# Suggests: lattice, knitr, cubature, plot3D\n# SystemRequirements: fftw3 (>= 3.1.2), gsl\n# Description: Contains methods for creating multivariate/multidimensional interpolations of functions on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter method. For scattered data polyharmonic splines with a linear term is provided. The time-critical parts are written in C for speed. All interpolants are parallelized if used to evaluate more than one point.\n# License: Artistic-2.0\n# Classification/MSC: 41A05, 41A10, 41A50, 41A63, 65D05, 65T40\n# Classification/ACM: G.1.2\n# URL: https://github.com/sgaure/chebpol\n# VignetteBuilder: knitr\n# BugReports: https://github.com/sgaure/chebpol/issues\n# Encoding: UTF-8\n# RoxygenNote: 6.1.1\n# NeedsCompilation: yes\n# Packaged: 2019-12-09 11:33:11 UTC; sgaure\n# Author: Simen Gaure [aut, cre] (<https://orcid.org/0000-0001-7251-8747>)\n# Maintainer: Simen Gaure <Simen.Gaure@frisch.uio.no>\n# Repository: CRAN\n# Date/Publication: 2019-12-09 12:00:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "_openmp_mutex",
      "autoconf",
      "automake",
      "automake-wrapper",
      "c_compiler_stub",
      "coreutils",
      "filesystem",
      "gcc-libs",
      "grep",
      "gsl",
      "libblas",
      "liblapack",
      "llvm-openmp",
      "m2w64_c_compiler_stub",
      "make",
      "pkg-config",
      "r-base",
      "r-geometry",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "ctng-compilers",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "openmp",
        "r-base",
        "r-geometry"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "_openmp_mutex",
        "c_compiler_stub",
        "ctng-compilers",
        "gcc-libs",
        "gsl",
        "openmp",
        "r-base",
        "r-geometry"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-geometry"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "_openmp_mutex",
        "gcc-libs",
        "gsl",
        "r-base",
        "r-geometry"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz"
  ],
  "version": "2.1_2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-chebpol.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/sgaure/chebpol",
      "license": "Artistic-2.0",
      "license_family": "OTHER",
      "license_file": [
        "/lib/R/share/licenses/Artistic-2.0"
      ],
      "summary": "Contains methods for creating multivariate/multidimensional interpolations of functions on a hypercube. If available through fftw3, the DCT-II/FFT is used to compute coefficients for a Chebyshev interpolation. Other interpolation methods for arbitrary Cartesian grids are also provided, a piecewise multilinear, and the Floater-Hormann barycenter method. For scattered data polyharmonic splines with a linear term is provided. The time-critical parts are written in C for speed. All interpolants are parallelized if used to evaluate more than one point."
    },
    "build": {
      "ignore_run_exports": "r-geometry",
      "merge_build_host": true,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-chebpol",
      "version": "2.1_2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "filesystem",
        "sed",
        "grep",
        "autoconf",
        "automake-wrapper",
        "pkg-config",
        "make",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-geometry",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "gcc-libs",
        "r-geometry",
        "gsl"
      ]
    },
    "source": {
      "sha256": "f17f23a4e038f7cc7a5853710e5954019316426ee9710fb018c3cb442d7ecc88",
      "url": [
        "https://cran.r-project.org/src/contrib/chebpol_2.1-2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/chebpol/chebpol_2.1-2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('chebpol')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake-wrapper",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-geometry"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gcc-libs",
        "gsl",
        "r-base",
        "r-geometry"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}