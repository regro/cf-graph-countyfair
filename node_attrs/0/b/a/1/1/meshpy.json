{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "update-grayskull"
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "meshpy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "MeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are mainly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n",
      "dev_url": "https://github.com/inducer/meshpy",
      "doc_url": "https://documen.tician.de/meshpy",
      "home": "https://github.com/inducer/meshpy",
      "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
      "license_file": "doc/faq.rst",
      "summary": "Triangular and Tetrahedral Mesh Generator"
    },
    "build": {
      "number": "1",
      "script": [
        "$PYTHON -m build -w -n -x -Csetup-args=${MESON_ARGS// / -Csetup-args=}",
        "$PYTHON -m pip install dist/meshpy*.whl",
        "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "isuruf",
        "mwtoews"
      ]
    },
    "package": {
      "name": "meshpy",
      "version": "2025.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "numpy",
        "pybind11",
        "meson-python"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "MeshPy-2025.1.1.tar.gz",
      "sha256": "70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b",
      "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest test"
      ],
      "imports": [
        "meshpy"
      ],
      "requires": [
        "pytest",
        "pip"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "MeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are mainly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n",
      "dev_url": "https://github.com/inducer/meshpy",
      "doc_url": "https://documen.tician.de/meshpy",
      "home": "https://github.com/inducer/meshpy",
      "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
      "license_file": "doc/faq.rst",
      "summary": "Triangular and Tetrahedral Mesh Generator"
    },
    "build": {
      "number": "1",
      "script": [
        "$PYTHON -m build -w -n -x -Csetup-args=${MESON_ARGS// / -Csetup-args=}",
        "$PYTHON -m pip install dist/meshpy*.whl",
        "echo src/cpp/tetgen-LICENSE >> doc/faq.rst",
        "python -m pip install . -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "isuruf",
        "mwtoews"
      ]
    },
    "package": {
      "name": "meshpy",
      "version": "2025.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "numpy",
        "pybind11",
        "meson-python"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "MeshPy-2025.1.1.tar.gz",
      "sha256": "70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b",
      "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest test"
      ],
      "imports": [
        "meshpy"
      ],
      "requires": [
        "pytest",
        "pip"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "name": "meshpy",
  "osx_64_meta_yaml": {
    "about": {
      "description": "MeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are mainly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n",
      "dev_url": "https://github.com/inducer/meshpy",
      "doc_url": "https://documen.tician.de/meshpy",
      "home": "https://github.com/inducer/meshpy",
      "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
      "license_file": "doc/faq.rst",
      "summary": "Triangular and Tetrahedral Mesh Generator"
    },
    "build": {
      "number": "1",
      "script": [
        "$PYTHON -m build -w -n -x -Csetup-args=${MESON_ARGS// / -Csetup-args=}",
        "$PYTHON -m pip install dist/meshpy*.whl",
        "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "isuruf",
        "mwtoews"
      ]
    },
    "package": {
      "name": "meshpy",
      "version": "2025.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "numpy",
        "pybind11",
        "meson-python"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "MeshPy-2025.1.1.tar.gz",
      "sha256": "70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b",
      "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest test"
      ],
      "imports": [
        "meshpy"
      ],
      "requires": [
        "pytest",
        "pip"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "MeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are mainly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n",
      "dev_url": "https://github.com/inducer/meshpy",
      "doc_url": "https://documen.tician.de/meshpy",
      "home": "https://github.com/inducer/meshpy",
      "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
      "license_file": "doc/faq.rst",
      "summary": "Triangular and Tetrahedral Mesh Generator"
    },
    "build": {
      "number": "1",
      "script": [
        "$PYTHON -m build -w -n -x -Csetup-args=${MESON_ARGS// / -Csetup-args=}",
        "$PYTHON -m pip install dist/meshpy*.whl",
        "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "isuruf",
        "mwtoews"
      ]
    },
    "package": {
      "name": "meshpy",
      "version": "2025.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "numpy",
        "pybind11",
        "meson-python"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "MeshPy-2025.1.1.tar.gz",
      "sha256": "70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b",
      "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest test"
      ],
      "imports": [
        "meshpy"
      ],
      "requires": [
        "pytest",
        "pip"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "meshpy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/meshpy.json"
  },
  "raw_meta_yaml": "{% set name = \"meshpy\" %}\n{% set uname = \"MeshPy\" %}\n{% set version = \"2025.1.1\" %}\n{% set sha256 = \"70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ uname }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/{{ uname[0] }}/{{ uname }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script:\n    # Need to parse MESON_ARGS to make sure meson finds the correct executables for cross-compilation.\n    - $PYTHON -m build -w -n -x -Csetup-args=${MESON_ARGS// / -Csetup-args=}    # [unix]\n    - $PYTHON -m pip install dist/meshpy*.whl                                   # [unix]\n    - python -m pip install . -vv                                               # [win]\n    - echo src/cpp/tetgen-LICENSE >> doc/faq.rst\n  skip: true  # [py<310]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - ninja                                  # [build_platform != target_platform]\n    - meson-python                           # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - python-build\n    - pip\n    - numpy\n    - pybind11\n    - meson-python\n  run:\n    - python\n    - numpy\n\ntest:\n  source_files:\n    - test/*\n  requires:\n    - pytest\n    - pip\n  commands:\n    - pip check\n    - pytest test\n  imports:\n    - meshpy\n\nabout:\n  home: https://github.com/inducer/meshpy\n  license: MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later\n  license_file: doc/faq.rst\n  summary: Triangular and Tetrahedral Mesh Generator\n  description: |\n    MeshPy offers quality triangular and tetrahedral mesh generation for\n    Python. Meshes of this type are mainly used in finite-element\n    simulation codes, but also have many other applications ranging from\n    computer graphics to robotics.\n  doc_url: https://documen.tician.de/meshpy\n  dev_url: https://github.com/inducer/meshpy\n\nextra:\n  recipe-maintainers:\n    - inducer\n    - isuruf\n    - mwtoews\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "meson-python",
      "numpy",
      "pip",
      "pybind11",
      "python",
      "python-build"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz",
  "version": "2025.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/meshpy.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "MeshPy offers quality triangular and tetrahedral mesh generation for\nPython. Meshes of this type are mainly used in finite-element\nsimulation codes, but also have many other applications ranging from\ncomputer graphics to robotics.\n",
      "dev_url": "https://github.com/inducer/meshpy",
      "doc_url": "https://documen.tician.de/meshpy",
      "home": "https://github.com/inducer/meshpy",
      "license": "MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later",
      "license_file": "doc/faq.rst",
      "summary": "Triangular and Tetrahedral Mesh Generator"
    },
    "build": {
      "number": "1",
      "script": [
        "python -m pip install . -vv",
        "echo src/cpp/tetgen-LICENSE >> doc/faq.rst"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "inducer",
        "isuruf",
        "mwtoews"
      ]
    },
    "package": {
      "name": "meshpy",
      "version": "2025.1.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "numpy",
        "pybind11",
        "meson-python"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "MeshPy-2025.1.1.tar.gz",
      "sha256": "70fc707fe9ccd9e907b95a9271804b4dd02e77d60644f64a0384cbf9e6d5b86b",
      "url": "https://pypi.org/packages/source/M/MeshPy/meshpy-2025.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest test"
      ],
      "imports": [
        "meshpy"
      ],
      "requires": [
        "pytest",
        "pip"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "meson-python",
        "numpy",
        "pip",
        "pybind11",
        "python",
        "python-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  }
}