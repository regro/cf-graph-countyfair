{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "lmdbxx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.",
      "home": "https://github.com/drycpp/lmdbxx",
      "license": "Unlicense",
      "license_file": "UNLICENSE",
      "summary": "This is a comprehensive C++ wrapper for the LMDB embedded database library,"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "DerThorsten",
        "jjerphan"
      ]
    },
    "package": {
      "name": "lmdbxx",
      "version": "0.9.14.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Remove-checks-for-compiler-supporting-C-11.patch"
      ],
      "sha256": "8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec",
      "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2"
    },
    "test": {
      "commands": [
        "test -e ${PREFIX}/include/lmdb++.h"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.",
      "home": "https://github.com/drycpp/lmdbxx",
      "license": "Unlicense",
      "license_file": "UNLICENSE",
      "summary": "This is a comprehensive C++ wrapper for the LMDB embedded database library,"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "DerThorsten",
        "jjerphan"
      ]
    },
    "package": {
      "name": "lmdbxx",
      "version": "0.9.14.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Remove-checks-for-compiler-supporting-C-11.patch"
      ],
      "sha256": "8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec",
      "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2"
    },
    "test": {
      "commands": [
        "test -e ${PREFIX}/include/lmdb++.h",
        "if not exist %LIBRARY_PREFIX%\\include\\lmdb++.h (exit 1)"
      ]
    }
  },
  "name": "lmdbxx",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.",
      "home": "https://github.com/drycpp/lmdbxx",
      "license": "Unlicense",
      "license_file": "UNLICENSE",
      "summary": "This is a comprehensive C++ wrapper for the LMDB embedded database library,"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "DerThorsten",
        "jjerphan"
      ]
    },
    "package": {
      "name": "lmdbxx",
      "version": "0.9.14.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Remove-checks-for-compiler-supporting-C-11.patch"
      ],
      "sha256": "8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec",
      "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2"
    },
    "test": {
      "commands": [
        "test -e ${PREFIX}/include/lmdb++.h"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.",
      "home": "https://github.com/drycpp/lmdbxx",
      "license": "Unlicense",
      "license_file": "UNLICENSE",
      "summary": "This is a comprehensive C++ wrapper for the LMDB embedded database library,"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "DerThorsten",
        "jjerphan"
      ]
    },
    "package": {
      "name": "lmdbxx",
      "version": "0.9.14.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Remove-checks-for-compiler-supporting-C-11.patch"
      ],
      "sha256": "8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec",
      "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2"
    },
    "test": {
      "commands": [
        "test -e ${PREFIX}/include/lmdb++.h"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "lmdbxx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lmdbxx.json"
  },
  "raw_meta_yaml": "{% set name = \"lmdbxx\" %}\n{% set version = \"0.9.14.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/drycpp/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.bz2\n  sha256: 8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec\n  patches:\n    - 0001-Remove-checks-for-compiler-supporting-C-11.patch\n\nbuild:\n  number: 2\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n\ntest:\n  commands:\n    - test -e ${PREFIX}/include/lmdb++.h  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\lmdb++.h (exit 1)  # [win]\n\nabout:\n  home: https://github.com/drycpp/lmdbxx\n  summary: This is a comprehensive C++ wrapper for the LMDB embedded database library,\n  description: This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.\n\n\n  license: Unlicense\n  license_file: UNLICENSE\n\nextra:\n  recipe-maintainers:\n    - DerThorsten\n    - jjerphan\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cxx_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2",
  "version": "0.9.14.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lmdbxx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This is a comprehensive C++ wrapper for the LMDB embedded database library, offering both an error-checked procedural interface and an object-oriented resource interface with RAII semantics.",
      "home": "https://github.com/drycpp/lmdbxx",
      "license": "Unlicense",
      "license_file": "UNLICENSE",
      "summary": "This is a comprehensive C++ wrapper for the LMDB embedded database library,"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "DerThorsten",
        "jjerphan"
      ]
    },
    "package": {
      "name": "lmdbxx",
      "version": "0.9.14.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Remove-checks-for-compiler-supporting-C-11.patch"
      ],
      "sha256": "8121cc0a3f856584c5ce79638614468e2aba617d0338d14871f4ec7acbee2bec",
      "url": "https://github.com/drycpp/lmdbxx/releases/download/0.9.14.0/lmdbxx-0.9.14.0.tar.bz2"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\include\\lmdb++.h (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}