{
  "archived": true,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "prismatic_split",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n",
      "dev_url": "https://github.com/prism-em/prismatic",
      "home": "http://prism-em.com/",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments"
    },
    "build": {
      "number": "10"
    },
    "extra": {
      "recipe-maintainers": [
        "ericpre",
        "douglowe",
        "tschoonj"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ]
        },
        "test": {
          "commands": null,
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh gpu",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy",
            "__cuda"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ]
        },
        "test": {
          "commands": null,
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh gpu",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy",
            "__cuda"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": [
            "command -v prismatic-gui",
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw"
          ]
        },
        "test": {
          "commands": [
            "prismatic -i SI100.XYZ",
            "prismatic-double -i SI100.XYZ"
          ],
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": [
            "command -v prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy"
          ]
        },
        "test": {
          "commands": [
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      }
    ],
    "package": {
      "name": "prismatic_split",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cdt_stub",
        "make",
        "cmake",
        "pkg-config"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Fix-compilation-error-with-clang-macos-implicit-conv.patch"
      ],
      "sha256": "a568878462996160869456f2fcc721e1722322a4192e3dd9c6d80af2245072e7",
      "url": "https://github.com/prism-em/prismatic/archive/v2.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "h5py",
        "hdf5",
        "libboost-headers",
        "python",
        "qt-main",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "fftw",
        "h5py",
        "hdf5",
        "numpy",
        "prismatic_cli",
        "prismatic_gui",
        "pyprismatic",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n",
      "dev_url": "https://github.com/prism-em/prismatic",
      "home": "http://prism-em.com/",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments"
    },
    "build": {
      "number": "10"
    },
    "extra": {
      "recipe-maintainers": [
        "ericpre",
        "douglowe",
        "tschoonj"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ]
        },
        "test": {
          "commands": null,
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh gpu",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy",
            "__cuda"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ]
        },
        "test": {
          "commands": null,
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw",
            "__cuda"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh gpu",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy",
            "__cuda"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": [
            "command -v prismatic-gui",
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw"
          ]
        },
        "test": {
          "commands": [
            "prismatic -i SI100.XYZ",
            "prismatic-double -i SI100.XYZ"
          ],
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": [
            "command -v prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cdt_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy"
          ]
        },
        "test": {
          "commands": [
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      },
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw"
          ]
        },
        "test": {
          "commands": [
            "prismatic -i SI100.XYZ",
            "prismatic-double -i SI100.XYZ"
          ],
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy"
          ]
        },
        "test": {
          "commands": [
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      }
    ],
    "package": {
      "name": "prismatic_split",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cdt_stub",
        "make",
        "cmake",
        "pkg-config"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Fix-compilation-error-with-clang-macos-implicit-conv.patch"
      ],
      "sha256": "a568878462996160869456f2fcc721e1722322a4192e3dd9c6d80af2245072e7",
      "url": "https://github.com/prism-em/prismatic/archive/v2.0.tar.gz"
    }
  },
  "name": "prismatic_split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n",
      "dev_url": "https://github.com/prism-em/prismatic",
      "home": "http://prism-em.com/",
      "license": "GPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments"
    },
    "build": {
      "number": "10"
    },
    "extra": {
      "recipe-maintainers": [
        "ericpre",
        "douglowe",
        "tschoonj"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "10",
          "string": "cpu_pyh1234567_10"
        },
        "name": "prismatic",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "prismatic_cli",
            "prismatic_gui",
            "pyprismatic"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh cli",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_cli",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw"
          ],
          "run": [
            "hdf5",
            "fftw"
          ]
        },
        "test": {
          "commands": [
            "prismatic -i SI100.XYZ",
            "prismatic-double -i SI100.XYZ"
          ],
          "source_files": [
            "SI100.XYZ"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/combined_build_install.sh gui",
          "string": "cpu_h1234567_10"
        },
        "name": "prismatic_gui",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libboost-headers",
            "hdf5",
            "fftw",
            "qt-main"
          ],
          "run": [
            "hdf5",
            "fftw"
          ],
          "run_constrained": [
            "menuinst >=1.4.17"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui"
          ]
        }
      },
      {
        "build": {
          "script": "bash ${RECIPE_DIR}/build_pyprismatic.sh",
          "string": "cpu_pyh1234567_10"
        },
        "name": "pyprismatic",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "make",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "setuptools",
            "python",
            "libboost-headers",
            "hdf5",
            "fftw",
            "h5py"
          ],
          "run": [
            "fftw",
            "h5py",
            "numpy",
            "python",
            "scipy"
          ]
        },
        "test": {
          "commands": [
            "python -c \"import pyprismatic; pyprismatic.demo()\""
          ]
        }
      }
    ],
    "package": {
      "name": "prismatic_split",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "cmake",
        "pkg-config"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Fix-compilation-error-with-clang-macos-implicit-conv.patch"
      ],
      "sha256": "a568878462996160869456f2fcc721e1722322a4192e3dd9c6d80af2245072e7",
      "url": "https://github.com/prism-em/prismatic/archive/v2.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "h5py",
        "hdf5",
        "libboost-headers",
        "python",
        "qt-main",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fftw",
        "h5py",
        "hdf5",
        "numpy",
        "prismatic_cli",
        "prismatic_gui",
        "pyprismatic",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "prismatic",
      "prismatic_cli",
      "prismatic_gui",
      "pyprismatic"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/prismatic_split.json"
  },
  "raw_meta_yaml": "{% set processor = \"cpu\" %}\n{% set version = \"2.0\" %}\n{% set build = 10 %}\n\n{% set processor = \"cpu\" if cuda_compiler_version == \"None\" else \"gpu\" %}  # [not osx]\n{% set processor = \"cpu\" %}  # [osx]\n\n# Prioritize gpu build if cudatoolkit can be installed (through __cuda virtual package)\n{% set build = build + 100 if processor == \"gpu\" else build %}\n\npackage:\n  name: prismatic_split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/prism-em/prismatic/archive/v{{ version }}.tar.gz\n  sha256: a568878462996160869456f2fcc721e1722322a4192e3dd9c6d80af2245072e7\n  patches:\n    - 0001-Fix-compilation-error-with-clang-macos-implicit-conv.patch\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != \"None\"]\n    - {{ cdt('libxext-devel') }}         # [linux]\n    - {{ cdt('mesa-libgl-devel') }}      # [linux]\n    - {{ cdt('mesa-dri-drivers') }}      # [linux]\n    - {{ cdt('libxau-devel') }}          # [linux]\n    - {{ cdt('libselinux-devel') }}      # [linux]\n    - {{ cdt('libxdamage') }}            # [linux]\n    - {{ cdt('libxfixes') }}             # [linux]\n    - {{ cdt('libxxf86vm') }}            # [linux]\n    - make                               # [unix]\n    - ninja                              # [win]\n    - cmake\n    - pkg-config\n\n\noutputs:\n  - name: prismatic\n    build:\n      number: {{ build }}\n      skip: true  # [py2k]\n      string: {{ processor }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n    requirements:\n      host:\n        - python\n      run:\n        - {{ pin_subpackage('prismatic_cli', exact=True) }}\n        - {{ pin_subpackage('prismatic_gui', exact=True) }}\n        - {{ pin_subpackage('pyprismatic', exact=True) }}\n\n    test:\n      commands:\n        - command -v prismatic-gui  # [linux64 and cuda_compiler_version == \"None\"]\n        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]\n        - where prismatic-gui  # [win and cuda_compiler_version == \"None\"]\n        - where prismatic  # [win and cuda_compiler_version == \"None\"]\n        - python -c \"import pyprismatic; pyprismatic.demo()\"  # [not osx and cuda_compiler_version == \"None\"]\n\n  - name: prismatic_cli\n    build:\n      string: {{ processor }}_h{{ PKG_HASH }}_{{ build }}\n      script: bash ${RECIPE_DIR}/combined_build_install.sh cli  # [not win]\n      script: {{ RECIPE_DIR }}\\build.bat cli  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - ninja                              # [win]\n        - cmake\n        - pkg-config\n      host:\n        - libboost-headers\n        - hdf5\n        - fftw\n      run:\n        - hdf5\n        - fftw\n        - __cuda  # [not osx and cuda_compiler_version != \"None\"]\n\n    test:\n      source_files:\n        - SI100.XYZ\n      commands:\n        - prismatic -i SI100.XYZ  # [(not osx and cuda_compiler_version == \"None\") or osx]\n        - prismatic-double -i SI100.XYZ  # [(not osx and cuda_compiler_version == \"None\") or osx]\n\n  - name: prismatic_gui\n    build:\n      string: {{ processor }}_h{{ PKG_HASH }}_{{ build }}\n      script: bash ${RECIPE_DIR}/combined_build_install.sh gui  # [not win]\n      script: {{ RECIPE_DIR }}\\build.bat gui  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - ninja                              # [win]\n        - cmake\n        - pkg-config\n      host:\n        - libboost-headers\n        - hdf5\n        - fftw\n        - qt-main\n      run:\n        - hdf5\n        - fftw\n        - __cuda  # [not osx and cuda_compiler_version != \"None\"]\n      run_constrained:\n        - menuinst >=1.4.17\n\n    test:\n      commands:\n        - command -v prismatic-gui  # [linux64 and cuda_compiler_version == \"None\"]\n        - test -f $PREFIX/Applications/prismatic-gui.app/Contents/MacOS/prismatic-gui  # [osx]\n        - where prismatic-gui  # [win and cuda_compiler_version == \"None\"]\n        - if not exist %PREFIX%\\\\Menu\\\\prismatic_gui.json exit 1  # [win and cuda_compiler_version == \"None\"]\n        - if not exist %PREFIX%\\\\Menu\\\\prismatic.ico exit 1  # [win and cuda_compiler_version == \"None\"]\n\n  - name: pyprismatic\n    build:\n      skip: true  # [py2k]\n      string: {{ processor }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n      script: bash ${RECIPE_DIR}/build_pyprismatic.sh gpu  # [linux64 and cuda_compiler_version != \"None\"]\n      script: bash ${RECIPE_DIR}/build_pyprismatic.sh  # [(linux64 and cuda_compiler_version == \"None\") or osx]\n      script: {{ RECIPE_DIR }}\\build_pyprismatic.bat  # [win]\n\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}  # [not osx and cuda_compiler_version != \"None\"]\n        - {{ cdt('libxext-devel') }}         # [linux]\n        - {{ cdt('mesa-libgl-devel') }}      # [linux]\n        - {{ cdt('mesa-dri-drivers') }}      # [linux]\n        - {{ cdt('libxau-devel') }}          # [linux]\n        - {{ cdt('libselinux-devel') }}      # [linux]\n        - {{ cdt('libxdamage') }}            # [linux]\n        - {{ cdt('libxfixes') }}             # [linux]\n        - {{ cdt('libxxf86vm') }}            # [linux]\n        - make                               # [unix]\n        - ninja                              # [win]\n        - cmake\n        - pkg-config\n      host:\n        - setuptools\n        - python\n        - libboost-headers\n        - hdf5\n        - fftw\n        - h5py\n      run:\n        - fftw\n        - h5py\n        - numpy\n        - python\n        - scipy\n        - __cuda  # [not osx and cuda_compiler_version != \"None\"]\n\n    test:\n      commands:\n        - python -c \"import pyprismatic; pyprismatic.demo()\"  # [(not osx and cuda_compiler_version == \"None\") or osx]\n\nabout:\n  home: http://prism-em.com/\n  license: GPL-3.0-only\n  license_file: LICENSE\n  summary: CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n  description: |\n    CPU / GPU software for fast simulation of Scanning Transmission Electron Microscopy (STEM) experiments\n  dev_url: https://github.com/prism-em/prismatic\n\nextra:\n  recipe-maintainers:\n    - ericpre\n    - douglowe\n    - tschoonj\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "c_compiler_stub",
      "cdt_stub",
      "cmake",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "fftw",
      "h5py",
      "hdf5",
      "libboost-headers",
      "make",
      "numpy",
      "pkg-config",
      "prismatic_cli",
      "prismatic_gui",
      "pyprismatic",
      "python",
      "qt-main",
      "scipy",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fftw",
        "h5py",
        "hdf5",
        "libboost-headers",
        "python",
        "qt-main",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fftw",
        "h5py",
        "hdf5",
        "numpy",
        "prismatic_cli",
        "prismatic_gui",
        "pyprismatic",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fftw",
        "h5py",
        "hdf5",
        "libboost-headers",
        "python",
        "qt-main",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "fftw",
        "h5py",
        "hdf5",
        "numpy",
        "prismatic_cli",
        "prismatic_gui",
        "pyprismatic",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/prism-em/prismatic/archive/v2.0.tar.gz",
  "version": "2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/prismatic_split.json"
  }
}