{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "15cd058b32e5bdb769bfe78176b094082774ccc4",
  "feedstock_hash_ts": 1754133224,
  "feedstock_name": "coin-or-clp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp"
      ],
      "requires": null
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp"
      ],
      "requires": null
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp"
      ],
      "requires": null
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make",
        "m2-make",
        "m2-pkg-config",
        "m2-grep",
        "m2-sed",
        "m2-bash",
        "m2-base"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2",
        "mkl-devel"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp",
        "if not exist %LIBRARY_LIB%/libClp.lib exit 1",
        "if not exist %LIBRARY_INC%/coin/CoinSort.hpp exit 1",
        "strings %LIBRARY_LIB%\\\\libClp.lib | findstr /C:\"RuntimeLibrary=MD\""
      ],
      "requires": [
        "binutils"
      ]
    }
  },
  "name": "coin-or-clp",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp"
      ],
      "requires": null
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "gnuconfig",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "pkg-config",
        "make"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libClp${SHLIB_EXT}",
        "test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}",
        "test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp",
        "test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp",
        "echo ? | clp"
      ],
      "requires": null
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "coin-or-clp"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/coin-or-clp.json"
  },
  "raw_meta_yaml": "{% set name = \"coin-or-clp\" %}\n{% set version = \"1.17.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/coin-or/Clp/archive/releases/{{ version }}.tar.gz\n  sha256: 0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885\n  patches:\n    - 0001-Patch-for-downstream.patch\n\nbuild:\n  number: 3\n  run_exports:\n    - {{ pin_subpackage(name, min_pin='x.x', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - gnuconfig  # [unix]\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}  # [unix]\n    - pkg-config  # [unix]\n    - make  # [unix]\n    - m2-make  # [win]\n    - m2-pkg-config  # [win]\n    - m2-grep  # [win]\n    - m2-sed  # [win]\n    - m2-bash  # [win]\n    - m2-base  # [win]\n  host:\n    - coin-or-utils\n    - coin-or-osi\n    - blas-devel\n    - libblas  # [unix]\n    - libcblas\n    - liblapack\n    - liblapacke  # [unix]\n    - mkl-devel  # [win]\n    - zlib\n    - bzip2\n  run_constrained:\n    - coincbc * *_metapackage\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libClp${SHLIB_EXT}                    # [unix]\n    - test -f $PREFIX/lib/libOsiClp${SHLIB_EXT}                 # [unix]\n    - test -f $PREFIX/include/coin/ClpGubDynamicMatrix.hpp      # [unix]\n    - test -f $PREFIX/include/coin/OsiClpSolverInterface.hpp    # [unix]\n    - if not exist %LIBRARY_LIB%/libClp.lib exit 1              # [win]\n    - if not exist %LIBRARY_INC%/coin/CoinSort.hpp exit 1       # [win]\n    - echo ? | clp\n    - strings %LIBRARY_LIB%\\\\libClp.lib | findstr /C:\"RuntimeLibrary=MD\"  # [win]\n  requires:\n    - binutils  # [win]\n\nabout:\n  home: https://projects.coin-or.org/Clp\n  dev_url: https://github.com/coin-or/Clp\n  license: EPL-2.0\n  license_family: OTHER\n  license_file: LICENSE\n  summary: COIN-OR linear programming (Clp)\n  description: |\n    Clp (Coin-or linear programming) is an open-source linear programming solver.\n    It is primarily meant to be used as a callable library, but a basic,\n    stand-alone executable version is also available. It is designed to find\n    solutions of mathematical optimization problems of the form\n\n    minimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\n    CLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - tkralphs\n    - jschueller\n",
  "req": {
    "__set__": true,
    "elements": [
      "blas-devel",
      "bzip2",
      "c_compiler_stub",
      "c_stdlib_stub",
      "coin-or-osi",
      "coin-or-utils",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "gnuconfig",
      "libblas",
      "libcblas",
      "liblapack",
      "liblapacke",
      "m2-base",
      "m2-bash",
      "m2-grep",
      "m2-make",
      "m2-pkg-config",
      "m2-sed",
      "make",
      "mkl-devel",
      "pkg-config",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "m2-base",
        "m2-bash",
        "m2-grep",
        "m2-make",
        "m2-pkg-config",
        "m2-sed",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coin-or-osi",
        "coin-or-utils",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "mkl-devel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "binutils"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "gnuconfig",
        "m2-base",
        "m2-bash",
        "m2-grep",
        "m2-make",
        "m2-pkg-config",
        "m2-sed",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "mkl-devel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "binutils"
      ]
    }
  },
  "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz",
  "version": "1.17.10",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/coin-or-clp.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Clp (Coin-or linear programming) is an open-source linear programming solver.\nIt is primarily meant to be used as a callable library, but a basic,\nstand-alone executable version is also available. It is designed to find\nsolutions of mathematical optimization problems of the form\n\nminimize c'x such that lhs ≤ Ax ≤ rhs and lb ≤ x ≤ ub\n\nCLP includes primal and dual Simplex solvers. Both dual and primal algorithms can use matrix storage methods provided by the user (0-1 and network matrices are already supported in addition to the default sparse matrix). The dual algorithm has Dantzig and Steepest edge row pivot choices; new ones may be provided by the user. The same is true for the column pivot choice of the primal algorithm. The primal can also use a non linear cost which should work for piecewise linear convex functions. CLP also includes a barrier method for solving LPs.\n",
      "dev_url": "https://github.com/coin-or/Clp",
      "home": "https://projects.coin-or.org/Clp",
      "license": "EPL-2.0",
      "license_family": "OTHER",
      "license_file": "LICENSE",
      "summary": "COIN-OR linear programming (Clp)"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "coin-or-clp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "tkralphs",
        "jschueller"
      ]
    },
    "package": {
      "name": "coin-or-clp",
      "version": "1.17.10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-make",
        "m2-pkg-config",
        "m2-grep",
        "m2-sed",
        "m2-bash",
        "m2-base"
      ],
      "host": [
        "coin-or-utils",
        "coin-or-osi",
        "blas-devel",
        "libcblas",
        "liblapack",
        "mkl-devel",
        "zlib",
        "bzip2"
      ],
      "run_constrained": [
        "coincbc * *_metapackage"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-Patch-for-downstream.patch"
      ],
      "sha256": "0d79ece896cdaa4a3855c37f1c28e6c26285f74d45f635046ca0b6d68a509885",
      "url": "https://github.com/coin-or/Clp/archive/releases/1.17.10.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_LIB%/libClp.lib exit 1",
        "if not exist %LIBRARY_INC%/coin/CoinSort.hpp exit 1",
        "echo ? | clp",
        "strings %LIBRARY_LIB%\\\\libClp.lib | findstr /C:\"RuntimeLibrary=MD\""
      ],
      "requires": [
        "binutils"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "m2-base",
        "m2-bash",
        "m2-grep",
        "m2-make",
        "m2-pkg-config",
        "m2-sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas-devel",
        "bzip2",
        "coin-or-osi",
        "coin-or-utils",
        "libcblas",
        "liblapack",
        "mkl-devel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "binutils"
      ]
    }
  }
}