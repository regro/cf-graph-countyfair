{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "dingo-gw",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Dingo is a Python program for analyzing gravitational wave data using\nneural posterior estimation. It dramatically speeds up inference of\nastrophysical source parameters from data measured at gravitational-wave\nobservatories. Dingo aims to enable the routine use of the most\nadvanced theoretical models in analyzing data, to make rapid predictions\nfor multi-messenger counterparts, and to do so in the context of\nsensitive detectors with high event rates.\n",
      "dev_url": "https://github.com/dingo-gw/dingo",
      "doc_url": "https://dingo-gw.readthedocs.io/",
      "home": "https://github.com/dingo-gw/dingo",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Deep inference for gravitational-wave observations"
    },
    "build": {
      "entry_points": [
        "dingo_append_training_stage = dingo.gw.training:append_stage",
        "dingo_build_svd = dingo.gw.dataset.utils:build_svd_cli",
        "dingo_estimate_psds = dingo.gw.noise.asd_estimation:download_and_estimate_cli",
        "dingo_generate_asd_dataset = dingo.gw.noise.generate_dataset:generate_dataset",
        "dingo_generate_dataset = dingo.gw.dataset.generate_dataset:main",
        "dingo_generate_dataset_dag = dingo.gw.dataset.generate_dataset_dag:main",
        "dingo_generate_synthetic_asd_dataset = dingo.gw.noise.synthetic.generate_dataset:main",
        "dingo_ls = dingo.gw.ls_cli:ls",
        "dingo_pipe = dingo.pipe.main:main",
        "dingo_pipe_importance_sampling = dingo.pipe.importance_sampling:main",
        "dingo_pipe_generation = dingo.pipe.data_generation:main",
        "dingo_pipe_plot = dingo.pipe.plot:main",
        "dingo_pipe_pp_test = dingo.pipe.pp_test:main",
        "dingo_pipe_sampling = dingo.pipe.sampling:main",
        "dingo_pt_to_hdf5 = dingo.core.utils.pt_to_hdf5:main",
        "dingo_merge_datasets = dingo.gw.dataset.utils:merge_datasets_cli",
        "dingo_merge_asd_datasets = dingo.gw.noise.utils:merge_datasets_cli",
        "dingo_result = dingo.pipe.dingo_result:main",
        "dingo_train = dingo.gw.training:train_local",
        "dingo_train_condor = dingo.gw.training.train_pipeline_condor:train_condor"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "stephengreen",
        "max-dax"
      ]
    },
    "package": {
      "name": "dingo-gw",
      "version": "0.8.6"
    },
    "requirements": {
      "host": [
        "python >=3.10,<3.12",
        "setuptools >=62.0",
        "setuptools-scm >=6.2",
        "pip"
      ],
      "run": [
        "astropy-base",
        "bilby",
        "bilby_pipe",
        "configargparse",
        "corner",
        "glasflow",
        "gwpy",
        "h5py",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pesummary",
        "pycbc",
        "pycondor",
        "python >=3.10,<3.12",
        "python-lal >=7.3.1",
        "python-lalsimulation >=5.2.0",
        "pytorch",
        "pyyaml",
        "requests",
        "scikit-learn",
        "scipy",
        "threadpoolctl",
        "torchdiffeq",
        "torchvision",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "no-lalsuite.patch"
      ],
      "sha256": "b8a237c0b17139f18d6b5c9c74f3d56e885775e4532469712ba0b86d4719de76",
      "url": "https://pypi.org/packages/source/d/dingo-gw/dingo_gw-0.8.6.tar.gz"
    },
    "test": {
      "commands": [
        "dingo_append_training_stage --help",
        "dingo_build_svd --help",
        "dingo_estimate_psds --help",
        "dingo_generate_asd_dataset --help",
        "dingo_generate_dataset --help",
        "dingo_generate_dataset_dag --help",
        "dingo_generate_synthetic_asd_dataset --help",
        "dingo_ls --help",
        "dingo_merge_asd_datasets --help",
        "dingo_merge_datasets --help",
        "dingo_pipe --help",
        "dingo_pipe_generation --help",
        "dingo_pipe_importance_sampling --help",
        "dingo_pipe_plot --help",
        "dingo_pipe_sampling --help",
        "dingo_pt_to_hdf5 --help",
        "dingo_result --help",
        "dingo_train --help",
        "dingo_train_condor --help"
      ],
      "imports": [
        "dingo"
      ],
      "requires": [
        "pip",
        "xarray >=0.21.0",
        "python >=3.10,<3.12"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "bilby",
        "bilby_pipe",
        "configargparse",
        "corner",
        "glasflow",
        "gwpy",
        "h5py",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pesummary",
        "pycbc",
        "pycondor",
        "python",
        "python-lal",
        "python-lalsimulation",
        "pytorch",
        "pyyaml",
        "requests",
        "scikit-learn",
        "scipy",
        "threadpoolctl",
        "torchdiffeq",
        "torchvision",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "xarray"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Dingo is a Python program for analyzing gravitational wave data using\nneural posterior estimation. It dramatically speeds up inference of\nastrophysical source parameters from data measured at gravitational-wave\nobservatories. Dingo aims to enable the routine use of the most\nadvanced theoretical models in analyzing data, to make rapid predictions\nfor multi-messenger counterparts, and to do so in the context of\nsensitive detectors with high event rates.\n",
      "dev_url": "https://github.com/dingo-gw/dingo",
      "doc_url": "https://dingo-gw.readthedocs.io/",
      "home": "https://github.com/dingo-gw/dingo",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Deep inference for gravitational-wave observations"
    },
    "build": {
      "entry_points": [
        "dingo_append_training_stage = dingo.gw.training:append_stage",
        "dingo_build_svd = dingo.gw.dataset.utils:build_svd_cli",
        "dingo_estimate_psds = dingo.gw.noise.asd_estimation:download_and_estimate_cli",
        "dingo_generate_asd_dataset = dingo.gw.noise.generate_dataset:generate_dataset",
        "dingo_generate_dataset = dingo.gw.dataset.generate_dataset:main",
        "dingo_generate_dataset_dag = dingo.gw.dataset.generate_dataset_dag:main",
        "dingo_generate_synthetic_asd_dataset = dingo.gw.noise.synthetic.generate_dataset:main",
        "dingo_ls = dingo.gw.ls_cli:ls",
        "dingo_pipe = dingo.pipe.main:main",
        "dingo_pipe_importance_sampling = dingo.pipe.importance_sampling:main",
        "dingo_pipe_generation = dingo.pipe.data_generation:main",
        "dingo_pipe_plot = dingo.pipe.plot:main",
        "dingo_pipe_pp_test = dingo.pipe.pp_test:main",
        "dingo_pipe_sampling = dingo.pipe.sampling:main",
        "dingo_pt_to_hdf5 = dingo.core.utils.pt_to_hdf5:main",
        "dingo_merge_datasets = dingo.gw.dataset.utils:merge_datasets_cli",
        "dingo_merge_asd_datasets = dingo.gw.noise.utils:merge_datasets_cli",
        "dingo_result = dingo.pipe.dingo_result:main",
        "dingo_train = dingo.gw.training:train_local",
        "dingo_train_condor = dingo.gw.training.train_pipeline_condor:train_condor"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "stephengreen",
        "max-dax"
      ]
    },
    "package": {
      "name": "dingo-gw",
      "version": "0.8.6"
    },
    "requirements": {
      "host": [
        "python >=3.10,<3.12",
        "setuptools >=62.0",
        "setuptools-scm >=6.2",
        "pip"
      ],
      "run": [
        "astropy-base",
        "bilby",
        "bilby_pipe",
        "configargparse",
        "corner",
        "glasflow",
        "gwpy",
        "h5py",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pesummary",
        "pycbc",
        "pycondor",
        "python >=3.10,<3.12",
        "python-lal >=7.3.1",
        "python-lalsimulation >=5.2.0",
        "pytorch",
        "pyyaml",
        "requests",
        "scikit-learn",
        "scipy",
        "threadpoolctl",
        "torchdiffeq",
        "torchvision",
        "tqdm"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "no-lalsuite.patch"
      ],
      "sha256": "b8a237c0b17139f18d6b5c9c74f3d56e885775e4532469712ba0b86d4719de76",
      "url": "https://pypi.org/packages/source/d/dingo-gw/dingo_gw-0.8.6.tar.gz"
    },
    "test": {
      "commands": [
        "dingo_append_training_stage --help",
        "dingo_build_svd --help",
        "dingo_estimate_psds --help",
        "dingo_generate_asd_dataset --help",
        "dingo_generate_dataset --help",
        "dingo_generate_dataset_dag --help",
        "dingo_generate_synthetic_asd_dataset --help",
        "dingo_ls --help",
        "dingo_merge_asd_datasets --help",
        "dingo_merge_datasets --help",
        "dingo_pipe --help",
        "dingo_pipe_generation --help",
        "dingo_pipe_importance_sampling --help",
        "dingo_pipe_plot --help",
        "dingo_pipe_sampling --help",
        "dingo_pt_to_hdf5 --help",
        "dingo_result --help",
        "dingo_train --help",
        "dingo_train_condor --help"
      ],
      "imports": [
        "dingo"
      ],
      "requires": [
        "pip",
        "xarray >=0.21.0",
        "python >=3.10,<3.12"
      ]
    }
  },
  "name": "dingo-gw",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "dingo-gw"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/dingo-gw.json"
  },
  "raw_meta_yaml": "{% set name = \"dingo-gw\" %}\n{% set version = \"0.8.6\" %}\n\n{% set python_min = \"3.10\" %}\n{% set python_max = \"3.12\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz\n  sha256: b8a237c0b17139f18d6b5c9c74f3d56e885775e4532469712ba0b86d4719de76\n  patches:\n    - no-lalsuite.patch\n\nbuild:\n  entry_points:\n    - dingo_append_training_stage = dingo.gw.training:append_stage\n    - dingo_build_svd = dingo.gw.dataset.utils:build_svd_cli\n    - dingo_estimate_psds = dingo.gw.noise.asd_estimation:download_and_estimate_cli\n    - dingo_generate_asd_dataset = dingo.gw.noise.generate_dataset:generate_dataset\n    - dingo_generate_dataset = dingo.gw.dataset.generate_dataset:main\n    - dingo_generate_dataset_dag = dingo.gw.dataset.generate_dataset_dag:main\n    - dingo_generate_synthetic_asd_dataset = dingo.gw.noise.synthetic.generate_dataset:main\n    - dingo_ls = dingo.gw.ls_cli:ls\n    - dingo_pipe = dingo.pipe.main:main\n    - dingo_pipe_importance_sampling = dingo.pipe.importance_sampling:main\n    - dingo_pipe_generation = dingo.pipe.data_generation:main\n    - dingo_pipe_plot = dingo.pipe.plot:main\n    - dingo_pipe_pp_test = dingo.pipe.pp_test:main\n    - dingo_pipe_sampling = dingo.pipe.sampling:main\n    - dingo_pt_to_hdf5 = dingo.core.utils.pt_to_hdf5:main\n    - dingo_merge_datasets = dingo.gw.dataset.utils:merge_datasets_cli\n    - dingo_merge_asd_datasets = dingo.gw.noise.utils:merge_datasets_cli\n    - dingo_result = dingo.pipe.dingo_result:main\n    - dingo_train = dingo.gw.training:train_local\n    - dingo_train_condor = dingo.gw.training.train_pipeline_condor:train_condor\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python >={{ python_min }},<{{ python_max }}\n    - setuptools >=62.0\n    - setuptools-scm >=6.2\n    - pip\n  run:\n    - astropy-base\n    - bilby\n    - bilby_pipe\n    - configargparse\n    - corner\n    - glasflow\n    - gwpy\n    - h5py\n    - matplotlib-base\n    - numpy\n    - pandas\n    - pesummary\n    - pycbc\n    - pycondor\n    - python >={{ python_min }},<{{ python_max }}\n    - python-lal >=7.3.1\n    - python-lalsimulation >=5.2.0\n    - pytorch\n    - pyyaml\n    - requests\n    - scikit-learn\n    - scipy\n    - threadpoolctl\n    - torchdiffeq\n    - torchvision\n    - tqdm\n\ntest:\n  imports:\n    - dingo\n  commands:\n    # - pip check  # Do not run since sxs package causes failure due to dependencies\n    - dingo_append_training_stage --help\n    - dingo_build_svd --help\n    - dingo_estimate_psds --help\n    - dingo_generate_asd_dataset --help\n    - dingo_generate_dataset --help\n    - dingo_generate_dataset_dag --help\n    - dingo_generate_synthetic_asd_dataset --help\n    - dingo_ls --help\n    - dingo_merge_asd_datasets --help\n    - dingo_merge_datasets --help\n    - dingo_pipe --help\n    - dingo_pipe_generation --help\n    - dingo_pipe_importance_sampling --help\n    - dingo_pipe_plot --help\n    - dingo_pipe_sampling --help\n    - dingo_pt_to_hdf5 --help\n    - dingo_result --help\n    - dingo_train --help\n    - dingo_train_condor --help\n  requires:\n    - pip\n    # forcibly install uptodate xarray so that pip check doesn't choke on arviz\n    - xarray >=0.21.0\n    - python >={{ python_min }},<{{ python_max }}\n\nabout:\n  home: https://github.com/dingo-gw/dingo\n  summary: Deep inference for gravitational-wave observations\n  description: |\n    Dingo is a Python program for analyzing gravitational wave data using\n    neural posterior estimation. It dramatically speeds up inference of\n    astrophysical source parameters from data measured at gravitational-wave\n    observatories. Dingo aims to enable the routine use of the most\n    advanced theoretical models in analyzing data, to make rapid predictions\n    for multi-messenger counterparts, and to do so in the context of\n    sensitive detectors with high event rates.\n  license: MIT\n  license_file: LICENSE\n  doc_url: https://dingo-gw.readthedocs.io/\n  dev_url: https://github.com/dingo-gw/dingo\n\nextra:\n  recipe-maintainers:\n    - stephengreen\n    - max-dax\n",
  "req": {
    "__set__": true,
    "elements": [
      "astropy-base",
      "bilby",
      "bilby_pipe",
      "configargparse",
      "corner",
      "glasflow",
      "gwpy",
      "h5py",
      "matplotlib-base",
      "numpy",
      "pandas",
      "pesummary",
      "pip",
      "pycbc",
      "pycondor",
      "python",
      "python-lal",
      "python-lalsimulation",
      "pytorch",
      "pyyaml",
      "requests",
      "scikit-learn",
      "scipy",
      "setuptools",
      "setuptools-scm",
      "threadpoolctl",
      "torchdiffeq",
      "torchvision",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "bilby",
        "bilby_pipe",
        "configargparse",
        "corner",
        "glasflow",
        "gwpy",
        "h5py",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pesummary",
        "pycbc",
        "pycondor",
        "python",
        "python-lal",
        "python-lalsimulation",
        "pytorch",
        "pyyaml",
        "requests",
        "scikit-learn",
        "scipy",
        "threadpoolctl",
        "torchdiffeq",
        "torchvision",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "xarray"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.10,<3.12",
        "setuptools >=62.0",
        "setuptools-scm >=6.2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "astropy-base",
        "bilby",
        "bilby_pipe",
        "configargparse",
        "corner",
        "glasflow",
        "gwpy",
        "h5py",
        "matplotlib-base",
        "numpy",
        "pandas",
        "pesummary",
        "pycbc",
        "pycondor",
        "python >=3.10,<3.12",
        "python-lal >=7.3.1",
        "python-lalsimulation >=5.2.0",
        "pytorch",
        "pyyaml",
        "requests",
        "scikit-learn",
        "scipy",
        "threadpoolctl",
        "torchdiffeq",
        "torchvision",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.10,<3.12",
        "xarray >=0.21.0"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/d/dingo-gw/dingo_gw-0.8.6.tar.gz",
  "version": "0.8.6",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/dingo-gw.json"
  }
}