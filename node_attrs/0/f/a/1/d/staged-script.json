{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "235b14b672bf1b36c3f1a7cf2ea5c2ab135119e1",
  "feedstock_hash_ts": 1761068959,
  "feedstock_name": "staged-script",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Python is an ideal language for certain types of infrastructure automation.\nAutomating what a user does manually often involves walking through a\nseries of stages.  A user may wish to run all the stages in series, or\nperhaps only a subset, and depending on how things go, certain stages may\nneed to be retried.  Once the script finishes running, it'd be ideal if it\ncould tell the user exactly what was run, for the sake of easing\nreplicability.  staged-script aims to ease the development such automation\nscripts.  It's easy to get started with, but also provides significant\npower-user functionality for those who need it.\n",
      "dev_url": "https://github.com/sandialabs/staged-script",
      "doc_url": "https://staged-script.readthedocs.io/",
      "home": "https://github.com/sandialabs/staged-script",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.md",
      "summary": "A Python package enabling the development of robust automation scripts that\nare subdivided into stages.\n"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jmgate"
      ]
    },
    "package": {
      "name": "staged-script",
      "version": "2.0.5"
    },
    "requirements": {
      "host": [
        "pip",
        "poetry-core",
        "python 3.10"
      ],
      "run": [
        "python >=3.10",
        "reverse-argparse",
        "rich",
        "tenacity"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b1ae2bd4496dfe946e37c0b3ded1388fe25a0305f6ef6dc987902d7e85a3991a",
      "url": "https://pypi.org/packages/source/s/staged-script/staged_script-2.0.5.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "staged_script"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python",
        "reverse-argparse",
        "rich",
        "tenacity"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Python is an ideal language for certain types of infrastructure automation.\nAutomating what a user does manually often involves walking through a\nseries of stages.  A user may wish to run all the stages in series, or\nperhaps only a subset, and depending on how things go, certain stages may\nneed to be retried.  Once the script finishes running, it'd be ideal if it\ncould tell the user exactly what was run, for the sake of easing\nreplicability.  staged-script aims to ease the development such automation\nscripts.  It's easy to get started with, but also provides significant\npower-user functionality for those who need it.\n",
      "dev_url": "https://github.com/sandialabs/staged-script",
      "doc_url": "https://staged-script.readthedocs.io/",
      "home": "https://github.com/sandialabs/staged-script",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.md",
      "summary": "A Python package enabling the development of robust automation scripts that\nare subdivided into stages.\n"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jmgate"
      ]
    },
    "package": {
      "name": "staged-script",
      "version": "2.0.5"
    },
    "requirements": {
      "host": [
        "pip",
        "poetry-core",
        "python 3.10"
      ],
      "run": [
        "python >=3.10",
        "reverse-argparse",
        "rich",
        "tenacity"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b1ae2bd4496dfe946e37c0b3ded1388fe25a0305f6ef6dc987902d7e85a3991a",
      "url": "https://pypi.org/packages/source/s/staged-script/staged_script-2.0.5.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "staged_script"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "name": "staged-script",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "staged-script"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/staged-script.json"
  },
  "raw_meta_yaml": "{% set name = \"staged-script\" %}\n{% set version = \"2.0.5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  sha256: b1ae2bd4496dfe946e37c0b3ded1388fe25a0305f6ef6dc987902d7e85a3991a\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/staged_script-{{ version }}.tar.gz\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - poetry-core\n    - python {{ python_min }}\n  run:\n    - python >={{ python_min }}\n    - reverse-argparse\n    - rich\n    - tenacity\n\ntest:\n  commands:\n    - pip check\n  imports:\n    - staged_script\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  description: |\n    Python is an ideal language for certain types of infrastructure automation.\n    Automating what a user does manually often involves walking through a\n    series of stages.  A user may wish to run all the stages in series, or\n    perhaps only a subset, and depending on how things go, certain stages may\n    need to be retried.  Once the script finishes running, it'd be ideal if it\n    could tell the user exactly what was run, for the sake of easing\n    replicability.  staged-script aims to ease the development such automation\n    scripts.  It's easy to get started with, but also provides significant\n    power-user functionality for those who need it.\n  dev_url: https://github.com/sandialabs/staged-script\n  doc_url: https://staged-script.readthedocs.io/\n  home: https://github.com/sandialabs/staged-script\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.md\n  summary: |\n    A Python package enabling the development of robust automation scripts that\n    are subdivided into stages.\n\nextra:\n  recipe-maintainers:\n    - jmgate\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "poetry-core",
      "python",
      "reverse-argparse",
      "rich",
      "tenacity"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python",
        "reverse-argparse",
        "rich",
        "tenacity"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python 3.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python >=3.10",
        "reverse-argparse",
        "rich",
        "tenacity"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/staged-script/staged_script-2.0.5.tar.gz",
  "version": "2.0.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/staged-script.json"
  }
}