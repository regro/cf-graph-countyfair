{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "qemu-execve",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Patched QEMU to intercept and log execve calls.\n",
      "doc_url": "https://www.qemu.org/documentation/",
      "home": "https://gitlab.com/qemu-project/qemu",
      "license": "GPL-2.0-only",
      "license_file": "qemu-source/LICENSE",
      "summary": "QEMU is a generic and open source machine & userspace emulator and virtualizer."
    },
    "build": {
      "number": "1",
      "script": [
        "${RECIPE_DIR}/helpers/build-install.sh"
      ],
      "script_env": [
        "CONDA_QEMU_USER_ARCHS=aarch64 ppc64le s390x",
        "CONDA_QEMU_INSTALL_DIR=\"${PREFIX}\""
      ]
    },
    "extra": {
      "feedstock-name": "qemu-execve",
      "recipe-maintainers": [
        "MementoRC"
      ]
    },
    "outputs": [
      {
        "files": [
          "include/qemu-plugin.h",
          "share/qemu/trace-events-all",
          "share/qemu/bios.bin",
          "share/qemu/bios-256k.bin",
          "share/qemu/bios-microvm.bin",
          "share/qemu/qboot.rom",
          "share/qemu/vgabios.bin",
          "share/qemu/vgabios-cirrus.bin",
          "share/qemu/vgabios-stdvga.bin",
          "share/qemu/vgabios-vmware.bin",
          "share/qemu/vgabios-qxl.bin",
          "share/qemu/vgabios-virtio.bin",
          "share/qemu/vgabios-ramfb.bin",
          "share/qemu/vgabios-bochs-display.bin",
          "share/qemu/vgabios-ati.bin",
          "share/qemu/openbios-sparc32",
          "share/qemu/openbios-sparc64",
          "share/qemu/openbios-ppc",
          "share/qemu/QEMU,tcx.bin",
          "share/qemu/QEMU,cgthree.bin",
          "share/qemu/pxe-e1000.rom",
          "share/qemu/pxe-eepro100.rom",
          "share/qemu/pxe-ne2k_pci.rom",
          "share/qemu/pxe-pcnet.rom",
          "share/qemu/pxe-rtl8139.rom",
          "share/qemu/pxe-virtio.rom",
          "share/qemu/efi-e1000.rom",
          "share/qemu/efi-eepro100.rom",
          "share/qemu/efi-ne2k_pci.rom",
          "share/qemu/efi-pcnet.rom",
          "share/qemu/efi-rtl8139.rom",
          "share/qemu/efi-virtio.rom",
          "share/qemu/efi-e1000e.rom",
          "share/qemu/efi-vmxnet3.rom",
          "share/qemu/qemu-nsis.bmp",
          "share/qemu/multiboot.bin",
          "share/qemu/multiboot_dma.bin",
          "share/qemu/linuxboot.bin",
          "share/qemu/linuxboot_dma.bin",
          "share/qemu/kvmvapic.bin",
          "share/qemu/pvh.bin",
          "share/qemu/s390-ccw.img",
          "share/qemu/slof.bin",
          "share/qemu/skiboot.lid",
          "share/qemu/palcode-clipper",
          "share/qemu/u-boot.e500",
          "share/qemu/u-boot-sam460-20100605.bin",
          "share/qemu/qemu_vga.ndrv",
          "share/qemu/edk2-licenses.txt",
          "share/qemu/hppa-firmware.img",
          "share/qemu/hppa-firmware64.img",
          "share/qemu/opensbi-riscv32-generic-fw_dynamic.bin",
          "share/qemu/opensbi-riscv64-generic-fw_dynamic.bin",
          "share/qemu/npcm7xx_bootrom.bin",
          "share/qemu/vof.bin",
          "share/qemu/vof-nvram.bin",
          "share/qemu/bamboo.dtb",
          "share/qemu/canyonlands.dtb",
          "share/qemu/petalogix-s3adsp1800.dtb",
          "share/qemu/petalogix-ml605.dtb",
          "share/qemu/keymaps/ar",
          "share/qemu/keymaps/bepo",
          "share/qemu/keymaps/cz",
          "share/qemu/keymaps/da",
          "share/qemu/keymaps/de",
          "share/qemu/keymaps/de-ch",
          "share/qemu/keymaps/en-gb",
          "share/qemu/keymaps/en-us",
          "share/qemu/keymaps/es",
          "share/qemu/keymaps/et",
          "share/qemu/keymaps/fi",
          "share/qemu/keymaps/fo",
          "share/qemu/keymaps/fr",
          "share/qemu/keymaps/fr-be",
          "share/qemu/keymaps/fr-ca",
          "share/qemu/keymaps/fr-ch",
          "share/qemu/keymaps/hr",
          "share/qemu/keymaps/hu",
          "share/qemu/keymaps/is",
          "share/qemu/keymaps/it",
          "share/qemu/keymaps/ja",
          "share/qemu/keymaps/lt",
          "share/qemu/keymaps/lv",
          "share/qemu/keymaps/mk",
          "share/qemu/keymaps/nl",
          "share/qemu/keymaps/no",
          "share/qemu/keymaps/pl",
          "share/qemu/keymaps/pt",
          "share/qemu/keymaps/pt-br",
          "share/qemu/keymaps/ru",
          "share/qemu/keymaps/th",
          "share/qemu/keymaps/tr"
        ],
        "name": "qemu-shared-resources",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/qemu/trace-events-all",
            "test -f ${PREFIX}/share/qemu/bios.bin",
            "test -f ${PREFIX}/share/qemu/bios-256k.bin",
            "test -f ${PREFIX}/share/qemu/bios-microvm.bin",
            "test -f ${PREFIX}/share/qemu/qboot.rom",
            "test -f ${PREFIX}/share/qemu/vgabios.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-cirrus.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-stdvga.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-vmware.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-qxl.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-virtio.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-ramfb.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-bochs-display.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-ati.bin",
            "test -f ${PREFIX}/share/qemu/openbios-sparc32",
            "test -f ${PREFIX}/share/qemu/openbios-sparc64",
            "test -f ${PREFIX}/share/qemu/openbios-ppc",
            "test -f ${PREFIX}/share/qemu/QEMU,tcx.bin",
            "test -f ${PREFIX}/share/qemu/QEMU,cgthree.bin",
            "test -f ${PREFIX}/share/qemu/pxe-e1000.rom",
            "test -f ${PREFIX}/share/qemu/pxe-eepro100.rom",
            "test -f ${PREFIX}/share/qemu/pxe-ne2k_pci.rom",
            "test -f ${PREFIX}/share/qemu/pxe-pcnet.rom",
            "test -f ${PREFIX}/share/qemu/pxe-rtl8139.rom",
            "test -f ${PREFIX}/share/qemu/pxe-virtio.rom",
            "test -f ${PREFIX}/share/qemu/efi-e1000.rom",
            "test -f ${PREFIX}/share/qemu/efi-eepro100.rom",
            "test -f ${PREFIX}/share/qemu/efi-ne2k_pci.rom",
            "test -f ${PREFIX}/share/qemu/efi-pcnet.rom",
            "test -f ${PREFIX}/share/qemu/efi-rtl8139.rom",
            "test -f ${PREFIX}/share/qemu/efi-virtio.rom",
            "test -f ${PREFIX}/share/qemu/efi-e1000e.rom",
            "test -f ${PREFIX}/share/qemu/efi-vmxnet3.rom",
            "test -f ${PREFIX}/share/qemu/qemu-nsis.bmp",
            "test -f ${PREFIX}/share/qemu/multiboot.bin",
            "test -f ${PREFIX}/share/qemu/multiboot_dma.bin",
            "test -f ${PREFIX}/share/qemu/linuxboot.bin",
            "test -f ${PREFIX}/share/qemu/linuxboot_dma.bin",
            "test -f ${PREFIX}/share/qemu/kvmvapic.bin",
            "test -f ${PREFIX}/share/qemu/pvh.bin",
            "test -f ${PREFIX}/share/qemu/s390-ccw.img",
            "test -f ${PREFIX}/share/qemu/slof.bin",
            "test -f ${PREFIX}/share/qemu/skiboot.lid",
            "test -f ${PREFIX}/share/qemu/palcode-clipper",
            "test -f ${PREFIX}/share/qemu/u-boot.e500",
            "test -f ${PREFIX}/share/qemu/u-boot-sam460-20100605.bin",
            "test -f ${PREFIX}/share/qemu/qemu_vga.ndrv",
            "test -f ${PREFIX}/share/qemu/edk2-licenses.txt",
            "test -f ${PREFIX}/share/qemu/hppa-firmware.img",
            "test -f ${PREFIX}/share/qemu/hppa-firmware64.img",
            "test -f ${PREFIX}/share/qemu/opensbi-riscv32-generic-fw_dynamic.bin",
            "test -f ${PREFIX}/share/qemu/opensbi-riscv64-generic-fw_dynamic.bin",
            "test -f ${PREFIX}/share/qemu/npcm7xx_bootrom.bin",
            "test -f ${PREFIX}/share/qemu/vof.bin",
            "test -f ${PREFIX}/share/qemu/vof-nvram.bin",
            "test -f ${PREFIX}/share/qemu/bamboo.dtb",
            "test -f ${PREFIX}/share/qemu/canyonlands.dtb",
            "test -f ${PREFIX}/share/qemu/petalogix-s3adsp1800.dtb",
            "test -f ${PREFIX}/share/qemu/petalogix-ml605.dtb",
            "test -f ${PREFIX}/share/qemu/keymaps/ar",
            "test -f ${PREFIX}/share/qemu/keymaps/bepo",
            "test -f ${PREFIX}/share/qemu/keymaps/cz",
            "test -f ${PREFIX}/share/qemu/keymaps/da",
            "test -f ${PREFIX}/share/qemu/keymaps/de",
            "test -f ${PREFIX}/share/qemu/keymaps/de-ch",
            "test -f ${PREFIX}/share/qemu/keymaps/en-gb",
            "test -f ${PREFIX}/share/qemu/keymaps/en-us",
            "test -f ${PREFIX}/share/qemu/keymaps/es",
            "test -f ${PREFIX}/share/qemu/keymaps/et",
            "test -f ${PREFIX}/share/qemu/keymaps/fi",
            "test -f ${PREFIX}/share/qemu/keymaps/fo",
            "test -f ${PREFIX}/share/qemu/keymaps/fr",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-be",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-ca",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-ch",
            "test -f ${PREFIX}/share/qemu/keymaps/hr",
            "test -f ${PREFIX}/share/qemu/keymaps/hu",
            "test -f ${PREFIX}/share/qemu/keymaps/is",
            "test -f ${PREFIX}/share/qemu/keymaps/it",
            "test -f ${PREFIX}/share/qemu/keymaps/ja",
            "test -f ${PREFIX}/share/qemu/keymaps/lt",
            "test -f ${PREFIX}/share/qemu/keymaps/lv",
            "test -f ${PREFIX}/share/qemu/keymaps/mk",
            "test -f ${PREFIX}/share/qemu/keymaps/nl",
            "test -f ${PREFIX}/share/qemu/keymaps/no",
            "test -f ${PREFIX}/share/qemu/keymaps/pl",
            "test -f ${PREFIX}/share/qemu/keymaps/pt",
            "test -f ${PREFIX}/share/qemu/keymaps/pt-br",
            "test -f ${PREFIX}/share/qemu/keymaps/ru",
            "test -f ${PREFIX}/share/qemu/keymaps/th",
            "test -f ${PREFIX}/share/qemu/keymaps/tr"
          ]
        }
      },
      {
        "files": [
          "bin/qemu-execve-s390x",
          "etc/conda/activate.d/qemu-execve-s390x-activate.sh",
          "etc/conda/deactivate.d/qemu-execve-s390x-deactivate.sh"
        ],
        "name": "qemu-execve-s390x",
        "requirements": {
          "build": [
            "c_stdlib_stub"
          ],
          "host": [
            "qemu-shared-resources",
            "libcapstone",
            "glib"
          ],
          "run": [
            "sysroot_linux-s390x >=2.28"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/bin/qemu-execve-s390x",
            "test -f ${PREFIX}/etc/conda/activate.d/qemu-execve-s390x-activate.sh",
            "test -f ${PREFIX}/etc/conda/deactivate.d/qemu-execve-s390x-deactivate.sh",
            "test -f ${QEMU_LD_PREFIX}/lib/ld-2.28.so",
            "qemu-execve-s390x -h",
            "s390x-conda-linux-gnu-gcc -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-2.28.so -o hello_from tests/hello_from.c",
            "qemu-execve-s390x ./hello_from s390x > hello.txt",
            "grep \"Hello, I'm executing s390x instructions!\" hello.txt",
            "s390x-conda-linux-gnu-gcc -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-2.28.so -o execve_call tests/execve_call.c",
            "qemu-execve-s390x ./execve_call \"/bin/ls\" > ls_x86_64.txt 2>&1 || true",
            "grep \"hello_from\" ls_x86_64.txt",
            "QEMU_EXECVE=${PREFIX}/bin/qemu-execve-s390x qemu-execve-s390x ./execve_call \"/bin/ls\" > ls_s390x.txt 2>&1 || true",
            "grep \"Invalid ELF image\" ls_s390x.txt || exit 1",
            "QEMU_EXECVE=${PREFIX}/bin/qemu-execve-s390x qemu-execve-s390x ./execve_call \"./hello_from\" \"EXECVE\" > execve_call.txt 2>&1 || true",
            "grep \"EXECVE\" execve_call.txt || exit 1"
          ],
          "files": [
            "tests/hello_from.c",
            "tests/execve_call.c"
          ],
          "requires": [
            "gcc_impl_linux-s390x",
            "sysroot_linux-s390x 2.28.*"
          ]
        }
      }
    ],
    "package": {
      "name": "qemu-execve-split",
      "version": "10.0.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "automake",
        "diffutils",
        "git",
        "libtool",
        "make",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libcapstone",
        "glib",
        "libseccomp",
        "meson >=1.1.0",
        "sphinx >=3.4.3",
        "sphinx-rtd-theme >=0.5",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "qemu-source",
      "patches": [
        "patches/apply-execve-JH.patch",
        "patches/set-qemu-name.patch",
        "patches/missing-RESOLVE_CACHED.patch"
      ],
      "sha256": "e4d1fb5b0a6236e9786438daf771c17416b2d0480004f4d539bd8122d4310c56",
      "url": "https://gitlab.com/qemu-project/qemu/-/archive/v10.0.3/qemu-v10.0.3.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "diffutils",
        "git",
        "libtool",
        "make",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "glib",
        "libcapstone",
        "libseccomp",
        "meson",
        "qemu-shared-resources",
        "sphinx",
        "sphinx-rtd-theme",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "gcc_impl_linux-s390x",
        "sysroot_linux-s390x"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Patched QEMU to intercept and log execve calls.\n",
      "doc_url": "https://www.qemu.org/documentation/",
      "home": "https://gitlab.com/qemu-project/qemu",
      "license": "GPL-2.0-only",
      "license_file": "qemu-source/LICENSE",
      "summary": "QEMU is a generic and open source machine & userspace emulator and virtualizer."
    },
    "build": {
      "number": "1",
      "script": [
        "${RECIPE_DIR}/helpers/build-install.sh"
      ],
      "script_env": [
        "CONDA_QEMU_USER_ARCHS=aarch64 ppc64le s390x",
        "CONDA_QEMU_INSTALL_DIR=\"${PREFIX}\""
      ]
    },
    "extra": {
      "feedstock-name": "qemu-execve",
      "recipe-maintainers": [
        "MementoRC"
      ]
    },
    "outputs": [
      {
        "files": [
          "include/qemu-plugin.h",
          "share/qemu/trace-events-all",
          "share/qemu/bios.bin",
          "share/qemu/bios-256k.bin",
          "share/qemu/bios-microvm.bin",
          "share/qemu/qboot.rom",
          "share/qemu/vgabios.bin",
          "share/qemu/vgabios-cirrus.bin",
          "share/qemu/vgabios-stdvga.bin",
          "share/qemu/vgabios-vmware.bin",
          "share/qemu/vgabios-qxl.bin",
          "share/qemu/vgabios-virtio.bin",
          "share/qemu/vgabios-ramfb.bin",
          "share/qemu/vgabios-bochs-display.bin",
          "share/qemu/vgabios-ati.bin",
          "share/qemu/openbios-sparc32",
          "share/qemu/openbios-sparc64",
          "share/qemu/openbios-ppc",
          "share/qemu/QEMU,tcx.bin",
          "share/qemu/QEMU,cgthree.bin",
          "share/qemu/pxe-e1000.rom",
          "share/qemu/pxe-eepro100.rom",
          "share/qemu/pxe-ne2k_pci.rom",
          "share/qemu/pxe-pcnet.rom",
          "share/qemu/pxe-rtl8139.rom",
          "share/qemu/pxe-virtio.rom",
          "share/qemu/efi-e1000.rom",
          "share/qemu/efi-eepro100.rom",
          "share/qemu/efi-ne2k_pci.rom",
          "share/qemu/efi-pcnet.rom",
          "share/qemu/efi-rtl8139.rom",
          "share/qemu/efi-virtio.rom",
          "share/qemu/efi-e1000e.rom",
          "share/qemu/efi-vmxnet3.rom",
          "share/qemu/qemu-nsis.bmp",
          "share/qemu/multiboot.bin",
          "share/qemu/multiboot_dma.bin",
          "share/qemu/linuxboot.bin",
          "share/qemu/linuxboot_dma.bin",
          "share/qemu/kvmvapic.bin",
          "share/qemu/pvh.bin",
          "share/qemu/s390-ccw.img",
          "share/qemu/slof.bin",
          "share/qemu/skiboot.lid",
          "share/qemu/palcode-clipper",
          "share/qemu/u-boot.e500",
          "share/qemu/u-boot-sam460-20100605.bin",
          "share/qemu/qemu_vga.ndrv",
          "share/qemu/edk2-licenses.txt",
          "share/qemu/hppa-firmware.img",
          "share/qemu/hppa-firmware64.img",
          "share/qemu/opensbi-riscv32-generic-fw_dynamic.bin",
          "share/qemu/opensbi-riscv64-generic-fw_dynamic.bin",
          "share/qemu/npcm7xx_bootrom.bin",
          "share/qemu/vof.bin",
          "share/qemu/vof-nvram.bin",
          "share/qemu/bamboo.dtb",
          "share/qemu/canyonlands.dtb",
          "share/qemu/petalogix-s3adsp1800.dtb",
          "share/qemu/petalogix-ml605.dtb",
          "share/qemu/keymaps/ar",
          "share/qemu/keymaps/bepo",
          "share/qemu/keymaps/cz",
          "share/qemu/keymaps/da",
          "share/qemu/keymaps/de",
          "share/qemu/keymaps/de-ch",
          "share/qemu/keymaps/en-gb",
          "share/qemu/keymaps/en-us",
          "share/qemu/keymaps/es",
          "share/qemu/keymaps/et",
          "share/qemu/keymaps/fi",
          "share/qemu/keymaps/fo",
          "share/qemu/keymaps/fr",
          "share/qemu/keymaps/fr-be",
          "share/qemu/keymaps/fr-ca",
          "share/qemu/keymaps/fr-ch",
          "share/qemu/keymaps/hr",
          "share/qemu/keymaps/hu",
          "share/qemu/keymaps/is",
          "share/qemu/keymaps/it",
          "share/qemu/keymaps/ja",
          "share/qemu/keymaps/lt",
          "share/qemu/keymaps/lv",
          "share/qemu/keymaps/mk",
          "share/qemu/keymaps/nl",
          "share/qemu/keymaps/no",
          "share/qemu/keymaps/pl",
          "share/qemu/keymaps/pt",
          "share/qemu/keymaps/pt-br",
          "share/qemu/keymaps/ru",
          "share/qemu/keymaps/th",
          "share/qemu/keymaps/tr"
        ],
        "name": "qemu-shared-resources",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/qemu/trace-events-all",
            "test -f ${PREFIX}/share/qemu/bios.bin",
            "test -f ${PREFIX}/share/qemu/bios-256k.bin",
            "test -f ${PREFIX}/share/qemu/bios-microvm.bin",
            "test -f ${PREFIX}/share/qemu/qboot.rom",
            "test -f ${PREFIX}/share/qemu/vgabios.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-cirrus.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-stdvga.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-vmware.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-qxl.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-virtio.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-ramfb.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-bochs-display.bin",
            "test -f ${PREFIX}/share/qemu/vgabios-ati.bin",
            "test -f ${PREFIX}/share/qemu/openbios-sparc32",
            "test -f ${PREFIX}/share/qemu/openbios-sparc64",
            "test -f ${PREFIX}/share/qemu/openbios-ppc",
            "test -f ${PREFIX}/share/qemu/QEMU,tcx.bin",
            "test -f ${PREFIX}/share/qemu/QEMU,cgthree.bin",
            "test -f ${PREFIX}/share/qemu/pxe-e1000.rom",
            "test -f ${PREFIX}/share/qemu/pxe-eepro100.rom",
            "test -f ${PREFIX}/share/qemu/pxe-ne2k_pci.rom",
            "test -f ${PREFIX}/share/qemu/pxe-pcnet.rom",
            "test -f ${PREFIX}/share/qemu/pxe-rtl8139.rom",
            "test -f ${PREFIX}/share/qemu/pxe-virtio.rom",
            "test -f ${PREFIX}/share/qemu/efi-e1000.rom",
            "test -f ${PREFIX}/share/qemu/efi-eepro100.rom",
            "test -f ${PREFIX}/share/qemu/efi-ne2k_pci.rom",
            "test -f ${PREFIX}/share/qemu/efi-pcnet.rom",
            "test -f ${PREFIX}/share/qemu/efi-rtl8139.rom",
            "test -f ${PREFIX}/share/qemu/efi-virtio.rom",
            "test -f ${PREFIX}/share/qemu/efi-e1000e.rom",
            "test -f ${PREFIX}/share/qemu/efi-vmxnet3.rom",
            "test -f ${PREFIX}/share/qemu/qemu-nsis.bmp",
            "test -f ${PREFIX}/share/qemu/multiboot.bin",
            "test -f ${PREFIX}/share/qemu/multiboot_dma.bin",
            "test -f ${PREFIX}/share/qemu/linuxboot.bin",
            "test -f ${PREFIX}/share/qemu/linuxboot_dma.bin",
            "test -f ${PREFIX}/share/qemu/kvmvapic.bin",
            "test -f ${PREFIX}/share/qemu/pvh.bin",
            "test -f ${PREFIX}/share/qemu/s390-ccw.img",
            "test -f ${PREFIX}/share/qemu/slof.bin",
            "test -f ${PREFIX}/share/qemu/skiboot.lid",
            "test -f ${PREFIX}/share/qemu/palcode-clipper",
            "test -f ${PREFIX}/share/qemu/u-boot.e500",
            "test -f ${PREFIX}/share/qemu/u-boot-sam460-20100605.bin",
            "test -f ${PREFIX}/share/qemu/qemu_vga.ndrv",
            "test -f ${PREFIX}/share/qemu/edk2-licenses.txt",
            "test -f ${PREFIX}/share/qemu/hppa-firmware.img",
            "test -f ${PREFIX}/share/qemu/hppa-firmware64.img",
            "test -f ${PREFIX}/share/qemu/opensbi-riscv32-generic-fw_dynamic.bin",
            "test -f ${PREFIX}/share/qemu/opensbi-riscv64-generic-fw_dynamic.bin",
            "test -f ${PREFIX}/share/qemu/npcm7xx_bootrom.bin",
            "test -f ${PREFIX}/share/qemu/vof.bin",
            "test -f ${PREFIX}/share/qemu/vof-nvram.bin",
            "test -f ${PREFIX}/share/qemu/bamboo.dtb",
            "test -f ${PREFIX}/share/qemu/canyonlands.dtb",
            "test -f ${PREFIX}/share/qemu/petalogix-s3adsp1800.dtb",
            "test -f ${PREFIX}/share/qemu/petalogix-ml605.dtb",
            "test -f ${PREFIX}/share/qemu/keymaps/ar",
            "test -f ${PREFIX}/share/qemu/keymaps/bepo",
            "test -f ${PREFIX}/share/qemu/keymaps/cz",
            "test -f ${PREFIX}/share/qemu/keymaps/da",
            "test -f ${PREFIX}/share/qemu/keymaps/de",
            "test -f ${PREFIX}/share/qemu/keymaps/de-ch",
            "test -f ${PREFIX}/share/qemu/keymaps/en-gb",
            "test -f ${PREFIX}/share/qemu/keymaps/en-us",
            "test -f ${PREFIX}/share/qemu/keymaps/es",
            "test -f ${PREFIX}/share/qemu/keymaps/et",
            "test -f ${PREFIX}/share/qemu/keymaps/fi",
            "test -f ${PREFIX}/share/qemu/keymaps/fo",
            "test -f ${PREFIX}/share/qemu/keymaps/fr",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-be",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-ca",
            "test -f ${PREFIX}/share/qemu/keymaps/fr-ch",
            "test -f ${PREFIX}/share/qemu/keymaps/hr",
            "test -f ${PREFIX}/share/qemu/keymaps/hu",
            "test -f ${PREFIX}/share/qemu/keymaps/is",
            "test -f ${PREFIX}/share/qemu/keymaps/it",
            "test -f ${PREFIX}/share/qemu/keymaps/ja",
            "test -f ${PREFIX}/share/qemu/keymaps/lt",
            "test -f ${PREFIX}/share/qemu/keymaps/lv",
            "test -f ${PREFIX}/share/qemu/keymaps/mk",
            "test -f ${PREFIX}/share/qemu/keymaps/nl",
            "test -f ${PREFIX}/share/qemu/keymaps/no",
            "test -f ${PREFIX}/share/qemu/keymaps/pl",
            "test -f ${PREFIX}/share/qemu/keymaps/pt",
            "test -f ${PREFIX}/share/qemu/keymaps/pt-br",
            "test -f ${PREFIX}/share/qemu/keymaps/ru",
            "test -f ${PREFIX}/share/qemu/keymaps/th",
            "test -f ${PREFIX}/share/qemu/keymaps/tr"
          ]
        }
      },
      {
        "files": [
          "bin/qemu-execve-s390x",
          "etc/conda/activate.d/qemu-execve-s390x-activate.sh",
          "etc/conda/deactivate.d/qemu-execve-s390x-deactivate.sh"
        ],
        "name": "qemu-execve-s390x",
        "requirements": {
          "build": [
            "c_stdlib_stub"
          ],
          "host": [
            "qemu-shared-resources",
            "libcapstone",
            "glib"
          ],
          "run": [
            "sysroot_linux-s390x >=2.28"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/bin/qemu-execve-s390x",
            "test -f ${PREFIX}/etc/conda/activate.d/qemu-execve-s390x-activate.sh",
            "test -f ${PREFIX}/etc/conda/deactivate.d/qemu-execve-s390x-deactivate.sh",
            "test -f ${QEMU_LD_PREFIX}/lib/ld-2.28.so",
            "qemu-execve-s390x -h",
            "s390x-conda-linux-gnu-gcc -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-2.28.so -o hello_from tests/hello_from.c",
            "qemu-execve-s390x ./hello_from s390x > hello.txt",
            "grep \"Hello, I'm executing s390x instructions!\" hello.txt",
            "s390x-conda-linux-gnu-gcc -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-2.28.so -o execve_call tests/execve_call.c",
            "qemu-execve-s390x ./execve_call \"/bin/ls\" > ls_x86_64.txt 2>&1 || true",
            "grep \"hello_from\" ls_x86_64.txt",
            "QEMU_EXECVE=${PREFIX}/bin/qemu-execve-s390x qemu-execve-s390x ./execve_call \"/bin/ls\" > ls_s390x.txt 2>&1 || true",
            "grep \"Invalid ELF image\" ls_s390x.txt || exit 1",
            "QEMU_EXECVE=${PREFIX}/bin/qemu-execve-s390x qemu-execve-s390x ./execve_call \"./hello_from\" \"EXECVE\" > execve_call.txt 2>&1 || true",
            "grep \"EXECVE\" execve_call.txt || exit 1"
          ],
          "files": [
            "tests/hello_from.c",
            "tests/execve_call.c"
          ],
          "requires": [
            "gcc_impl_linux-s390x",
            "sysroot_linux-s390x 2.28.*"
          ]
        }
      }
    ],
    "package": {
      "name": "qemu-execve-split",
      "version": "10.0.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "automake",
        "diffutils",
        "git",
        "libtool",
        "make",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libcapstone",
        "glib",
        "libseccomp",
        "meson >=1.1.0",
        "sphinx >=3.4.3",
        "sphinx-rtd-theme >=0.5",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "qemu-source",
      "patches": [
        "patches/apply-execve-JH.patch",
        "patches/set-qemu-name.patch",
        "patches/missing-RESOLVE_CACHED.patch"
      ],
      "sha256": "e4d1fb5b0a6236e9786438daf771c17416b2d0480004f4d539bd8122d4310c56",
      "url": "https://gitlab.com/qemu-project/qemu/-/archive/v10.0.3/qemu-v10.0.3.tar.gz"
    }
  },
  "name": "qemu-execve-split",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "qemu-execve-s390x",
      "qemu-shared-resources"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/qemu-execve.json"
  },
  "raw_meta_yaml": "{% set name = \"qemu-execve\" %}\n{% set version = \"10.0.3\" %}\n\n{% set qemu_bins = [\n  \"trace-events-all\",\n  \"bios.bin\", \"bios-256k.bin\", \"bios-microvm.bin\", \"qboot.rom\", \"vgabios.bin\", \"vgabios-cirrus.bin\",\n  \"vgabios-stdvga.bin\", \"vgabios-vmware.bin\", \"vgabios-qxl.bin\", \"vgabios-virtio.bin\", \"vgabios-ramfb.bin\",\n  \"vgabios-bochs-display.bin\", \"vgabios-ati.bin\", \"openbios-sparc32\", \"openbios-sparc64\", \"openbios-ppc\",\n  \"QEMU,tcx.bin\", \"QEMU,cgthree.bin\", \"pxe-e1000.rom\", \"pxe-eepro100.rom\", \"pxe-ne2k_pci.rom\", \"pxe-pcnet.rom\",\n  \"pxe-rtl8139.rom\", \"pxe-virtio.rom\", \"efi-e1000.rom\", \"efi-eepro100.rom\", \"efi-ne2k_pci.rom\", \"efi-pcnet.rom\",\n  \"efi-rtl8139.rom\", \"efi-virtio.rom\", \"efi-e1000e.rom\", \"efi-vmxnet3.rom\", \"qemu-nsis.bmp\", \"multiboot.bin\",\n  \"multiboot_dma.bin\", \"linuxboot.bin\", \"linuxboot_dma.bin\", \"kvmvapic.bin\", \"pvh.bin\", \"s390-ccw.img\",\n  \"slof.bin\",\n  \"skiboot.lid\", \"palcode-clipper\", \"u-boot.e500\", \"u-boot-sam460-20100605.bin\",\n  \"qemu_vga.ndrv\", \"edk2-licenses.txt\", \"hppa-firmware.img\", \"hppa-firmware64.img\",\n  \"opensbi-riscv32-generic-fw_dynamic.bin\", \"opensbi-riscv64-generic-fw_dynamic.bin\", \"npcm7xx_bootrom.bin\",\n  \"vof.bin\", \"vof-nvram.bin\", \"bamboo.dtb\", \"canyonlands.dtb\", \"petalogix-s3adsp1800.dtb\", \"petalogix-ml605.dtb\",\n  ]\n%}\n{% set qemu_keymaps = [\n  \"ar\", \"bepo\", \"cz\", \"da\", \"de\", \"de-ch\", \"en-gb\", \"en-us\", \"es\", \"et\", \"fi\", \"fo\", \"fr\", \"fr-be\", \"fr-ca\",\n  \"fr-ch\", \"hr\", \"hu\", \"is\", \"it\", \"ja\", \"lt\", \"lv\", \"mk\", \"nl\", \"no\", \"pl\", \"pt\", \"pt-br\", \"ru\", \"th\", \"tr\"\n  ]\n%}\n\npackage:\n  name: qemu-execve-split\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/qemu-project/qemu/-/archive/v{{ version }}/qemu-v{{ version }}.tar.gz\n  sha256: e4d1fb5b0a6236e9786438daf771c17416b2d0480004f4d539bd8122d4310c56\n  patches:\n    # These are the patches proposed to the QEMU project to intercept execve calls\n    # Original author: Joel Holdsworth\n    # https://lists.gnu.org/archive/html/qemu-devel/2016-05/msg04528.html\n    - patches/apply-execve-JH.patch\n    - patches/set-qemu-name.patch\n    - patches/missing-RESOLVE_CACHED.patch\n  folder: qemu-source\n\nbuild:\n  skip: true  # [not (linux and x86_64)]\n  number: 1\n  script:\n    - ${RECIPE_DIR}/helpers/build-install.sh\n  script_env:\n    - CONDA_QEMU_USER_ARCHS={{ emulated_targets }}\n    - CONDA_QEMU_INSTALL_DIR=\"${PREFIX}\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n    - autoconf\n    - automake\n    - diffutils\n    - git\n    - libtool\n    - make\n    - ninja\n    - pkg-config\n  host:\n    - libcapstone\n    - glib\n    - libseccomp\n    - meson >=1.1.0\n    - sphinx >=3.4.3\n    - sphinx-rtd-theme >=0.5\n    - zlib\n\noutputs:\n  - name: qemu-shared-resources\n    files:\n      - include/qemu-plugin.h\n      - share/qemu/trace-events-all\n\n      {% for bin in qemu_bins %}\n      - share/qemu/{{ bin }}\n      {% endfor %}\n\n      {% for keymap in qemu_keymaps %}\n      - share/qemu/keymaps/{{ keymap }}\n      {% endfor %}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n      host:\n      run:\n    test:\n      commands:\n        - test -f ${PREFIX}/share/qemu/trace-events-all\n\n        {% for bin in qemu_bins %}\n        - test -f ${PREFIX}/share/qemu/{{ bin }}\n        {% endfor %}\n\n        {% for keymap in qemu_keymaps %}\n        - test -f ${PREFIX}/share/qemu/keymaps/{{ keymap }}\n        {% endfor %}\n\n\n  - name: qemu-execve-{{ target_emulated_platform }}\n    files:\n      - bin/qemu-execve-{{ target_emulated_platform }}\n      - etc/conda/activate.d/qemu-execve-{{ target_emulated_platform }}-activate.sh\n      - etc/conda/deactivate.d/qemu-execve-{{ target_emulated_platform }}-deactivate.sh\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n      host:\n        - {{ pin_subpackage('qemu-shared-resources', exact=True) }}\n        - libcapstone\n        - glib\n        {% if target_emulated_platform == \"aarch64\" %}\n        - zlib\n        {% endif %}\n      run:\n        - {{ emulated_c_stdlib }}_linux-{{ target_emulated_platform }} >={{ emulated_c_stdlib_version }}\n    test:\n      commands:\n        - test -f ${PREFIX}/bin/qemu-execve-{{ target_emulated_platform }}\n        - test -f ${PREFIX}/etc/conda/activate.d/qemu-execve-{{ target_emulated_platform }}-activate.sh\n        - test -f ${PREFIX}/etc/conda/deactivate.d/qemu-execve-{{ target_emulated_platform }}-deactivate.sh\n        - test -f ${QEMU_LD_PREFIX}/lib/ld-{{ emulated_c_stdlib_version }}.so\n        - qemu-execve-{{ target_emulated_platform }} -h\n        # Test the normal execution of a cross-compiled binary\n        - {{ target_emulated_gcc }} -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-{{ emulated_c_stdlib_version }}.so -o hello_from tests/hello_from.c\n        - qemu-execve-{{ target_emulated_platform }} ./hello_from {{ target_emulated_platform }} > hello.txt\n        - grep \"Hello, I'm executing {{ target_emulated_platform }} instructions!\" hello.txt\n        # Test the typical execve() execution of a non-cross-compiled binary (x86_64)\n        - {{ target_emulated_gcc }} -Wl,-rpath,${QEMU_LD_PREFIX}/lib -Wl,-rpath,${QEMU_LD_PREFIX}/lib64 -L$QEMU_LD_PREFIX/lib64:$QEMU_LD_PREFIX/lib -Wl,--dynamic-linker=$QEMU_LD_PREFIX/lib/ld-{{ emulated_c_stdlib_version }}.so -o execve_call tests/execve_call.c\n        - qemu-execve-{{ target_emulated_platform }} ./execve_call \"/bin/ls\" > ls_x86_64.txt 2>&1 || true\n        - grep \"hello_from\" ls_x86_64.txt\n        # Test redirected execve() execution of a non-cross-compiled binary (x86_64) - Must fail with 'Invalid ELF image'\n        - QEMU_EXECVE=${PREFIX}/bin/qemu-execve-{{ target_emulated_platform }} qemu-execve-{{ target_emulated_platform }} ./execve_call \"/bin/ls\" > ls_{{ target_emulated_platform }}.txt 2>&1 || true\n        - grep \"Invalid ELF image\" ls_{{ target_emulated_platform }}.txt || exit 1\n        # Test redirected execve() execution of a cross-compiled binary - Redirected to qemu which executes the binary\n        - QEMU_EXECVE=${PREFIX}/bin/qemu-execve-{{ target_emulated_platform }} qemu-execve-{{ target_emulated_platform }} ./execve_call \"./hello_from\" \"EXECVE\" > execve_call.txt 2>&1 || true\n        - grep \"EXECVE\" execve_call.txt || exit 1\n      requires:\n        - gcc_impl_linux-{{ target_emulated_platform }}\n        - sysroot_linux-{{ target_emulated_platform }} {{ emulated_c_stdlib_version }}.*\n      files:\n        - tests/hello_from.c\n        - tests/execve_call.c\n\n\nabout:\n  home: https://gitlab.com/qemu-project/qemu\n  summary: 'QEMU is a generic and open source machine & userspace emulator and virtualizer.'\n  description: |\n    Patched QEMU to intercept and log execve calls.\n  license: GPL-2.0-only\n  license_file: qemu-source/LICENSE\n  doc_url: https://www.qemu.org/documentation/\n\nextra:\n  recipe-maintainers:\n    - MementoRC\n  feedstock-name: qemu-execve\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "c_compiler_stub",
      "c_stdlib_stub",
      "diffutils",
      "git",
      "glib",
      "libcapstone",
      "libseccomp",
      "libtool",
      "make",
      "meson",
      "ninja",
      "pkg-config",
      "qemu-shared-resources",
      "sphinx",
      "sphinx-rtd-theme",
      "sysroot_linux-s390x",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "diffutils",
        "git",
        "libtool",
        "make",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "glib",
        "libcapstone",
        "libseccomp",
        "linux-sysroot",
        "meson",
        "qemu-shared-resources",
        "sphinx",
        "sphinx-rtd-theme",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "linux-sysroot",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "gcc_impl_linux-s390x",
        "sysroot_linux-s390x"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "diffutils",
        "git",
        "libtool",
        "make",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "glib",
        "libcapstone",
        "libseccomp",
        "meson >=1.1.0",
        "qemu-shared-resources",
        "sphinx >=3.4.3",
        "sphinx-rtd-theme >=0.5",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "sysroot_linux-s390x >=2.28"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "gcc_impl_linux-s390x",
        "sysroot_linux-s390x 2.28.*"
      ]
    }
  },
  "url": "https://gitlab.com/qemu-project/qemu/-/archive/v10.0.3/qemu-v10.0.3.tar.gz",
  "version": "10.0.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/qemu-execve.json"
  }
}