{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "xan",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      },
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      },
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      },
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      },
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      },
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "name": "xan",
  "osx_64_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "xan"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/xan.json"
  },
  "raw_meta_yaml": "context:\n  version: \"0.51.0\"\n\npackage:\n  name: xan\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/medialab/xan/archive/refs/tags/${{ version }}.tar.gz\n  sha256: 0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96\n\nbuild:\n  number: 0\n  script:\n    env:\n      CARGO_PROFILE_RELEASE_STRIP: symbols\n      CARGO_PROFILE_RELEASE_LTO: fat\n    content:\n      - if: unix\n        then:\n          - cargo install --no-track --locked --root ${PREFIX} --path .\n          - cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml\n      - if: win\n        then:\n          - cargo install --no-track --locked --root %PREFIX% --path .\n          - if errorlevel 1 exit 1\n          - cargo-bundle-licenses --format yaml --output %SRC_DIR%/THIRDPARTY.yml\n          - if errorlevel 1 exit 1\n\nrequirements:\n  build:\n    - ${{ compiler('rust') }}\n    - ${{ stdlib('c') }}\n    - ${{ compiler('c') }}\n    - cargo-bundle-licenses\n\ntests:\n  - script:\n      - xan --help\n\nabout:\n  homepage: https://github.com/medialab/xan\n  repository: https://github.com/medialab/xan\n  documentation: https://github.com/medialab/xan\n  summary: The CSV magician\n  description: |\n    xan is a command line tool that can be used to process CSV files directly\n    from the shell. It has been written in Rust to be as fast as possible, use\n    as little memory as possible, and can easily handle very large CSV files\n    (Gigabytes). It is also able to leverage parallelism (through multithreading)\n    to make some tasks complete as fast as your computer can allow. It can easily\n    preview, filter, slice, aggregate, sort, join CSV files, and exposes a large\n    collection of composable commands that can be chained together to perform a\n    wide variety of typical tasks. xan also leverages its own expression language\n    so you can perform complex tasks that cannot be done by relying on the\n    simplest commands. This minimalistic language has been tailored for CSV data\n    and is faster than evaluating typical dynamically-typed languages such as\n    Python, Lua, JavaScript etc.\n  license: MIT\n  license_file:\n    - LICENSE-MIT\n    - THIRDPARTY.yml\n\nextra:\n  recipe-maintainers:\n    - Yomguithereal\n    - apcamargo\n    - rvalieris\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cargo-bundle-licenses",
      "rust_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz",
  "version": "0.51.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/xan.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "xan is a command line tool that can be used to process CSV files directly\nfrom the shell. It has been written in Rust to be as fast as possible, use\nas little memory as possible, and can easily handle very large CSV files\n(Gigabytes). It is also able to leverage parallelism (through multithreading)\nto make some tasks complete as fast as your computer can allow. It can easily\npreview, filter, slice, aggregate, sort, join CSV files, and exposes a large\ncollection of composable commands that can be chained together to perform a\nwide variety of typical tasks. xan also leverages its own expression language\nso you can perform complex tasks that cannot be done by relying on the\nsimplest commands. This minimalistic language has been tailored for CSV data\nand is faster than evaluating typical dynamically-typed languages such as\nPython, Lua, JavaScript etc.",
      "dev_url": "https://github.com/medialab/xan",
      "doc_url": "https://github.com/medialab/xan",
      "home": "https://github.com/medialab/xan",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE-MIT",
      "summary": "The CSV magician"
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo install --no-track --locked --root ${PREFIX} --path .",
          "cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "Yomguithereal",
        "apcamargo",
        "rvalieris"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "xan",
        "requirements": {
          "build": [
            "rust_compiler_stub",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cargo-bundle-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "xan --help"
          }
        ]
      }
    ],
    "package": {
      "name": "xan",
      "version": "0.51.0"
    },
    "requirements": {
      "build": [
        "rust_compiler_stub",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cargo-bundle-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0013f2edbfde15d4217e041b5eb156ae372de9b7df8b16cefbe010ac0c816c96",
      "url": "https://github.com/medialab/xan/archive/refs/tags/0.51.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}