{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\",
          "MINIFORGE_HOME": "C:\\\\Miniforge",
          "SET_PAGEFILE": "True"
        }
      }
    },
    "bot": {
      "abi_migration_branches": [
        "20.x",
        "19.x"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "llvmdev",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv"
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3"
      ],
      "host": [
        "backtrace",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "backtrace",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3"
      ],
      "host": [
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3"
      ],
      "host": [
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv"
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3"
          ],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.so",
            "test -f $PREFIX/lib/libLLVM.so.21.1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools",
            "libcxx >=19"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.dylib",
            "test -f $PREFIX/lib/libLLVM.21.1.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-C.21.dylib"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools",
            "libcxx >=19"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.dylib",
            "test -f $PREFIX/lib/libLLVM.21.1.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-C.21.dylib"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "m2-sed"
          ],
          "host": [
            "libllvm21",
            "libllvm-c21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libllvm-c21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
            "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1",
            "if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1",
            "llvm-nm.exe --help",
            "rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake"
          ],
          "requires": [
            "ripgrep"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": null,
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "skip": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_BIN%\"\\\\llc-21.exe exit 1",
            "llc-21 -version",
            "if exist \"%LIBRARY_BIN%\"\\\\llvm-config-21.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
            "llc -version",
            "if exist \"%LIBRARY_BIN%\"\\\\llvm-config.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ]
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1",
            "if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3",
        "libcxx 19"
      ],
      "host": [
        "backtrace",
        "libxml2-devel",
        "zlib",
        "zstd",
        "libcxx 19"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "name": "llvm-package",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools",
            "libcxx >=19"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.dylib",
            "test -f $PREFIX/lib/libLLVM.21.1.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-C.21.dylib"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3",
        "libcxx 19"
      ],
      "host": [
        "libcxx 19",
        "backtrace",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libcxx",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "backtrace",
        "libcxx",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "llvm-tools",
            "libcxx >=19"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llvm-config --libs",
            "test -f $PREFIX/include/llvm/Pass.h",
            "test -f $PREFIX/lib/libLLVMCore.a",
            "$PREFIX/libexec/llvm/not false",
            "$PREFIX/bin/llvm-nm --help"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "ninja",
            "cmake",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-21.dylib",
            "test -f $PREFIX/lib/libLLVM.21.1.dylib"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libllvm21"
          ]
        },
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libcxx >=19"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc-21 -version",
            "test ! -f $PREFIX/bin/llvm-config-21"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "libcxx 19"
          ],
          "host": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run": [
            "libllvm21",
            "llvm-tools-21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/llc -version",
            "test ! -f $PREFIX/bin/llvm-config"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ],
          "skip": true
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "libcxx 19"
          ],
          "host": [
            "libcxx 19",
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libLLVM-C.21.dylib"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3",
        "libcxx 19"
      ],
      "host": [
        "libcxx 19",
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libcxx",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libllvm-c21",
      "libllvm21",
      "lit",
      "llvm",
      "llvm-tools",
      "llvm-tools-21",
      "llvmdev"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/llvmdev.json"
  },
  "raw_meta_yaml": "{% set version = \"21.1.3\" %}\n{% set major_ver = version.split(\".\")[0] %}\n{% set tail_ver = version.split(\".\")[-1] %}\n{% set maj_min = major_ver ~ \".\" ~ version.split(\".\")[1] %}\n\n# as of LLVM 19, we expect an \"-rcX\" suffix for the release candidates\n{% set extra = \"-\" ~ tail_ver if tail_ver not in \"0123456789\" else \"\" %}\n{% set extra = \"git\" if tail_ver|trim(\"0123456789\") == \"dev\" else extra %}\n\npackage:\n  name: llvm-package\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n  sha256: 5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95\n  patches:\n    # - patches/intel-D47188-svml-VF.patch    # Fixes vectorizer and extends SVML support\n    # - patches/expect-fastmath-entrypoints-in-add-TLI-mappings.ll.patch # adjusts test added in 10.0.0 for intel-D47188-svml-VF.patch effects\n    # - patches/amd-roc-2.7.0.diff\n    - patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch\n\nbuild:\n  number: 0\n  merge_build_host: false\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - python >=3\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n  host:\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n    # needs aarch/ppc/arm (re)build of conda-forge/backtrace-feedstock\n    - backtrace                          # [unix and x86]\n    - libxml2-devel\n    - zlib\n    - zstd\n\noutputs:\n  # Contains everything\n  - name: llvmdev\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n        - m2-sed                             # [win]\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - {{ pin_subpackage(\"libllvm-c\" ~ major_ver, exact=True) }}     # [win]\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - {{ pin_subpackage(\"libllvm-c\" ~ major_ver, exact=True) }}     # [win]\n        - {{ pin_subpackage(\"llvm-tools\", exact=True) }}\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ cxx_compiler_version }}                           # [osx]\n      run_constrained:\n        - llvm        {{ version }}\n        - llvm-tools  {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      requires:\n        - ripgrep  # [win]\n      commands:\n        - $PREFIX/bin/llvm-config --libs                                # [not win]\n        - test -f $PREFIX/include/llvm/Pass.h                           # [not win]\n        - test -f $PREFIX/lib/libLLVMCore.a                             # [not win]\n        - $PREFIX/libexec/llvm/not false                                # [not win]\n        - $PREFIX/bin/llvm-nm --help                                    # [not win]\n        - if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1               # [win]\n        - if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1  # [win]\n        - if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1              # [win]\n        - llvm-nm.exe --help                                            # [win]\n\n        # ensure we've correctly inserted %VSINSTALLDIR% into the CMake metadata for LLVM;\n        # we're looking for: `INTERFACE_LINK_LIBRARIES \"$ENV{VSINSTALLDIR}/DIA SDK/lib/amd64/diaguids.lib;[...]`instead\n        - rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake  # [win]\n\n  # Contains the shared libraries. To make different LLVM libraries co-installable\n  # soversion is appended to the package name.\n  - name: libllvm{{ major_ver }}\n    script: install_llvm.sh  # [not win]\n    build:\n      activate_in_script: true\n      run_exports:                                                    # [not win]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - ninja                    # [not win]\n        - cmake                    # [not win]\n        - python >=3               # [not win]\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - libxml2-devel                      # [unix]\n        - zlib\n        - zstd\n      run:\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n    test:\n      commands:\n        # old style\n        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}{{ extra }}.so     # [linux]\n        - test -f $PREFIX/lib/libLLVM-{{ major_ver }}{{ extra }}.dylib  # [osx]\n        # new style\n        - test -f $PREFIX/lib/libLLVM.so.{{ maj_min }}{{ extra }}       # [linux]\n        - test -f $PREFIX/lib/libLLVM.{{ maj_min }}{{ extra }}.dylib    # [osx]\n\n  # This is a meta package so that people can use the latest libllvm and also\n  # for run_exports\n  - name: llvm\n    build:\n      run_exports:                                                    # [not win]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, max_pin=\"x.x\") }}  # [not win]\n    requirements:\n      build:\n      host:\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}     # [not win]\n        - libxml2-devel\n        - zlib\n        - zstd\n      run:                                                            # [not win]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}     # [not win]\n      run_constrained:\n        - llvmdev     {{ version }}\n        - llvm-tools  {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      commands:\n        - echo \"Hello World!\"\n\n  # Contains LLVM tools with a version suffix\n  - name: llvm-tools-{{ major_ver }}\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n      # On Windows there are no symlinks and copying will create a new package\n      # that is 300MB+\n      skip: true  # [win]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - zlib\n        - zstd\n      run:\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        # we need to do this manually because clang_bootstrap has no run-export\n        - libcxx >={{ cxx_compiler_version }}  # [osx]\n    test:\n      commands:\n        - $PREFIX/bin/llc-{{ major_ver }} -version                               # [not win]\n        # The test for windows is split into two lines instead of having it in one line\n        # like its unix variant because of a YAML parsing issue.\n        - if not exist \"%LIBRARY_BIN%\"\\\\llc-{{ major_ver }}.exe exit 1           # [win]\n        - llc-{{ major_ver }} -version                                           # [win]\n        - test ! -f $PREFIX/bin/llvm-config-{{ major_ver }}                      # [not win]\n        - if exist \"%LIBRARY_BIN%\"\\\\llvm-config-{{ major_ver }}.exe exit 1       # [win]\n\n  # Contains LLVM tools\n  - name: llvm-tools\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      activate_in_script: true\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - python >=3\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - {{ pin_subpackage(\"llvm-tools-\" ~ major_ver, exact=True) }}   # [not win]\n        # on unix, there's only symlinks\n        - libxml2-devel     # [win]\n        - zlib              # [win]\n        - zstd              # [win]\n      run:\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - {{ pin_subpackage(\"llvm-tools-\" ~ major_ver, exact=True) }}   # [not win]\n      run_constrained:\n        - llvm        {{ version }}\n        - llvmdev     {{ version }}\n        - clang       {{ version }}\n        - clang-tools {{ version }}\n    test:\n      commands:\n        - $PREFIX/bin/llc -version                               # [not win]\n        # The test for windows is split into two lines instead of having it in one line\n        # like its unix variant because of a YAML parsing issue.\n        - if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1           # [win]\n        - llc -version                                           # [win]\n        - test ! -f $PREFIX/bin/llvm-config                      # [not win]\n        - if exist \"%LIBRARY_BIN%\"\\\\llvm-config.exe exit 1       # [win]\n\n  # Contains LLVM-C shared library\n  - name: libllvm-c{{ major_ver }}\n    script: install_llvm.sh   # [unix]\n    script: install_llvm.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage(\"libllvm-c\" ~ major_ver, max_pin=\"x.x\") }}\n      activate_in_script: true\n      # not supported on linux, see\n      # https://github.com/llvm/llvm-project/blob/llvmorg-16.0.6/llvm/tools/llvm-shlib/CMakeLists.txt#L82-L85\n      # osx currently fails as well, see https://github.com/llvm/llvm-project/issues/64657\n      skip: true  # [not win]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n      host:\n        - libcxx {{ cxx_compiler_version }}  # [osx]\n        - {{ pin_subpackage(\"libllvm\" ~ major_ver, exact=True) }}\n        - zlib\n        - zstd\n      run_constrained:\n        - llvmdev {{ version }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libLLVM-C.{{ major_ver }}.dylib   # [osx]\n        - if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1          # [win]\n        - if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1          # [win]\n\n  - name: lit\n    build:\n      noarch: python\n      script: python -m pip install llvm/utils/lit --no-deps -vv\n      activate_in_script: true\n      skip: true  # [not linux64]\n      entry_points:\n        # upstream LLVM is inconsistent; there's one way specified in lit's setup.py...\n        - lit = lit.main:main\n        # ... and then the CMake files we install here (e.g. AddLLVM.cmake) look for another\n        - llvm-lit = lit.main:main\n    requirements:\n      host:\n        - python {{ python_min }}\n        - pip\n        - setuptools\n      run:\n        - python >={{ python_min }}\n    test:\n      requires:\n        - python {{ python_min }}\n      imports:\n        - lit\n      commands:\n        - lit -h\n        - llvm-lit -h\n\nabout:\n  home: http://llvm.org/\n  dev_url: https://github.com/llvm/llvm-project\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: llvm/LICENSE.TXT\n  license_family: Apache\n  summary: Development headers and libraries for LLVM\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - inducer\n    - jakirkham\n    - mingwandroid\n    - SylvainCorlay\n    - isuruf\n    - timsnyder\n    - xhochy\n    - h-vetinari\n  feedstock-name: llvmdev\n",
  "req": {
    "__set__": true,
    "elements": [
      "backtrace",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libcxx",
      "libllvm-c21",
      "libllvm21",
      "libxml2-devel",
      "llvm-tools",
      "llvm-tools-21",
      "m2-sed",
      "ninja",
      "pip",
      "python",
      "setuptools",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libcxx",
        "m2-sed",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "backtrace",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libcxx",
        "libllvm-c21",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libcxx",
        "libllvm-c21",
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "ripgrep"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libcxx 19",
        "m2-sed",
        "ninja",
        "python >=3"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "backtrace",
        "libcxx 19",
        "libllvm-c21",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "llvm-tools-21",
        "pip",
        "python 3.10",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libcxx >=19",
        "libllvm-c21",
        "libllvm21",
        "llvm-tools",
        "llvm-tools-21",
        "python >=3.10"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.10",
        "ripgrep"
      ]
    }
  },
  "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz",
  "version": "21.1.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/llvmdev.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_family": "Apache",
      "license_file": "llvm/LICENSE.TXT",
      "summary": "Development headers and libraries for LLVM"
    },
    "build": {
      "merge_build_host": false,
      "number": "0"
    },
    "extra": {
      "feedstock-name": "llvmdev",
      "recipe-maintainers": [
        "JohanMabille",
        "inducer",
        "jakirkham",
        "mingwandroid",
        "SylvainCorlay",
        "isuruf",
        "timsnyder",
        "xhochy",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvmdev",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3",
            "m2-sed"
          ],
          "host": [
            "libllvm21",
            "libllvm-c21",
            "llvm-tools",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21",
            "libllvm-c21",
            "llvm-tools"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\\\llvm\\\\Pass.h exit 1",
            "if not exist \"%LIBRARY_PREFIX%\"\\\\libexec\\llvm\\not.exe exit 1",
            "if not exist \"%LIBRARY_BIN%\"\\\\llvm-nm.exe exit 1",
            "llvm-nm.exe --help",
            "rg -e \"INTERFACE_LINK_LIBRARIES\\s\\\"\\$ENV\\{VSINSTALLDIR\\}[/\\w\\s]+/diaguids\\.lib\" %LIBRARY_LIB%\\cmake\\llvm\\LLVMExports.cmake"
          ],
          "requires": [
            "ripgrep"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "libllvm21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "zlib",
            "zstd"
          ],
          "run": []
        },
        "test": {
          "commands": null
        }
      },
      {
        "build": null,
        "name": "llvm",
        "requirements": {
          "build": [],
          "host": [
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev     21.1.3",
            "llvm-tools  21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "test": {
          "commands": [
            "echo \"Hello World!\""
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "skip": true
        },
        "name": "llvm-tools-21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_BIN%\"\\\\llc-21.exe exit 1",
            "llc-21 -version",
            "if exist \"%LIBRARY_BIN%\"\\\\llvm-config-21.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true
        },
        "name": "llvm-tools",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "python >=3"
          ],
          "host": [
            "libllvm21",
            "libxml2-devel",
            "zlib",
            "zstd"
          ],
          "run": [
            "libllvm21"
          ],
          "run_constrained": [
            "llvm        21.1.3",
            "llvmdev     21.1.3",
            "clang       21.1.3",
            "clang-tools 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist \"%LIBRARY_BIN%\"\\\\llc.exe exit 1",
            "llc -version",
            "if exist \"%LIBRARY_BIN%\"\\\\llvm-config.exe exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "run_exports": [
            "libllvm-c21"
          ]
        },
        "name": "libllvm-c21",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "libllvm21",
            "zlib",
            "zstd"
          ],
          "run_constrained": [
            "llvmdev 21.1.3"
          ]
        },
        "script": "install_llvm.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\LLVM-C.dll exit 1",
            "if not exist %LIBRARY_LIB%\\LLVM-C.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "entry_points": [
            "lit = lit.main:main",
            "llvm-lit = lit.main:main"
          ],
          "noarch": "python",
          "script": "python -m pip install llvm/utils/lit --no-deps -vv",
          "skip": true
        },
        "name": "lit",
        "requirements": {
          "host": [
            "python 3.10",
            "pip",
            "setuptools"
          ],
          "run": [
            "python >=3.10"
          ]
        },
        "test": {
          "commands": [
            "lit -h",
            "llvm-lit -h"
          ],
          "imports": [
            "lit"
          ],
          "requires": [
            "python 3.10"
          ]
        }
      }
    ],
    "package": {
      "name": "llvm-package",
      "version": "21.1.3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "python >=3"
      ],
      "host": [
        "libxml2-devel",
        "zlib",
        "zstd"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-pass-through-QEMU_LD_PREFIX-SDKROOT.patch"
      ],
      "sha256": "5bc91fe86bafebc64189465faca1ff35626dcb1b8539a14ae2ec07834c3e8e95",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "m2-sed",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libllvm-c21",
        "libllvm21",
        "libxml2-devel",
        "llvm-tools",
        "pip",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libllvm-c21",
        "libllvm21",
        "llvm-tools",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "ripgrep"
      ]
    }
  }
}