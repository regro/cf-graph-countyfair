{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "bomctl",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "bomctl is format-agnostic Software Bill of Materials (SBOM) tooling, which is intended to bridge the gap between SBOM generation and SBOM analysis tools. It focuses on supporting more complex SBOM operations on multiple SBOM files that represent systems by being opinionated on only supporting the NTIA minimum fields or other fields supported by protobom.",
      "dev_url": "https://github.com/bomctl/bomctl",
      "doc_url": "https://github.com/bomctl/bomctl",
      "home": "https://github.com/bomctl/bomctl",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "src/LICENSE",
      "summary": "Format agnostic SBOM tooling"
    },
    "build": {
      "number": "0",
      "script": [
        "cd src",
        "go-licenses save --ignore modernc.org/mathutil . --save_path ../library_licenses",
        "go build -v -o $PREFIX/bin/bomctl -ldflags=\"-s -w\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      }
    ],
    "package": {
      "name": "bomctl",
      "version": "0.4.3"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8d361a0813de9aa65a366a1f8333004b2fa476981481c0c90e00ccaf74a01c58",
      "url": "https://github.com/bomctl/bomctl/archive/refs/tags/v0.4.3.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "bomctl is format-agnostic Software Bill of Materials (SBOM) tooling, which is intended to bridge the gap between SBOM generation and SBOM analysis tools. It focuses on supporting more complex SBOM operations on multiple SBOM files that represent systems by being opinionated on only supporting the NTIA minimum fields or other fields supported by protobom.",
      "dev_url": "https://github.com/bomctl/bomctl",
      "doc_url": "https://github.com/bomctl/bomctl",
      "home": "https://github.com/bomctl/bomctl",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "src/LICENSE",
      "summary": "Format agnostic SBOM tooling"
    },
    "build": {
      "number": "0",
      "script": [
        "cd src",
        "go-licenses save --ignore modernc.org/mathutil . --save_path ../library_licenses",
        "go build -v -o $PREFIX/bin/bomctl -ldflags=\"-s -w\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      },
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      },
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      }
    ],
    "package": {
      "name": "bomctl",
      "version": "0.4.3"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8d361a0813de9aa65a366a1f8333004b2fa476981481c0c90e00ccaf74a01c58",
      "url": "https://github.com/bomctl/bomctl/archive/refs/tags/v0.4.3.tar.gz"
    }
  },
  "name": "bomctl",
  "osx_64_meta_yaml": {
    "about": {
      "description": "bomctl is format-agnostic Software Bill of Materials (SBOM) tooling, which is intended to bridge the gap between SBOM generation and SBOM analysis tools. It focuses on supporting more complex SBOM operations on multiple SBOM files that represent systems by being opinionated on only supporting the NTIA minimum fields or other fields supported by protobom.",
      "dev_url": "https://github.com/bomctl/bomctl",
      "doc_url": "https://github.com/bomctl/bomctl",
      "home": "https://github.com/bomctl/bomctl",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "src/LICENSE",
      "summary": "Format agnostic SBOM tooling"
    },
    "build": {
      "number": "0",
      "script": [
        "cd src",
        "go-licenses save --ignore modernc.org/mathutil . --save_path ../library_licenses",
        "go build -v -o $PREFIX/bin/bomctl -ldflags=\"-s -w\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      }
    ],
    "package": {
      "name": "bomctl",
      "version": "0.4.3"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8d361a0813de9aa65a366a1f8333004b2fa476981481c0c90e00ccaf74a01c58",
      "url": "https://github.com/bomctl/bomctl/archive/refs/tags/v0.4.3.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "bomctl"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/bomctl.json"
  },
  "raw_meta_yaml": "context:\n  name: bomctl\n  version: 0.4.3\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  - url: https://github.com/bomctl/${{ name }}/archive/refs/tags/v${{ version }}.tar.gz\n    sha256: 8d361a0813de9aa65a366a1f8333004b2fa476981481c0c90e00ccaf74a01c58\n    target_directory: src\n  - url: https://gitlab.com/cznic/mathutil/-/raw/master/LICENSE\n    sha256: bfa9bf72a72ca009fd62a8f84fca3dca67e51d93af96352723646599898b6cf5\n    file_name: LICENSE.mathutil\n\nbuild:\n  script:\n    - cd src\n    - go-licenses save --ignore modernc.org/mathutil . --save_path ../library_licenses\n    - if: win\n      then: go build -v -o %LIBRARY_BIN%\\bomctl.exe -ldflags=\"-s\"\n      else: go build -v -o $PREFIX/bin/bomctl -ldflags=\"-s -w\"\n  number: 0\n\nrequirements:\n  build:\n    - ${{ compiler('go-nocgo') }}\n    - go-licenses\n\ntests:\n  - script: bomctl --help\n\nabout:\n  homepage: https://github.com/bomctl/bomctl\n  summary: Format agnostic SBOM tooling\n  description: bomctl is format-agnostic Software Bill of Materials (SBOM) tooling, which is intended to bridge the gap between SBOM generation and SBOM analysis tools. It focuses on supporting more complex SBOM operations on multiple SBOM files that represent systems by being opinionated on only supporting the NTIA minimum fields or other fields supported by protobom.\n  license: Apache-2.0\n  license_file:\n    - src/LICENSE\n    - library_licenses/\n    - LICENSE.mathutil\n  repository: https://github.com/bomctl/bomctl\n  documentation: https://github.com/bomctl/bomctl\n\nextra:\n  recipe-maintainers:\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "go-licenses",
      "go-nocgo_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/bomctl/bomctl/archive/refs/tags/v0.4.3.tar.gz",
  "version": "0.4.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/bomctl.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "bomctl is format-agnostic Software Bill of Materials (SBOM) tooling, which is intended to bridge the gap between SBOM generation and SBOM analysis tools. It focuses on supporting more complex SBOM operations on multiple SBOM files that represent systems by being opinionated on only supporting the NTIA minimum fields or other fields supported by protobom.",
      "dev_url": "https://github.com/bomctl/bomctl",
      "doc_url": "https://github.com/bomctl/bomctl",
      "home": "https://github.com/bomctl/bomctl",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "src/LICENSE",
      "summary": "Format agnostic SBOM tooling"
    },
    "build": {
      "number": "0",
      "script": [
        "cd src",
        "go-licenses save --ignore modernc.org/mathutil . --save_path ../library_licenses",
        "go build -v -o $PREFIX/bin/bomctl -ldflags=\"-s -w\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "bomctl",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "bomctl --help"
          }
        ]
      }
    ],
    "package": {
      "name": "bomctl",
      "version": "0.4.3"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8d361a0813de9aa65a366a1f8333004b2fa476981481c0c90e00ccaf74a01c58",
      "url": "https://github.com/bomctl/bomctl/archive/refs/tags/v0.4.3.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}