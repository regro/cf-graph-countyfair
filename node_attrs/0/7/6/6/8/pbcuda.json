{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "98b58cf46a281599f1256c4ee4404d4a02b2cf22",
  "feedstock_hash_ts": 1757718669,
  "feedstock_name": "pbcuda",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "pbcuda - a Python interface to CUDA libraries and routines using pybind11.\nIt simplifies hybrid Python/C++/CUDA development by providing seamless bindings\nto CUDA functionalities, enabling efficient and flexible development workflows\nfor high-performance computing and GPU-accelerated applications.\n",
      "home": "https://github.com/lijun99/pbcuda",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A Python Interface to CUDA with pybind11"
    },
    "build": {
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "lijun99"
      ]
    },
    "package": {
      "name": "pbcuda",
      "version": "0.1.3"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "pybind11",
        "ninja",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "scikit-build",
        "scikit-build-core",
        "cuda-version 12.6",
        "cuda-version 13.0"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f9a40f1951c3374b53d69ab4264395cd035f3b76323a8c866b63647964b8cc5b",
      "url": "https://github.com/lijun99/pbcuda/archive/refs/tags/v0.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import pbcuda; print('Success')\""
      ],
      "imports": [
        "pbcuda"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "pip",
        "pybind11",
        "python",
        "scikit-build",
        "scikit-build-core",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "pbcuda - a Python interface to CUDA libraries and routines using pybind11.\nIt simplifies hybrid Python/C++/CUDA development by providing seamless bindings\nto CUDA functionalities, enabling efficient and flexible development workflows\nfor high-performance computing and GPU-accelerated applications.\n",
      "home": "https://github.com/lijun99/pbcuda",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A Python Interface to CUDA with pybind11"
    },
    "build": {
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "lijun99"
      ]
    },
    "package": {
      "name": "pbcuda",
      "version": "0.1.3"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "pybind11",
        "ninja",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "scikit-build",
        "scikit-build-core",
        "cuda-version 12.6",
        "cuda-version 13.0"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f9a40f1951c3374b53d69ab4264395cd035f3b76323a8c866b63647964b8cc5b",
      "url": "https://github.com/lijun99/pbcuda/archive/refs/tags/v0.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import pbcuda; print('Success')\""
      ],
      "imports": [
        "pbcuda"
      ]
    }
  },
  "name": "pbcuda",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pbcuda"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pbcuda.json"
  },
  "raw_meta_yaml": "{% set version = \"0.1.3\" %}\n\npackage:\n  name: pbcuda\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lijun99/pbcuda/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: f9a40f1951c3374b53d69ab4264395cd035f3b76323a8c866b63647964b8cc5b\n\nbuild:\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv\"\n  number: 0\n  skip: true  # [cuda_compiler_version == \"None\" or osx or win]\n\nrequirements:\n  build:\n    - cmake\n    - make\n    - pybind11\n    - ninja\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n\n  host:\n    - python\n    - pybind11\n    - pip\n    - setuptools\n    - scikit-build\n    - scikit-build-core\n    - cuda-version {{ cuda_compiler_version }}\n\n  run:\n    - python\n\ntest:\n  imports:\n    - pbcuda\n  commands:\n    - python -c \"import pbcuda; print('Success')\"\n\nabout:\n  home: https://github.com/lijun99/pbcuda\n  summary: 'A Python Interface to CUDA with pybind11'\n  description: |\n    pbcuda - a Python interface to CUDA libraries and routines using pybind11.\n    It simplifies hybrid Python/C++/CUDA development by providing seamless bindings\n    to CUDA functionalities, enabling efficient and flexible development workflows\n    for high-performance computing and GPU-accelerated applications.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - lijun99\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "make",
      "ninja",
      "pip",
      "pybind11",
      "python",
      "scikit-build",
      "scikit-build-core",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "pip",
        "pybind11",
        "python",
        "scikit-build",
        "scikit-build-core",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 12.6",
        "cuda-version 13.0",
        "pip",
        "pybind11",
        "python",
        "scikit-build",
        "scikit-build-core",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/lijun99/pbcuda/archive/refs/tags/v0.1.3.tar.gz",
  "version": "0.1.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pbcuda.json"
  }
}