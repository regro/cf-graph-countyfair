{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "b49875dd72a4c8a1c61f0f125547ad94c819fd8f",
  "feedstock_hash_ts": 1739695410,
  "feedstock_name": "scanf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Python has powerful regular expressions but they can be totally\noverkill for many simpler situations. Additionally, some common\nnumerical formats require quite complex regex's to match them\nrobustly. This python implementation of scanf internally\ntranslates the simple scanf format into regular expressions,\nthen returns the parsed values.\n",
      "dev_url": "https://github.com/joshburnett/scanf",
      "doc_url": "https://github.com/joshburnett/scanf",
      "home": "https://github.com/joshburnett/scanf",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A small scanf implementation"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "scanf",
      "version": "1.6.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools",
        "flit-core"
      ],
      "run": [
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "python.patch"
      ],
      "sha256": "7671292b825eb1cbdbdcacf3e30e761fc482bf3671c835e216b8b6f14758a272",
      "url": "https://pypi.org/packages/source/s/scanf/scanf-1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "scanf"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Python has powerful regular expressions but they can be totally\noverkill for many simpler situations. Additionally, some common\nnumerical formats require quite complex regex's to match them\nrobustly. This python implementation of scanf internally\ntranslates the simple scanf format into regular expressions,\nthen returns the parsed values.\n",
      "dev_url": "https://github.com/joshburnett/scanf",
      "doc_url": "https://github.com/joshburnett/scanf",
      "home": "https://github.com/joshburnett/scanf",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A small scanf implementation"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "scanf",
      "version": "1.6.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools",
        "flit-core"
      ],
      "run": [
        "python >=3.9"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "python.patch"
      ],
      "sha256": "7671292b825eb1cbdbdcacf3e30e761fc482bf3671c835e216b8b6f14758a272",
      "url": "https://pypi.org/packages/source/s/scanf/scanf-1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "scanf"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "scanf",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "scanf"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/scanf.json"
  },
  "raw_meta_yaml": "{% set name = \"scanf\" %}\n{% set version = \"1.6.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 7671292b825eb1cbdbdcacf3e30e761fc482bf3671c835e216b8b6f14758a272\n  patches:\n    - python.patch\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n    - setuptools\n    - flit-core\n  run:\n    - python >={{ python_min }}\n\ntest:\n  imports:\n    - scanf\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/joshburnett/scanf\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A small scanf implementation\n\n  description: |\n    Python has powerful regular expressions but they can be totally \n    overkill for many simpler situations. Additionally, some common \n    numerical formats require quite complex regex's to match them \n    robustly. This python implementation of scanf internally \n    translates the simple scanf format into regular expressions, \n    then returns the parsed values.\n  doc_url: https://github.com/joshburnett/scanf\n  dev_url: https://github.com/joshburnett/scanf\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "flit-core",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/scanf/scanf-1.6.0.tar.gz",
  "version": "1.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/scanf.json"
  }
}