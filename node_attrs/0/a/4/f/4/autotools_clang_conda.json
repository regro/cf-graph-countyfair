{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "autotools_clang_conda",
  "meta_yaml": {
    "about": {
      "description": "This package installs clang compiler, lld linker, tools like llvm-ranlib, llvm-ar,\nbash, autoconf to compiler autotools on windows. Resulting packages will be MSVC compatible.\nTo use this package, in meta.yaml\n\n  build:\n  requirements:\n    build:\n\n\n      - c_compiler_stub\n      - autotools_clang_conda\n\n      - llvm-openmp\n\nIn bld.bat\n\n  call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat\n  if %ERRORLEVEL% neq 0 exit 1\n\nIn build.sh\n\n  ./configure --prefix=$PREFIX\n  [[ \"$target_platform\" == \"win-64\" ]] && patch_libtool\n  make -j${CPU_COUNT}\n  make install\n\nIn case the build script has a different name (for example in multi-output recipes),\nyou can pass the name of the build script in the recipe folder to the bat-script:\n\nIn build_subpackage.bat\n\n  call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat build_subpackage.sh\n  if %ERRORLEVEL% neq 0 exit 1\n",
      "home": "http://github.com/conda-forge/autotools_clang_conda-feedstock",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Scripts to compile autotools projects on windows using clang and llvm tools"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf"
      ]
    },
    "package": {
      "name": "autotools_clang_conda",
      "version": "0.0.12"
    },
    "requirements": {
      "run": [
        "clang",
        "clangxx",
        "llvm-tools",
        "lld",
        "posix",
        "m2-automake-wrapper",
        "m2-libtool",
        "m2-autoconf",
        "m2-make",
        "m2-findutils",
        "m2-m4",
        "m2-bash",
        "m2-sed",
        "m2-base",
        "m2-diffutils",
        "cmake"
      ]
    },
    "schema_version": 0,
    "test": {
      "commands": [
        "if not exist %LIBRARY_BIN%\\run_autotools_clang_conda_build.bat exit 0"
      ]
    }
  },
  "name": "autotools_clang_conda",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "autotools_clang_conda"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/autotools_clang_conda.json"
  },
  "raw_meta_yaml": "package:\n  name: autotools_clang_conda\n  version: 0.0.12\n\nbuild:\n  number: 0\n  skip: True   # [not win]\n\nrequirements:\n  run:\n    - clang\n    - clangxx\n    - llvm-tools\n    - lld\n    - posix\n    - m2-automake-wrapper\n    - m2-libtool\n    - m2-autoconf\n    - m2-make\n    - m2-findutils\n    - m2-m4\n    - m2-bash\n    - m2-sed\n    - m2-base\n    - m2-diffutils\n    - cmake\n\ntest:\n  commands:\n    - if not exist %LIBRARY_BIN%\\run_autotools_clang_conda_build.bat exit 0\n\nabout:\n  home: http://github.com/conda-forge/autotools_clang_conda-feedstock\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Scripts to compile autotools projects on windows using clang and llvm tools'\n  description: |\n    This package installs clang compiler, lld linker, tools like llvm-ranlib, llvm-ar,\n    bash, autoconf to compiler autotools on windows. Resulting packages will be MSVC compatible.\n    To use this package, in meta.yaml\n\n      build:\n        skip: True  # [win and vc<14]\n      requirements:\n        build:\n          # cl compiler on win is required only for setting up env variables for\n          # activating the build environment\n          - {{ compiler('c') }}\n          - autotools_clang_conda  # [win]\n          # Needed only if OpenMP is used. Not compatible with MSVC's OpenMP implementation\n          - llvm-openmp   # [win]\n\n    In bld.bat\n\n      call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat\n      if %ERRORLEVEL% neq 0 exit 1\n\n    In build.sh\n\n      ./configure --prefix=$PREFIX\n      [[ \"$target_platform\" == \"win-64\" ]] && patch_libtool\n      make -j${CPU_COUNT}\n      make install\n\n    In case the build script has a different name (for example in multi-output recipes),\n    you can pass the name of the build script in the recipe folder to the bat-script:\n\n    In build_subpackage.bat\n\n      call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat build_subpackage.sh\n      if %ERRORLEVEL% neq 0 exit 1\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
  "req": {
    "__set__": true,
    "elements": [
      "clang",
      "clangxx",
      "cmake",
      "lld",
      "llvm-tools",
      "m2-autoconf",
      "m2-automake-wrapper",
      "m2-base",
      "m2-bash",
      "m2-diffutils",
      "m2-findutils",
      "m2-libtool",
      "m2-m4",
      "m2-make",
      "m2-sed",
      "posix"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clangxx",
        "cmake",
        "lld",
        "llvm-tools",
        "m2-autoconf",
        "m2-automake-wrapper",
        "m2-base",
        "m2-bash",
        "m2-diffutils",
        "m2-findutils",
        "m2-libtool",
        "m2-m4",
        "m2-make",
        "m2-sed",
        "posix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "time": 1568135311.1152594,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clangxx",
        "cmake",
        "lld",
        "llvm-tools",
        "m2-autoconf",
        "m2-automake-wrapper",
        "m2-base",
        "m2-bash",
        "m2-diffutils",
        "m2-findutils",
        "m2-libtool",
        "m2-m4",
        "m2-make",
        "m2-sed",
        "posix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "version": "0.0.12",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/autotools_clang_conda.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This package installs clang compiler, lld linker, tools like llvm-ranlib, llvm-ar,\nbash, autoconf to compiler autotools on windows. Resulting packages will be MSVC compatible.\nTo use this package, in meta.yaml\n\n  build:\n  requirements:\n    build:\n\n\n      - c_compiler_stub\n      - autotools_clang_conda\n\n      - llvm-openmp\n\nIn bld.bat\n\n  call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat\n  if %ERRORLEVEL% neq 0 exit 1\n\nIn build.sh\n\n  ./configure --prefix=$PREFIX\n  [[ \"$target_platform\" == \"win-64\" ]] && patch_libtool\n  make -j${CPU_COUNT}\n  make install\n\nIn case the build script has a different name (for example in multi-output recipes),\nyou can pass the name of the build script in the recipe folder to the bat-script:\n\nIn build_subpackage.bat\n\n  call %BUILD_PREFIX%\\Library\\bin\\run_autotools_clang_conda_build.bat build_subpackage.sh\n  if %ERRORLEVEL% neq 0 exit 1\n",
      "home": "http://github.com/conda-forge/autotools_clang_conda-feedstock",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Scripts to compile autotools projects on windows using clang and llvm tools"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf"
      ]
    },
    "package": {
      "name": "autotools_clang_conda",
      "version": "0.0.12"
    },
    "requirements": {
      "run": [
        "clang",
        "clangxx",
        "llvm-tools",
        "lld",
        "posix",
        "m2-automake-wrapper",
        "m2-libtool",
        "m2-autoconf",
        "m2-make",
        "m2-findutils",
        "m2-m4",
        "m2-bash",
        "m2-sed",
        "m2-base",
        "m2-diffutils",
        "cmake"
      ]
    },
    "schema_version": 0,
    "test": {
      "commands": [
        "if not exist %LIBRARY_BIN%\\run_autotools_clang_conda_build.bat exit 0"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang",
        "clangxx",
        "cmake",
        "lld",
        "llvm-tools",
        "m2-autoconf",
        "m2-automake-wrapper",
        "m2-base",
        "m2-bash",
        "m2-diffutils",
        "m2-findutils",
        "m2-libtool",
        "m2-m4",
        "m2-make",
        "m2-sed",
        "posix"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}