{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "hint-all"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "63f14e072d30610f82836bc881cbbde27f46337b",
  "feedstock_hash_ts": 1742135587,
  "feedstock_name": "category_encoders",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A set of scikit-learn-style transformers for encoding categorical variables\ninto numeric with different techniques. While ordinal, one-hot, and hashing\nencoders have similar equivalents in the existing scikit-learn version, the\ntransformers in this library all share a few useful properties:\n\n- First-class support for pandas dataframes as an input (and optionally as\noutput)\n\n- Can explicitly configure which columns in the data are encoded by name or\nindex, or infer non-numeric columns regardless of input type\n\n- Can drop any columns with very low variance based on training set\noptionally\n\n- Portability: train a transformer on data, pickle it, reuse it later and\nget the same thing out.\n\n- Full compatibility with sklearn pipelines, input an array-like dataset\nlike any other transformer",
      "doc_url": "https://contrib.scikit-learn.org/category_encoders/",
      "home": "https://github.com/scikit-learn-contrib/category_encoders",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "dist/LICENSE.md",
      "summary": "A collection of sklearn transformers to encode categorical variables as numeric"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": [
        "cd dist",
        "${{ PYTHON }} -m pip install -vv . --no-deps --no-build-isolation --disable-pip-version-check"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "nirajd",
        "wdm0006"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "category_encoders",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.10.*",
            "poetry-core"
          ],
          "run": [
            "numpy >=1.14.0",
            "pandas >=1.0.5",
            "patsy >=0.5.1",
            "python >=3.10",
            "scikit-learn >=1.6.0",
            "scipy >=1.0.0",
            "statsmodels >=0.9.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "category_encoders"
              ]
            }
          },
          {
            "files": {
              "source": [
                "src/tests/"
              ]
            },
            "requirements": {
              "run": [
                "coverage",
                "python 3.10.*",
                "pytest",
                "pytest-subtests"
              ]
            },
            "script": [
              "coverage run --source=category_encoders --branch -m pytest src -vv --color=yes --tb=long -k \"not (pandas_index or truncated_index)\"",
              "coverage report --show-missing --skip-covered --fail-under=89"
            ]
          }
        ],
        "version": "2.8.1"
      }
    ],
    "package": {
      "name": "category_encoders",
      "version": "2.8.1"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10.*",
        "poetry-core"
      ],
      "run": [
        "numpy >=1.14.0",
        "pandas >=1.0.5",
        "patsy >=0.5.1",
        "python >=3.10",
        "scikit-learn >=1.6.0",
        "scipy >=1.0.0",
        "statsmodels >=0.9.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "57af8a23bde3cf622ee7e17c11547011795e4d337839d40cbd16c36b67291b33",
      "url": "https://pypi.org/packages/source/c/category_encoders/category_encoders-2.8.1.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "patsy",
        "python",
        "scikit-learn",
        "scipy",
        "statsmodels"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "pytest-subtests",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A set of scikit-learn-style transformers for encoding categorical variables\ninto numeric with different techniques. While ordinal, one-hot, and hashing\nencoders have similar equivalents in the existing scikit-learn version, the\ntransformers in this library all share a few useful properties:\n\n- First-class support for pandas dataframes as an input (and optionally as\noutput)\n\n- Can explicitly configure which columns in the data are encoded by name or\nindex, or infer non-numeric columns regardless of input type\n\n- Can drop any columns with very low variance based on training set\noptionally\n\n- Portability: train a transformer on data, pickle it, reuse it later and\nget the same thing out.\n\n- Full compatibility with sklearn pipelines, input an array-like dataset\nlike any other transformer",
      "doc_url": "https://contrib.scikit-learn.org/category_encoders/",
      "home": "https://github.com/scikit-learn-contrib/category_encoders",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "dist/LICENSE.md",
      "summary": "A collection of sklearn transformers to encode categorical variables as numeric"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": [
        "cd dist",
        "${{ PYTHON }} -m pip install -vv . --no-deps --no-build-isolation --disable-pip-version-check"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "nirajd",
        "wdm0006"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "category_encoders",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.10.*",
            "poetry-core"
          ],
          "run": [
            "numpy >=1.14.0",
            "pandas >=1.0.5",
            "patsy >=0.5.1",
            "python >=3.10",
            "scikit-learn >=1.6.0",
            "scipy >=1.0.0",
            "statsmodels >=0.9.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "category_encoders"
              ]
            }
          },
          {
            "files": {
              "source": [
                "src/tests/"
              ]
            },
            "requirements": {
              "run": [
                "coverage",
                "python 3.10.*",
                "pytest",
                "pytest-subtests"
              ]
            },
            "script": [
              "coverage run --source=category_encoders --branch -m pytest src -vv --color=yes --tb=long -k \"not (pandas_index or truncated_index)\"",
              "coverage report --show-missing --skip-covered --fail-under=89"
            ]
          }
        ],
        "version": "2.8.1"
      }
    ],
    "package": {
      "name": "category_encoders",
      "version": "2.8.1"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10.*",
        "poetry-core"
      ],
      "run": [
        "numpy >=1.14.0",
        "pandas >=1.0.5",
        "patsy >=0.5.1",
        "python >=3.10",
        "scikit-learn >=1.6.0",
        "scipy >=1.0.0",
        "statsmodels >=0.9.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "57af8a23bde3cf622ee7e17c11547011795e4d337839d40cbd16c36b67291b33",
      "url": "https://pypi.org/packages/source/c/category_encoders/category_encoders-2.8.1.tar.gz"
    }
  },
  "name": "category_encoders",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "category_encoders"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/category_encoders.json"
  },
  "raw_meta_yaml": "# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json\nschema_version: 1\n\ncontext:\n  version: \"2.8.1\"\n\npackage:\n  name: category_encoders\n  version: ${{ version }}\n\nsource:\n  - url: https://pypi.org/packages/source/c/category_encoders/category_encoders-${{ version }}.tar.gz\n    sha256: 57af8a23bde3cf622ee7e17c11547011795e4d337839d40cbd16c36b67291b33\n    target_directory: dist\n  - url: https://github.com/scikit-learn-contrib/category_encoders/archive/${{ version }}.tar.gz\n    sha256: 5f701054641f4aaa6712dd453d80f5b3cf3388cbb8b5501a32b29d7f1cbbd9db\n    target_directory: src\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - cd dist\n    - ${{ PYTHON }} -m pip install -vv . --no-deps --no-build-isolation --disable-pip-version-check\n\nrequirements:\n  host:\n    - pip\n    - python ${{ python_min }}.*\n    - poetry-core\n  run:\n    - numpy >=1.14.0\n    - pandas >=1.0.5\n    - patsy >=0.5.1\n    - python >=${{ python_min }}\n    - scikit-learn >=1.6.0\n    - scipy >=1.0.0\n    - statsmodels >=0.9.0\n\ntests:\n  - python:\n      pip_check: true\n      imports:\n        - category_encoders\n  - files:\n      source:\n        - src/tests/\n    requirements:\n      run:\n        - coverage\n        - python ${{ python_min }}.*\n        - pytest\n        - pytest-subtests\n    script:\n      - coverage run --source=category_encoders --branch -m pytest src -vv --color=yes --tb=long -k \"not (pandas_index or truncated_index)\"\n      - coverage report --show-missing --skip-covered --fail-under=89\n\nabout:\n  license: BSD-3-Clause\n  license_file: dist/LICENSE.md\n  summary: A collection of sklearn transformers to encode categorical variables as numeric\n  description: |-\n    A set of scikit-learn-style transformers for encoding categorical variables\n    into numeric with different techniques. While ordinal, one-hot, and hashing\n    encoders have similar equivalents in the existing scikit-learn version, the\n    transformers in this library all share a few useful properties:\n\n    - First-class support for pandas dataframes as an input (and optionally as\n    output)\n\n    - Can explicitly configure which columns in the data are encoded by name or\n    index, or infer non-numeric columns regardless of input type\n\n    - Can drop any columns with very low variance based on training set\n    optionally\n\n    - Portability: train a transformer on data, pickle it, reuse it later and\n    get the same thing out.\n\n    - Full compatibility with sklearn pipelines, input an array-like dataset\n    like any other transformer\n\n\n  homepage: https://github.com/scikit-learn-contrib/category_encoders\n  documentation: https://contrib.scikit-learn.org/category_encoders/\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - nirajd\n    - wdm0006\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pandas",
      "patsy",
      "pip",
      "poetry-core",
      "python",
      "scikit-learn",
      "scipy",
      "statsmodels"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "patsy",
        "python",
        "scikit-learn",
        "scipy",
        "statsmodels"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "pytest-subtests",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry-core",
        "python 3.10.*"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy >=1.14.0",
        "pandas >=1.0.5",
        "patsy >=0.5.1",
        "python >=3.10",
        "scikit-learn >=1.6.0",
        "scipy >=1.0.0",
        "statsmodels >=0.9.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "pytest-subtests",
        "python 3.10.*"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/c/category_encoders/category_encoders-2.8.1.tar.gz",
  "version": "2.8.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/category_encoders.json"
  }
}