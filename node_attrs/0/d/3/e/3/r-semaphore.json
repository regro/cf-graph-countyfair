{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-semaphore",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dansmith01",
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-semaphore",
      "version": "1.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0c3398cdf17d3fca939ebf6b29be80488f884f1b15422a840b0c3bc486c5901c",
      "url": [
        "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('semaphore')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dansmith01",
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-semaphore",
      "version": "1.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0c3398cdf17d3fca939ebf6b29be80488f884f1b15422a840b0c3bc486c5901c",
      "url": [
        "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('semaphore')\"",
        "\"%R%\" -e \"library('semaphore')\""
      ]
    }
  },
  "name": "r-semaphore",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dansmith01",
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-semaphore",
      "version": "1.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0c3398cdf17d3fca939ebf6b29be80488f884f1b15422a840b0c3bc486c5901c",
      "url": [
        "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('semaphore')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-semaphore"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-semaphore.json"
  },
  "raw_meta_yaml": "{% set version = \"1.2.0\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-semaphore\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/semaphore_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/semaphore/semaphore_{{ version }}.tar.gz\n  sha256: 0c3398cdf17d3fca939ebf6b29be80488f884f1b15422a840b0c3bc486c5901c\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ stdlib('c') }}\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-bh\n    - r-rcpp\n  run:\n    - r-base\n    #- r-bh\n    - r-rcpp\n\ntest:\n  commands:\n    - $R -e \"library('semaphore')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('semaphore')\\\"\"  # [win]\n\nabout:\n  home: https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore\n  license: MIT\n  summary: Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - dansmith01\n    - conda-forge/r\n\n# Package: semaphore\n# Type: Package\n# Title: Shared Memory Atomic Operations\n# Version: 1.0.2\n# Date: 2024-11-12\n# Authors@R: c( person( \"Daniel P.\", \"Smith\", email   = \"dansmith01@gmail.com\", role    = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0002-2479-2044\")), person( \"Alkek Center for Metagenomics and Microbiome Research\", role = c(\"cph\", \"fnd\") ))\n# Description: Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero.\n# URL: https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore\n# BugReports: https://github.com/cmmr/semaphore/issues\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# RoxygenNote: 7.3.2\n# Config/testthat/edition: 3\n# LinkingTo: Rcpp, BH\n# Imports: Rcpp\n# Suggests: testthat\n# NeedsCompilation: yes\n# Packaged: 2024-11-12 23:01:17 UTC; Daniel\n# Author: Daniel P. Smith [aut, cre] (<https://orcid.org/0000-0002-2479-2044>), Alkek Center for Metagenomics and Microbiome Research [cph, fnd]\n# Maintainer: Daniel P. Smith <dansmith01@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2024-11-13 08:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-bh",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-bh",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz"
  ],
  "version": "1.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-semaphore.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://cmmr.github.io/semaphore/, https://github.com/cmmr/semaphore",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "Implements named semaphores from the 'boost' 'C++' library <https://www.boost.org/>. A semaphore object is shared amongst several processes. This integer value can be safely incremented or decremented by each processes. Processes can also wait (blocking) for the value to become non-zero."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "dansmith01",
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-semaphore",
      "version": "1.2.0"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "c_stdlib_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0c3398cdf17d3fca939ebf6b29be80488f884f1b15422a840b0c3bc486c5901c",
      "url": [
        "https://cran.r-project.org/src/contrib/semaphore_1.2.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/semaphore/semaphore_1.2.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('semaphore')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bh",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}