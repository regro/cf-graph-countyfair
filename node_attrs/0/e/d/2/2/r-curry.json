{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-curry",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/thomasp85/curry",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Partial application is the process of reducing the arity of a function by fixing one or more arguments, thus creating a new function lacking the fixed arguments. The curry package provides three different ways of performing partial function application by fixing arguments from either end of the argument list (currying and tail currying) or by fixing multiple named arguments (partial application). This package provides this functionality through the %<%, %-<%, and %><% operators which allows for a programming style comparable to modern functional languages. Compared to other implementations such a purrr::partial() the operators in curry composes functions with named arguments, aiding in autocomplete etc."
    },
    "build": {
      "noarch": "generic",
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-curry",
      "version": "0.1.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4930c6d5cdb6fa319b888d2220b9ded2c7bf786d8a700ad102558065d78649df",
      "url": [
        "https://cran.r-project.org/src/contrib/curry_0.1.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/curry/curry_0.1.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('curry')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/thomasp85/curry",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Partial application is the process of reducing the arity of a function by fixing one or more arguments, thus creating a new function lacking the fixed arguments. The curry package provides three different ways of performing partial function application by fixing arguments from either end of the argument list (currying and tail currying) or by fixing multiple named arguments (partial application). This package provides this functionality through the %<%, %-<%, and %><% operators which allows for a programming style comparable to modern functional languages. Compared to other implementations such a purrr::partial() the operators in curry composes functions with named arguments, aiding in autocomplete etc."
    },
    "build": {
      "noarch": "generic",
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-curry",
      "version": "0.1.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "4930c6d5cdb6fa319b888d2220b9ded2c7bf786d8a700ad102558065d78649df",
      "url": [
        "https://cran.r-project.org/src/contrib/curry_0.1.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/curry/curry_0.1.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('curry')\""
      ]
    }
  },
  "name": "r-curry",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-curry"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-curry.json"
  },
  "raw_meta_yaml": "{% set version = '0.1.1' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-curry\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/curry_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/curry/curry_{{ version }}.tar.gz\n  sha256: 4930c6d5cdb6fa319b888d2220b9ded2c7bf786d8a700ad102558065d78649df\n\nbuild:\n  number: 4\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('curry')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('curry')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/thomasp85/curry\n  license: GPL-2.0-or-later\n  summary: Partial application is the process of reducing the arity of a function by fixing one\n    or more arguments, thus creating a new function lacking the fixed arguments. The\n    curry package provides three different ways of performing partial function application\n    by fixing arguments from either end of the argument list (currying and tail currying)\n    or by fixing multiple named arguments (partial application). This package provides\n    this functionality through the %<%, %-<%, and %><% operators which allows for a\n    programming style comparable to modern functional languages. Compared to other implementations\n    such a purrr::partial() the operators in curry composes functions with named arguments,\n    aiding in autocomplete etc.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/curry_0.1.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/curry/curry_0.1.1.tar.gz"
  ],
  "version": "0.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-curry.json"
  }
}