{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    }
  },
  "feedstock_name": "r-rsnns",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RSNNS')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RSNNS')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RSNNS')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RSNNS')\"",
        "\"%R%\" -e \"library('RSNNS')\""
      ]
    }
  },
  "name": "r-rsnns",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RSNNS')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-rsnns"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-rsnns.json"
  },
  "raw_meta_yaml": "{% set version = \"0.4-17\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-rsnns\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RSNNS_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RSNNS/RSNNS_{{ version }}.tar.gz\n  sha256: 424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp >=0.8.5\n  run:\n    - r-base\n    - r-rcpp >=0.8.5\n\ntest:\n  commands:\n    - $R -e \"library('RSNNS')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RSNNS')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/cbergmeir/RSNNS\n  license: LGPL-2.0-or-later\n  summary: The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed.\n    Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R.\n  license_family: LGPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/LGPL-2\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: RSNNS\n# Maintainer: Christoph Bergmeir <c.bergmeir@decsai.ugr.es>\n# License: LGPL (>= 2) | file LICENSE\n# Title: Neural Networks using the Stuttgart Neural Network Simulator (SNNS)\n# LinkingTo: Rcpp\n# Type: Package\n# LazyLoad: yes\n# Authors@R: c( person(\"Christoph\", \"Bergmeir\", email = \"c.bergmeir@decsai.ugr.es\", role = c(\"aut\", \"cre\", \"cph\")), person(\"Jose M.\", \"Benitez\", role = c(\"ths\")), person(\"Andreas\", \"Zell\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Niels\", \"Mache\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Gunter\", \"Mamier\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Michael\", \"Vogt\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Sven\", \"Doring\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Ralf\", \"Hubner\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Kai-Uwe\", \"Herrmann\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Tobias\", \"Soyez\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Michael\", \"Schmalzl\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Tilman\", \"Sommer\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Artemis\", \"Hatzigeorgiou\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Dietmar\", \"Posselt\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Tobias\", \"Schreiner\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Bernward\", \"Kett\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Martin\", \"Reczko\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Martin\", \"Riedmiller\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Mark\", \"Seemann\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Marcus\", \"Ritt\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Jamie\", \"DeCoster\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Jochen\", \"Biedermann\", role = c(\"ctb\"), comment= \"Part of original SNNS external contributors\"), person(\"Joachim\", \"Danz\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Christian\", \"Wehrfritz\", role = c(\"ctb\"), comment= \"Part of original SNNS development team\"), person(\"Patrick\", \"Kursawe\", role = c(\"ctb\"), comment= \"Contributors to SNNS Version 4.3\"), person(\"Andre\", \"El-Ama\", role = c(\"ctb\"), comment= \"Contributors to SNNS Version 4.3\"))\n# Copyright: Original SNNS software Copyright (C) 1990-1995 SNNS Group, IPVR, Univ. Stuttgart, FRG; 1996-1998 SNNS Group, WSI, Univ. Tuebingen, FRG. R interface Copyright (C) DiCITS Lab, Sci2s group, DECSAI, University of Granada.\n# Description: The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R.\n# Version: 0.4-12\n# URL: https://github.com/cbergmeir/RSNNS\n# BugReports: https://github.com/cbergmeir/RSNNS/issues\n# MailingList: rsnns@googlegroups.com\n# Date: 2019-09-16\n# Depends: R (>= 2.10.0), methods, Rcpp (>= 0.8.5)\n# Suggests: scatterplot3d,NeuralNetTools\n# Encoding: UTF-8\n# RoxygenNote: 6.1.0\n# NeedsCompilation: yes\n# Packaged: 2019-09-16 23:27:46 UTC; bergmeir\n# Author: Christoph Bergmeir [aut, cre, cph], Jose M. Benitez [ths], Andreas Zell [ctb] (Part of original SNNS development team), Niels Mache [ctb] (Part of original SNNS development team), Gunter Mamier [ctb] (Part of original SNNS development team), Michael Vogt [ctb] (Part of original SNNS development team), Sven Doring [ctb] (Part of original SNNS development team), Ralf Hubner [ctb] (Part of original SNNS development team), Kai-Uwe Herrmann [ctb] (Part of original SNNS development team), Tobias Soyez [ctb] (Part of original SNNS development team), Michael Schmalzl [ctb] (Part of original SNNS development team), Tilman Sommer [ctb] (Part of original SNNS development team), Artemis Hatzigeorgiou [ctb] (Part of original SNNS development team), Dietmar Posselt [ctb] (Part of original SNNS development team), Tobias Schreiner [ctb] (Part of original SNNS development team), Bernward Kett [ctb] (Part of original SNNS development team), Martin Reczko [ctb] (Part of original SNNS external contributors), Martin Riedmiller [ctb] (Part of original SNNS external contributors), Mark Seemann [ctb] (Part of original SNNS external contributors), Marcus Ritt [ctb] (Part of original SNNS external contributors), Jamie DeCoster [ctb] (Part of original SNNS external contributors), Jochen Biedermann [ctb] (Part of original SNNS external contributors), Joachim Danz [ctb] (Part of original SNNS development team), Christian Wehrfritz [ctb] (Part of original SNNS development team), Patrick Kursawe [ctb] (Contributors to SNNS Version 4.3), Andre El-Ama [ctb] (Contributors to SNNS Version 4.3)\n# Repository: CRAN\n# Date/Publication: 2019-09-17 04:40:13 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
  ],
  "version": "0.4_17",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-rsnns.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/cbergmeir/RSNNS",
      "license": "LGPL-2.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-2",
        "LICENSE"
      ],
      "summary": "The Stuttgart Neural Network Simulator (SNNS) is a library containing many standard implementations of neural networks. This package wraps the SNNS functionality to make it available from within R. Using the 'RSNNS' low-level interface, all of the algorithmic functionality and flexibility of SNNS can be accessed. Furthermore, the package contains a convenient high-level interface, so that the most common neural network topologies and learning algorithms integrate seamlessly into R."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rsnns",
      "version": "0.4_17"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.8.5"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.8.5"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "424557d7326889e09e31e04d2a9b7224bed0bb4aa6f9e5433d7ce4fe04a35afc",
      "url": [
        "https://cran.r-project.org/src/contrib/RSNNS_0.4-17.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RSNNS/RSNNS_0.4-17.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('RSNNS')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}