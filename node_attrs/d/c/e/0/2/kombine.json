{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "786a309e315c05cd4164303ae51b0e4346851282",
  "feedstock_hash_ts": 1730878428,
  "feedstock_name": "kombine",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "kombine is an ensemble sampler that uses a clustered\nkernel-density-estimate proposal density, allowing for\nmassive parallelization and efficient sampling.\n",
      "home": "https://github.com/bfarr/kombine",
      "license": "GPLv3",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "An embarrassingly parallel, kernel-density-based ensemble sampler"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod",
        "bfarr"
      ]
    },
    "package": {
      "name": "kombine",
      "version": "0.8.4"
    },
    "requirements": {
      "host": [
        "python",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "numpy",
        "scipy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "kombine-0.8.4.tar.gz",
      "sha256": "4fc1f55e106ed93058b7241aae254f3db5fd907a7cdf7a01e4b0a1968cafd382",
      "url": "https://pypi.io/packages/source/k/kombine/kombine-0.8.4.tar.gz"
    },
    "test": {
      "commands": [
        "nosetests kombine"
      ],
      "imports": [
        "kombine"
      ],
      "requires": [
        "nose"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "nose"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "kombine is an ensemble sampler that uses a clustered\nkernel-density-estimate proposal density, allowing for\nmassive parallelization and efficient sampling.\n",
      "home": "https://github.com/bfarr/kombine",
      "license": "GPLv3",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "An embarrassingly parallel, kernel-density-based ensemble sampler"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod",
        "bfarr"
      ]
    },
    "package": {
      "name": "kombine",
      "version": "0.8.4"
    },
    "requirements": {
      "host": [
        "python",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "numpy",
        "scipy"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "kombine-0.8.4.tar.gz",
      "sha256": "4fc1f55e106ed93058b7241aae254f3db5fd907a7cdf7a01e4b0a1968cafd382",
      "url": "https://pypi.io/packages/source/k/kombine/kombine-0.8.4.tar.gz"
    },
    "test": {
      "commands": [
        "nosetests kombine"
      ],
      "imports": [
        "kombine"
      ],
      "requires": [
        "nose"
      ]
    }
  },
  "name": "kombine",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "kombine"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/kombine.json"
  },
  "raw_meta_yaml": "{% set name = \"kombine\" %}\n{% set version = \"0.8.4\" %}\n{% set sha256 = \"4fc1f55e106ed93058b7241aae254f3db5fd907a7cdf7a01e4b0a1968cafd382\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - python\n    - setuptools\n    - pip\n  run:\n    - python\n    - numpy\n    - scipy\n\ntest:\n  requires:\n    - nose\n  imports:\n    - kombine\n  commands:\n    - nosetests kombine\n\nabout:\n  home: https://github.com/bfarr/kombine\n  license: GPLv3\n  license_family: GPL\n  license_file: LICENSE\n  summary: An embarrassingly parallel, kernel-density-based ensemble sampler\n  description: |\n    kombine is an ensemble sampler that uses a clustered\n    kernel-density-estimate proposal density, allowing for\n    massive parallelization and efficient sampling.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n    - bfarr\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pip",
      "python",
      "scipy",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "nose"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "nose"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/k/kombine/kombine-0.8.4.tar.gz",
  "version": "0.8.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/kombine.json"
  }
}