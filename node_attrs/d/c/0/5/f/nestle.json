{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "11c7cf891128aa22d6cb772823212e6bc9f88da0",
  "feedstock_hash_ts": 1730881179,
  "feedstock_name": "nestle",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Nested Sampling is a computational approach for integrating\nposterior probability in order to compare models in Bayesian\nstatistics. It is similar to Markov Chain Monte Carlo (MCMC)\nin that it generates samples that can be used to estimate the\nposterior probability distribution. Unlike MCMC, the nature\nof the sampling also allows one to calculate the integral of\nthe distribution. It also happens to be a pretty good method\nfor robustly finding global maxima.\n",
      "dev_url": "https://github.com/kbarbary/nestle",
      "doc_url": "http://kbarbary.github.io/nestle",
      "home": "https://github.com/kbarbary/nestle",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Pure Python, MIT-licensed implementation of nested sampling algorithms for evaluating Bayesian evidence."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install --no-deps --ignore-installed ."
    },
    "extra": {
      "recipe-maintainers": [
        "grburgess"
      ]
    },
    "package": {
      "name": "nestle",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "python",
        "pip"
      ],
      "run": [
        "numpy",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5de798feebbc122b3680e2a1c916ec09934e3afc6171d220de2914ca31c3246d",
      "url": "https://pypi.io/packages/source/n/nestle/nestle-0.2.0.tar.gz"
    },
    "test": {
      "imports": [
        "nestle"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Nested Sampling is a computational approach for integrating\nposterior probability in order to compare models in Bayesian\nstatistics. It is similar to Markov Chain Monte Carlo (MCMC)\nin that it generates samples that can be used to estimate the\nposterior probability distribution. Unlike MCMC, the nature\nof the sampling also allows one to calculate the integral of\nthe distribution. It also happens to be a pretty good method\nfor robustly finding global maxima.\n",
      "dev_url": "https://github.com/kbarbary/nestle",
      "doc_url": "http://kbarbary.github.io/nestle",
      "home": "https://github.com/kbarbary/nestle",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Pure Python, MIT-licensed implementation of nested sampling algorithms for evaluating Bayesian evidence."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install --no-deps --ignore-installed ."
    },
    "extra": {
      "recipe-maintainers": [
        "grburgess"
      ]
    },
    "package": {
      "name": "nestle",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "python",
        "pip"
      ],
      "run": [
        "numpy",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5de798feebbc122b3680e2a1c916ec09934e3afc6171d220de2914ca31c3246d",
      "url": "https://pypi.io/packages/source/n/nestle/nestle-0.2.0.tar.gz"
    },
    "test": {
      "imports": [
        "nestle"
      ]
    }
  },
  "name": "nestle",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nestle"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nestle.json"
  },
  "raw_meta_yaml": "{% set name = \"nestle\" %}\n{% set version = \"0.2.0\" %}\n{% set sha256 = \"5de798feebbc122b3680e2a1c916ec09934e3afc6171d220de2914ca31c3246d\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: python -m pip install --no-deps --ignore-installed .\n  noarch: python\n  \nrequirements:\n  build:\n    - python\n    - pip\n\n  run:\n    - numpy\n    - python\n\ntest:\n\n  imports:\n    - nestle\n\n\nabout:\n  home: https://github.com/kbarbary/nestle\n\n  license: MIT\n\n  license_family: MIT\n\n  license_file: LICENSE.txt\n  summary: 'Pure Python, MIT-licensed implementation of nested sampling algorithms for evaluating Bayesian evidence.'\n\n\n  description: | \n    Nested Sampling is a computational approach for integrating\n    posterior probability in order to compare models in Bayesian\n    statistics. It is similar to Markov Chain Monte Carlo (MCMC)\n    in that it generates samples that can be used to estimate the\n    posterior probability distribution. Unlike MCMC, the nature\n    of the sampling also allows one to calculate the integral of\n    the distribution. It also happens to be a pretty good method\n    for robustly finding global maxima.\n    \n  doc_url: http://kbarbary.github.io/nestle\n  dev_url: https://github.com/kbarbary/nestle\n\nextra:\n  recipe-maintainers:\n    - grburgess\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/n/nestle/nestle-0.2.0.tar.gz",
  "version": "0.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nestle.json"
  }
}