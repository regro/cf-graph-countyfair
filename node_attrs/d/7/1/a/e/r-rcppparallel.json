{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-rcppparallel",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": [
        "tbb-devel"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": [
        "tbb-devel"
      ],
      "script_env": [
        "arch=aarch64"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": [
        "tbb-devel"
      ],
      "script_env": [
        "arch=ppc64"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": null,
      "script_env": [
        "arch=arm64"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "grep",
        "automake-wrapper",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R",
        "\"%R%\" -e \"library('RcppParallel')\"",
        "set \"RCPP_PARALLEL_BACKEND=tbb\" && Rscript tests/doRUnit.R",
        "set \"RCPP_PARALLEL_BACKEND=tinythread\" && Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit",
        "make"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "name": "r-rcppparallel",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": [
        "tbb-devel"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": [
        "tbb-devel"
      ],
      "script_env": [
        "arch=arm64"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "tbb-devel"
      ],
      "run": [
        "r-base",
        "tbb-devel",
        "tbb"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RcppParallel')\"",
        "RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R",
        "RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R"
      ],
      "requires": [
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-rcppparallel"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-rcppparallel.json"
  },
  "raw_meta_yaml": "{% set version = \"5.1.11-1\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-rcppparallel\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RcppParallel_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RcppParallel/RcppParallel_{{ version }}.tar.gz\n  sha256: e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362\n\nbuild:\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  script_env:       # [aarch64 or arm64 or ppc64le]\n    - arch=aarch64  # [aarch64]\n    - arch=arm64    # [arm64]\n    - arch=ppc64    # [ppc64le]\n  run_exports:\n    # keep the headers around even in \"LinkingTo\" packages\n    - {{ pin_compatible('tbb-devel', max_pin='x.x') }}  # [not win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - tbb-devel                    # [not win]\n  run:\n    - r-base\n    - tbb-devel                    # [not win]\n    \n    # try to guarantee symbolic links that RcppParallel creates\n    # see https://github.com/conda-forge/r-rcppparallel-feedstock/issues/40\n    - {{ pin_compatible('tbb', max_pin='x.x') }}  # [not win]\n\ntest:\n  requires:\n    - {{ posix }}make     # [win]\n    - r-rcpp\n    - r-runit\n  source_files:\n    - tests/\n  commands:\n    - $R -e \"library('RcppParallel')\"                                        # [not win]\n    - RCPP_PARALLEL_BACKEND=tbb Rscript tests/doRUnit.R                      # [not win]\n    - RCPP_PARALLEL_BACKEND=tinythread Rscript tests/doRUnit.R               # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RcppParallel')\\\"\"                               # [win]\n    - \"set \\\"RCPP_PARALLEL_BACKEND=tbb\\\" && Rscript tests/doRUnit.R\"         # [win]\n    - \"set \\\"RCPP_PARALLEL_BACKEND=tinythread\\\" && Rscript tests/doRUnit.R\"  # [win]\n\nabout:\n  home: http://rcppcore.github.io/RcppParallel\n  dev_url: https://github.com/RcppCore/RcppParallel\n  license: GPL-3.0-or-later\n  summary: High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "automake-wrapper",
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "grep",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "pkg-config",
      "r-base",
      "sed",
      "tbb",
      "tbb-devel",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "make",
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "tbb",
        "tbb-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "make",
        "r-rcpp",
        "r-runit"
      ]
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
  ],
  "version": "5.1.11_1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-rcppparallel.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/RcppCore/RcppParallel",
      "home": "http://rcppcore.github.io/RcppParallel",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "High level functions for parallel programming with 'Rcpp'. For example, the 'parallelFor()' function can be used to convert the work of a standard serial \"for\" loop into a parallel one and the 'parallelReduce()' function can be used for accumulating aggregate or other values."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ],
      "run_exports": null
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rcppparallel",
      "version": "5.1.11_1"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "sed",
        "grep",
        "autoconf",
        "automake-wrapper",
        "pkg-config",
        "make",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e18c83548212cbd52f6629131564a392b870399343a5867d512dbca2a27a6362",
      "url": [
        "https://cran.r-project.org/src/contrib/RcppParallel_5.1.11-1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RcppParallel/RcppParallel_5.1.11-1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('RcppParallel')\"",
        "set \"RCPP_PARALLEL_BACKEND=tbb\" && Rscript tests/doRUnit.R",
        "set \"RCPP_PARALLEL_BACKEND=tinythread\" && Rscript tests/doRUnit.R"
      ],
      "requires": [
        "make",
        "r-rcpp",
        "r-runit"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake-wrapper",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "make",
        "r-rcpp",
        "r-runit"
      ]
    }
  }
}