{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-mlr3tuning",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-3"
      ],
      "summary": "Implements methods for hyperparameter tuning with 'mlr3', e.g. Grid Search, Random Search, or Simulated Annealing. Various termination criteria can be set and combined.  The class 'AutoTuner' provides a convenient way to perform nested resampling in combination with 'mlr3'."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pascal-git"
      ]
    },
    "package": {
      "name": "r-mlr3tuning",
      "version": "1.4.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r6",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1"
      ],
      "run": [
        "r-base",
        "r-r6",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "784c7590d6eb945d49364cefdd4640433340962e6705b8c26844fba300426449",
      "url": [
        "https://cran.r-project.org/src/contrib/mlr3tuning_1.4.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/mlr3tuning/mlr3tuning_1.4.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('mlr3tuning')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk",
        "r-checkmate",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3",
        "r-mlr3misc",
        "r-paradox",
        "r-r6"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk",
        "r-checkmate",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3",
        "r-mlr3misc",
        "r-paradox",
        "r-r6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL",
      "license_file": [
        "/lib/R/share/licenses/LGPL-3"
      ],
      "summary": "Implements methods for hyperparameter tuning with 'mlr3', e.g. Grid Search, Random Search, or Simulated Annealing. Various termination criteria can be set and combined.  The class 'AutoTuner' provides a convenient way to perform nested resampling in combination with 'mlr3'."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pascal-git"
      ]
    },
    "package": {
      "name": "r-mlr3tuning",
      "version": "1.4.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r6",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1"
      ],
      "run": [
        "r-base",
        "r-r6",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "784c7590d6eb945d49364cefdd4640433340962e6705b8c26844fba300426449",
      "url": [
        "https://cran.r-project.org/src/contrib/mlr3tuning_1.4.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/mlr3tuning/mlr3tuning_1.4.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('mlr3tuning')\""
      ]
    }
  },
  "name": "r-mlr3tuning",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-mlr3tuning"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-mlr3tuning.json"
  },
  "raw_meta_yaml": "{% set version = \"1.4.0\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-mlr3tuning\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/mlr3tuning_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/mlr3tuning/mlr3tuning_{{ version }}.tar.gz\n  sha256: 784c7590d6eb945d49364cefdd4640433340962e6705b8c26844fba300426449\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-r6\n    - r-bbotk >=1.6.0\n    - r-checkmate >=2.0.0\n    - r-cli\n    - r-data.table\n    - r-lgr\n    - r-mlr3 >=0.23.0\n    - r-mlr3misc >=0.15.1\n    - r-paradox >=1.0.1\n  run:\n    - r-base\n    - r-r6\n    - r-bbotk >=1.6.0\n    - r-checkmate >=2.0.0\n    - r-cli\n    - r-data.table\n    - r-lgr\n    - r-mlr3 >=0.23.0\n    - r-mlr3misc >=0.15.1\n    - r-paradox >=1.0.1\n\ntest:\n  commands:\n    - $R -e \"library('mlr3tuning')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('mlr3tuning')\\\"\"  # [win]\n\nabout:\n  home: https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning\n  license: LGPL-3.0-only\n  summary: Implements methods for hyperparameter tuning with 'mlr3', e.g. Grid Search, Random Search, or Simulated Annealing. Various termination criteria can be set and combined.  The class 'AutoTuner' provides a convenient way to perform nested resampling in combination with 'mlr3'.\n  license_family: LGPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/LGPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - pascal-git\n\n# Package: mlr3tuning\n# Title: Tuning for 'mlr3'\n# Version: 0.5.0\n# Authors@R: c(person(given = \"Marc\", family = \"Becker\", role = c(\"cre\", \"aut\"), email = \"marcbecker@posteo.de\", comment = c(ORCID = \"0000-0002-8115-0400\")), person(given = \"Michel\", family = \"Lang\", role = \"aut\", email = \"michellang@gmail.com\", comment = c(ORCID = \"0000-0001-9754-0393\")), person(given = \"Jakob\", family = \"Richter\", role = \"aut\", email = \"jakob1richter@gmail.com\", comment = c(ORCID = \"0000-0003-4481-5554\")), person(given = \"Bernd\", family = \"Bischl\", role = \"aut\", email = \"bernd_bischl@gmx.net\", comment = c(ORCID = \"0000-0001-6002-6980\")), person(given = \"Daniel\", family = \"Schalk\", role = \"aut\", email = \"daniel.schalk@stat.uni-muenchen.de\", comment = c(ORCID = \"0000-0003-0950-1947\")))\n# Description: Implements methods for hyperparameter tuning with 'mlr3', e.g. Grid Search, Random Search, or Simulated Annealing. Various termination criteria can be set and combined.  The class 'AutoTuner' provides a convenient way to perform nested resampling in combination with 'mlr3'.\n# License: LGPL-3\n# URL: https://mlr3tuning.mlr-org.com, https://github.com/mlr-org/mlr3tuning\n# BugReports: https://github.com/mlr-org/mlr3tuning/issues\n# Depends: R (>= 3.1.0)\n# Imports: bbotk (>= 0.2.2), checkmate (>= 2.0.0), data.table, lgr, mlr3 (>= 0.7.0), mlr3misc (>= 0.5.0), paradox (>= 0.6.0), R6\n# Suggests: adagio, GenSA, mlr3pipelines, nloptr, rpart, testthat (>= 3.0.0)\n# Encoding: UTF-8\n# NeedsCompilation: no\n# Config/testthat/edition: 3\n# Config/testthat/parallel: true\n# RoxygenNote: 7.1.1\n# Collate: 'ArchiveTuning.R' 'AutoTuner.R' 'ObjectiveTuning.R' 'mlr_tuners.R' 'Tuner.R' 'TunerCmaes.R' 'TunerDesignPoints.R' 'TunerFromOptimizer.R' 'TunerGenSA.R' 'TunerGridSearch.R' 'TunerNLoptr.R' 'TunerRandomSearch.R' 'TuningInstanceMulticrit.R' 'TuningInstanceSingleCrit.R' 'assertions.R' 'bibentries.R' 'helper.R' 'reexport.R' 'sugar.R' 'zzz.R'\n# Packaged: 2020-12-07 20:49:36 UTC; marc\n# Author: Marc Becker [cre, aut] (<https://orcid.org/0000-0002-8115-0400>), Michel Lang [aut] (<https://orcid.org/0000-0001-9754-0393>), Jakob Richter [aut] (<https://orcid.org/0000-0003-4481-5554>), Bernd Bischl [aut] (<https://orcid.org/0000-0001-6002-6980>), Daniel Schalk [aut] (<https://orcid.org/0000-0003-0950-1947>)\n# Maintainer: Marc Becker <marcbecker@posteo.de>\n# Repository: CRAN\n# Date/Publication: 2020-12-07 21:50:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-bbotk",
      "r-checkmate",
      "r-cli",
      "r-data.table",
      "r-lgr",
      "r-mlr3",
      "r-mlr3misc",
      "r-paradox",
      "r-r6"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk",
        "r-checkmate",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3",
        "r-mlr3misc",
        "r-paradox",
        "r-r6"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk",
        "r-checkmate",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3",
        "r-mlr3misc",
        "r-paradox",
        "r-r6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1",
        "r-r6"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bbotk >=1.6.0",
        "r-checkmate >=2.0.0",
        "r-cli",
        "r-data.table",
        "r-lgr",
        "r-mlr3 >=0.23.0",
        "r-mlr3misc >=0.15.1",
        "r-paradox >=1.0.1",
        "r-r6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/mlr3tuning_1.4.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/mlr3tuning/mlr3tuning_1.4.0.tar.gz"
  ],
  "version": "1.4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-mlr3tuning.json"
  }
}