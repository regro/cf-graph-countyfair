{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {},
  "feedstock_name": "semi-ate-stdf",
  "hash_type": "sha256",
  "name": "semi-ate-stdf",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "semi-ate-stdf"
    ]
  },
  "parsing_error": "feedstock parsing error: cannot load conda-forge.yml: mapping values are not allowed here\n  in \"<unicode string>\", line 2, column 16:\n    bot: inspection: false\n                   ^\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/feedstock_parser.py\", line 315, in populate_feedstock_attributes\n    k: v for k, v in yaml.safe_load(conda_forge_yaml).items()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 125, in safe_load\n    return load(stream, SafeLoader)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\n    return loader.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/constructor.py\", line 49, in get_single_data\n    node = self.get_single_node()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/composer.py\", line 36, in get_single_node\n    document = self.compose_document()\n               ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/composer.py\", line 55, in compose_document\n    node = self.compose_node(None, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/composer.py\", line 84, in compose_node\n    node = self.compose_mapping_node(anchor)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/composer.py\", line 127, in compose_mapping_node\n    while not self.check_event(MappingEndEvent):\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/parser.py\", line 98, in check_event\n    self.current_event = self.state()\n                         ^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/parser.py\", line 428, in parse_block_mapping_key\n    if self.check_token(KeyToken):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/scanner.py\", line 116, in check_token\n    self.fetch_more_tokens()\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/scanner.py\", line 223, in fetch_more_tokens\n    return self.fetch_value()\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/scanner.py\", line 577, in fetch_value\n    raise ScannerError(None, None,\nyaml.scanner.ScannerError: mapping values are not allowed here\n  in \"<unicode string>\", line 2, column 16:\n    bot: inspection: false\n                   ^\n",
  "pr_info": {
    "__lazy_json__": "pr_info/semi-ate-stdf.json"
  },
  "raw_meta_yaml": "{% set name = \"Semi-ATE-STDF\" %}\n{% set version = \"0.1.28\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/Semi-ATE-STDF-{{ version }}.tar.gz\n  sha256: dc1ae69718922c2a637b1de9030e64746a94bc3fa8afc1d9e751b5f0fdf61e07\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.7\n    - xlsxwriter\n\n  run:\n    - python >=3.7\n    - xlsxwriter\n\ntest:\n  imports:\n    - Semi_ATE.STDF\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://pypi.org/project/Semi-ATE-STDF/\n  summary: Library to read/write STDF/ATDF files\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - nerohmot\n    - mfansler\n",
  "strong_exports": false,
  "url": "https://pypi.io/packages/source/S/Semi-ATE-STDF/Semi-ATE-STDF-0.1.18.tar.gz",
  "version": "0.1.18",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/semi-ate-stdf.json"
  }
}