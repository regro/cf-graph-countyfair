{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "aligator",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "crocoddyl",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crocoddyl",
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "crocoddyl",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "name": "aligator",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "crocoddyl",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crocoddyl",
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/simple-robotics/aligator",
      "home": "https://github.com/simple-robotics/aligator",
      "license": "BSD-2-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A versatile and efficient framework for constrained trajectory optimization."
    },
    "build": {
      "number": "1",
      "run_exports": [
        "aligator"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ymontmarin",
        "fabinsch",
        "olivier-roussel",
        "jcarpent",
        "jorisv",
        "ManifoldFR"
      ]
    },
    "package": {
      "name": "aligator",
      "version": "0.15.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "eigen",
        "eigenpy",
        "libboost-devel",
        "libboost-python-devel",
        "pinocchio",
        "crocoddyl",
        "python",
        "numpy",
        "matplotlib-base",
        "example-robot-data",
        "fmt"
      ],
      "run": [
        "eigen",
        "eigenpy",
        "python",
        "matplotlib-base",
        "typed-argument-parser"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0",
      "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libaligator${SHLIB_EXT}"
      ],
      "imports": [
        "aligator"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crocoddyl",
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "aligator"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/aligator.json"
  },
  "raw_meta_yaml": "{% set name = \"aligator\" %}\n{% set version = \"0.15.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Simple-Robotics/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 68aeec2ff0a96d2938f3fcbe0eab2644f6cdf03c85f441f5ab8298e62d75dec0\n\nbuild:\n  number: 1\n  # Windows build has to be fixed\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja  # [win]\n    - make  # [not win]\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n  host:\n    - eigen\n    - eigenpy\n    - libboost-devel\n    - libboost-python-devel\n    - pinocchio\n    # Crocoddyl package is not available on Windows, aarch64 and ppc64le\n    - crocoddyl  # [not win and not aarch64 and not ppc64le]\n    - python\n    - numpy\n    - matplotlib-base\n    - example-robot-data\n    - fmt\n  run:\n    - eigen\n    - eigenpy\n    - python\n    - matplotlib-base\n    - typed-argument-parser\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/lib{{ name }}${SHLIB_EXT}  # [not win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\{{ name }}.dll exit 1  # [win]\n  imports:\n    - aligator\n\nabout:\n  home: https://github.com/simple-robotics/aligator\n  summary: A versatile and efficient framework for constrained trajectory optimization.\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  dev_url: https://github.com/simple-robotics/aligator\n\nextra:\n  recipe-maintainers:\n    - ymontmarin\n    - fabinsch\n    - olivier-roussel\n    - jcarpent\n    - jorisv\n    - ManifoldFR\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "crocoddyl",
      "cxx_compiler_stub",
      "eigen",
      "eigenpy",
      "example-robot-data",
      "fmt",
      "libboost-devel",
      "libboost-python-devel",
      "make",
      "matplotlib-base",
      "numpy",
      "pinocchio",
      "python",
      "typed-argument-parser"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "crocoddyl",
        "cxx_compiler_stub",
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "crocoddyl",
        "eigen",
        "eigenpy",
        "example-robot-data",
        "fmt",
        "libboost-devel",
        "libboost-python-devel",
        "matplotlib-base",
        "numpy",
        "pinocchio",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen",
        "eigenpy",
        "matplotlib-base",
        "python",
        "typed-argument-parser"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/Simple-Robotics/aligator/archive/v0.15.0.tar.gz",
  "version": "0.15.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/aligator.json"
  }
}