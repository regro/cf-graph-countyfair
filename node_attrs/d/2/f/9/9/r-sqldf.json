{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_hash": "4f63c840bcfdeb602dda353f284968e1e727a325",
  "feedstock_hash_ts": 1758198409,
  "feedstock_name": "r-sqldf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "The sqldf() function is typically passed a single argument which  is an SQL select statement where the table names are ordinary R data  frame names.  sqldf() transparently sets up a database, imports the  data frames into that database, performs the SQL select or other statement and returns the result using a heuristic to determine which  class to assign to each column of the returned data frame.  The sqldf()  or read.csv.sql() functions can also be used to read filtered files  into R even if the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL' and 'RPostgreSQL' backends are supported."
    },
    "build": {
      "noarch": "generic",
      "number": "6",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-sqldf",
      "version": "0.4_11"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-dbi",
        "r-rsqlite",
        "r-chron",
        "r-gsubfn >=0.6",
        "r-proto"
      ],
      "run": [
        "r-base",
        "r-dbi",
        "r-rsqlite",
        "r-chron",
        "r-gsubfn >=0.6",
        "r-proto"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "cee979d4e8c67b4924655365d925a8d67104e62adf71741f645cdc5196de2260",
      "url": [
        "https://cran.r-project.org/src/contrib/sqldf_0.4-11.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/sqldf/sqldf_0.4-11.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('sqldf')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "The sqldf() function is typically passed a single argument which  is an SQL select statement where the table names are ordinary R data  frame names.  sqldf() transparently sets up a database, imports the  data frames into that database, performs the SQL select or other statement and returns the result using a heuristic to determine which  class to assign to each column of the returned data frame.  The sqldf()  or read.csv.sql() functions can also be used to read filtered files  into R even if the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL' and 'RPostgreSQL' backends are supported."
    },
    "build": {
      "noarch": "generic",
      "number": "6",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-sqldf",
      "version": "0.4_11"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-dbi",
        "r-rsqlite",
        "r-chron",
        "r-gsubfn >=0.6",
        "r-proto"
      ],
      "run": [
        "r-base",
        "r-dbi",
        "r-rsqlite",
        "r-chron",
        "r-gsubfn >=0.6",
        "r-proto"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "cee979d4e8c67b4924655365d925a8d67104e62adf71741f645cdc5196de2260",
      "url": [
        "https://cran.r-project.org/src/contrib/sqldf_0.4-11.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/sqldf/sqldf_0.4-11.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('sqldf')\""
      ]
    }
  },
  "name": "r-sqldf",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-sqldf"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-sqldf.json"
  },
  "raw_meta_yaml": "{% set version = '0.4-11' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-sqldf\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/sqldf_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/sqldf/sqldf_{{ version }}.tar.gz\n  sha256: cee979d4e8c67b4924655365d925a8d67104e62adf71741f645cdc5196de2260\n\nbuild:\n  number: 6\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-dbi\n    - r-rsqlite\n    - r-chron\n    - r-gsubfn >=0.6\n    - r-proto\n  run:\n    - r-base\n    - r-dbi\n    - r-rsqlite\n    - r-chron\n    - r-gsubfn >=0.6\n    - r-proto\n\ntest:\n  commands:\n    - $R -e \"library('sqldf')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('sqldf')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf\n  license: GPL-2.0-only\n  summary: The sqldf() function is typically passed a single argument which  is an SQL select\n    statement where the table names are ordinary R data  frame names.  sqldf() transparently\n    sets up a database, imports the  data frames into that database, performs the SQL\n    select or other statement and returns the result using a heuristic to determine\n    which  class to assign to each column of the returned data frame.  The sqldf()  or\n    read.csv.sql() functions can also be used to read filtered files  into R even if\n    the original files are larger than R itself can handle. 'RSQLite', 'RH2', 'RMySQL'\n    and 'RPostgreSQL' backends are supported.\n  license_family: GPL2\n  license_file: '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: sqldf\n# Version: 0.4-11\n# Date: 2017-06-23\n# Title: Manipulate R Data Frames Using SQL\n# Author: G. Grothendieck <ggrothendieck@gmail.com>\n# Maintainer: G. Grothendieck <ggrothendieck@gmail.com>\n# Description: The sqldf() function is typically passed a single argument which  is an SQL select statement where the table names are ordinary R data  frame names.  sqldf() transparently sets up a database, imports the  data frames into that database, performs the SQL select or other s$\n# ByteCompile: true\n# Depends: R (>= 3.1.0), gsubfn (>= 0.6), proto, RSQLite\n# Suggests: RH2, RMySQL, RPostgreSQL, svUnit, tcltk, MASS\n# Imports: DBI, chron\n# License: GPL-2\n# BugReports: https://github.com/ggrothendieck/sqldf/issues\n# URL: https://github.com/ggrothendieck/sqldf, https://groups.google.com/group/sqldf\n# NeedsCompilation: no\n# Packaged: 2017-06-28 00:38:13 UTC; Louis\n# Repository: CRAN\n# Date/Publication: 2017-06-28 06:43:10 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-chron",
      "r-dbi",
      "r-gsubfn",
      "r-proto",
      "r-rsqlite"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn >=0.6",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-chron",
        "r-dbi",
        "r-gsubfn >=0.6",
        "r-proto",
        "r-rsqlite"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/sqldf_0.4-11.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/sqldf/sqldf_0.4-11.tar.gz"
  ],
  "version": "0.4_11",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-sqldf.json"
  }
}