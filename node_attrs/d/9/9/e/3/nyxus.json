{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "nyxus",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images\nof arbitrary size and assembling complex regions of interest (ROIs) split across multiple image\ntiles and files. Nyxus can be used via Python or command line and is available in containerized\nform for reproducible execution. Nyxus computes over 450 combined intensity, texture, and\nmorphological features at the ROI or whole image level with more in development.\nKey features that make Nyxus unique among other image feature extraction applications is its\nability to operate at any scale, its highly validated algorithms,\nand its modular nature that makes the addition of new features straightforward.\n",
      "dev_url": "https://github.com/PolusAI/nyxus",
      "doc_url": "https://nyxus.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/nyxus",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Scalable library for calculating features from intensity-label image data"
    },
    "build": {
      "ignore_run_exports_from": [
        "cxx_compiler_stub"
      ],
      "missing_dso_whitelist": null,
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "sameeul"
      ]
    },
    "package": {
      "name": "nyxus",
      "version": "0.9.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "z5py",
        "libtiff",
        "libboost-headers",
        "nlohmann_json",
        "blosc",
        "pybind11",
        "xtensor >=0.26,<0.27",
        "xsimd >=13,<14",
        "numpy",
        "pandas",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libparquet",
        "cuda-cudart-dev",
        "libcufft-dev",
        "cuda-version 12.6"
      ],
      "run": [
        "python",
        "pandas"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0000-win_2022.patch",
        "0001-dcmtk.patch"
      ],
      "sha256": "c330fc42f6d47d3da55797dce6d0ee954ad421fa3d08e33787a46fe80824a516",
      "url": "https://github.com/PolusAI/nyxus/archive/refs/tags/0.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "nyxus"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blosc",
        "cuda-cudart-dev",
        "cuda-version",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libboost-headers",
        "libcufft-dev",
        "libparquet",
        "libtiff",
        "nlohmann_json",
        "numpy",
        "pandas",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "xsimd",
        "xtensor",
        "z5py"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pandas",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images\nof arbitrary size and assembling complex regions of interest (ROIs) split across multiple image\ntiles and files. Nyxus can be used via Python or command line and is available in containerized\nform for reproducible execution. Nyxus computes over 450 combined intensity, texture, and\nmorphological features at the ROI or whole image level with more in development.\nKey features that make Nyxus unique among other image feature extraction applications is its\nability to operate at any scale, its highly validated algorithms,\nand its modular nature that makes the addition of new features straightforward.\n",
      "dev_url": "https://github.com/PolusAI/nyxus",
      "doc_url": "https://nyxus.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/nyxus",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Scalable library for calculating features from intensity-label image data"
    },
    "build": {
      "ignore_run_exports_from": null,
      "missing_dso_whitelist": [
        "*/nvcuda.dll"
      ],
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "sameeul"
      ]
    },
    "package": {
      "name": "nyxus",
      "version": "0.9.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "git",
        "ninja"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "z5py",
        "libtiff",
        "libboost-headers",
        "nlohmann_json",
        "blosc",
        "pybind11",
        "xtensor >=0.26,<0.27",
        "xsimd >=13,<14",
        "numpy",
        "pandas",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libparquet",
        "cuda-cudart-dev",
        "libcufft-dev",
        "cuda-version 12.6",
        "m2-patch"
      ],
      "run": [
        "python",
        "pandas"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0000-win_2022.patch",
        "0001-dcmtk.patch"
      ],
      "sha256": "c330fc42f6d47d3da55797dce6d0ee954ad421fa3d08e33787a46fe80824a516",
      "url": "https://github.com/PolusAI/nyxus/archive/refs/tags/0.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "nyxus"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "nyxus",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images\nof arbitrary size and assembling complex regions of interest (ROIs) split across multiple image\ntiles and files. Nyxus can be used via Python or command line and is available in containerized\nform for reproducible execution. Nyxus computes over 450 combined intensity, texture, and\nmorphological features at the ROI or whole image level with more in development.\nKey features that make Nyxus unique among other image feature extraction applications is its\nability to operate at any scale, its highly validated algorithms,\nand its modular nature that makes the addition of new features straightforward.\n",
      "dev_url": "https://github.com/PolusAI/nyxus",
      "doc_url": "https://nyxus.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/nyxus",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Scalable library for calculating features from intensity-label image data"
    },
    "build": {
      "ignore_run_exports_from": null,
      "missing_dso_whitelist": null,
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "sameeul"
      ]
    },
    "package": {
      "name": "nyxus",
      "version": "0.9.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "z5py",
        "libtiff",
        "libboost-headers",
        "nlohmann_json",
        "blosc",
        "pybind11",
        "xtensor >=0.26,<0.27",
        "xsimd >=13,<14",
        "numpy",
        "pandas",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libparquet"
      ],
      "run": [
        "python",
        "pandas"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0000-win_2022.patch",
        "0001-dcmtk.patch"
      ],
      "sha256": "c330fc42f6d47d3da55797dce6d0ee954ad421fa3d08e33787a46fe80824a516",
      "url": "https://github.com/PolusAI/nyxus/archive/refs/tags/0.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "nyxus"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blosc",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libboost-headers",
        "libparquet",
        "libtiff",
        "nlohmann_json",
        "numpy",
        "pandas",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "xsimd",
        "xtensor",
        "z5py"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pandas",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nyxus"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nyxus.json"
  },
  "raw_meta_yaml": "{% set name = \"nyxus\" %}\n{% set version = \"0.9.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/PolusAI/{{ name }}/archive/refs/tags/{{ version }}.tar.gz\n  sha256: c330fc42f6d47d3da55797dce6d0ee954ad421fa3d08e33787a46fe80824a516\n  patches:\n    - 0000-win_2022.patch\n    - 0001-dcmtk.patch\nbuild:\n  number: 2\n  skip: true  # [py<38 or cuda_compiler_version == \"11.2\"]\n  missing_dso_whitelist:\n    - '*/nvcuda.dll'   # [win]\n  ignore_run_exports_from:\n  # The CXX standard library is unused on linux, but used on osx\n    - {{ compiler('cxx') }}  # [linux]\n\nrequirements:\n  build:\n    - cmake\n    - make  # [not win]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - git\n    - ninja  # [win]  \n\n  host:\n    - python\n    - setuptools\n    - pip\n    - z5py\n    - libtiff\n    - libboost-headers\n    - nlohmann_json\n    - blosc\n    - pybind11\n    - xtensor >=0.26,<0.27\n    - xsimd >=13,<14\n    - numpy\n    - pandas\n    - dcmtk\n    - fmjpeg2koj\n    - libarrow\n    - libparquet\n    - m2-patch  # [win]\n    - cuda-cudart-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcufft-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n\n  run:\n    - python\n    - pandas\n\ntest:\n  requires:\n    - pip\n\n  imports:\n    - nyxus\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/PolusAI/nyxus\n  summary: Scalable library for calculating features from intensity-label image data\n  description: |\n    Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images \n    of arbitrary size and assembling complex regions of interest (ROIs) split across multiple image \n    tiles and files. Nyxus can be used via Python or command line and is available in containerized \n    form for reproducible execution. Nyxus computes over 450 combined intensity, texture, and \n    morphological features at the ROI or whole image level with more in development. \n    Key features that make Nyxus unique among other image feature extraction applications is its \n    ability to operate at any scale, its highly validated algorithms, \n    and its modular nature that makes the addition of new features straightforward.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://nyxus.readthedocs.io/en/latest/\n  dev_url: https://github.com/PolusAI/nyxus\n\nextra:\n  recipe-maintainers:\n    - sameeul\n",
  "req": {
    "__set__": true,
    "elements": [
      "blosc",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cuda-cudart-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "dcmtk",
      "fmjpeg2koj",
      "git",
      "libarrow",
      "libboost-headers",
      "libcufft-dev",
      "libparquet",
      "libtiff",
      "m2-patch",
      "make",
      "ninja",
      "nlohmann_json",
      "numpy",
      "pandas",
      "pip",
      "pybind11",
      "python",
      "setuptools",
      "xsimd",
      "xtensor",
      "z5py"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blosc",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libboost-headers",
        "libcufft-dev",
        "libparquet",
        "libtiff",
        "m2-patch",
        "nlohmann_json",
        "numpy",
        "pandas",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "xsimd",
        "xtensor",
        "z5py"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "pandas",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blosc",
        "cuda-cudart-dev",
        "cuda-version 12.6",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libboost-headers",
        "libcufft-dev",
        "libparquet",
        "libtiff",
        "m2-patch",
        "nlohmann_json",
        "numpy",
        "pandas",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "xsimd >=13,<14",
        "xtensor >=0.26,<0.27",
        "z5py"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pandas",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/PolusAI/nyxus/archive/refs/tags/0.9.1.tar.gz",
  "version": "0.9.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nyxus.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images\nof arbitrary size and assembling complex regions of interest (ROIs) split across multiple image\ntiles and files. Nyxus can be used via Python or command line and is available in containerized\nform for reproducible execution. Nyxus computes over 450 combined intensity, texture, and\nmorphological features at the ROI or whole image level with more in development.\nKey features that make Nyxus unique among other image feature extraction applications is its\nability to operate at any scale, its highly validated algorithms,\nand its modular nature that makes the addition of new features straightforward.\n",
      "dev_url": "https://github.com/PolusAI/nyxus",
      "doc_url": "https://nyxus.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/nyxus",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Scalable library for calculating features from intensity-label image data"
    },
    "build": {
      "ignore_run_exports_from": null,
      "missing_dso_whitelist": [
        "*/nvcuda.dll"
      ],
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "sameeul"
      ]
    },
    "package": {
      "name": "nyxus",
      "version": "0.9.1"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "git",
        "ninja"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "z5py",
        "libtiff",
        "libboost-headers",
        "nlohmann_json",
        "blosc",
        "pybind11",
        "xtensor >=0.26,<0.27",
        "xsimd >=13,<14",
        "numpy",
        "pandas",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libparquet",
        "m2-patch",
        "cuda-cudart-dev",
        "libcufft-dev",
        "cuda-version 12.6"
      ],
      "run": [
        "python",
        "pandas"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0000-win_2022.patch",
        "0001-dcmtk.patch"
      ],
      "sha256": "c330fc42f6d47d3da55797dce6d0ee954ad421fa3d08e33787a46fe80824a516",
      "url": "https://github.com/PolusAI/nyxus/archive/refs/tags/0.9.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "nyxus"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blosc",
        "cuda-cudart-dev",
        "cuda-version",
        "dcmtk",
        "fmjpeg2koj",
        "libarrow",
        "libboost-headers",
        "libcufft-dev",
        "libparquet",
        "libtiff",
        "m2-patch",
        "nlohmann_json",
        "numpy",
        "pandas",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "xsimd",
        "xtensor",
        "z5py"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pandas",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}