{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "graalpy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "http://graalvm.org/python",
      "license": "UPL-1.0",
      "license_file": "LICENSE_GRAALPY.txt",
      "summary": "GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timfel",
        "msimacek",
        "isuruf"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "0",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "graalpy >=23.0.0"
            ]
          },
          "skip_compile_pyc": [
            "*.py"
          ],
          "string": "0_graalvm_native",
          "track_features": [
            "openjdk"
          ]
        },
        "name": "graalpy",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pypy3.9 >=7.3.9",
            "make",
            "patch",
            "zlib",
            "git",
            "curl",
            "cmake",
            "patchelf"
          ],
          "host": [
            "zlib"
          ],
          "run": [
            "libzlib",
            "patch",
            "curl",
            "python_abi 3.10.* *_graalpy230_310_native"
          ],
          "run_constrained": [
            "python 3.10.8 0_native230_graalpy"
          ]
        },
        "script": "build_graalpy.sh",
        "test": {
          "commands": [
            "python3 --help",
            "python3 -c \"import platform; print(platform._sys_version())\"",
            "graalpy -m venv --help",
            "graalpy -m venv testvenv",
            "testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\""
          ]
        },
        "version": "23.0.0"
      },
      {
        "build": {
          "number": "0",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "graalpy",
              "python_abi 3.10.* *_graalpy230_310_native"
            ]
          },
          "string": "0_native230_graalpy",
          "track_features": [
            "graalpy"
          ]
        },
        "name": "python",
        "requirements": {
          "host": [
            "graalpy"
          ],
          "run": [
            "graalpy",
            "python_abi 3.10.* *_graalpy230_310_native"
          ]
        },
        "test": {
          "commands": [
            "python --version",
            "pip -h",
            "test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"3.10.8\"",
            "test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\""
          ],
          "imports": [
            "setuptools"
          ],
          "requires": [
            "setuptools",
            "pip"
          ]
        },
        "version": "3.10.8"
      },
      {
        "build": {
          "number": "0"
        },
        "name": "graalpy-graalvm",
        "requirements": {
          "host": [
            "graalpy"
          ],
          "run": [
            "graalpy"
          ]
        },
        "test": {
          "commands": [
            "java --version"
          ]
        },
        "version": "23.0.0"
      },
      {
        "build": {
          "number": "0",
          "run_exports": {
            "weak": [
              "graalpy-graalvm >=23.0"
            ]
          },
          "string": "0_graalvm230b10",
          "track_features": [
            "graalpy-graalvm"
          ]
        },
        "name": "openjdk",
        "requirements": {
          "host": [
            "graalpy-graalvm"
          ],
          "run": [
            "graalpy-graalvm"
          ]
        },
        "test": {
          "commands": [
            "java --version",
            "javac --version"
          ]
        },
        "version": "17.0.7.4"
      }
    ],
    "package": {
      "name": "graalpy",
      "version": "23.0.0"
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "labsjdk",
        "sha256": "535b9302daa8a054d5419c4c38b2a056205cacb341ff768b19929bcb6e0edeef",
        "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-23.0-b10/labsjdk-ce-17.0.7+4-jvmci-23.0-b10-linux-amd64.tar.gz"
      },
      {
        "folder": "mx",
        "sha256": "4fb692a1ec34dfc957832a948a41b4d0238377990a0098daf83240e837638cfe",
        "url": "https://github.com/graalvm/mx/archive/refs/tags/6.23.8.zip"
      },
      {
        "folder": "graal",
        "patches": [
          "patches/sulong-without-tck.patch",
          "patches/graal-omit-libjli-loading.patch"
        ],
        "sha256": "48b0d713006b4dee39743e625f8e5fd9a3add1019f9ced4e952028cbf1412ea3",
        "url": "https://github.com/oracle/graal/archive/refs/tags/vm-ce-23.0.0.zip"
      },
      {
        "folder": "graalpython",
        "sha256": "2d1de59940f41184bb50ed3bff35fd01f0089e6d4c4e4f2a0b80d9d78d48917b",
        "url": "https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-23.0.0.zip"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "curl",
        "cxx_compiler_stub",
        "git",
        "make",
        "patch",
        "patchelf",
        "pypy3.9",
        "zlib"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "graalpy",
        "graalpy-graalvm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "graalpy",
        "graalpy-graalvm",
        "libzlib",
        "patch",
        "python_abi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "setuptools"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "http://graalvm.org/python",
      "license": "UPL-1.0",
      "license_file": "LICENSE_GRAALPY.txt",
      "summary": "GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "timfel",
        "msimacek",
        "isuruf"
      ]
    },
    "outputs": [
      {
        "build": {
          "number": "0",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "graalpy >=23.0.0"
            ]
          },
          "skip_compile_pyc": [
            "*.py"
          ],
          "string": "0_graalvm_native",
          "track_features": [
            "openjdk"
          ]
        },
        "name": "graalpy",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pypy3.9 >=7.3.9",
            "make",
            "patch",
            "zlib",
            "git",
            "curl",
            "cmake",
            "patchelf"
          ],
          "host": [
            "zlib"
          ],
          "run": [
            "libzlib",
            "patch",
            "curl",
            "python_abi 3.10.* *_graalpy230_310_native"
          ],
          "run_constrained": [
            "python 3.10.8 0_native230_graalpy"
          ]
        },
        "script": "build_graalpy.sh",
        "test": {
          "commands": [
            "python3 --help",
            "python3 -c \"import platform; print(platform._sys_version())\"",
            "graalpy -m venv --help",
            "graalpy -m venv testvenv",
            "testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\""
          ]
        },
        "version": "23.0.0"
      },
      {
        "build": {
          "number": "0",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "graalpy",
              "python_abi 3.10.* *_graalpy230_310_native"
            ]
          },
          "string": "0_native230_graalpy",
          "track_features": [
            "graalpy"
          ]
        },
        "name": "python",
        "requirements": {
          "host": [
            "graalpy"
          ],
          "run": [
            "graalpy",
            "python_abi 3.10.* *_graalpy230_310_native"
          ]
        },
        "test": {
          "commands": [
            "python --version",
            "pip -h",
            "test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"3.10.8\"",
            "test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\""
          ],
          "imports": [
            "setuptools"
          ],
          "requires": [
            "setuptools",
            "pip"
          ]
        },
        "version": "3.10.8"
      },
      {
        "build": {
          "number": "0"
        },
        "name": "graalpy-graalvm",
        "requirements": {
          "host": [
            "graalpy"
          ],
          "run": [
            "graalpy"
          ]
        },
        "test": {
          "commands": [
            "java --version"
          ]
        },
        "version": "23.0.0"
      },
      {
        "build": {
          "number": "0",
          "run_exports": {
            "weak": [
              "graalpy-graalvm >=23.0"
            ]
          },
          "string": "0_graalvm230b10",
          "track_features": [
            "graalpy-graalvm"
          ]
        },
        "name": "openjdk",
        "requirements": {
          "host": [
            "graalpy-graalvm"
          ],
          "run": [
            "graalpy-graalvm"
          ]
        },
        "test": {
          "commands": [
            "java --version",
            "javac --version"
          ]
        },
        "version": "17.0.7.4"
      }
    ],
    "package": {
      "name": "graalpy",
      "version": "23.0.0"
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "labsjdk",
        "sha256": "535b9302daa8a054d5419c4c38b2a056205cacb341ff768b19929bcb6e0edeef",
        "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-23.0-b10/labsjdk-ce-17.0.7+4-jvmci-23.0-b10-linux-amd64.tar.gz"
      },
      {
        "folder": "mx",
        "sha256": "4fb692a1ec34dfc957832a948a41b4d0238377990a0098daf83240e837638cfe",
        "url": "https://github.com/graalvm/mx/archive/refs/tags/6.23.8.zip"
      },
      {
        "folder": "graal",
        "patches": [
          "patches/sulong-without-tck.patch",
          "patches/graal-omit-libjli-loading.patch"
        ],
        "sha256": "48b0d713006b4dee39743e625f8e5fd9a3add1019f9ced4e952028cbf1412ea3",
        "url": "https://github.com/oracle/graal/archive/refs/tags/vm-ce-23.0.0.zip"
      },
      {
        "folder": "graalpython",
        "sha256": "2d1de59940f41184bb50ed3bff35fd01f0089e6d4c4e4f2a0b80d9d78d48917b",
        "url": "https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-23.0.0.zip"
      }
    ]
  },
  "name": "graalpy",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "graalpy",
      "graalpy-graalvm",
      "openjdk",
      "python"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/graalpy.json"
  },
  "raw_meta_yaml": "# the graalpy version implies the below versions, so update these together\n{% set version = \"23.0.0\" %}\n{% set gp_python_version = \"3.10.8\" %}\n{% set mx_version = \"6.23.8\" %}\n{% set java_version = \"17.0.7+4\" %}\n{% set jvmci_version = \"23.0-b10\" %}\n\n{% if graalpy_distribution is not defined %}\n{% set graalpy_distribution = \"standalone\" %}\n{% endif %}\n\n# Keep increasing the build_num until we get a new graalpy version. Do not reset\n{% set build_num = \"0\" %}\n\n{% set python_maj_min = \".\".join(gp_python_version.split(\".\")[:2]) %}\n{% set graalpy_maj_min = \".\".join(version.split(\".\")[:2]) %}\n{% set graalpy_abi = \"native\" %}\n\npackage:\n  name: graalpy\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-aarch64.tar.gz  # [build_platform == \"linux-aarch64\"]\n    sha256: 401e3dd488c4f4b14823fa4a34e7b2d9d5e61d7a6d13c19b6cea6bd48ce090f8  # [build_platform == \"linux-aarch64\"]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-linux-amd64.tar.gz  # [build_platform == \"linux-64\"]\n    sha256: 535b9302daa8a054d5419c4c38b2a056205cacb341ff768b19929bcb6e0edeef  # [build_platform == \"linux-64\"]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-amd64.tar.gz  # [osx and x86_64]\n    sha256: 0daed0d320ba9173e5ee76da13c554539a65f71ca19ab60c30ec2508799befec  # [osx and x86_64]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-darwin-aarch64.tar.gz  # [osx and arm64]\n    sha256: cb5b5e600e6ef3642c3d1df99d693537690372017f31cd0943a5b97f86727e42  # [osx and arm64]\n  - url: https://github.com/graalvm/labs-openjdk-{{ java_version.split(\".\")[0] }}/releases/download/jvmci-{{ jvmci_version }}/labsjdk-ce-{{ java_version }}-jvmci-{{ jvmci_version }}-windows-amd64.tar.gz  # [win64]\n    sha256: fb349ddc10bc1cebe5e95460859bfcb878da3be43481e914ab3894c689f552e3  # [win64]\n    folder: labsjdk\n  - url: https://github.com/graalvm/mx/archive/refs/tags/{{ mx_version }}.zip\n    sha256: 4fb692a1ec34dfc957832a948a41b4d0238377990a0098daf83240e837638cfe\n    folder: mx\n  - url: https://github.com/oracle/graal/archive/refs/tags/vm-ce-{{ version }}.zip\n    sha256: 48b0d713006b4dee39743e625f8e5fd9a3add1019f9ced4e952028cbf1412ea3\n    folder: graal\n    patches:\n      - patches/sulong-without-tck.patch\n      - patches/graal-omit-libjli-loading.patch\n  - url: https://github.com/oracle/graalpython/archive/refs/tags/vm-ce-{{ version }}.zip\n    sha256: 2d1de59940f41184bb50ed3bff35fd01f0089e6d4c4e4f2a0b80d9d78d48917b\n    folder: graalpython\n\nbuild:\n  number: {{ build_num }}\n  skip: true  # [win or osx]\n\noutputs:\n  - name: graalpy\n    version: {{ version }}\n    script: build_graalpy.sh\n    build:\n      skip_compile_pyc:\n        - '*.py'\n      number: {{ build_num }}\n      string: {{ build_num }}_{{ graalpy_distribution }}_{{ graalpy_abi }}\n      track_features:   # [graalpy_distribution == \"graalvm\"]\n        - openjdk  # [graalpy_distribution == \"graalvm\"]\n      script_env:   # [graalpy_distribution == \"standalone\"]\n        - GRAALPY_STANDALONE_BUILD=true  # [graalpy_distribution == \"standalone\"]\n      run_exports:\n        weak:\n          - graalpy >={{ version }}\n        noarch:\n          - {{ pin_subpackage(\"python\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pypy3.9 >=7.3.9\n        - make\n        - patch\n        - zlib\n        - git\n        - curl\n        - cmake\n        - patchelf  # [linux]\n      host:\n        - zlib\n      run:\n        - libzlib\n        - patch\n        - curl\n        - __osx >={{ MACOS_DEPLOYMENT_TARGET|default(\"10.12\") }}  # [osx]\n        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n      run_constrained:\n        - python {{ gp_python_version }} {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy\n    test:\n      commands:\n        - python3 --help\n        - python3 -c \"import platform; print(platform._sys_version())\"\n        - graalpy -m venv --help\n        - graalpy -m venv testvenv\n        - testvenv/bin/graalpy -c \"import _struct; print(_struct.pack('I', 15663050))\"\n\n  - name: python\n    version: {{ gp_python_version }}\n    build:\n      number: {{ build_num }}\n      string: {{ build_num }}_{{ graalpy_abi }}{{ graalpy_maj_min.replace('.', '') }}_graalpy\n      track_features:\n        - graalpy\n      run_exports:\n        weak:\n          - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n          - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n        noarch:\n          - {{ pin_subpackage(\"python\", max_pin=\"x.x\", min_pin=\"x.x\") }}\n    requirements:\n      host:\n        - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x.x\", min_pin=\"x.x.x\") }}\n      run:\n        - {{ pin_subpackage(\"graalpy\", max_pin=\"x.x.x\", min_pin=\"x.x.x\") }}\n        - python_abi {{ python_maj_min }}.* *_graalpy{{ graalpy_maj_min.replace('.', '') }}_{{ python_maj_min.replace('.', '') }}_{{ graalpy_abi }}\n    test:\n      requires:\n        - setuptools\n        - pip\n      imports:\n        # check that noarch packages work\n        - setuptools\n      commands:\n        - python --version\n        - pip -h\n        - test $(python -c \"import sys; print('.'.join(str(i) for i in sys.version_info[:3]))\") == \"{{ gp_python_version }}\"  # [unix]\n        - test $(python -c \"import sys; print(sys.implementation.name)\") == \"graalpy\"  # [unix]\n\n  - name: graalpy-graalvm\n    version: {{ version }}\n    build:\n      number: {{ build_num }}\n      skip: true  # [graalpy_distribution == \"standalone\"]\n    requirements:\n      host:\n        - {{ pin_subpackage('graalpy', exact=True) }}\n      run:\n        - {{ pin_subpackage('graalpy', exact=True) }}\n    test:\n      commands:\n        - java --version\n\n  - name: openjdk\n    version: {{ java_version.replace(\"+\", \".\") }}\n    build:\n      number: {{ build_num }}\n      string: {{ build_num }}_graalvm{{ jvmci_version.replace(\".\", \"\").replace(\"-\", \"\") }}\n      track_features:\n        - graalpy-graalvm\n      skip: true  # [graalpy_distribution == \"standalone\"]\n      run_exports:\n        weak:\n          - graalpy-graalvm >={{ graalpy_maj_min }}\n    requirements:\n      host:\n        - {{ pin_subpackage(\"graalpy-graalvm\", exact=True) }}\n      run:\n        - {{ pin_subpackage(\"graalpy-graalvm\", exact=True) }}\n    test:\n      commands:\n        - java --version\n        - javac --version\n\nabout:\n  home: http://graalvm.org/python\n  license: UPL-1.0\n  license_file: LICENSE_GRAALPY.txt\n  summary: >\n    GraalPy is a high-performance Python implementation on GraalVM. See https://conda-forge.org/blog/posts/2020-03-10-pypy for more information about using it in conda, replacing PyPy/pypy/pp with GraalPy/graalpy/gp in commands.\n\nextra:\n  recipe-maintainers:\n    - timfel\n    - msimacek\n    - isuruf\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cmake",
      "curl",
      "cxx_compiler_stub",
      "git",
      "graalpy",
      "graalpy-graalvm",
      "libzlib",
      "make",
      "patch",
      "patchelf",
      "pypy3.9",
      "python_abi",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "curl",
        "cxx_compiler_stub",
        "git",
        "make",
        "patch",
        "patchelf",
        "pypy3.9",
        "zlib"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "graalpy",
        "graalpy-graalvm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "curl",
        "cxx_compiler_stub",
        "graalpy",
        "graalpy-graalvm",
        "libzlib",
        "patch",
        "python_abi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "setuptools"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "curl",
        "cxx_compiler_stub",
        "git",
        "make",
        "patch",
        "patchelf",
        "pypy3.9 >=7.3.9",
        "zlib"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "graalpy",
        "graalpy-graalvm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "curl",
        "graalpy",
        "graalpy-graalvm",
        "libzlib",
        "patch",
        "python_abi 3.10.* *_graalpy230_310_native"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "setuptools"
      ]
    }
  },
  "url": "https://github.com/graalvm/labs-openjdk-17/releases/download/jvmci-23.0-b10/labsjdk-ce-17.0.7+4-jvmci-23.0-b10-linux-amd64.tar.gz",
  "version": "23.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/graalpy.json"
  }
}