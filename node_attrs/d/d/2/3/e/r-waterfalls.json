{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-waterfalls",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=waterfalls",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "A not uncommon task for quants is to create 'waterfall charts'. There seems to be no simple way to do this in 'ggplot2' currently. This package contains a single function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object. Some flexibility is provided, though often the object created will need to be modified through a theme."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-waterfalls",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ],
      "run": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dc8b94edc37239c0991cc5f435322f1ccf85df9f0b321f9f003ba0023e541f2",
      "url": [
        "https://cran.r-project.org/src/contrib/waterfalls_1.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/waterfalls/waterfalls_1.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('waterfalls')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=waterfalls",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": [
        "/lib/R/share/licenses/MIT",
        "LICENSE"
      ],
      "summary": "A not uncommon task for quants is to create 'waterfall charts'. There seems to be no simple way to do this in 'ggplot2' currently. This package contains a single function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object. Some flexibility is provided, though often the object created will need to be modified through a theme."
    },
    "build": {
      "noarch": "generic",
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-waterfalls",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ],
      "run": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0dc8b94edc37239c0991cc5f435322f1ccf85df9f0b321f9f003ba0023e541f2",
      "url": [
        "https://cran.r-project.org/src/contrib/waterfalls_1.0.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/waterfalls/waterfalls_1.0.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('waterfalls')\""
      ]
    }
  },
  "name": "r-waterfalls",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-waterfalls"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-waterfalls.json"
  },
  "raw_meta_yaml": "{% set version = \"1.0.0\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-waterfalls\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/waterfalls_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/waterfalls/waterfalls_{{ version }}.tar.gz\n  sha256: 0dc8b94edc37239c0991cc5f435322f1ccf85df9f0b321f9f003ba0023e541f2\n\nbuild:\n  number: 3\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-ggplot2 >=2.0.0\n  run:\n    - r-base\n    - r-ggplot2 >=2.0.0\n\ntest:\n  commands:\n    - $R -e \"library('waterfalls')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('waterfalls')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=waterfalls\n  license: MIT\n  summary: A not uncommon task for quants is to create 'waterfall charts'. There seems to be no simple way to do this in 'ggplot2' currently. This package contains a single function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object. Some flexibility is provided, though often the object created will need\n    to be modified through a theme.\n  license_family: MIT\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: waterfalls\n# Type: Package\n# Title: Create Waterfall Charts using 'ggplot2' Simply\n# Date: 2018-01-15\n# Version: 0.1.2\n# Author: Hugh Parsonage\n# Maintainer: Hugh Parsonage <hugh.parsonage+waterfall@gmail.com>\n# Description: A not uncommon task for quants is to create 'waterfall charts'. There seems to be no simple way to do this in 'ggplot2' currently. This package contains a single function (waterfall) that simply draws a waterfall chart in a 'ggplot2' object. Some flexibility is provided, though often the object created will need to be modified through a theme.\n# License: MIT + file LICENSE\n# Imports: ggplot2 (>= 2.0.0), grDevices\n# LazyData: TRUE\n# RoxygenNote: 6.0.1\n# NeedsCompilation: no\n# Packaged: 2018-01-26 00:14:09 UTC; hughp\n# Repository: CRAN\n# Date/Publication: 2018-01-26 04:04:30 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-ggplot2"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-ggplot2 >=2.0.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/waterfalls_1.0.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/waterfalls/waterfalls_1.0.0.tar.gz"
  ],
  "version": "1.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-waterfalls.json"
  }
}