{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "0892da28bc75efab505132c51e239a5e9282e37f",
  "feedstock_hash_ts": 1759309557,
  "feedstock_name": "ultranest",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\nNested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\nIn the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\nThis package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\nUltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n",
      "dev_url": "https://github.com/JohannesBuchner/UltraNest",
      "doc_url": "https://johannesbuchner.github.io/UltraNest/",
      "home": "https://johannesbuchner.github.io/UltraNest/",
      "license": "AGPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "MPLBACKEND=agg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "JohannesBuchner"
      ]
    },
    "package": {
      "name": "ultranest",
      "version": "4.4.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy",
        "pytest-runner"
      ],
      "run": [
        "python",
        "numpy",
        "matplotlib-base",
        "corner",
        "six",
        "cython",
        "scipy",
        "getdist"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501",
      "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz"
    },
    "test": {
      "imports": [
        "ultranest"
      ],
      "requires": [
        "cython",
        "pandas",
        "h5py",
        "joblib",
        "pytest",
        "git",
        "pytest-html",
        "pip"
      ],
      "source_files": [
        "tests/*"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\nNested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\nIn the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\nThis package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\nUltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n",
      "dev_url": "https://github.com/JohannesBuchner/UltraNest",
      "doc_url": "https://johannesbuchner.github.io/UltraNest/",
      "home": "https://johannesbuchner.github.io/UltraNest/",
      "license": "AGPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "MPLBACKEND=agg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "JohannesBuchner"
      ]
    },
    "package": {
      "name": "ultranest",
      "version": "4.4.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy",
        "pytest-runner"
      ],
      "run": [
        "python",
        "numpy",
        "matplotlib-base",
        "corner",
        "six",
        "cython",
        "scipy",
        "getdist"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501",
      "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz"
    },
    "test": {
      "imports": [
        "ultranest"
      ],
      "requires": [
        "cython",
        "pandas",
        "h5py",
        "joblib",
        "pytest",
        "git",
        "pytest-html",
        "pip"
      ],
      "source_files": [
        "tests/*"
      ]
    }
  },
  "name": "ultranest",
  "osx_64_meta_yaml": {
    "about": {
      "description": "When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\nNested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\nIn the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\nThis package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\nUltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n",
      "dev_url": "https://github.com/JohannesBuchner/UltraNest",
      "doc_url": "https://johannesbuchner.github.io/UltraNest/",
      "home": "https://johannesbuchner.github.io/UltraNest/",
      "license": "AGPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "MPLBACKEND=agg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "JohannesBuchner"
      ]
    },
    "package": {
      "name": "ultranest",
      "version": "4.4.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy",
        "pytest-runner"
      ],
      "run": [
        "python",
        "numpy",
        "matplotlib-base",
        "corner",
        "six",
        "cython",
        "scipy",
        "getdist"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501",
      "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz"
    },
    "test": {
      "imports": [
        "ultranest"
      ],
      "requires": [
        "cython",
        "pandas",
        "h5py",
        "joblib",
        "pytest",
        "git",
        "pytest-html",
        "pip"
      ],
      "source_files": [
        "tests/*"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\nNested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\nIn the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\nThis package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\nUltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n",
      "dev_url": "https://github.com/JohannesBuchner/UltraNest",
      "doc_url": "https://johannesbuchner.github.io/UltraNest/",
      "home": "https://johannesbuchner.github.io/UltraNest/",
      "license": "AGPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "MPLBACKEND=agg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "JohannesBuchner"
      ]
    },
    "package": {
      "name": "ultranest",
      "version": "4.4.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy",
        "pytest-runner"
      ],
      "run": [
        "python",
        "numpy",
        "matplotlib-base",
        "corner",
        "six",
        "cython",
        "scipy",
        "getdist"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501",
      "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz"
    },
    "test": {
      "imports": [
        "ultranest"
      ],
      "requires": [
        "cython",
        "pandas",
        "h5py",
        "joblib",
        "pytest",
        "git",
        "pytest-html",
        "pip"
      ],
      "source_files": [
        "tests/*"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ultranest"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ultranest.json"
  },
  "raw_meta_yaml": "{% set name = \"ultranest\" %}\n{% set version = \"4.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501\n\nbuild:\n  number: 1\n  # may need to later add \"skip: True  # [win]\" to disable Windows.\n  script_env:\n    - MPLBACKEND=agg\n  skip: true  # [py<30 or python_impl == \"pypy\"]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    # cython project, so need a compiler\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - cython\n    - numpy\n  host:\n    - python\n    - pip\n    - setuptools\n    - cython\n    - numpy\n    - pytest-runner\n\n  run:\n    - python\n    - numpy\n    - matplotlib-base\n    - corner\n    - six\n    - cython\n    - scipy\n    - getdist\n\ntest:\n  imports:\n    - ultranest\n  source_files:\n    - tests/*\n  requires:\n    - cython\n    - pandas\n    - h5py\n    - joblib\n    - pytest\n    - git\n    - pytest-html\n    - pip\n\nabout:\n  home: https://johannesbuchner.github.io/UltraNest/\n  license: AGPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Fit and compare complex models reliably and rapidly. Advanced Nested Sampling.\n\n  description: |\n    When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\n    Nested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\n    In the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\n    This package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\n    UltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n  doc_url: https://johannesbuchner.github.io/UltraNest/\n  dev_url: https://github.com/JohannesBuchner/UltraNest\n\nextra:\n  recipe-maintainers:\n    - JohannesBuchner\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "corner",
      "cython",
      "getdist",
      "matplotlib-base",
      "numpy",
      "pip",
      "pytest-runner",
      "python",
      "scipy",
      "setuptools",
      "six"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz",
  "version": "4.4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ultranest.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "When scientific models are compared to data, two tasks are important: 1) contraining the model parameters and 2) comparing the model to other models. Different techniques have been developed to explore model parameter spaces. This package implements a Monte Carlo technique called nested sampling.\nNested sampling allows Bayesian inference on arbitrary user-defined likelihoods. In particular, posterior probability distributions on model parameters are constructed, and the marginal likelihood (“evidence”) Z is computed. The former can be used to describe the parameter constraints of the data, the latter can be used for model comparison (via Bayes factors) as a measure of the prediction parsimony of a model.\nIn the last decade, multiple variants of nested sampling have been developed. These differ in how nested sampling finds better and better fits while respecting the priors (constrained likelihood prior sampling techniques), and whether it is allowed to go back to worse fits and explore the parameter space more.\nThis package develops novel, advanced techniques for both (See https://johannesbuchner.github.io/UltraNest/method.html). They are especially remarkable for being free of tuning parameters and theoretically justified. Beyond that, UltraNest has support for Big Data sets and high-performance computing applications.\nUltraNest is intended for fitting complex physical models with slow likelihood evaluations, with one to hundreds of parameters. UltraNest intends to replace heuristic methods like multi-ellipsoid nested sampling and dynamic nested sampling with more rigorous methods. UltraNest also attempts to provide feature parity compared to other packages (such as MultiNest).\n",
      "dev_url": "https://github.com/JohannesBuchner/UltraNest",
      "doc_url": "https://johannesbuchner.github.io/UltraNest/",
      "home": "https://johannesbuchner.github.io/UltraNest/",
      "license": "AGPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "MPLBACKEND=agg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "JohannesBuchner"
      ]
    },
    "package": {
      "name": "ultranest",
      "version": "4.4.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy",
        "pytest-runner"
      ],
      "run": [
        "python",
        "numpy",
        "matplotlib-base",
        "corner",
        "six",
        "cython",
        "scipy",
        "getdist"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "dfebdc4b2bc0138238f65e8f957b70fe296cb094c895172f4a368e792a59b501",
      "url": "https://pypi.org/packages/source/u/ultranest/ultranest-4.4.0.tar.gz"
    },
    "test": {
      "imports": [
        "ultranest"
      ],
      "requires": [
        "cython",
        "pandas",
        "h5py",
        "joblib",
        "pytest",
        "git",
        "pytest-html",
        "pip"
      ],
      "source_files": [
        "tests/*"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "pytest-runner",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "cython",
        "getdist",
        "matplotlib-base",
        "numpy",
        "python",
        "scipy",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cython",
        "git",
        "h5py",
        "joblib",
        "pandas",
        "pip",
        "pytest",
        "pytest-html"
      ]
    }
  }
}