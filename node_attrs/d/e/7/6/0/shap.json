{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "bot": {
      "abi_migration_branches": [
        "0.43.x"
      ],
      "inspection": "update-grayskull"
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "conda-build+conda-libmamba-solver",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "938d837a1653749cbb3998248fb35492601ce7ea",
  "feedstock_hash_ts": 1750151263,
  "feedstock_name": "shap",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"",
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython",
        "cuda-cudart-dev"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle",
        "__cuda"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext",
        "shap._cext_gpu"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "pytorch",
        "transformers",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "cloudpickle",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "pytorch",
        "sentencepiece",
        "transformers",
        "xgboost"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"",
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython",
        "cuda-cudart-dev"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle",
        "__cuda"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext",
        "shap._cext_gpu"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "cloudpickle",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "sentencepiece",
        "xgboost"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"",
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython",
        "cuda-cudart-dev"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle",
        "__cuda"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext",
        "shap._cext_gpu"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "pytorch",
        "transformers",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "name": "shap",
  "osx_64_meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"",
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "pytorch",
        "transformers",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cloudpickle",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "pytorch",
        "sentencepiece",
        "transformers",
        "xgboost"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"",
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "pytorch",
        "transformers",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cloudpickle",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "pytorch",
        "sentencepiece",
        "transformers",
        "xgboost"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "shap"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/shap.json"
  },
  "raw_meta_yaml": "{% set name = \"shap\" %}\n{% set version = \"0.48.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9\n  patches:\n    - 0001-Build-for-all-CUDA-11-arches.patch  # [cuda_compiler_version == \"11.8\"]\n    - 0001-Build-for-all-CUDA-12-arches.patch  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    # Taken and adapted from https://github.com/shap/shap/pull/3311\n    - 0002-remove-old-kepler-architecture-for-cuda-build.patch  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n\nbuild:\n  number: 1\n  skip: true  # [cuda_compiler_version == \"11.2\" or py<39 or ppc64le]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  script:\n    - export NVCC_PREPEND_FLAGS=\"-ccbin ${CXX}\"  # [unix]\n    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - make  # [unix]\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n    - setuptools >=61.0\n    - setuptools-scm >=8.0\n    - packaging >=20.9\n    - numpy\n    - cython\n    - cuda-cudart-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  run:\n    - typing_extensions\n    - python\n    - packaging >20.9\n    - numpy\n    - scipy\n    - scikit-learn\n    - pandas\n    - tqdm >=4.27.0\n    - slicer ==0.0.8\n    - numba >=0.54\n    - cloudpickle\n    - __cuda  # [cuda_compiler_version != \"None\"]\n\ntest:\n  requires:\n    - pip\n    - pytest\n    - pytest-mpl\n    - matplotlib-base\n    - ipython\n    - xgboost\n    # - tensorflow  # [(osx or linux64) and py<312]\n    # Not available for Windows or linux-ppc64le,\n    # not enough static TLS for linux-aarch64 emulation\n    - pytorch  # [osx or linux64]\n    # transformers tests require pytorch\n    - transformers  # [not (win or ppc64le or aarch64)]\n    - catboost >=1.2.7  # [not ppc64le]\n    - ngboost  # [not py>=313]\n    - pyod >=1\n    # Fails tests/explainers/test_tree.py::test_skopt_rf_et\n    # - scikit-optimize\n    # Rebuild for osx-arm64?\n    # - gpboost\n    - lightgbm\n    # Due to old pins on tensorflow, this would downgrade tensorflow massively\n    # - opencv\n    - sentencepiece\n  source_files:\n    - tests\n  commands:\n    - pip check\n    # Skip tests for CUDA as CI doesn't have a GPU.\n    - pytest -k \"not xslow\" -sv tests  # [cuda_compiler_version == \"None\"]\n  imports:\n    - shap\n    - shap._cext\n    - shap._cext_gpu  # [cuda_compiler_version != \"None\"]\n\nabout:\n  home: https://github.com/slundberg/shap\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A unified approach to explain the output of any machine learning model.\n  description: |\n    SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n  doc_url: https://shap.readthedocs.io/en/latest/\n  dev_url: https://github.com/slundberg/shap\n\nextra:\n  recipe-maintainers:\n    - connortann\n    - mrandrewandrade\n    - primozgodec\n    - slundberg\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cloudpickle",
      "cuda-cudart-dev",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "cython",
      "make",
      "numba",
      "numpy",
      "packaging",
      "pandas",
      "pip",
      "python",
      "scikit-learn",
      "scipy",
      "setuptools",
      "setuptools-scm",
      "slicer",
      "tqdm",
      "typing_extensions"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cloudpickle",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "pytorch",
        "sentencepiece",
        "transformers",
        "xgboost"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cython",
        "numpy",
        "packaging >=20.9",
        "pip",
        "python",
        "setuptools >=61.0",
        "setuptools-scm >=8.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "cloudpickle",
        "numba >=0.54",
        "numpy",
        "packaging >20.9",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer ==0.0.8",
        "tqdm >=4.27.0",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost >=1.2.7",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod >=1",
        "pytest",
        "pytest-mpl",
        "pytorch",
        "sentencepiece",
        "transformers",
        "xgboost"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz",
  "version": "0.48.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/shap.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
      "dev_url": "https://github.com/slundberg/shap",
      "doc_url": "https://shap.readthedocs.io/en/latest/",
      "home": "https://github.com/slundberg/shap",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A unified approach to explain the output of any machine learning model."
    },
    "build": {
      "number": "1",
      "script": [
        "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
      ],
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "connortann",
        "mrandrewandrade",
        "primozgodec",
        "slundberg",
        "xhochy"
      ]
    },
    "package": {
      "name": "shap",
      "version": "0.48.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools >=61.0",
        "setuptools-scm >=8.0",
        "packaging >=20.9",
        "numpy",
        "cython",
        "cuda-cudart-dev"
      ],
      "run": [
        "typing_extensions",
        "python",
        "packaging >20.9",
        "numpy",
        "scipy",
        "scikit-learn",
        "pandas",
        "tqdm >=4.27.0",
        "slicer ==0.0.8",
        "numba >=0.54",
        "cloudpickle",
        "__cuda"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "f169dc73fe144e70a0331b5507f9fd290d7695a3c7935fa8e4862e376321baf9",
      "url": "https://pypi.org/packages/source/s/shap/shap-0.48.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pytest -k \"not xslow\" -sv tests"
      ],
      "imports": [
        "shap",
        "shap._cext",
        "shap._cext_gpu"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-mpl",
        "matplotlib-base",
        "ipython",
        "xgboost",
        "catboost >=1.2.7",
        "ngboost",
        "pyod >=1",
        "lightgbm",
        "sentencepiece"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cython",
        "numpy",
        "packaging",
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "cloudpickle",
        "numba",
        "numpy",
        "packaging",
        "pandas",
        "python",
        "scikit-learn",
        "scipy",
        "slicer",
        "tqdm",
        "typing_extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "catboost",
        "ipython",
        "lightgbm",
        "matplotlib-base",
        "ngboost",
        "pip",
        "pyod",
        "pytest",
        "pytest-mpl",
        "sentencepiece",
        "xgboost"
      ]
    }
  }
}