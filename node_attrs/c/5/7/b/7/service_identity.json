{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "hint-all"
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "service_identity",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "service_identity aspires to give you all the tools you need for verifying\nwhether a certificate is valid for the intended purposes.\n",
      "dev_url": "https://github.com/pyca/service-identity",
      "doc_url": "https://service-identity.readthedocs.io/en/stable/",
      "home": "https://github.com/pyca/service-identity",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Service identity verification for pyOpenSSL."
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "feedstock-name": "service_identity",
      "recipe-maintainers": [
        "isuruf",
        "bollwyvl"
      ]
    },
    "outputs": [
      {
        "name": "service-identity"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service_identity",
        "requirements": {
          "run": [
            "service-identity"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-pyopenssl",
        "requirements": {
          "run": [
            "service-identity",
            "pyopenssl"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-idna",
        "requirements": {
          "run": [
            "service-identity",
            "idna"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-all",
        "requirements": {
          "run": [
            "service-identity",
            "service-identity-with-idna",
            "service-identity-with-pyopenssl"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "coverage run --source=service_identity --branch -m pytest -vv --tb=long --color=yes",
            "coverage report --show-missing --skip-covered --fail-under=98"
          ],
          "imports": [
            "service_identity"
          ],
          "requires": [
            "coverage",
            "pip",
            "pytest"
          ],
          "source_files": [
            "tests"
          ]
        }
      }
    ],
    "package": {
      "name": "service-identity",
      "version": "24.2.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9"
      ],
      "run": [
        "attrs >=19.1.0",
        "cryptography",
        "pyasn1",
        "pyasn1-modules",
        "python >=3.9"
      ],
      "run_constrained": [
        "service_identity"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8683ba13f0d39c6cd5d625d2c5f65421d6d707b013b375c355751557cbe8e09",
      "url": "https://pypi.org/packages/source/s/service-identity/service_identity-24.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "service_identity"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs",
        "cryptography",
        "idna",
        "pyasn1",
        "pyasn1-modules",
        "pyopenssl",
        "python",
        "service-identity",
        "service-identity-with-idna",
        "service-identity-with-pyopenssl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "service_identity aspires to give you all the tools you need for verifying\nwhether a certificate is valid for the intended purposes.\n",
      "dev_url": "https://github.com/pyca/service-identity",
      "doc_url": "https://service-identity.readthedocs.io/en/stable/",
      "home": "https://github.com/pyca/service-identity",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Service identity verification for pyOpenSSL."
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "feedstock-name": "service_identity",
      "recipe-maintainers": [
        "isuruf",
        "bollwyvl"
      ]
    },
    "outputs": [
      {
        "name": "service-identity"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service_identity",
        "requirements": {
          "run": [
            "service-identity"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-pyopenssl",
        "requirements": {
          "run": [
            "service-identity",
            "pyopenssl"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-idna",
        "requirements": {
          "run": [
            "service-identity",
            "idna"
          ]
        },
        "test": {
          "imports": [
            "service_identity"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "service-identity-with-all",
        "requirements": {
          "run": [
            "service-identity",
            "service-identity-with-idna",
            "service-identity-with-pyopenssl"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "coverage run --source=service_identity --branch -m pytest -vv --tb=long --color=yes",
            "coverage report --show-missing --skip-covered --fail-under=98"
          ],
          "imports": [
            "service_identity"
          ],
          "requires": [
            "coverage",
            "pip",
            "pytest"
          ],
          "source_files": [
            "tests"
          ]
        }
      }
    ],
    "package": {
      "name": "service-identity",
      "version": "24.2.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9"
      ],
      "run": [
        "attrs >=19.1.0",
        "cryptography",
        "pyasn1",
        "pyasn1-modules",
        "python >=3.9"
      ],
      "run_constrained": [
        "service_identity"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8683ba13f0d39c6cd5d625d2c5f65421d6d707b013b375c355751557cbe8e09",
      "url": "https://pypi.org/packages/source/s/service-identity/service_identity-24.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "service_identity"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "service-identity",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "service-identity",
      "service-identity-with-all",
      "service-identity-with-idna",
      "service-identity-with-pyopenssl",
      "service_identity"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/service_identity.json"
  },
  "raw_meta_yaml": "{% set version = \"24.2.0\" %}\n\n# handle undefined PYTHON in `noarch: generic` outputs\n{% if PYTHON is not defined %}{% set PYTHON = \"$PYTHON\" %}{% endif %}\n\npackage:\n  name: service-identity\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/s/service-identity/service_identity-{{ version }}.tar.gz\n  sha256: b8683ba13f0d39c6cd5d625d2c5f65421d6d707b013b375c355751557cbe8e09\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - hatch-fancy-pypi-readme\n    - hatch-vcs\n    - hatchling\n    - pip\n    - python {{ python_min }}\n  run:\n    - attrs >=19.1.0\n    - cryptography\n    - pyasn1\n    - pyasn1-modules\n    - python >={{ python_min }}\n  run_constrained:\n    - {{ pin_subpackage(\"service_identity\", max_pin=\"x.x.x\") }}\n\ntest:\n  requires:\n    - pip\n    - python {{ python_min }}\n  imports:\n    - service_identity\n  commands:\n    - pip check\n\noutputs:\n  - name: service-identity\n\n  - name: service_identity\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"service-identity\", max_pin=\"x.x.x\") }}\n    test:\n      imports:\n        - service_identity\n\n  - name: service-identity-with-pyopenssl\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"service-identity\", max_pin=\"x.x.x\") }}\n        - pyopenssl\n    test:\n      imports:\n        - service_identity\n\n  - name: service-identity-with-idna\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"service-identity\", max_pin=\"x.x.x\") }}\n        - idna\n    test:\n      imports:\n        - service_identity\n\n  - name: service-identity-with-all\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"service-identity\", max_pin=\"x.x.x\") }}\n        - {{ pin_subpackage(\"service-identity-with-idna\", max_pin=\"x.x.x\") }}\n        - {{ pin_subpackage(\"service-identity-with-pyopenssl\", max_pin=\"x.x.x\") }}\n    test:\n      source_files:\n        - tests\n      requires:\n        - coverage\n        - pip\n        - pytest\n      imports:\n        - service_identity\n      commands:\n        - pip check\n        - coverage run --source=service_identity --branch -m pytest -vv --tb=long --color=yes\n        - coverage report --show-missing --skip-covered --fail-under=98\n\nabout:\n  home: https://github.com/pyca/service-identity\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Service identity verification for pyOpenSSL.\n  description: |\n    service_identity aspires to give you all the tools you need for verifying\n    whether a certificate is valid for the intended purposes.\n  doc_url: https://service-identity.readthedocs.io/en/stable/\n  dev_url: https://github.com/pyca/service-identity\n\nextra:\n  feedstock-name: service_identity\n  recipe-maintainers:\n    - isuruf\n    - bollwyvl\n",
  "req": {
    "__set__": true,
    "elements": [
      "attrs",
      "cryptography",
      "hatch-fancy-pypi-readme",
      "hatch-vcs",
      "hatchling",
      "idna",
      "pip",
      "pyasn1",
      "pyasn1-modules",
      "pyopenssl",
      "python",
      "service-identity",
      "service-identity-with-idna",
      "service-identity-with-pyopenssl"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs",
        "cryptography",
        "idna",
        "pyasn1",
        "pyasn1-modules",
        "pyopenssl",
        "python",
        "service-identity",
        "service-identity-with-idna",
        "service-identity-with-pyopenssl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-fancy-pypi-readme",
        "hatch-vcs",
        "hatchling",
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "attrs >=19.1.0",
        "cryptography",
        "idna",
        "pyasn1",
        "pyasn1-modules",
        "pyopenssl",
        "python >=3.9",
        "service-identity",
        "service-identity-with-idna",
        "service-identity-with-pyopenssl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "coverage",
        "pip",
        "pytest",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/service-identity/service_identity-24.2.0.tar.gz",
  "version": "24.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/service_identity.json"
  }
}