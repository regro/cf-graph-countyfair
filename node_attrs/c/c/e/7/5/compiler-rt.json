{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "abi_migration_branches": [
        "20.x",
        "19.x"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_name": "compiler-rt",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-64",
        "requirements": {
          "run": [
            "compiler-rt21_linux-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_linux-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-aarch64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-aarch64",
        "requirements": {
          "run": [
            "compiler-rt21_linux-aarch64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_linux-aarch64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-ppc64le 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-ppc64le",
        "requirements": {
          "run": [
            "compiler-rt21_linux-ppc64le"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_linux-ppc64le"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-64",
        "requirements": {
          "run": [
            "compiler-rt21_linux-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-aarch64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-aarch64",
        "requirements": {
          "run": [
            "compiler-rt21_linux-aarch64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_linux-ppc64le 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_linux-ppc64le",
        "requirements": {
          "run": [
            "compiler-rt21_linux-ppc64le"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": null
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_osx-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_osx-64",
        "requirements": {
          "run": [
            "compiler-rt21_osx-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_osx-arm64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_osx-arm64",
        "requirements": {
          "run": [
            "compiler-rt21_osx-arm64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib\\clang\\21\\lib"
        ],
        "name": "compiler-rt21_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\lib\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "files": [
          "Library\\lib\\clang\\21\\share",
          "Library\\lib\\clang\\21\\include",
          "Library\\lib\\clang\\21\\lib"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_win-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_win-64",
        "requirements": {
          "run": [
            "compiler-rt21_win-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\lib\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "zlib",
        "libxml2-devel",
        "libcxx"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "name": "compiler-rt-packages",
  "osx_64_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_osx-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_osx-64",
        "requirements": {
          "run": [
            "compiler-rt21_osx-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libcxx",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_osx-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib/clang/21/lib"
        ],
        "name": "compiler-rt21_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "files": [
          "lib/clang/21/share",
          "lib/clang/21/include"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_osx-arm64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_osx-arm64",
        "requirements": {
          "run": [
            "compiler-rt21_osx-arm64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/lib/darwin/libclang_rt.osx.a"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/clang/21/include/sanitizer/asan_interface.h"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "libcxx",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_osx-arm64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "compiler-rt",
      "compiler-rt21",
      "compiler-rt21_linux-64",
      "compiler-rt21_linux-aarch64",
      "compiler-rt21_linux-ppc64le",
      "compiler-rt21_osx-64",
      "compiler-rt21_osx-arm64",
      "compiler-rt21_win-64",
      "compiler-rt_linux-64",
      "compiler-rt_linux-aarch64",
      "compiler-rt_linux-ppc64le",
      "compiler-rt_osx-64",
      "compiler-rt_osx-arm64",
      "compiler-rt_win-64"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/compiler-rt.json"
  },
  "raw_meta_yaml": "{% set version = \"21.1.4\" %}\n{% set major_ver = version.split('.')[0] %}\n\npackage:\n  name: compiler-rt-packages\n  version: {{ version }}\n\nsource:\n  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n  sha256: 3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c\n  patches:\n    - patches/0001-no-code-sign.patch\n    - patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - cmake >=3.4.3\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n    - python *\n    - ninja\n    - llvmdev {{ version }}  # [build_platform != target_platform]\n  host:\n    - llvmdev {{ version }}\n    - libcxx   # [osx]\n    - zlib\n    - libxml2-devel\n\noutputs:\n  - name: compiler-rt{{ major_ver }}_{{ target_platform }}\n    build:\n      noarch: generic\n      ignore_run_exports_from:\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      detect_binary_files_with_prefix: false  # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n      run:\n      run_constrained:\n        # This is when compiler-rt and compiler-rt_{{ target_platform }} split\n        - compiler-rt >=9.0.1\n    files:\n      - lib/clang/{{ major_ver }}/lib   # [unix]\n      # avoid \"Library\\\" for noarch output\n      - lib\\clang\\{{ major_ver }}\\lib   # [win]\n    test:\n      commands:\n        - test -f $PREFIX/lib/clang/{{ major_ver }}/lib/darwin/libclang_rt.osx.a                            # [osx]\n        - if not exist %PREFIX%\\lib\\clang\\{{ major_ver }}\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1   # [win]\n\n  - name: compiler-rt{{ major_ver }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n      run:\n        - compiler-rt{{ major_ver }}_{{ target_platform }} {{ version }}\n    files:\n      - lib/clang/{{ major_ver }}/share             # [unix]\n      - lib/clang/{{ major_ver }}/include           # [unix]\n      # standard windows layout for arch-specific output\n      - Library\\lib\\clang\\{{ major_ver }}\\share     # [win]\n      - Library\\lib\\clang\\{{ major_ver }}\\include   # [win]\n      - Library\\lib\\clang\\{{ major_ver }}\\lib       # [win]\n    test:\n      # files:\n      #   - test.c.in\n      commands:\n        # TODO: move this test to clang\n        # {% set NEW_TARGET=\"10.\" ~ (((MACOSX_DEPLOYMENT_TARGET|default(\"10.13\")).split(\".\")[1])|int + 1) %}\n        # - sed \"s/@MACOSX_DEPLOYMENT_TARGET@/{{ NEW_TARGET }}/g\" test.c.in > test.c\n        # - clang -mmacosx-version-min={{ MACOSX_DEPLOYMENT_TARGET }} test.c  # [osx]\n        - test -f $PREFIX/lib/clang/{{ major_ver }}/include/sanitizer/asan_interface.h                      # [unix]\n        - if not exist %LIBRARY_LIB%\\clang\\{{ major_ver }}\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1  # [win]\n\n  - name: compiler-rt_{{ target_platform }}\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage(\"compiler-rt\" ~ major_ver ~ \"_\" ~ target_platform, exact=True) }}\n      run_constrained:\n        - clang {{ version }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/clang/{{ major_ver }}/lib/darwin/libclang_rt.osx.a                            # [osx]\n        - if not exist %PREFIX%\\lib\\clang\\{{ major_ver }}\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1   # [win]\n\n  - name: compiler-rt\n    requirements:\n      run:\n        - {{ pin_subpackage(\"compiler-rt\" ~ major_ver, exact=True) }}\n      run_constrained:\n        - clang {{ version }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/clang/{{ major_ver }}/include/sanitizer/asan_interface.h                      # [unix]\n        - if not exist %LIBRARY_LIB%\\clang\\{{ major_ver }}\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1  # [win]\n\nabout:\n  home: http://llvm.org/\n  license: Apache-2.0 WITH LLVM-exception\n  license_file: compiler-rt/LICENSE.TXT\n  summary: compiler-rt runtime libraries\n  dev_url: https://github.com/llvm/llvm-project\n  description: |\n    builtins - low-level target-specific hooks required by code generation and other\n      runtime components\n    sanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n      MemorySanitizer, LeakSanitizer, DataFlowSanitizer\n    profile - library which is used to collect coverage information\n    BlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n      interfaces\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - inducer\n    - jakirkham\n    - isuruf\n    - h-vetinari\n  feedstock-name: compiler-rt\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "compiler-rt21",
      "compiler-rt21_linux-64",
      "compiler-rt21_linux-aarch64",
      "compiler-rt21_linux-ppc64le",
      "compiler-rt21_osx-64",
      "compiler-rt21_osx-arm64",
      "compiler-rt21_win-64",
      "cxx_compiler_stub",
      "libcxx",
      "libxml2-devel",
      "llvmdev",
      "ninja",
      "python",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libcxx",
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "compiler-rt21",
        "compiler-rt21_linux-64",
        "compiler-rt21_linux-aarch64",
        "compiler-rt21_linux-ppc64le",
        "compiler-rt21_osx-64",
        "compiler-rt21_osx-arm64",
        "compiler-rt21_win-64",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "ninja",
        "python *"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libcxx",
        "libxml2-devel",
        "llvmdev 21.1.4",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_linux-64",
        "compiler-rt21_linux-64 21.1.4",
        "compiler-rt21_linux-aarch64",
        "compiler-rt21_linux-aarch64 21.1.4",
        "compiler-rt21_linux-ppc64le",
        "compiler-rt21_linux-ppc64le 21.1.4",
        "compiler-rt21_osx-64",
        "compiler-rt21_osx-64 21.1.4",
        "compiler-rt21_osx-arm64",
        "compiler-rt21_osx-arm64 21.1.4",
        "compiler-rt21_win-64",
        "compiler-rt21_win-64 21.1.4"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz",
  "version": "21.1.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/compiler-rt.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
      "dev_url": "https://github.com/llvm/llvm-project",
      "home": "http://llvm.org/",
      "license": "Apache-2.0 WITH LLVM-exception",
      "license_file": "compiler-rt/LICENSE.TXT",
      "summary": "compiler-rt runtime libraries"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "compiler-rt",
      "recipe-maintainers": [
        "SylvainCorlay",
        "inducer",
        "jakirkham",
        "isuruf",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "files": [
          "lib\\clang\\21\\lib"
        ],
        "name": "compiler-rt21_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "compiler-rt >=9.0.1"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\lib\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "files": [
          "Library\\lib\\clang\\21\\share",
          "Library\\lib\\clang\\21\\include",
          "Library\\lib\\clang\\21\\lib"
        ],
        "name": "compiler-rt21",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "compiler-rt21_win-64 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "compiler-rt_win-64",
        "requirements": {
          "run": [
            "compiler-rt21_win-64"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\lib\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      },
      {
        "name": "compiler-rt",
        "requirements": {
          "run": [
            "compiler-rt21"
          ],
          "run_constrained": [
            "clang 21.1.4"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_LIB%\\clang\\21\\lib\\windows\\clang_rt.builtins-x86_64.lib exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "compiler-rt-packages",
      "version": "21.1.4"
    },
    "requirements": {
      "build": [
        "cmake >=3.4.3",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "python *",
        "ninja"
      ],
      "host": [
        "llvmdev 21.1.4",
        "zlib",
        "libxml2-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-no-code-sign.patch",
        "patches/0002-Revert-Declare-_availability_version_check-as-weak_i.patch"
      ],
      "sha256": "3a0921d78be74302cb054da1dad59e706814d8fed3a6ac9b532e935825a0715c",
      "url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.4.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libxml2-devel",
        "llvmdev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "compiler-rt21",
        "compiler-rt21_win-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}