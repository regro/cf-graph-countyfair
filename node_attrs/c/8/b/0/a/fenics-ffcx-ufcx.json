{
  "archived": true,
  "branch": "main",
  "conda-forge.yml": {},
  "feedstock_name": "fenics-ffcx-ufcx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.4.2/",
      "home": "https://fenicsproject.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "c_compiler_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub"
          ]
        },
        "script": "build-ufcx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/ufcx.h",
            "pkg-config --cflags ufcx"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.sh"
        }
      },
      {
        "build": {
          "noarch": "python",
          "script": "$PYTHON -m pip install -vv --no-deps ."
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.7",
            "pip",
            "setuptools >=58,<61",
            "wheel"
          ],
          "run": [
            "python >=3.7",
            "setuptools",
            "numpy",
            "cffi",
            "fenics-basix >=0.4.1,<0.5.0a0",
            "fenics-ufl ==2022.1.*"
          ]
        },
        "test": {
          "commands": [
            "pytest -v test-ffcx"
          ],
          "files": [
            "test-ffcx"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "pytest",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      }
    ],
    "package": {
      "name": "fenics-ffcx-ufcx",
      "version": "0.4.2"
    },
    "source": {
      "sha256": "3be6eef064d6ef907245db5b6cc15d4e603762e68b76e53e099935ca91ef1ee4",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pip",
        "pkg-config",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.4.2/",
      "home": "https://fenicsproject.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "c_compiler_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub"
          ]
        },
        "script": "build-ufcx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/ufcx.h",
            "pkg-config --cflags ufcx"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.sh"
        }
      },
      {
        "build": {
          "noarch": "python",
          "script": "$PYTHON -m pip install -vv --no-deps ."
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.7",
            "pip",
            "setuptools >=58,<61",
            "wheel"
          ],
          "run": [
            "python >=3.7",
            "setuptools",
            "numpy",
            "cffi",
            "fenics-basix >=0.4.1,<0.5.0a0",
            "fenics-ufl ==2022.1.*"
          ]
        },
        "test": {
          "commands": [
            "pytest -v test-ffcx"
          ],
          "files": [
            "test-ffcx"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "pytest",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      }
    ],
    "package": {
      "name": "fenics-ffcx-ufcx",
      "version": "0.4.2"
    },
    "source": {
      "sha256": "3be6eef064d6ef907245db5b6cc15d4e603762e68b76e53e099935ca91ef1ee4",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "name": "fenics-ffcx-ufcx",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fenics-ffcx",
      "fenics-ufcx"
    ]
  },
  "parsing_error": "make_graph: missing parsing_error key",
  "pr_info": {
    "__lazy_json__": "pr_info/fenics-ffcx-ufcx.json"
  },
  "raw_meta_yaml": "{% set name = \"fenics-ffcx-ufcx\" %}\n{% set version = \"0.4.2\" %}\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # PyPI sdist missing ufcx sources in 0.4.2. Should be fixed in 0.4.3\n  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}{{ extra }}.tar.gz\n  url: https://github.com/fenics/ffcx/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 3be6eef064d6ef907245db5b6cc15d4e603762e68b76e53e099935ca91ef1ee4\nbuild:\n  number: 1\n  skip: true  # [win]\n\noutputs:\n  - name: fenics-ufcx\n    script: build-ufcx.sh\n    build:\n      noarch: generic\n      ignore_run_exports:\n        # we don't use the compiler, but cmake still needs it\n        - {{ compiler(\"c\") }}  # [linux]\n    requirements:\n      build:\n        - cmake\n        - make\n        - {{ compiler(\"c\") }}  # [linux]\n    test:\n      script: test-ufcx.sh\n      files:\n        - test-ufcx\n      requires:\n        - pkg-config\n        - cmake\n        - make\n        - {{ compiler(\"cxx\") }}\n      commands:\n        - test -f ${PREFIX}/include/ufcx.h\n        - pkg-config --cflags ufcx\n  - name: fenics-ffcx\n    build:\n      script: $PYTHON -m pip install -vv --no-deps .\n      noarch: python\n    requirements:\n      host:\n        - python >=3.7\n        - pip\n        - setuptools >=58,<61\n        - wheel\n      run:\n        - python >=3.7\n        - setuptools\n        - numpy\n        - cffi\n        - fenics-basix >=0.4.1,<0.5.0a0\n        - fenics-ufl ==2022.1.*\n    test:\n      files:\n        - test-ffcx\n      requires:\n        - pip\n        - pytest\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n      imports:\n        - ffcx\n      commands:\n        - pytest -v test-ffcx\n\nabout:\n  home: https://fenicsproject.org\n  summary: The FEniCSx Form Compiler\n  description: |\n    FFCx is a new version of the FEniCS Form Compiler.\n    It is being actively developed and is compatible with DOLFINx.\n\n    FFCx is a compiler for finite element variational forms.\n    From a high-level description of the form in the Unified Form Language (UFL),\n    it generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\n    In particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\n    FFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  doc_url: https://docs.fenicsproject.org/ffcx/v{{ version }}/\n  dev_url: https://github.com/fenics/ffcx\n\nextra:\n  feedstock-name: fenics-ffcx\n  recipe-maintainers:\n    - minrk\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cffi",
      "cmake",
      "fenics-basix",
      "fenics-ufl",
      "make",
      "numpy",
      "pip",
      "python",
      "setuptools",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fenics-basix",
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cffi",
        "cxx_compiler_stub",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pip",
        "pkg-config",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.7",
        "setuptools >=58,<61",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cffi",
        "fenics-basix >=0.4.1,<0.5.0a0",
        "fenics-ufl ==2022.1.*",
        "numpy",
        "python >=3.7",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pip",
        "pkg-config",
        "pytest"
      ]
    }
  },
  "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.4.2.tar.gz",
  "version": "0.4.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fenics-ffcx-ufcx.json"
  }
}