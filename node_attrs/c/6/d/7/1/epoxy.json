{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "epoxy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ],
      "run": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/egl.h",
        "test -f $PREFIX/include/epoxy/egl_generated.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/include/epoxy/glx.h",
        "test -f $PREFIX/include/epoxy/glx_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ],
      "run": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/egl.h",
        "test -f $PREFIX/include/epoxy/egl_generated.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/include/epoxy/glx.h",
        "test -f $PREFIX/include/epoxy/glx_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ],
      "run": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/egl.h",
        "test -f $PREFIX/include/epoxy/egl_generated.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/include/epoxy/glx.h",
        "test -f $PREFIX/include/epoxy/glx_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ],
      "run": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/egl.h",
        "test -f $PREFIX/include/epoxy/egl_generated.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/include/epoxy/glx.h",
        "test -f $PREFIX/include/epoxy/glx_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\common.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl_generated.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl_generated.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\epoxy-0.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\epoxy.lib exit 1"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "name": "epoxy",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/epoxy/common.h",
        "test -f $PREFIX/include/epoxy/gl.h",
        "test -f $PREFIX/include/epoxy/gl_generated.h",
        "test -f $PREFIX/lib/libepoxy${SHLIB_EXT}",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "epoxy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/epoxy.json"
  },
  "raw_meta_yaml": "# Prior to conda-forge, Copyright 2018-2019 Peter Williams and collaborators.\n# This file is licensed under a 3-clause BSD license; see LICENSE.txt.\n{% set version = \"1.5.10\" %}\n\npackage:\n  name: epoxy\n  version: {{ version }}\n\nsource:\n  url: https://github.com/anholt/libepoxy/archive/refs/tags/{{ version }}.tar.gz\n  sha256: a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15\n\nbuild:\n  number: 2\n  run_exports:\n    - {{ pin_subpackage('epoxy', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - meson\n    - ninja\n    - pkg-config\n  host:\n    - libdrm                    # [linux]\n    - libegl-devel              # [linux]\n    - libgl-devel               # [linux]\n    - libglx-devel              # [linux]\n    - xorg-libx11               # [linux]\n    - xorg-libxdamage           # [linux]\n    - xorg-libxext              # [linux]\n    - xorg-libxfixes            # [linux]\n    - xorg-libxxf86vm           # [linux]\n    - xorg-xf86vidmodeproto     # [linux]\n  run:\n    - libegl-devel              # [linux]\n    - libgl-devel               # [linux]\n    - libglx-devel              # [linux]\n\ntest:\n  requires:\n    - pkg-config\n  commands:\n    - test -f $PREFIX/include/epoxy/common.h         # [unix]\n    - test -f $PREFIX/include/epoxy/egl.h            # [linux]\n    - test -f $PREFIX/include/epoxy/egl_generated.h  # [linux]\n    - test -f $PREFIX/include/epoxy/gl.h             # [unix]\n    - test -f $PREFIX/include/epoxy/gl_generated.h   # [unix]\n    - test -f $PREFIX/include/epoxy/glx.h            # [linux]\n    - test -f $PREFIX/include/epoxy/glx_generated.h  # [linux]\n    - test -f $PREFIX/lib/libepoxy${SHLIB_EXT}       # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\common.h exit 1         # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl.h exit 1             # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl_generated.h exit 1   # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl.h exit 1            # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl_generated.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\epoxy-0.dll exit 1                 # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\epoxy.lib exit 1                   # [win]\n    - pkg-config --debug --exists epoxy\n    - pkg-config --validate epoxy\n\nabout:\n  home: https://github.com/anholt/libepoxy\n  license: MIT\n  license_family: MIT\n  license_file: COPYING\n  summary: A library for handling OpenGL function pointer management for you.\n  description: |\n    Epoxy is a library for handling OpenGL function pointer management for you.\n\n    It hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\n    eglGetProcAddress(), etc. from the app developer, with very little\n    knowledge needed on their part. They get to read GL specs and write code\n    using undecorated function names like glCompileShader().\n\n    Don't forget to check for your extensions or versions being present before\n    you use them, just like before! We'll tell you what you forgot to check\n    for instead of just segfaulting, though.\n  dev_url: https://github.com/anholt/libepoxy\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n    - stuarteberg\n    - tschoonj\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "libdrm",
      "libegl-devel",
      "libgl-devel",
      "libglx-devel",
      "meson",
      "ninja",
      "pkg-config",
      "xorg-libx11",
      "xorg-libxdamage",
      "xorg-libxext",
      "xorg-libxfixes",
      "xorg-libxxf86vm",
      "xorg-xf86vidmodeproto"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdrm",
        "libegl-devel",
        "libgl-devel",
        "libglx-devel",
        "xorg-libx11",
        "xorg-libxdamage",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxxf86vm",
        "xorg-xf86vidmodeproto"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libegl-devel",
        "libgl-devel",
        "libglx-devel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  },
  "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz",
  "version": "1.5.10",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/epoxy.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Epoxy is a library for handling OpenGL function pointer management for you.\n\nIt hides the complexity of dlopen(), dlsym(), glXGetProcAddress(),\neglGetProcAddress(), etc. from the app developer, with very little\nknowledge needed on their part. They get to read GL specs and write code\nusing undecorated function names like glCompileShader().\n\nDon't forget to check for your extensions or versions being present before\nyou use them, just like before! We'll tell you what you forgot to check\nfor instead of just segfaulting, though.\n",
      "dev_url": "https://github.com/anholt/libepoxy",
      "home": "https://github.com/anholt/libepoxy",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "COPYING",
      "summary": "A library for handling OpenGL function pointer management for you."
    },
    "build": {
      "number": "2",
      "run_exports": [
        "epoxy"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz",
        "stuarteberg",
        "tschoonj"
      ]
    },
    "package": {
      "name": "epoxy",
      "version": "1.5.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7ced37f4102b745ac86d6a70a9da399cc139ff168ba6b8002b4d8d43c900c15",
      "url": "https://github.com/anholt/libepoxy/archive/refs/tags/1.5.10.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\common.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\gl_generated.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\epoxy\\\\wgl_generated.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\epoxy-0.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\epoxy.lib exit 1",
        "pkg-config --debug --exists epoxy",
        "pkg-config --validate epoxy"
      ],
      "requires": [
        "pkg-config"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "pkg-config"
      ]
    }
  }
}