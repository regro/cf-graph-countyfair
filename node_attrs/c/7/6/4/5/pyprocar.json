{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true,
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pyprocar",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PyProcar is a robust, open-source Python library used for pre- and\npost-processing of the electronic structure data coming from DFT\ncalculations. PyProcar provides a set of functions that manage data\nobtained from the PROCAR format. Basically, the PROCAR format is a\nprojection of the Kohn-Sham states over atomic orbitals. That\nprojection is performed to every k-point in the considered mesh,\nevery energy band and every atom. PyProcar is capable of performing\na multitude of tasks including plotting plain and spin/atom/orbital\nprojected band structures and Fermi surfaces- both in 2D and 3D, Fermi\nvelocity plots, unfolding bands of a super cell, comparing band\nstructures from multiple DFT calculations, plotting partial density\nof states and generating a k-path for a given crystal structure.\n",
      "dev_url": "https://github.com/romerogroup/pyprocar",
      "doc_url": "https://romerogroup.github.io/pyprocar/",
      "home": "https://github.com/romerogroup/pyprocar",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "A Python library for electronic structure pre/post-processing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen",
        "uthpalaherath"
      ]
    },
    "package": {
      "name": "pyprocar",
      "version": "6.5.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools-scm",
        "setuptools"
      ],
      "run": [
        "huggingface_hub",
        "dill",
        "variconfig",
        "python >=3.9",
        "gdown",
        "matplotlib-base",
        "numpy <2.0",
        "pyvista",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "seekpath",
        "spglib",
        "trimesh",
        "ase",
        "sympy",
        "pandas",
        "pyyaml"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "19fd21ececba049afb314cd2ccd2d6acd3fb2b80efb06ad8ed3547fab033892c",
      "url": "https://pypi.org/packages/source/p/pyprocar/pyprocar-6.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyprocar"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase",
        "dill",
        "gdown",
        "huggingface_hub",
        "matplotlib-base",
        "numpy",
        "pandas",
        "python",
        "pyvista",
        "pyyaml",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "seekpath",
        "spglib",
        "sympy",
        "trimesh",
        "variconfig"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PyProcar is a robust, open-source Python library used for pre- and\npost-processing of the electronic structure data coming from DFT\ncalculations. PyProcar provides a set of functions that manage data\nobtained from the PROCAR format. Basically, the PROCAR format is a\nprojection of the Kohn-Sham states over atomic orbitals. That\nprojection is performed to every k-point in the considered mesh,\nevery energy band and every atom. PyProcar is capable of performing\na multitude of tasks including plotting plain and spin/atom/orbital\nprojected band structures and Fermi surfaces- both in 2D and 3D, Fermi\nvelocity plots, unfolding bands of a super cell, comparing band\nstructures from multiple DFT calculations, plotting partial density\nof states and generating a k-path for a given crystal structure.\n",
      "dev_url": "https://github.com/romerogroup/pyprocar",
      "doc_url": "https://romerogroup.github.io/pyprocar/",
      "home": "https://github.com/romerogroup/pyprocar",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "A Python library for electronic structure pre/post-processing."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen",
        "uthpalaherath"
      ]
    },
    "package": {
      "name": "pyprocar",
      "version": "6.5.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools-scm",
        "setuptools"
      ],
      "run": [
        "huggingface_hub",
        "dill",
        "variconfig",
        "python >=3.9",
        "gdown",
        "matplotlib-base",
        "numpy <2.0",
        "pyvista",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "seekpath",
        "spglib",
        "trimesh",
        "ase",
        "sympy",
        "pandas",
        "pyyaml"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "19fd21ececba049afb314cd2ccd2d6acd3fb2b80efb06ad8ed3547fab033892c",
      "url": "https://pypi.org/packages/source/p/pyprocar/pyprocar-6.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyprocar"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "pyprocar",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyprocar"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyprocar.json"
  },
  "raw_meta_yaml": "{% set name = \"pyprocar\" %}\n{% set version = \"6.5.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 19fd21ececba049afb314cd2ccd2d6acd3fb2b80efb06ad8ed3547fab033892c\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  noarch: python\n  number: 0\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools-scm\n    - setuptools\n  run:\n    - huggingface_hub\n    - dill\n    - variconfig\n    - python >={{ python_min }}\n    - gdown\n    - matplotlib-base\n    - numpy <2.0\n    - pyvista\n    - scikit-image\n    - scikit-learn\n    - scipy\n    - seekpath\n    - spglib\n    - trimesh\n    - ase\n    - sympy\n    - pandas\n    - pyyaml\n\ntest:\n  imports:\n    - pyprocar\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/romerogroup/pyprocar\n  summary: A Python library for electronic structure pre/post-processing.\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  description: |\n    PyProcar is a robust, open-source Python library used for pre- and\n    post-processing of the electronic structure data coming from DFT\n    calculations. PyProcar provides a set of functions that manage data\n    obtained from the PROCAR format. Basically, the PROCAR format is a\n    projection of the Kohn-Sham states over atomic orbitals. That\n    projection is performed to every k-point in the considered mesh,\n    every energy band and every atom. PyProcar is capable of performing\n    a multitude of tasks including plotting plain and spin/atom/orbital\n    projected band structures and Fermi surfaces- both in 2D and 3D, Fermi\n    velocity plots, unfolding bands of a super cell, comparing band\n    structures from multiple DFT calculations, plotting partial density\n    of states and generating a k-path for a given crystal structure.\n  doc_url: https://romerogroup.github.io/pyprocar/\n  dev_url: https://github.com/romerogroup/pyprocar\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - uthpalaherath\n",
  "req": {
    "__set__": true,
    "elements": [
      "ase",
      "dill",
      "gdown",
      "huggingface_hub",
      "matplotlib-base",
      "numpy",
      "pandas",
      "pip",
      "python",
      "pyvista",
      "pyyaml",
      "scikit-image",
      "scikit-learn",
      "scipy",
      "seekpath",
      "setuptools",
      "setuptools-scm",
      "spglib",
      "sympy",
      "trimesh",
      "variconfig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase",
        "dill",
        "gdown",
        "huggingface_hub",
        "matplotlib-base",
        "numpy",
        "pandas",
        "python",
        "pyvista",
        "pyyaml",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "seekpath",
        "spglib",
        "sympy",
        "trimesh",
        "variconfig"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase",
        "dill",
        "gdown",
        "huggingface_hub",
        "matplotlib-base",
        "numpy <2.0",
        "pandas",
        "python >=3.9",
        "pyvista",
        "pyyaml",
        "scikit-image",
        "scikit-learn",
        "scipy",
        "seekpath",
        "spglib",
        "sympy",
        "trimesh",
        "variconfig"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyprocar/pyprocar-6.5.0.tar.gz",
  "version": "6.5.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyprocar.json"
  }
}