{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "cpptrace",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\nWindows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n",
      "home": "https://github.com/jeremy-rifkin/cpptrace",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Simple, portable, and self-contained stacktrace library for C++11 and newer"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "cpptrace"
      ],
      "string": "libunwind_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "jeremy-rifkin"
      ]
    },
    "package": {
      "name": "cpptrace",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdwarf",
        "libdwarf-dev",
        "zlib",
        "libunwind"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea",
      "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcpptrace${SHLIB_EXT}",
        "test -f $PREFIX/include/cpptrace/cpptrace.hpp",
        "test -f $PREFIX/include/cpptrace/basic.hpp",
        "test -f $PREFIX/include/cpptrace/version.hpp",
        "test -f $PREFIX/lib/cmake/cpptrace/cpptrace-targets.cmake",
        "cd test",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug",
        "cmake --build . --config Debug",
        "./program",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug -DTEST_LIBUNWIND=ON"
      ],
      "files": [
        "test"
      ],
      "requires": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdwarf",
        "libdwarf-dev",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\nWindows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n",
      "home": "https://github.com/jeremy-rifkin/cpptrace",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Simple, portable, and self-contained stacktrace library for C++11 and newer"
    },
    "build": {
      "number": "100",
      "run_exports": [
        "cpptrace"
      ],
      "string": "default_h1234567_100"
    },
    "extra": {
      "recipe-maintainers": [
        "jeremy-rifkin"
      ]
    },
    "package": {
      "name": "cpptrace",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdwarf",
        "libdwarf-dev",
        "zlib",
        "libunwind"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea",
      "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcpptrace${SHLIB_EXT}",
        "test -f $PREFIX/include/cpptrace/cpptrace.hpp",
        "test -f $PREFIX/include/cpptrace/basic.hpp",
        "test -f $PREFIX/include/cpptrace/version.hpp",
        "test -f $PREFIX/lib/cmake/cpptrace/cpptrace-targets.cmake",
        "cd test",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug",
        "cmake --build . --config Debug",
        "./program",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug -DTEST_LIBUNWIND=ON",
        "if not exist %LIBRARY_PREFIX%\\lib\\cpptrace.lib (echo Not found: %LIBRARY_PREFIX%\\lib\\cpptrace.lib & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\bin\\cpptrace.dll (echo Not found: %LIBRARY_PREFIX%\\bin\\cpptrace.dll & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\cpptrace.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\cpptrace.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\basic.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\basic.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\version.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\version.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\cpptrace\\cpptrace-targets.cmake (echo Not found: %LIBRARY_PREFIX%\\lib\\cmake\\cpptrace\\cpptrace-targets.cmake & exit 1)",
        "cmake .",
        ".\\\\Debug\\\\program.exe"
      ],
      "files": [
        "test"
      ],
      "requires": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "name": "cpptrace",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\nWindows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n",
      "home": "https://github.com/jeremy-rifkin/cpptrace",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Simple, portable, and self-contained stacktrace library for C++11 and newer"
    },
    "build": {
      "number": "100",
      "run_exports": [
        "cpptrace"
      ],
      "string": "default_h1234567_100"
    },
    "extra": {
      "recipe-maintainers": [
        "jeremy-rifkin"
      ]
    },
    "package": {
      "name": "cpptrace",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdwarf",
        "libdwarf-dev",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea",
      "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcpptrace${SHLIB_EXT}",
        "test -f $PREFIX/include/cpptrace/cpptrace.hpp",
        "test -f $PREFIX/include/cpptrace/basic.hpp",
        "test -f $PREFIX/include/cpptrace/version.hpp",
        "test -f $PREFIX/lib/cmake/cpptrace/cpptrace-targets.cmake",
        "cd test",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug",
        "cmake --build . --config Debug",
        "./program"
      ],
      "files": [
        "test"
      ],
      "requires": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdwarf",
        "libdwarf-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\nWindows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n",
      "home": "https://github.com/jeremy-rifkin/cpptrace",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Simple, portable, and self-contained stacktrace library for C++11 and newer"
    },
    "build": {
      "number": "100",
      "run_exports": [
        "cpptrace"
      ],
      "string": "default_h1234567_100"
    },
    "extra": {
      "recipe-maintainers": [
        "jeremy-rifkin"
      ]
    },
    "package": {
      "name": "cpptrace",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libdwarf",
        "libdwarf-dev",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea",
      "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcpptrace${SHLIB_EXT}",
        "test -f $PREFIX/include/cpptrace/cpptrace.hpp",
        "test -f $PREFIX/include/cpptrace/basic.hpp",
        "test -f $PREFIX/include/cpptrace/version.hpp",
        "test -f $PREFIX/lib/cmake/cpptrace/cpptrace-targets.cmake",
        "cd test",
        "cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug",
        "cmake --build . --config Debug",
        "./program"
      ],
      "files": [
        "test"
      ],
      "requires": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdwarf",
        "libdwarf-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cpptrace"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cpptrace.json"
  },
  "raw_meta_yaml": "{% set name = \"cpptrace\" %}\n{% set version = \"1.0.4\" %}\n\n{% set build = 0 %}\n\n{% if unwind_backend == \"default\" %}\n{% set build = build + 100 %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/jeremy-rifkin/cpptrace/archive/v{{ version }}.tar.gz\n  sha256: 5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea\n\nbuild:\n  number: {{ build }}\n  string: {{ unwind_backend }}_h{{ PKG_HASH }}_{{ build }}\n\n  run_exports:\n    - {{ pin_subpackage('cpptrace', max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - cmake\n    - ninja         # [unix]\n    - pkg-config    # [unix]\n  host:\n    - libdwarf      # [unix]\n    - libdwarf-dev  # [unix]\n    - zlib          # [unix]\n    - libunwind     # [unix and unwind_backend == \"libunwind\"]\n\ntest:\n  requires:\n    - cmake\n    - {{ compiler(\"cxx\") }}\n    - ninja                 # [unix]\n  files:\n    - test\n  commands:\n    - test -f $PREFIX/lib/libcpptrace${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/include/cpptrace/cpptrace.hpp  # [unix]\n    - test -f $PREFIX/include/cpptrace/basic.hpp  # [unix]\n    - test -f $PREFIX/include/cpptrace/version.hpp  # [unix]\n    - test -f $PREFIX/lib/cmake/cpptrace/cpptrace-targets.cmake  # [unix]\n    - cd test  # [unix]\n    - cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug  # [unix and unwind_backend != \"libunwind\"]\n    - cmake . -GNinja -DCMAKE_BUILD_TYPE=Debug -DTEST_LIBUNWIND=ON  # [unix and unwind_backend == \"libunwind\"]\n    - cmake --build . --config Debug  # [unix]\n    - ./program  # [unix]\n\n\n    - \"if not exist %LIBRARY_PREFIX%\\\\lib\\\\cpptrace.lib (echo Not found: %LIBRARY_PREFIX%\\\\lib\\\\cpptrace.lib & exit 1)\"  # [win]\n    - \"if not exist %LIBRARY_PREFIX%\\\\bin\\\\cpptrace.dll (echo Not found: %LIBRARY_PREFIX%\\\\bin\\\\cpptrace.dll & exit 1)\"  # [win]\n    - \"if not exist %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\cpptrace.hpp (echo Not found: %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\cpptrace.hpp & exit 1)\"  # [win]\n    - \"if not exist %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\basic.hpp (echo Not found: %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\basic.hpp & exit 1)\"  # [win]\n    - \"if not exist %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\version.hpp (echo Not found: %LIBRARY_PREFIX%\\\\include\\\\cpptrace\\\\version.hpp & exit 1)\"  # [win]\n    - \"if not exist %LIBRARY_PREFIX%\\\\lib\\\\cmake\\\\cpptrace\\\\cpptrace-targets.cmake (echo Not found: %LIBRARY_PREFIX%\\\\lib\\\\cmake\\\\cpptrace\\\\cpptrace-targets.cmake & exit 1)\"  # [win]\n    - cd test  # [win]\n    - cmake .  # [win]\n    - cmake --build . --config Debug  # [win]\n    - .\\\\Debug\\\\program.exe  # [win]\n\nabout:\n  home: https://github.com/jeremy-rifkin/cpptrace\n  summary: 'Simple, portable, and self-contained stacktrace library for C++11 and newer'\n  description: |\n    Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\n    Windows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - jeremy-rifkin\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libdwarf",
      "libdwarf-dev",
      "libunwind",
      "ninja",
      "pkg-config",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libdwarf",
        "libdwarf-dev",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libdwarf",
        "libdwarf-dev",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz",
  "version": "1.0.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cpptrace.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Cpptrace is a simple, portable, and self-contained C++ stacktrace library supporting C++11 and greater on Linux, macOS, and\nWindows including MinGW and Cygwin environments. The goal: Make stack traces simple for once.\n",
      "home": "https://github.com/jeremy-rifkin/cpptrace",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Simple, portable, and self-contained stacktrace library for C++11 and newer"
    },
    "build": {
      "number": "100",
      "run_exports": [
        "cpptrace"
      ],
      "string": "default_h1234567_100"
    },
    "extra": {
      "recipe-maintainers": [
        "jeremy-rifkin"
      ]
    },
    "package": {
      "name": "cpptrace",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake"
      ],
      "host": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "5c9f5b301e903714a4d01f1057b9543fa540f7bfcc5e3f8bd1748e652e24f9ea",
      "url": "https://github.com/jeremy-rifkin/cpptrace/archive/v1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\lib\\cpptrace.lib (echo Not found: %LIBRARY_PREFIX%\\lib\\cpptrace.lib & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\bin\\cpptrace.dll (echo Not found: %LIBRARY_PREFIX%\\bin\\cpptrace.dll & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\cpptrace.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\cpptrace.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\basic.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\basic.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\include\\cpptrace\\version.hpp (echo Not found: %LIBRARY_PREFIX%\\include\\cpptrace\\version.hpp & exit 1)",
        "if not exist %LIBRARY_PREFIX%\\lib\\cmake\\cpptrace\\cpptrace-targets.cmake (echo Not found: %LIBRARY_PREFIX%\\lib\\cmake\\cpptrace\\cpptrace-targets.cmake & exit 1)",
        "cd test",
        "cmake .",
        "cmake --build . --config Debug",
        ".\\\\Debug\\\\program.exe"
      ],
      "files": [
        "test"
      ],
      "requires": [
        "cmake",
        "cxx_compiler_stub"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    }
  }
}