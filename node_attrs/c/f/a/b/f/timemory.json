{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "pool": {
          "vmImage": "windows-2019"
        }
      }
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "timemory",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
      "dev_url": "https://github.com/NERSC/timemory",
      "doc_url": "https://timemory.readthedocs.io/",
      "home": "https://github.com/NERSC/timemory",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Lightweight performance analysis toolkit and suite of tools"
    },
    "build": {
      "number": "104",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt -G \"NMake Makefiles\" --cxx-standard=14 --enable-portable --enable-shared-libs --disable-cuda --disable-nccl --enable-mpi --disable-c --disable-fortran --disable-ert --disable-develop --disable-static-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-cupti --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -DCMAKE_VERBOSE_MAKEFILE=ON -- ",
      "string": "py_openmpih1234567_104"
    },
    "extra": {
      "recipe-maintainers": [
        "jrmadsen"
      ]
    },
    "package": {
      "name": "timemory",
      "version": "3.2.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cmake"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "pybind11",
        "pybind11-abi",
        "scikit-build",
        "nccl",
        "mpich",
        "openmpi"
      ],
      "run": [
        "python",
        "six",
        "numpy",
        "pydot",
        "pillow",
        "pandas",
        "matplotlib-base",
        "multiprocess",
        "IPython >=0.13",
        "mpich",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2335961755a304bfc33a8d2427161c13f9592f87ae7a7ae8c901ca41c0127504",
      "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.3.tar.gz"
    },
    "test": {
      "commands": [
        "timemory-python-line-profiler -h",
        "timemory-python-profiler -h",
        "timemory-python-trace -h",
        "timemory-roofline -h",
        "timemory-analyze -h",
        "timemory-plotter -h",
        "timemory-avail -a",
        "timem -h",
        "pytest --timeout=300 --pyargs timemory -k \"not test_mallocp\""
      ],
      "imports": [
        "timemory",
        "timemory.settings",
        "timemory.profiler",
        "timemory.trace",
        "timemory.util"
      ],
      "requires": [
        "pytest",
        "pytest-timeout",
        "mpi4py"
      ],
      "source_files": [
        "timemory/test/*"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "mpich",
        "nccl",
        "openmpi",
        "pip",
        "pybind11",
        "pybind11-abi",
        "python",
        "scikit-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ipython",
        "matplotlib-base",
        "mpich",
        "multiprocess",
        "numpy",
        "openmpi",
        "pandas",
        "pillow",
        "pydot",
        "python",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "mpi4py",
        "pytest",
        "pytest-timeout"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
      "dev_url": "https://github.com/NERSC/timemory",
      "doc_url": "https://timemory.readthedocs.io/",
      "home": "https://github.com/NERSC/timemory",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Lightweight performance analysis toolkit and suite of tools"
    },
    "build": {
      "number": "4",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt -G \"NMake Makefiles\" --cxx-standard=14 --enable-portable --enable-shared-libs --disable-cuda --disable-nccl --disable-mpi --disable-c --disable-fortran --disable-ert --disable-develop --disable-static-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-cupti --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -DCMAKE_VERBOSE_MAKEFILE=ON -- ",
      "string": "pyh1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "jrmadsen"
      ]
    },
    "package": {
      "name": "timemory",
      "version": "3.2.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cmake"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "pybind11",
        "pybind11-abi",
        "scikit-build",
        "nccl",
        "mpich",
        "openmpi"
      ],
      "run": [
        "python",
        "six",
        "numpy",
        "pydot",
        "pillow",
        "pandas",
        "matplotlib-base",
        "multiprocess",
        "IPython >=0.13",
        "mpich",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2335961755a304bfc33a8d2427161c13f9592f87ae7a7ae8c901ca41c0127504",
      "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.3.tar.gz"
    },
    "test": {
      "commands": [
        "timemory-python-line-profiler -h",
        "timemory-python-profiler -h",
        "timemory-python-trace -h",
        "timemory-roofline -h",
        "timemory-analyze -h",
        "timemory-plotter -h",
        "timemory-avail -a",
        "timem -h",
        "pytest --timeout=300 --pyargs timemory -k \"not test_mallocp\""
      ],
      "imports": [
        "timemory",
        "timemory.settings",
        "timemory.profiler",
        "timemory.trace",
        "timemory.util"
      ],
      "requires": null,
      "source_files": [
        "timemory/test/*"
      ]
    }
  },
  "name": "timemory",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
      "dev_url": "https://github.com/NERSC/timemory",
      "doc_url": "https://timemory.readthedocs.io/",
      "home": "https://github.com/NERSC/timemory",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Lightweight performance analysis toolkit and suite of tools"
    },
    "build": {
      "number": "4",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt -G \"NMake Makefiles\" --cxx-standard=14 --enable-portable --enable-shared-libs --disable-cuda --disable-nccl --disable-mpi --disable-c --disable-fortran --disable-ert --disable-develop --disable-static-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-cupti --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -DCMAKE_VERBOSE_MAKEFILE=ON -- ",
      "string": "pyh1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "jrmadsen"
      ]
    },
    "package": {
      "name": "timemory",
      "version": "3.2.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "pybind11",
        "pybind11-abi",
        "scikit-build"
      ],
      "run": [
        "python",
        "six",
        "numpy",
        "pydot",
        "pillow",
        "pandas",
        "matplotlib-base",
        "multiprocess",
        "IPython >=0.13"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2335961755a304bfc33a8d2427161c13f9592f87ae7a7ae8c901ca41c0127504",
      "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.3.tar.gz"
    },
    "test": {
      "commands": [
        "timemory-python-line-profiler -h",
        "timemory-python-profiler -h",
        "timemory-python-trace -h",
        "timemory-roofline -h",
        "timemory-analyze -h",
        "timemory-plotter -h",
        "timemory-avail -a",
        "timem -h"
      ],
      "imports": [
        "timemory",
        "timemory.settings",
        "timemory.profiler",
        "timemory.trace",
        "timemory.util"
      ],
      "requires": null,
      "source_files": [
        "timemory/test/*"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "pip",
        "pybind11",
        "pybind11-abi",
        "python",
        "scikit-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ipython",
        "matplotlib-base",
        "multiprocess",
        "numpy",
        "pandas",
        "pillow",
        "pydot",
        "python",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "timemory"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/timemory.json"
  },
  "raw_meta_yaml": "{% set name = \"timemory\" %}\n{% set version = \"3.2.3\" %}\n{% set build = 4 %}\n\n{% set generator = \"Unix Makefiles\" %}    # [not win]\n{% set generator = \"NMake Makefiles\" %}   # [win]\n\n{% set cmake_args = \"-DCMAKE_CUDA_STANDARD=14\" %}   # [cuda_compiler_version != \"None\"]\n{% set cmake_args = \"\" %}                           # [cuda_compiler_version == \"None\"]\n\n{% set generator_args = \"-j2\" %}  # [osx]\n{% set generator_args = \"-j1\" %}  # [linux]\n{% set generator_args = \"\" %}     # [win]\n\n{% set cxx_standard = \"17\" %}     # [not osx and cuda_compiler_version == \"None\"]\n{% set cxx_standard = \"14\" %}     # [osx or cuda_compiler_version != \"None\"]\n\n# Set MPI related variables\n{% if mpi != \"nompi\" %}\n  {% set mpi_build_prefix = \"_\" + mpi|string %}\n  {% set mpi_args = \"--enable-mpi\" %}\n  {% set build = build + 100 %}\n{% else %}\n  {% set mpi_build_prefix = \"\" %}\n  {% set mpi_args = \"--disable-mpi\" %}\n{% endif %}\n\n# Set CUDA related variables\n{% if cuda_compiler_version != \"None\" %}\n  {% set cuda_build_prefix = \"_cuda\" + cuda_compiler_version|string %}\n  {% set cuda_args = \"--enable-cuda --enable-nccl\" %}\n  {% set build = build + 1000 %}\n{% else %}\n  {% set cuda_build_prefix = \"\" %}\n  {% set cuda_args = \"--disable-cuda --disable-nccl\" %}\n{% endif %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 2335961755a304bfc33a8d2427161c13f9592f87ae7a7ae8c901ca41c0127504\n\nbuild:\n  number: {{ build }}\n  string: \"py{{ py }}{{ mpi_build_prefix }}{{ cuda_build_prefix }}h{{ PKG_HASH }}_{{ build }}\"\n  script: \"{{ PYTHON }} setup.py install --single-version-externally-managed --record record.txt \\\n    -G \\\"{{ generator }}\\\" \\\n    --cxx-standard={{ cxx_standard }} \\\n    --enable-portable \\\n    --enable-shared-libs \\\n    {{ cuda_args }} \\\n    {{ mpi_args }} \\\n    --disable-c \\\n    --disable-fortran \\\n    --disable-ert \\\n    --disable-develop \\\n    --disable-static-libs \\\n    --disable-unity-build \\\n    --disable-require-packages \\\n    --disable-ompt \\\n    --disable-cupti \\\n    --disable-upcxx \\\n    --disable-kokkos \\\n    --disable-caliper \\\n    --disable-dyninst \\\n    --disable-gperftools \\\n    --disable-compiler-instrumentation \\\n    --disable-install-rpath-use-link-path \\\n    --skip-generator-test \\\n    -- {{ cmake_args }} \\\n       -DCMAKE_VERBOSE_MAKEFILE=ON \\\n    -- {{ generator_args }}\"\n  skip: true                  # [(x86 and not x86_64) or (osx and py==36)]\n  skip: true  # [win and cuda_compiler_version != \"None\"]\n\nrequirements:\n  build:\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - {{ compiler(\"cuda\") }}  # [linux and cuda_compiler_version != \"None\"]\n    - cmake\n  host:\n    - python\n    - pip\n    - cython\n    - pybind11\n    - pybind11-abi\n    - scikit-build\n    - nccl                    # [linux and cuda_compiler_version != \"None\"]\n    - {{ mpi }}               # [linux and mpi != \"nompi\"]\n  run:\n    - python\n    - six\n    - numpy\n    - pydot\n    - pillow\n    - pandas\n    - matplotlib-base\n    - multiprocess\n    - IPython >=0.13\n    - {{ mpi }}               # [linux and mpi != \"nompi\"]\n\ntest:\n  imports:\n    - timemory\n    - timemory.settings\n    - timemory.profiler\n    - timemory.trace\n    - timemory.util\n  requires:\n    - pytest                  # [linux]\n    - pytest-timeout          # [linux]\n    - mpi4py                  # [linux and mpi != \"nompi\" and mpi != \"openmpi\"]\n  source_files:\n    - timemory/test/*\n  commands:\n    - timemory-python-line-profiler -h\n    - timemory-python-profiler -h\n    - timemory-python-trace -h\n    - timemory-roofline -h\n    - timemory-analyze -h\n    - timemory-plotter -h\n    - timemory-avail -a\n    - timem -h                                                        # [not win]\n    - pytest --timeout=300 --pyargs timemory -k \"not test_mallocp\"    # [linux]\n    # skip pytest for windows and osx. Tend to have spurious failures due to other builds\n\nabout:\n  home: https://github.com/NERSC/timemory\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Lightweight performance analysis toolkit and suite of tools\n  description: |\n    Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\n    Timemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\n    which can inter-weaved and without nesting restrictions.\n  doc_url: https://timemory.readthedocs.io/\n  dev_url: https://github.com/NERSC/timemory\n\nextra:\n  recipe-maintainers:\n    - jrmadsen\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cmake",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "cython",
      "ipython",
      "matplotlib-base",
      "mpich",
      "multiprocess",
      "nccl",
      "numpy",
      "openmpi",
      "pandas",
      "pillow",
      "pip",
      "pybind11",
      "pybind11-abi",
      "pydot",
      "python",
      "scikit-build",
      "six"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "cython",
        "mpich",
        "nccl",
        "openmpi",
        "pip",
        "pybind11",
        "pybind11-abi",
        "python",
        "scikit-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ipython",
        "matplotlib-base",
        "mpich",
        "multiprocess",
        "numpy",
        "openmpi",
        "pandas",
        "pillow",
        "pydot",
        "python",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "mpich",
        "nccl",
        "openmpi",
        "pip",
        "pybind11",
        "pybind11-abi",
        "python",
        "scikit-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "IPython >=0.13",
        "matplotlib-base",
        "mpich",
        "multiprocess",
        "numpy",
        "openmpi",
        "pandas",
        "pillow",
        "pydot",
        "python",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.3.tar.gz",
  "version": "3.2.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/timemory.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Lightweight, cross-language utility for recording timing, memory, resource usage, and hardware counters on the CPU and GPU.\nTimemory provides 40+ metrics for C, C++, CUDA, and/or Python codes that can arbitrarily composed into distinct toolsets\nwhich can inter-weaved and without nesting restrictions.\n",
      "dev_url": "https://github.com/NERSC/timemory",
      "doc_url": "https://timemory.readthedocs.io/",
      "home": "https://github.com/NERSC/timemory",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Lightweight performance analysis toolkit and suite of tools"
    },
    "build": {
      "number": "4",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt -G \"NMake Makefiles\" --cxx-standard=14 --enable-portable --enable-shared-libs --disable-cuda --disable-nccl --disable-mpi --disable-c --disable-fortran --disable-ert --disable-develop --disable-static-libs --disable-unity-build --disable-require-packages --disable-ompt --disable-cupti --disable-upcxx --disable-kokkos --disable-caliper --disable-dyninst --disable-gperftools --disable-compiler-instrumentation --disable-install-rpath-use-link-path --skip-generator-test --  -DCMAKE_VERBOSE_MAKEFILE=ON -- ",
      "string": "pyh1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "jrmadsen"
      ]
    },
    "package": {
      "name": "timemory",
      "version": "3.2.3"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "pybind11",
        "pybind11-abi",
        "scikit-build"
      ],
      "run": [
        "python",
        "six",
        "numpy",
        "pydot",
        "pillow",
        "pandas",
        "matplotlib-base",
        "multiprocess",
        "IPython >=0.13"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2335961755a304bfc33a8d2427161c13f9592f87ae7a7ae8c901ca41c0127504",
      "url": "https://pypi.io/packages/source/t/timemory/timemory-3.2.3.tar.gz"
    },
    "test": {
      "commands": [
        "timemory-python-line-profiler -h",
        "timemory-python-profiler -h",
        "timemory-python-trace -h",
        "timemory-roofline -h",
        "timemory-analyze -h",
        "timemory-plotter -h",
        "timemory-avail -a"
      ],
      "imports": [
        "timemory",
        "timemory.settings",
        "timemory.profiler",
        "timemory.trace",
        "timemory.util"
      ],
      "requires": null,
      "source_files": [
        "timemory/test/*"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "pip",
        "pybind11",
        "pybind11-abi",
        "python",
        "scikit-build"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ipython",
        "matplotlib-base",
        "multiprocess",
        "numpy",
        "pandas",
        "pillow",
        "pydot",
        "python",
        "six"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}