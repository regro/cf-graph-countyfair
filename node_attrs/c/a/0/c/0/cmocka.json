{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "cmocka",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "cmocka is an elegant unit testing framework for C with support\nfor mock objects. It only requires the standard C library,\nworks on a range of computing platforms (including embedded)\nand with different compilers.\n",
      "dev_url": "https://gitlab.com/cmocka/cmocka",
      "home": "https://cmocka.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "COPYING",
      "summary": "An elegant unit testing framework for C with support for mock objects."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "cmocka"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk"
      ]
    },
    "package": {
      "name": "cmocka",
      "version": "1.1.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "58435b558766d7f4c729ba163bdf3aec38bed3bc766dab684e3526ed0aa7c780",
      "url": "https://cmocka.org/files/1.1/cmocka-1.1.8.tar.xz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcmocka${SHLIB_EXT}",
        "test -f $PREFIX/lib/libcmocka${SHLIB_EXT}.0.8.1",
        "test -f $PREFIX/include/cmocka.h"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "cmocka is an elegant unit testing framework for C with support\nfor mock objects. It only requires the standard C library,\nworks on a range of computing platforms (including embedded)\nand with different compilers.\n",
      "dev_url": "https://gitlab.com/cmocka/cmocka",
      "home": "https://cmocka.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "COPYING",
      "summary": "An elegant unit testing framework for C with support for mock objects."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "cmocka"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk"
      ]
    },
    "package": {
      "name": "cmocka",
      "version": "1.1.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "58435b558766d7f4c729ba163bdf3aec38bed3bc766dab684e3526ed0aa7c780",
      "url": "https://cmocka.org/files/1.1/cmocka-1.1.8.tar.xz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcmocka${SHLIB_EXT}",
        "test -f $PREFIX/lib/libcmocka${SHLIB_EXT}.0.8.1",
        "test -f $PREFIX/include/cmocka.h",
        "test -f $PREFIX/lib/libcmocka.0.8.1${SHLIB_EXT}",
        "if not exist %LIBRARY_BIN%\\\\cmocka.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\cmocka.lib exit 1",
        "if not exist %LIBRARY_INC%\\\\cmocka.h exit 1"
      ]
    }
  },
  "name": "cmocka",
  "osx_64_meta_yaml": {
    "about": {
      "description": "cmocka is an elegant unit testing framework for C with support\nfor mock objects. It only requires the standard C library,\nworks on a range of computing platforms (including embedded)\nand with different compilers.\n",
      "dev_url": "https://gitlab.com/cmocka/cmocka",
      "home": "https://cmocka.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "COPYING",
      "summary": "An elegant unit testing framework for C with support for mock objects."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "cmocka"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk"
      ]
    },
    "package": {
      "name": "cmocka",
      "version": "1.1.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "58435b558766d7f4c729ba163bdf3aec38bed3bc766dab684e3526ed0aa7c780",
      "url": "https://cmocka.org/files/1.1/cmocka-1.1.8.tar.xz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libcmocka${SHLIB_EXT}",
        "test -f $PREFIX/lib/libcmocka.0.8.1${SHLIB_EXT}",
        "test -f $PREFIX/include/cmocka.h"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cmocka"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cmocka.json"
  },
  "raw_meta_yaml": "{% set name = \"cmocka\" %}\n{% set version = \"1.1.8\" %}\n{% set version_major_minor = \".\".join(version.split('.')[:2]) %}\n{% set so_version = \"0.8.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://cmocka.org/files/{{ version_major_minor }}/{{ name }}-{{ version }}.tar.xz\n  sha256: 58435b558766d7f4c729ba163bdf3aec38bed3bc766dab684e3526ed0aa7c780\n\nbuild:\n  number: 0\n  run_exports:\n    # No correlation between library name and\n    # so names\n    # https://gitlab.com/cmocka/cmocka/-/issues/43\n    - {{ pin_subpackage(name, max_pin='x.x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make   # [unix]\n    - ninja  # [not unix]\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libcmocka${SHLIB_EXT}  # [unix]\n    - test -f $PREFIX/lib/libcmocka${SHLIB_EXT}.{{ so_version }}  # [linux]\n    - test -f $PREFIX/lib/libcmocka.{{ so_version }}${SHLIB_EXT}  # [osx]\n    - test -f $PREFIX/include/cmocka.h      # [unix]\n    - if not exist %LIBRARY_BIN%\\\\cmocka.dll exit 1   # [win]\n    - if not exist %LIBRARY_LIB%\\\\cmocka.lib exit 1   # [win]\n    - if not exist %LIBRARY_INC%\\\\cmocka.h exit 1     # [win]\n\nabout:\n  home: https://cmocka.org/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: COPYING\n  summary: An elegant unit testing framework for C with support for mock objects.\n\n  description: |\n    cmocka is an elegant unit testing framework for C with support \n    for mock objects. It only requires the standard C library, \n    works on a range of computing platforms (including embedded) \n    and with different compilers.\n\n  dev_url: https://gitlab.com/cmocka/cmocka\nextra:\n  recipe-maintainers:\n    - hmaarrfk\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "make",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://cmocka.org/files/1.1/cmocka-1.1.8.tar.xz",
  "version": "1.1.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cmocka.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "cmocka is an elegant unit testing framework for C with support\nfor mock objects. It only requires the standard C library,\nworks on a range of computing platforms (including embedded)\nand with different compilers.\n",
      "dev_url": "https://gitlab.com/cmocka/cmocka",
      "home": "https://cmocka.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "COPYING",
      "summary": "An elegant unit testing framework for C with support for mock objects."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "cmocka"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "hmaarrfk"
      ]
    },
    "package": {
      "name": "cmocka",
      "version": "1.1.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "58435b558766d7f4c729ba163bdf3aec38bed3bc766dab684e3526ed0aa7c780",
      "url": "https://cmocka.org/files/1.1/cmocka-1.1.8.tar.xz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_BIN%\\\\cmocka.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\cmocka.lib exit 1",
        "if not exist %LIBRARY_INC%\\\\cmocka.h exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}