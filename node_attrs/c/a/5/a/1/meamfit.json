{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "69ef139288300ecf634d7f5d806ec4c1bb74663a",
  "feedstock_hash_ts": 1730864242,
  "feedstock_name": "meamfit",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Open-source MEAMfit2 code for fitting RF-MEAM (or EAM) potentials to VASP\nor CASTEP output data, to generate potentials that can be run using LAMMPS.\n",
      "dev_url": "https://gitlab.com/AndyDuff123/meamfit",
      "doc_url": "https://gitlab.com/AndyDuff123/meamfit",
      "home": "https://gitlab.com/AndyDuff123/meamfit",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A Fortran code to fit reference-free modified embedded atom method (RF-MEAM) interatomic potentials to density functional theory (DFT) data (VASP or CASTEP)."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "meamfit",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack"
      ],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7362bf145fd9de0f7842c80887e7630cbe6928c8bf3e45fe5ff6f18e0d8e507f",
      "url": "https://gitlab.com/AndyDuff123/meamfit/-/archive/4f66fd6bd6dea1066336e7e10ad7c1db132511b9/meamfit-4f66fd6bd6dea1066336e7e10ad7c1db132511b9.tar.gz"
    },
    "test": {
      "commands": [
        "MEAMfit.x --help"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Open-source MEAMfit2 code for fitting RF-MEAM (or EAM) potentials to VASP\nor CASTEP output data, to generate potentials that can be run using LAMMPS.\n",
      "dev_url": "https://gitlab.com/AndyDuff123/meamfit",
      "doc_url": "https://gitlab.com/AndyDuff123/meamfit",
      "home": "https://gitlab.com/AndyDuff123/meamfit",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A Fortran code to fit reference-free modified embedded atom method (RF-MEAM) interatomic potentials to density functional theory (DFT) data (VASP or CASTEP)."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "meamfit",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack"
      ],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7362bf145fd9de0f7842c80887e7630cbe6928c8bf3e45fe5ff6f18e0d8e507f",
      "url": "https://gitlab.com/AndyDuff123/meamfit/-/archive/4f66fd6bd6dea1066336e7e10ad7c1db132511b9/meamfit-4f66fd6bd6dea1066336e7e10ad7c1db132511b9.tar.gz"
    },
    "test": {
      "commands": [
        "MEAMfit.x --help"
      ]
    }
  },
  "name": "meamfit",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Open-source MEAMfit2 code for fitting RF-MEAM (or EAM) potentials to VASP\nor CASTEP output data, to generate potentials that can be run using LAMMPS.\n",
      "dev_url": "https://gitlab.com/AndyDuff123/meamfit",
      "doc_url": "https://gitlab.com/AndyDuff123/meamfit",
      "home": "https://gitlab.com/AndyDuff123/meamfit",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "A Fortran code to fit reference-free modified embedded atom method (RF-MEAM) interatomic potentials to density functional theory (DFT) data (VASP or CASTEP)."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen"
      ]
    },
    "package": {
      "name": "meamfit",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "libblas",
        "liblapack"
      ],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "7362bf145fd9de0f7842c80887e7630cbe6928c8bf3e45fe5ff6f18e0d8e507f",
      "url": "https://gitlab.com/AndyDuff123/meamfit/-/archive/4f66fd6bd6dea1066336e7e10ad7c1db132511b9/meamfit-4f66fd6bd6dea1066336e7e10ad7c1db132511b9.tar.gz"
    },
    "test": {
      "commands": [
        "MEAMfit.x --help"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "meamfit"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/meamfit.json"
  },
  "raw_meta_yaml": "{% set name = \"meamfit\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/AndyDuff123/meamfit/-/archive/4f66fd6bd6dea1066336e7e10ad7c1db132511b9/meamfit-4f66fd6bd6dea1066336e7e10ad7c1db132511b9.tar.gz\n  sha256: 7362bf145fd9de0f7842c80887e7630cbe6928c8bf3e45fe5ff6f18e0d8e507f\n\nbuild:\n  number: 0\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('fortran') }}\n    - make\n  host:\n    - {{ mpi }}\n    - libblas\n    - liblapack\n  run:\n\ntest:\n  commands:\n    - MEAMfit.x --help\n\nabout:\n  home: https://gitlab.com/AndyDuff123/meamfit\n  summary: 'A Fortran code to fit reference-free modified embedded atom method (RF-MEAM) interatomic potentials to density functional theory (DFT) data (VASP or CASTEP).'\n  description: |\n    Open-source MEAMfit2 code for fitting RF-MEAM (or EAM) potentials to VASP\n    or CASTEP output data, to generate potentials that can be run using LAMMPS.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: https://gitlab.com/AndyDuff123/meamfit\n  dev_url: https://gitlab.com/AndyDuff123/meamfit\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
  "req": {
    "__set__": true,
    "elements": [
      "fortran_compiler_stub",
      "libblas",
      "liblapack",
      "make",
      "mpich"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub",
        "libblas",
        "liblapack",
        "mpich"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "mpich"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://gitlab.com/AndyDuff123/meamfit/-/archive/4f66fd6bd6dea1066336e7e10ad7c1db132511b9/meamfit-4f66fd6bd6dea1066336e7e10ad7c1db132511b9.tar.gz",
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/meamfit.json"
  }
}