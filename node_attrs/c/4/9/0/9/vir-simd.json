{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "azure",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "b2851298dd76181e85a96694d04fbf43a5223c42",
  "feedstock_hash_ts": 1751498426,
  "feedstock_name": "vir-simd",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      },
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      },
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      },
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      },
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      },
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "name": "vir-simd",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "vir-simd"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/vir-simd.json"
  },
  "raw_meta_yaml": "context:\n  name: vir-simd\n  version: \"0.4.4\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/mattkretz/vir-simd/archive/v${{ version }}.tar.gz\n  sha256: 0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - ${{ compiler('cxx') }}\n    - ${{ stdlib('c') }}\n    - cmake\n    - if: unix\n      then: make\n    - if: win\n      then: ninja\n\ntests:\n  - package_contents:\n      include:\n        - vir/simd.h\n      files:\n        - ${{ \"Library/\" if win else \"\" }}lib/cmake/vir-simd/vir-simd-config.cmake\n\nabout:\n  homepage: https://mattkretz.github.io/vir-simd/master/\n  summary: 'A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features.'\n  description: |\n    This project aims to provide a fallback std::experimental::simd\n    (Parallelism TS 2) implementation with additional features. Not\n    every user can rely on GCC 11+ and its standard library to be\n    present on all target systems. Therefore, the header vir/simd.h\n    provides a fallback implementation of the TS specification that\n    only implements the scalar and fixed_size<N> ABI tags. Thus,\n    your code can still compile and run correctly, even if it is\n    missing the performance gains a proper implementation provides.\n  license: LGPL-3.0-or-later\n  license_file: LICENSE\n  documentation: https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents\n  repository: https://github.com/mattkretz/vir-simd\n\nextra:\n  recipe-maintainers:\n    - ax3l\n    - mattkretz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz",
  "version": "0.4.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/vir-simd.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This project aims to provide a fallback std::experimental::simd\n(Parallelism TS 2) implementation with additional features. Not\nevery user can rely on GCC 11+ and its standard library to be\npresent on all target systems. Therefore, the header vir/simd.h\nprovides a fallback implementation of the TS specification that\nonly implements the scalar and fixed_size<N> ABI tags. Thus,\nyour code can still compile and run correctly, even if it is\nmissing the performance gains a proper implementation provides.",
      "dev_url": "https://github.com/mattkretz/vir-simd",
      "doc_url": "https://github.com/mattkretz/vir-simd?tab=readme-ov-file#table-of-contents",
      "home": "https://mattkretz.github.io/vir-simd/master/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A fallback std::experimental::simd (Parallelism TS 2) implementation with additional features."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ax3l",
        "mattkretz"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "vir-simd",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/vir-simd/vir-simd-config.cmake"
              ],
              "include": [
                "vir/simd.h"
              ]
            }
          }
        ],
        "version": "0.4.4"
      }
    ],
    "package": {
      "name": "vir-simd",
      "version": "0.4.4"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "0d2953e1219798967b156aa392de6430099d85887770e5c81aefe8fb63e9464c",
      "url": "https://github.com/mattkretz/vir-simd/archive/v0.4.4.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}