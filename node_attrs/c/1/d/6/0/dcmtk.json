{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "dcmtk",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "test -f $PREFIX/include/dcmtk/ofstd/ofstd.h",
        "test -f $PREFIX/lib/libofstd.so.17",
        "test -f $PREFIX/lib/liboflog.so.17",
        "test -f $PREFIX/lib/libdcmdata.so.17",
        "test -f $PREFIX/lib/libi2d.so.17",
        "test -f $PREFIX/lib/libdcmimgle.so.17",
        "test -f $PREFIX/lib/libdcmimage.so.17",
        "test -f $PREFIX/lib/libijg8.so.17",
        "test -f $PREFIX/lib/libijg12.so.17",
        "test -f $PREFIX/lib/libijg16.so.17",
        "test -f $PREFIX/lib/libdcmjpeg.so.17",
        "test -f $PREFIX/lib/libdcmtkcharls.so.17",
        "test -f $PREFIX/lib/libdcmjpls.so.17",
        "test -f $PREFIX/lib/libdcmnet.so.17",
        "test -f $PREFIX/lib/libdcmtls.so.17",
        "test -f $PREFIX/lib/libdcmsr.so.17",
        "test -f $PREFIX/lib/libcmr.so.17",
        "test -f $PREFIX/lib/libdcmdsig.so.17",
        "test -f $PREFIX/lib/libdcmwlm.so.17",
        "test -f $PREFIX/lib/libdcmqrdb.so.17",
        "test -f $PREFIX/lib/libdcmpstat.so.17",
        "test -f $PREFIX/lib/libdcmrt.so.17",
        "test -f $PREFIX/lib/libdcmiod.so.17",
        "test -f $PREFIX/lib/libdcmfg.so.17",
        "test -f $PREFIX/lib/libdcmseg.so.17",
        "test -f $PREFIX/lib/libdcmtract.so.17",
        "test -f $PREFIX/lib/libdcmpmap.so.17",
        "test -f $PREFIX/lib/libdcmect.so.17",
        "test -f $PREFIX/lib/pkgconfig/dcmtk.pc",
        "test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "test -f $PREFIX/include/dcmtk/ofstd/ofstd.h",
        "test -f $PREFIX/lib/libofstd.so.17",
        "test -f $PREFIX/lib/liboflog.so.17",
        "test -f $PREFIX/lib/libdcmdata.so.17",
        "test -f $PREFIX/lib/libi2d.so.17",
        "test -f $PREFIX/lib/libdcmimgle.so.17",
        "test -f $PREFIX/lib/libdcmimage.so.17",
        "test -f $PREFIX/lib/libijg8.so.17",
        "test -f $PREFIX/lib/libijg12.so.17",
        "test -f $PREFIX/lib/libijg16.so.17",
        "test -f $PREFIX/lib/libdcmjpeg.so.17",
        "test -f $PREFIX/lib/libdcmtkcharls.so.17",
        "test -f $PREFIX/lib/libdcmjpls.so.17",
        "test -f $PREFIX/lib/libdcmnet.so.17",
        "test -f $PREFIX/lib/libdcmtls.so.17",
        "test -f $PREFIX/lib/libdcmsr.so.17",
        "test -f $PREFIX/lib/libcmr.so.17",
        "test -f $PREFIX/lib/libdcmdsig.so.17",
        "test -f $PREFIX/lib/libdcmwlm.so.17",
        "test -f $PREFIX/lib/libdcmqrdb.so.17",
        "test -f $PREFIX/lib/libdcmpstat.so.17",
        "test -f $PREFIX/lib/libdcmrt.so.17",
        "test -f $PREFIX/lib/libdcmiod.so.17",
        "test -f $PREFIX/lib/libdcmfg.so.17",
        "test -f $PREFIX/lib/libdcmseg.so.17",
        "test -f $PREFIX/lib/libdcmtract.so.17",
        "test -f $PREFIX/lib/libdcmpmap.so.17",
        "test -f $PREFIX/lib/libdcmect.so.17",
        "test -f $PREFIX/lib/pkgconfig/dcmtk.pc",
        "test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "test -f $PREFIX/include/dcmtk/ofstd/ofstd.h",
        "test -f $PREFIX/lib/libofstd.so.17",
        "test -f $PREFIX/lib/liboflog.so.17",
        "test -f $PREFIX/lib/libdcmdata.so.17",
        "test -f $PREFIX/lib/libi2d.so.17",
        "test -f $PREFIX/lib/libdcmimgle.so.17",
        "test -f $PREFIX/lib/libdcmimage.so.17",
        "test -f $PREFIX/lib/libijg8.so.17",
        "test -f $PREFIX/lib/libijg12.so.17",
        "test -f $PREFIX/lib/libijg16.so.17",
        "test -f $PREFIX/lib/libdcmjpeg.so.17",
        "test -f $PREFIX/lib/libdcmtkcharls.so.17",
        "test -f $PREFIX/lib/libdcmjpls.so.17",
        "test -f $PREFIX/lib/libdcmnet.so.17",
        "test -f $PREFIX/lib/libdcmtls.so.17",
        "test -f $PREFIX/lib/libdcmsr.so.17",
        "test -f $PREFIX/lib/libcmr.so.17",
        "test -f $PREFIX/lib/libdcmdsig.so.17",
        "test -f $PREFIX/lib/libdcmwlm.so.17",
        "test -f $PREFIX/lib/libdcmqrdb.so.17",
        "test -f $PREFIX/lib/libdcmpstat.so.17",
        "test -f $PREFIX/lib/libdcmrt.so.17",
        "test -f $PREFIX/lib/libdcmiod.so.17",
        "test -f $PREFIX/lib/libdcmfg.so.17",
        "test -f $PREFIX/lib/libdcmseg.so.17",
        "test -f $PREFIX/lib/libdcmtract.so.17",
        "test -f $PREFIX/lib/libdcmpmap.so.17",
        "test -f $PREFIX/lib/libdcmect.so.17",
        "test -f $PREFIX/lib/pkgconfig/dcmtk.pc",
        "test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch",
        "patches/0001-link-to-TIFF-tiff-directly.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "test -f $PREFIX/include/dcmtk/ofstd/ofstd.h",
        "test -f $PREFIX/lib/libofstd.so.17",
        "test -f $PREFIX/lib/liboflog.so.17",
        "test -f $PREFIX/lib/libdcmdata.so.17",
        "test -f $PREFIX/lib/libi2d.so.17",
        "test -f $PREFIX/lib/libdcmimgle.so.17",
        "test -f $PREFIX/lib/libdcmimage.so.17",
        "test -f $PREFIX/lib/libijg8.so.17",
        "test -f $PREFIX/lib/libijg12.so.17",
        "test -f $PREFIX/lib/libijg16.so.17",
        "test -f $PREFIX/lib/libdcmjpeg.so.17",
        "test -f $PREFIX/lib/libdcmtkcharls.so.17",
        "test -f $PREFIX/lib/libdcmjpls.so.17",
        "test -f $PREFIX/lib/libdcmnet.so.17",
        "test -f $PREFIX/lib/libdcmtls.so.17",
        "test -f $PREFIX/lib/libdcmsr.so.17",
        "test -f $PREFIX/lib/libcmr.so.17",
        "test -f $PREFIX/lib/libdcmdsig.so.17",
        "test -f $PREFIX/lib/libdcmwlm.so.17",
        "test -f $PREFIX/lib/libdcmqrdb.so.17",
        "test -f $PREFIX/lib/libdcmpstat.so.17",
        "test -f $PREFIX/lib/libdcmrt.so.17",
        "test -f $PREFIX/lib/libdcmiod.so.17",
        "test -f $PREFIX/lib/libdcmfg.so.17",
        "test -f $PREFIX/lib/libdcmseg.so.17",
        "test -f $PREFIX/lib/libdcmtract.so.17",
        "test -f $PREFIX/lib/libdcmpmap.so.17",
        "test -f $PREFIX/lib/libdcmect.so.17",
        "test -f $PREFIX/lib/pkgconfig/dcmtk.pc",
        "test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake",
        "if not exist %LIBRARY_INC%\\\\dcmtk\\\\ofstd\\\\ofstd.h exit 1",
        "if not exist %LIBRARY_BIN%\\\\ofstd.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ofstd.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\oflog.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\oflog.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmdata.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmdata.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\i2d.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\i2d.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmimgle.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmimgle.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmimage.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmimage.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg8.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg8.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg12.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg12.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg16.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg16.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmjpeg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmjpeg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtkcharls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtkcharls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmjpls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmjpls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmnet.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmnet.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmsr.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmsr.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\cmr.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\cmr.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmdsig.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmdsig.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmwlm.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmwlm.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmqrdb.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmqrdb.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmpstat.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmpstat.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmrt.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmrt.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmiod.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmiod.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmfg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmfg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmseg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmseg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtract.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtract.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmpmap.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmpmap.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmect.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmect.lib exit 1",
        "if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\dcmtk.pc exit 1",
        "if not exist %LIBRARY_PREFIX%\\\\cmake\\\\DCMTKConfig.cmake exit 1"
      ]
    }
  },
  "name": "dcmtk",
  "osx_64_meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "test -f $PREFIX/include/dcmtk/ofstd/ofstd.h",
        "test -f $PREFIX/lib/pkgconfig/dcmtk.pc",
        "test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "dcmtk"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/dcmtk.json"
  },
  "raw_meta_yaml": "{% set name = \"DCMTK\" %}\n{% set version = \"3.6.7\" %}\n{% set libraries = [\n  \"ofstd\", \"oflog\", \"dcmdata\", \"i2d\", \"dcmimgle\", \"dcmimage\", \"ijg8\", \"ijg12\",\n  \"ijg16\", \"dcmjpeg\", \"dcmtkcharls\", \"dcmjpls\", \"dcmnet\", \"dcmtls\", \"dcmsr\",\n  \"cmr\", \"dcmdsig\", \"dcmwlm\", \"dcmqrdb\", \"dcmpstat\", \"dcmrt\", \"dcmiod\",\n  \"dcmfg\", \"dcmseg\", \"dcmtract\", \"dcmpmap\", \"dcmect\" ]\n%}\n{% set SO_MAJOR = \"17\" %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://dicom.offis.de/download/dcmtk/dcmtk{{ version | replace('.','') }}/dcmtk-{{ version }}.tar.gz\n  sha256: 7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a\n  patches:\n    # CMake doesn't add tiff library to linker on windows for some reason; apply the patch\n    # only on windows because either style is incompatible for the other platforms, see\n    # https://github.com/conda-forge/libtiff-feedstock/pull/110\n    - patches/0001-link-to-TIFF-tiff-directly.patch  # [win]\n    # a core header (arith.h) needs to be compiled (from arith.cc), based on various CMake tests\n    # (yes, it's upside down world), see CMake/GenerateDCMTKConfigure.cmake in the upstream sources;\n    # because it further tries to be clever in cross-compilation, things hit the wrong architecture\n    # when we compile for osx-arm; instead just use the (already cross-capable) compiler setup to run.\n    - patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch\n\nbuild:\n  number: 6\n  run_exports:\n    - {{ pin_subpackage(name|lower, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - cmake\n    - ninja\n  host:\n    - libpng\n    - libtiff\n    - libxml2\n    - openssl\n    - zlib\n\ntest:\n  commands:\n    - dcmdump --help\n    - test -f $PREFIX/include/dcmtk/ofstd/ofstd.h  # [unix]\n    - if not exist %LIBRARY_INC%\\\\dcmtk\\\\ofstd\\\\ofstd.h exit 1  # [win]\n    {% for library in libraries %}\n    - test -f $PREFIX/lib/lib{{ library }}.so.{{ SO_MAJOR }}  # [linux]\n    - test -f $PREFIX/lib/lib{{ library }}.{{ SO_MAJOR }}.dylib  # [mac]\n    - if not exist %LIBRARY_BIN%\\\\{{ library }}.dll exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\{{ library }}.lib exit 1  # [win]\n    {% endfor %}\n    - test -f $PREFIX/lib/pkgconfig/dcmtk.pc  # [unix]\n    - if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\dcmtk.pc exit 1  # [win]\n    - test -f $PREFIX/lib/cmake/dcmtk/DCMTKConfig.cmake  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\\\cmake\\\\DCMTKConfig.cmake exit 1  # [win]\n\nabout:\n  home: http://dicom.offis.de\n  summary: OFFIS DICOM toolkit\n  description: |\n    DCMTK is a collection of libraries and applications implementing large \n    parts the DICOM standard. It includes software for examining, constructing \n    and converting DICOM image files, handling offline media, sending and \n    receiving images over a network connection, as well as demonstrative image \n    storage and worklist servers. DCMTK is is written in a mixture of ANSI C \n    and C++. \n  license: BSD-3-Clause\n  license_file: COPYRIGHT\n  # can be cloned from https://git.dcmtk.org/dcmtk\n  dev_url: \"https://git.dcmtk.org/\"\n\nextra:\n  recipe-maintainers:\n    - lamyj\n    - martin-g\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libpng",
      "libtiff",
      "libxml2",
      "ninja",
      "openssl",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz",
  "version": "3.6.7",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/dcmtk.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "DCMTK is a collection of libraries and applications implementing large\nparts the DICOM standard. It includes software for examining, constructing\nand converting DICOM image files, handling offline media, sending and\nreceiving images over a network connection, as well as demonstrative image\nstorage and worklist servers. DCMTK is is written in a mixture of ANSI C\nand C++.\n",
      "dev_url": "https://git.dcmtk.org/",
      "home": "http://dicom.offis.de",
      "license": "BSD-3-Clause",
      "license_file": "COPYRIGHT",
      "summary": "OFFIS DICOM toolkit"
    },
    "build": {
      "number": "6",
      "run_exports": [
        "dcmtk"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "lamyj",
        "martin-g"
      ]
    },
    "package": {
      "name": "dcmtk",
      "version": "3.6.7"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-link-to-TIFF-tiff-directly.patch",
        "patches/0002-use-regular-try_run-in-x-compilation-instead-of-hand.patch"
      ],
      "sha256": "7c58298e3e8d60232ee6fc8408cfadd14463cc11a3c4ca4c59af5988c7e9710a",
      "url": "https://dicom.offis.de/download/dcmtk/dcmtk367/dcmtk-3.6.7.tar.gz"
    },
    "test": {
      "commands": [
        "dcmdump --help",
        "if not exist %LIBRARY_INC%\\\\dcmtk\\\\ofstd\\\\ofstd.h exit 1",
        "if not exist %LIBRARY_BIN%\\\\ofstd.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ofstd.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\oflog.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\oflog.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmdata.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmdata.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\i2d.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\i2d.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmimgle.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmimgle.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmimage.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmimage.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg8.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg8.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg12.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg12.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\ijg16.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\ijg16.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmjpeg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmjpeg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtkcharls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtkcharls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmjpls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmjpls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmnet.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmnet.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtls.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtls.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmsr.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmsr.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\cmr.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\cmr.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmdsig.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmdsig.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmwlm.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmwlm.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmqrdb.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmqrdb.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmpstat.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmpstat.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmrt.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmrt.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmiod.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmiod.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmfg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmfg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmseg.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmseg.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmtract.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmtract.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmpmap.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmpmap.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\dcmect.dll exit 1",
        "if not exist %LIBRARY_LIB%\\\\dcmect.lib exit 1",
        "if not exist %LIBRARY_LIB%\\\\pkgconfig\\\\dcmtk.pc exit 1",
        "if not exist %LIBRARY_PREFIX%\\\\cmake\\\\DCMTKConfig.cmake exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpng",
        "libtiff",
        "libxml2",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}