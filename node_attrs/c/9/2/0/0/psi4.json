{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": false
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "cdfa27a952a158037c28260244f700af11b959ab",
  "feedstock_hash_ts": 1757255047,
  "feedstock_name": "psi4",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "llvm-openmp"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *mkl",
        "mkl-devel",
        "mkl",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver",
        "einsums 1.0.6",
        "hdf5",
        "fmt",
        "spdlog",
        "cpptrace",
        "openorbitaloptimizer"
      ],
      "run": [
        "llvm-openmp",
        "libblas * *mkl",
        "mkl",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "qcfractal >=0.60,!=0.62"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $SP_DIR/psi4/core*.so",
        "test -f $SP_DIR/psi4/driver/driver.py",
        "test -f $PREFIX/bin/psi4",
        "psi4 --version",
        "psi4 --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "test -f $PREFIX/include/psi4/psi4-dec.h",
        "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
        "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
        "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
        "ldd -v $SP_DIR/psi4/core*.so",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"",
        "PLUG=plugdfmp2",
        "psi4 --plugin-name $PLUG --plugin-template dfmp2",
        "cd $PLUG && `psi4 --plugin-compile` && make && cd ..",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "adcc",
        "cppe",
        "pyddx",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "pybind11",
        "eigen",
        "libboost-headers"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpptrace",
        "dkh",
        "eigen",
        "einsums",
        "fmt",
        "gau2grid",
        "hdf5",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "libxc-c",
        "mkl",
        "mkl-devel",
        "numpy",
        "openorbitaloptimizer",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "llvm-openmp",
        "mkl",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "llvm-openmp"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *netlib",
        "liblapack * *netlib",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver"
      ],
      "run": [
        "llvm-openmp",
        "libblas",
        "liblapack",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "qcfractal >=0.60,!=0.62"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $SP_DIR/psi4/core*.so",
        "test -f $SP_DIR/psi4/driver/driver.py",
        "test -f $PREFIX/bin/psi4",
        "psi4 --version",
        "psi4 --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "test -f $PREFIX/include/psi4/psi4-dec.h",
        "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
        "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
        "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
        "ldd -v $SP_DIR/psi4/core*.so",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"",
        "PLUG=plugdfmp2",
        "psi4 --plugin-name $PLUG --plugin-template dfmp2",
        "cd $PLUG && `psi4 --plugin-compile` && make && cd ..",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "adcc",
        "cppe",
        "pyddx",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "pybind11",
        "eigen",
        "libboost-headers"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "dkh",
        "eigen",
        "gau2grid",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "liblapack",
        "libxc-c",
        "numpy",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "llvm-openmp",
        "intel-openmp",
        "clangdev 17.0.6"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *mkl",
        "mkl-devel",
        "mkl",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver",
        "einsums 1.0.6",
        "hdf5",
        "fmt",
        "spdlog",
        "cpptrace",
        "openorbitaloptimizer",
        "libblas * *netlib",
        "liblapack * *netlib",
        "intel-openmp"
      ],
      "run": [
        "llvm-openmp",
        "libblas * *mkl",
        "mkl",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "libblas",
        "liblapack",
        "intel-openmp"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "qcfractal >=0.60,!=0.62",
        "libgcc <14.3"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $SP_DIR/psi4/core*.so",
        "test -f $SP_DIR/psi4/driver/driver.py",
        "test -f $PREFIX/bin/psi4",
        "psi4 --version",
        "psi4 --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "test -f $PREFIX/include/psi4/psi4-dec.h",
        "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
        "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
        "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
        "ldd -v $SP_DIR/psi4/core*.so",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"",
        "PLUG=plugdfmp2",
        "psi4 --plugin-name $PLUG --plugin-template dfmp2",
        "cd $PLUG && `psi4 --plugin-compile` && make && cd ..",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\"",
        "otool -L $SP_DIR/psi4/core*.so",
        "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
        "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
        "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
        "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
        "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
        "psi4.exe --version",
        "psi4.exe --module",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
        "psi4 %SP_DIR%\\\\psi4\\\\tests\\\\tu1-h2o-energy\\\\input.dat -o stdout",
        "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\" -k \"not pe_ecp and not cc13\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "adcc",
        "cppe",
        "pyddx",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "pybind11",
        "eigen",
        "libboost-headers"
      ]
    }
  },
  "name": "psi4",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "llvm-openmp"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *mkl",
        "mkl-devel",
        "mkl",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver",
        "einsums 1.0.6",
        "hdf5",
        "fmt",
        "spdlog",
        "cpptrace",
        "openorbitaloptimizer"
      ],
      "run": [
        "llvm-openmp",
        "libblas * *mkl",
        "mkl",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "qcfractal >=0.60,!=0.62"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $SP_DIR/psi4/core*.so",
        "test -f $SP_DIR/psi4/driver/driver.py",
        "test -f $PREFIX/bin/psi4",
        "psi4 --version",
        "psi4 --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "test -f $PREFIX/include/psi4/psi4-dec.h",
        "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
        "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
        "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
        "otool -L $SP_DIR/psi4/core*.so",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"",
        "PLUG=plugdfmp2",
        "psi4 --plugin-name $PLUG --plugin-template dfmp2",
        "cd $PLUG && `psi4 --plugin-compile` && make && cd ..",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "adcc",
        "cppe",
        "pyddx",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "pybind11",
        "eigen",
        "libboost-headers"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpptrace",
        "dkh",
        "eigen",
        "einsums",
        "fmt",
        "gau2grid",
        "hdf5",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "libxc-c",
        "mkl",
        "mkl-devel",
        "numpy",
        "openorbitaloptimizer",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "llvm-openmp",
        "mkl",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "llvm-openmp"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *netlib",
        "liblapack * *netlib",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver",
        "einsums 1.0.6",
        "hdf5",
        "fmt",
        "spdlog",
        "cpptrace",
        "openorbitaloptimizer"
      ],
      "run": [
        "llvm-openmp",
        "libblas",
        "liblapack",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "qcfractal >=0.60,!=0.62"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $SP_DIR/psi4/core*.so",
        "test -f $SP_DIR/psi4/driver/driver.py",
        "test -f $PREFIX/bin/psi4",
        "psi4 --version",
        "psi4 --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "test -f $PREFIX/include/psi4/psi4-dec.h",
        "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
        "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
        "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
        "otool -L $SP_DIR/psi4/core*.so",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"",
        "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"",
        "PLUG=plugdfmp2",
        "psi4 --plugin-name $PLUG --plugin-template dfmp2",
        "cd $PLUG && `psi4 --plugin-compile` && make && cd ..",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2",
        "PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "adcc",
        "cppe",
        "pyddx",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "pybind11",
        "eigen",
        "libboost-headers"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpptrace",
        "dkh",
        "eigen",
        "einsums",
        "fmt",
        "gau2grid",
        "hdf5",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "liblapack",
        "libxc-c",
        "numpy",
        "openorbitaloptimizer",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "psi4"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/psi4.json"
  },
  "raw_meta_yaml": "{% set name = \"psi4\" %}\n{% set version = \"1.10\" %}\n{% set commit = \"f2492db10\" %}\n{% set sha256 = \"2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4\" %}\n\n# versioning: want conda package and `psi4 --version` to match\n# * proper tagged releases compute their versions consistent with recipe w/o interventions.\n#   so comment out the \"echo ... metadata.py\" cmds in build.sh and bld.bat. (\"commit\" var here also disposable.)\n# * to package _any_ commit, set it to \"commit\" jinja, set \"version\" jinja to a fake prerelease tag like \"1.8a3\", use the \"commit\" version for source/url, edit the sha256, and let the \"echo ... metadata.py\" machinery work.\n#   note that the non-c-f recipe didn't need this machinery b/c it used source/git_url and load_setup_py_data.\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  #url: https://github.com/{{ name }}/{{ name }}/archive/{{ commit }}.tar.gz\n  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true    # [ppc64le]\n  # skip: true  # [ppc64le or py != 312]\n  script_env:\n    - PSI4_PRETEND_VERSIONLONG={{ version }}+{{ commit }}\n  binary_relocation: true\n  run_exports:\n    # only relevant for the rare \"psi4 plugin\" case (links to psi4/core.*so), not the usual \"psi4 module\" case (import psi4)\n    - {{ pin_subpackage('psi4', max_pin='x.x') }}\n\n# bkgd: the numpy story\n# * psi4 uses numpy at runtime and has no version constraints\n# * it should be around at compile-time for `find_package(Python ... NumPy)`\n# * this doesn't need to be explicit for most arch but does for osx-arm64 for cross-compile\n# * to avoid false numpy matrix, add it to ignore_run_exports\n\n# bkgd: the fortran story\n# * psi4 has no fortran code and no fortran required dependencies (besides blas/lapack)\n# * it does have optional functionality-expanding fortran dependencies like dkh (recipe alongside) that are packaged separately\n# * this recipe omits the fortran compiler since C++ compiler can do the linking and because on windows,\n#   the clang-cl + gfortran combination hits https://gitlab.kitware.com/cmake/cmake/-/issues/17810\n\n# bkgd: the general blas story\n# * psi4's performance is heavily dependent on the blas/lapack implementation\n# * we've been packaging on conda with mkl for the past 7y\n# * while the psi4 build system allows any blas impl, we emit \"untested\" warnings for non-MKL, and the last test of openblas 5y ago had threading oversubscriptions\n# * so while we're open to multiple impl in future and have been specifying generic \"libblas\" in deps like dkh, we'd like to support only mkl in psi4 for now\n\n# bkgd: the windows blas story\n# * the latest blas+win+mkl package (libblas-3.9.0-16_win64_mkl) depends on mkl=2022.1.0, even though mkl=2022.2 and 2023.0 are available.\n# * so the `{{ mkl }}  # [win]` below pins to 2022.1.0 so that libblas=*=*mkl can work correctly to set the blas implementation.\n# * without the `{{ mkl }}` pin, various attempts would either install mkl + openblas + libblas=*=*openblas or try to fall back to libblas==3.8.0=10_mkl\n# * current conda-forge-pinning is mkl=mkl-devel=2022, so hopefully this recipe is still consistent with the c-f stack.\n# * [Oct 2023, #19] new libblas w/mkl2023 available for all arch, so releasing pin and consolidating lines\n# * [Jul 2024] removing the cbc.yaml now that mkl2023 is universal. also can use adcc again\n\n# bkgd: the windows openmp story\n# * the windows mkl package depends on intel-openmp (provides libiomp5md.dll).\n# * llvm-openmp is another contender on windows (provides libomp.dll=libiomp5md.dll and assoc. import libs libomp.lib=libiomp5md.lib).\n# * intel-openmp libiomp5md.dll is twice the size of the llvm-openmp file of the same name, and there's reports of non-interchangeability:\n#   * https://github.com/conda-forge/conda-forge.github.io/issues/1597#issuecomment-1029224521\n#   * https://github.com/conda-forge/intel_repack-feedstock/issues/1#issuecomment-579975070\n# * so we'd like to keep depending on intel-openmp, but since the package only provides the runtime dll,\n#   not the buildtime import lib, we stash a copy of the latter in a repo (see 2nd source/url above)\n#   for compiling psi4. It is used at buildtime and never packaged.\n# * for threading on windows, we're certainly willing for the psi4 recipe to do whatever works well with the c-f stack.\n#   However, at the moment this aspect of the stack seems a little fractured, so the recipe is defaulting to the\n#   mkl + intel-openmp + stashed libiomp5md.lib procedure that has worked compatibly with c-f for the last couple years.\n# * [Jul 2024] intel-openmp now provides libiomp5md.lib so dropping the external src.\n# * [Aug 2025] need clangdev and envvar INCLUDE to pull correct Intel OpenMP\n#      ~[343/1219] %SRC_DIR%\\psi4\\src\\psi4\\libsapt_solver\\sapt.cc(68,5): error: use of undeclared identifier 'omp_set_max_active_levels'\n#      [1222/1222] Linking CXX shared library src\\core.cp312-win_amd64.pyd lld-link: error: undefined symbol: __kmpc_dispatch_deinit\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - qcelemental                            # [build_platform != target_platform]  # version detection w/cross+poetry\n    - {{ stdlib(\"c\") }}\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - cmake\n    - ninja\n    - llvm-openmp                            # [unix]\n    - intel-openmp                           # [win]\n    - clangdev 17.0.6                        # [win]\n  host:\n    - setuptools                                       # qcelemental detection\n    - eigen\n    - libboost-headers\n    - libblas * *mkl                         # [x86_64]\n    - mkl-devel                              # [x86_64]\n    - intel-openmp                           # [win]\n    - mkl                                    # [x86_64]\n    - libblas * *netlib                      # [not x86_64]\n    - liblapack * *netlib                    # [not x86_64]\n    - numpy\n    - pybind11\n    - pybind11-abi\n    - python\n    - zlib                                             # pcmsolver detection, not direct dep, so ignore_run_exports above\n      #- pip                                           # internal builds of python modules, so usually off\n    # qc req'd\n    - gau2grid\n    - libint 2.9.0\n    - libxc-c\n    - optking\n    - qcelemental\n    - qcengine\n    - qcmanybody\n    # qc opt'l, build-time\n    - dkh\n    - libecpint\n    - pcmsolver\n    - einsums 1.0.6                          # [unix and not aarch64]\n    - hdf5                                   # [unix and not aarch64]  # indirect dep from einsums, see also cbc\n    - fmt                                    # [unix and not aarch64]  # indirect dep from einsums\n    - spdlog                                 # [unix and not aarch64]  # indirect dep from einsums\n    - cpptrace                               # [unix and not aarch64]  # indirect dep from einsums\n    - openorbitaloptimizer                   # [unix and not aarch64]\n  run:\n    - llvm-openmp                            # [unix]\n    - {{ pin_compatible('intel-openmp', max_pin='x.x') }}  # [win]  # avert 2024.2.2\n    - libblas * *mkl                         # [x86_64]\n    - mkl                                    # [x86_64 and not win]\n    - {{ pin_compatible('mkl', max_pin='x.x') }}  # [x86_64 and win]  # avert 2024.2.2\n    - libblas                                # [not x86_64]\n    - liblapack                              # [not x86_64]\n    - msgpack-python\n    - networkx\n    - pydantic >=1.17,<3\n    - python\n    - scipy\n    - {{ pin_compatible('numpy') }}          # shouldn't be needed but last round had constraint >=1.19,<3 so allowed v1 np in a v2 psi4 build on win\n    # qc\n    - {{ pin_compatible('optking', max_pin='x') }}\n    - {{ pin_compatible('qcelemental', lower_bound='0.29', upper_bound='0.50') }}\n    - {{ pin_compatible('qcengine', lower_bound='0.31', upper_bound='0.50') }}\n    - {{ pin_compatible('qcmanybody', max_pin='x') }}\n  run_constrained:\n    - pytest >=7.0.1\n    # qc opt'l, run-time\n    - pylibefp ==0.6.2                                 # 0.6.2 provides windows arch\n    - dftd4-python >=3.5.0                             # 3.5.0 provides b97-3c parameters\n    - geometric >=1.0                                  # 1.0 has new API\n    - pymdi >=1.2                                      # 1.2 has breaking API change\n    - pyddx >=0.4.3                                    # 0.4.3 has lpb correction\n    - adcc >=0.15.16                                   # 0.15.16 has transition moment corrections\n    # - cppe ==0.3.1                                   # 0.3.2 has libecpint problems\n    - libgcc <14.3                           # [win]\n                                                       # v14.3 ImportError: DLL load failed while importing core: The specified procedure could not be found.\n    - qcfractal >=0.60,!=0.62                          # v0.60 includes new compute_tag syntax. v0.62 hangs for snowflake jobs\n\ntest:\n  imports:\n    - psi4\n  requires:\n    - pip                                                                          # provides `pip check`\n    - pytest\n    - pytest-xdist\n    # qc runtime opt'l\n    - adcc                                                               # [unix and not ppc64le]\n    - cppe                                                               # [unix]  # win uses llvm-openmp\n    - pyddx                                                              # [unix]\n    - dftd3-python\n    - dftd4-python\n    - toml                                                                         # needed for qcengine/dftd4-python interface\n    - pylibefp\n    - gcp-correction\n    - geometric\n    - pygdma\n    - pymdi\n    # plugin testing\n    - {{ compiler('cxx') }}                                              # [unix and build_platform == target_platform]\n    - cmake                                                              # [unix and build_platform == target_platform]\n    - make                                                               # [unix and build_platform == target_platform]\n    - pybind11                                                           # [unix and build_platform == target_platform]\n    - eigen                                                              # [unix and build_platform == target_platform]\n    - libboost-headers                                                   # [unix and build_platform == target_platform]\n  commands:\n    # Verify module\n    - test -f $SP_DIR/psi4/core*.so                                      # [unix]\n    - test -f $SP_DIR/psi4/driver/driver.py                              # [unix]\n    - if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1                      # [win]\n    - if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1              # [win]\n    # Verify executable\n    - test -f $PREFIX/bin/psi4                                           # [unix]\n    - psi4 --version                                                     # [unix]\n    - psi4 --module                                                      # [unix]\n    - if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1                            # [win]\n    - if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1              # [win]   # aka bin/psi4\n    - if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1                    # [win]\n    - psi4.exe --version                                                 # [win]\n    - psi4.exe --module                                                  # [win]\n    - python -c \"import psi4;print(psi4.executable)\"\n    # Verify accessories\n    - test -f $PREFIX/include/psi4/psi4-dec.h                            # [unix]\n    - test -f $PREFIX/share/cmake/psi4/psi4Config.cmake                  # [unix]\n    - test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake  # [unix]\n    - test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs                       # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1   # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1  # [win]\n    # Inspect linkage\n    - ldd -v $SP_DIR/psi4/core*.so                                       # [linux and build_platform == target_platform]\n    - otool -L $SP_DIR/psi4/core*.so                                     # [osx]\n      # LONG - '%OBJDUMP% %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"' # [win]\n    # Actually test\n    # - pip check                                                        # present until poetry killed off in qcel\n    - python -c \"import psi4;assert psi4.__version__ == '{{ version }}', f'{psi4.__version__=} differs from recipe=\\'{{ version }}\\''\"\n    - python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"\n    - python -c \"import psi4;print(psi4.addons())\"\n    - psi4 $SP_DIR/psi4/tests/tu1-h2o-energy/input.dat -o stdout         # [unix]\n    - psi4 %SP_DIR%\\\\psi4\\\\tests\\\\tu1-h2o-energy\\\\input.dat -o stdout    # [win]\n    - MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\" -k \"not pe_ecp\"  # [unix and build_platform == target_platform]\n    - MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"adcc and not pvdz_adc2_any_6\"  # [unix and build_platform == target_platform]\n    - pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -k \"psi4_basic\"  # [unix and build_platform != target_platform]\n    - pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\" -k \"not pe_ecp and not cc13\"  # [win]\n      # cn_cc-pvdz_adc2_any_6 only trouble for py39 + osx-64\n      # emulated aarch64 passes usual smoke+adcc tests but takes 2h, so skipping longest\n    # Test a plugin\n    - PLUG=plugdfmp2                                                     # [unix and build_platform == target_platform]\n    - psi4 --plugin-name $PLUG --plugin-template dfmp2                   # [unix and build_platform == target_platform]\n    - cd $PLUG && `psi4 --plugin-compile` && make && cd ..               # [unix and build_platform == target_platform]\n    - PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --plugin-dfmp2 --module=\"$PLUG\" -n2  # [unix and build_platform == target_platform]\n    - PYTHONPATH=. python $PREFIX/share/psi4/scripts/test_threading.py --ldd --module=\"$PLUG/$PLUG\"  # [unix and build_platform == target_platform]\n                                                                         # above should have --passfail but fails b/c einsums linking to gomp TODO Fix\n\nabout:\n  home: http://psicode.org\n  dev_url: https://github.com/psi4/psi4\n  doc_url: http://psicode.org/psi4manual/master/index.html\n  doc_source_url: https://github.com/psi4/psi4/tree/master/doc/sphinxman/source\n  license: LGPL-3.0-only AND BSD-3-Clause AND MIT\n  license_url: https://opensource.org/license/lgpl-3-0/\n  license_file:\n    - COPYING\n    - COPYING.LESSER\n    - THIRD-PARTY-LICENSES\n  license_family: LGPL\n  summary: Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python\n  description: |\n    Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\n    high-accuracy simulations of a variety of molecular properties. We can routinely perform computations\n    with more than 2500 basis functions running serially or on multi-core machines. With computationally\n    demanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\n    flexible Python driver, Psi4 strives to be friendly to both users and developers.\n\nextra:\n  recipe-maintainers:\n    - loriab\n    - jturney\n    - fevangelista\n    - maxscheurer\n\n\n# Notes\n# -----\n\n# * The following optional runtime deps were in req/run of the psi4::psi4 package but are omitted from conda-forge::psi4\n#   * pytest\n#   * dftd3\n#   * gcp\n#   * dftd4 (installer only)\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "clangdev",
      "cmake",
      "cpptrace",
      "cxx_compiler_stub",
      "dkh",
      "eigen",
      "einsums",
      "fmt",
      "gau2grid",
      "hdf5",
      "intel-openmp",
      "libblas",
      "libboost-headers",
      "libecpint",
      "libint",
      "liblapack",
      "libxc-c",
      "llvm-openmp",
      "mkl",
      "mkl-devel",
      "msgpack-python",
      "networkx",
      "ninja",
      "numpy",
      "openorbitaloptimizer",
      "optking",
      "pcmsolver",
      "pybind11",
      "pybind11-abi",
      "pydantic",
      "python",
      "qcelemental",
      "qcengine",
      "qcmanybody",
      "scipy",
      "setuptools",
      "spdlog",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangdev",
        "cmake",
        "cxx_compiler_stub",
        "intel-openmp",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cpptrace",
        "cxx_compiler_stub",
        "dkh",
        "eigen",
        "einsums",
        "fmt",
        "gau2grid",
        "hdf5",
        "intel-openmp",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "liblapack",
        "libxc-c",
        "mkl",
        "mkl-devel",
        "numpy",
        "openmp",
        "openorbitaloptimizer",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "intel-openmp",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "mkl",
        "msgpack-python",
        "networkx",
        "numpy",
        "openmp",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangdev 17.0.6",
        "cmake",
        "cxx_compiler_stub",
        "intel-openmp",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpptrace",
        "dkh",
        "eigen",
        "einsums 1.0.6",
        "fmt",
        "gau2grid",
        "hdf5",
        "intel-openmp",
        "libblas * *mkl",
        "libblas * *netlib",
        "libboost-headers",
        "libecpint",
        "libint 2.9.0",
        "liblapack * *netlib",
        "libxc-c",
        "mkl",
        "mkl-devel",
        "numpy",
        "openorbitaloptimizer",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "intel-openmp",
        "libblas",
        "libblas * *mkl",
        "liblapack",
        "llvm-openmp",
        "mkl",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic >=1.17,<3",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "adcc",
        "cmake",
        "cppe",
        "cxx_compiler_stub",
        "dftd3-python",
        "dftd4-python",
        "eigen",
        "gcp-correction",
        "geometric",
        "libboost-headers",
        "make",
        "pip",
        "pybind11",
        "pyddx",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  },
  "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz",
  "version": "1.10",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/psi4.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
      "dev_url": "https://github.com/psi4/psi4",
      "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
      "doc_url": "http://psicode.org/psi4manual/master/index.html",
      "home": "http://psicode.org",
      "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
      "license_family": "LGPL",
      "license_file": [
        "COPYING",
        "COPYING.LESSER",
        "THIRD-PARTY-LICENSES"
      ],
      "license_url": "https://opensource.org/license/lgpl-3-0/",
      "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
    },
    "build": {
      "binary_relocation": true,
      "number": "0",
      "run_exports": [
        "psi4"
      ],
      "script_env": [
        "PSI4_PRETEND_VERSIONLONG=1.10+f2492db10"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab",
        "jturney",
        "fevangelista",
        "maxscheurer"
      ]
    },
    "package": {
      "name": "psi4",
      "version": "1.10"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "intel-openmp",
        "clangdev 17.0.6"
      ],
      "host": [
        "setuptools",
        "eigen",
        "libboost-headers",
        "libblas * *mkl",
        "mkl-devel",
        "intel-openmp",
        "mkl",
        "numpy",
        "pybind11",
        "pybind11-abi",
        "python",
        "zlib",
        "gau2grid",
        "libint 2.9.0",
        "libxc-c",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "dkh",
        "libecpint",
        "pcmsolver"
      ],
      "run": [
        "intel-openmp",
        "libblas * *mkl",
        "mkl",
        "msgpack-python",
        "networkx",
        "pydantic >=1.17,<3",
        "python",
        "scipy",
        "numpy",
        "optking",
        "qcelemental",
        "qcengine",
        "qcmanybody"
      ],
      "run_constrained": [
        "pytest >=7.0.1",
        "pylibefp ==0.6.2",
        "dftd4-python >=3.5.0",
        "geometric >=1.0",
        "pymdi >=1.2",
        "pyddx >=0.4.3",
        "adcc >=0.15.16",
        "libgcc <14.3",
        "qcfractal >=0.60,!=0.62"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2d0ffcec6ff61141fbf13e8ee7ba984e28fc268659f67833352303a6356cc4e4",
      "url": "https://github.com/psi4/psi4/archive/v1.10.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
        "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
        "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
        "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
        "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
        "psi4.exe --version",
        "psi4.exe --module",
        "python -c \"import psi4;print(psi4.executable)\"",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
        "python -c \"import psi4;assert psi4.__version__ == '1.10', f'{psi4.__version__=} differs from recipe=\\'1.10\\''\"",
        "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
        "python -c \"import psi4;print(psi4.addons())\"",
        "psi4 %SP_DIR%\\\\psi4\\\\tests\\\\tu1-h2o-energy\\\\input.dat -o stdout",
        "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\" -k \"not pe_ecp and not cc13\""
      ],
      "imports": [
        "psi4"
      ],
      "requires": [
        "pip",
        "pytest",
        "pytest-xdist",
        "dftd3-python",
        "dftd4-python",
        "toml",
        "pylibefp",
        "gcp-correction",
        "geometric",
        "pygdma",
        "pymdi"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clangdev",
        "cmake",
        "cxx_compiler_stub",
        "intel-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "dkh",
        "eigen",
        "gau2grid",
        "intel-openmp",
        "libblas",
        "libboost-headers",
        "libecpint",
        "libint",
        "libxc-c",
        "mkl",
        "mkl-devel",
        "numpy",
        "optking",
        "pcmsolver",
        "pybind11",
        "pybind11-abi",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "intel-openmp",
        "libblas",
        "mkl",
        "msgpack-python",
        "networkx",
        "numpy",
        "optking",
        "pydantic",
        "python",
        "qcelemental",
        "qcengine",
        "qcmanybody",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "dftd3-python",
        "dftd4-python",
        "gcp-correction",
        "geometric",
        "pip",
        "pygdma",
        "pylibefp",
        "pymdi",
        "pytest",
        "pytest-xdist",
        "toml"
      ]
    }
  }
}