{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "thermotools",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
      "dev_url": "https://github.com/markovmodel/thermotools",
      "home": "http://github.com/markovmodel/thermotools",
      "license": "LGPL3+",
      "license_file": "COPYING.LESSER",
      "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
    },
    "build": {
      "number": "1004",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher",
        "fabian-paul",
        "cwehmeyer"
      ]
    },
    "package": {
      "name": "thermotools",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "msmtools >=1.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "thermotools-0.2.7.tar.gz",
      "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
      "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
    },
    "test": {
      "imports": [
        "thermotools"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "msmtools",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
      "dev_url": "https://github.com/markovmodel/thermotools",
      "home": "http://github.com/markovmodel/thermotools",
      "license": "LGPL3+",
      "license_file": "COPYING.LESSER",
      "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
    },
    "build": {
      "number": "1004",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher",
        "fabian-paul",
        "cwehmeyer"
      ]
    },
    "package": {
      "name": "thermotools",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "msmtools >=1.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "thermotools-0.2.7.tar.gz",
      "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
      "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
    },
    "test": {
      "imports": [
        "thermotools"
      ]
    }
  },
  "name": "thermotools",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
      "dev_url": "https://github.com/markovmodel/thermotools",
      "home": "http://github.com/markovmodel/thermotools",
      "license": "LGPL3+",
      "license_file": "COPYING.LESSER",
      "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
    },
    "build": {
      "number": "1004",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher",
        "fabian-paul",
        "cwehmeyer"
      ]
    },
    "package": {
      "name": "thermotools",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "msmtools >=1.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "thermotools-0.2.7.tar.gz",
      "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
      "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
    },
    "test": {
      "imports": [
        "thermotools"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "msmtools",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "thermotools"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/thermotools.json"
  },
  "raw_meta_yaml": "{% set name = \"thermotools\" %}\n{% set version = \"0.2.7\" %}\n{% set sha256 = \"34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1004\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n \nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - setuptools\n    - cython\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy\n    - msmtools >=1.1.4\n\ntest:\n  imports:\n    - thermotools\n\nabout:\n  home: http://github.com/markovmodel/thermotools\n  license: LGPL3+\n  license_file: COPYING.LESSER\n  summary: 'Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python.'\n\n  description: |\n    The thermotools package is a lowlevel implementation toolbox for the analyis\n    of multi-ensemble calculations. It contains estimators for the state-continuous transition-based\n    reweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n    (BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\n    While you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n  dev_url: https://github.com/markovmodel/thermotools\n\nextra:\n  recipe-maintainers:\n    - marscher\n    - fabian-paul\n    - cwehmeyer\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cython",
      "msmtools",
      "numpy",
      "pip",
      "python",
      "scipy",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "msmtools",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "msmtools >=1.1.4",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz",
  "version": "0.2.7",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/thermotools.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The thermotools package is a lowlevel implementation toolbox for the analyis\nof multi-ensemble calculations. It contains estimators for the state-continuous transition-based\nreweighting analysis method (TRAM) and its state-discrete variant (dTRAM), Bennet acceptance ratio\n(BAR) and its multi-state variant (MBAR), and the weighted histogram analysis method (WHAM).\nWhile you can use thermotools on its own, we recommend to use it in combination with PyEMMA.\n",
      "dev_url": "https://github.com/markovmodel/thermotools",
      "home": "http://github.com/markovmodel/thermotools",
      "license": "LGPL3+",
      "license_file": "COPYING.LESSER",
      "summary": "Lowlevel implementation of (transition-based and histogram) reweighting analyis methods for Python."
    },
    "build": {
      "number": "1004",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "marscher",
        "fabian-paul",
        "cwehmeyer"
      ]
    },
    "package": {
      "name": "thermotools",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "cython",
        "numpy"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "msmtools >=1.1.4"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "thermotools-0.2.7.tar.gz",
      "sha256": "34e492f2593428fbd3f4d9b67a9283bfa6d9bb1f6392e898e10093a11c7af250",
      "url": "https://pypi.io/packages/source/t/thermotools/thermotools-0.2.7.tar.gz"
    },
    "test": {
      "imports": [
        "thermotools"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "msmtools",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}