{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_hash": "d0bdb297b2c94940c42538bf16809b31855ef200",
  "feedstock_hash_ts": 1730881830,
  "feedstock_name": "pcaspy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
      "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
      "doc_url": "https://pcaspy.readthedocs.io/",
      "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Portable Channel Access Server in Python"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "pcaspy",
      "version": "0.8.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "epics-base 3",
        "pip",
        "python",
        "setuptools",
        "swig"
      ],
      "run": [
        "epics-base",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "80f6aafacdd796c471b62737ad242a322cff22d8b8f18d9c56feed4270d221bf",
      "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.8.1.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pcaspy",
        "python test/gddTest.py"
      ],
      "imports": [
        "pcaspy",
        "pcaspy.alarm",
        "pcaspy.cas",
        "pcaspy.driver",
        "pcaspy.tools"
      ],
      "requires": [
        "numpy",
        "pip"
      ],
      "source_files": [
        "test/gddTest.py"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "epics-base",
        "pip",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "epics-base",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
      "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
      "doc_url": "https://pcaspy.readthedocs.io/",
      "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Portable Channel Access Server in Python"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "pcaspy",
      "version": "0.8.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "epics-base 3",
        "pip",
        "python",
        "setuptools",
        "swig"
      ],
      "run": [
        "epics-base",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "80f6aafacdd796c471b62737ad242a322cff22d8b8f18d9c56feed4270d221bf",
      "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.8.1.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pcaspy",
        "python test/gddTest.py"
      ],
      "imports": [
        "pcaspy",
        "pcaspy.alarm",
        "pcaspy.cas",
        "pcaspy.driver",
        "pcaspy.tools"
      ],
      "requires": [
        "numpy",
        "pip"
      ],
      "source_files": [
        "test/gddTest.py"
      ]
    }
  },
  "name": "pcaspy",
  "osx_64_meta_yaml": {
    "about": {
      "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
      "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
      "doc_url": "https://pcaspy.readthedocs.io/",
      "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Portable Channel Access Server in Python"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "pcaspy",
      "version": "0.8.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "epics-base 3",
        "pip",
        "python",
        "setuptools",
        "swig"
      ],
      "run": [
        "epics-base",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "80f6aafacdd796c471b62737ad242a322cff22d8b8f18d9c56feed4270d221bf",
      "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.8.1.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pcaspy",
        "python test/gddTest.py"
      ],
      "imports": [
        "pcaspy",
        "pcaspy.alarm",
        "pcaspy.cas",
        "pcaspy.driver",
        "pcaspy.tools"
      ],
      "requires": [
        "numpy",
        "pip"
      ],
      "source_files": [
        "test/gddTest.py"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "epics-base",
        "pip",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "epics-base",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pcaspy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pcaspy.json"
  },
  "raw_meta_yaml": "{% set version = \"0.8.1\" %}\n\npackage:\n  name: pcaspy\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pcaspy/pcaspy-{{ version }}.tar.gz\n  sha256: 80f6aafacdd796c471b62737ad242a322cff22d8b8f18d9c56feed4270d221bf\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n  host:\n    - epics-base 3\n    - pip\n    - python\n    - setuptools\n    - swig\n  run:\n    - epics-base\n    - python\n\ntest:\n  requires:\n    - numpy\n    - pip\n  imports:\n    - pcaspy\n    - pcaspy.alarm\n    - pcaspy.cas\n    - pcaspy.driver\n    - pcaspy.tools\n  source_files:\n    - test/gddTest.py\n  commands:\n    # check metadata\n    - python -m pip check\n    - python -m pip show pcaspy\n    # run tests\n    - python test/gddTest.py\n\nabout:\n  home: https://github.com/paulscherrerinstitute/pcaspy/wiki\n  doc_url: https://pcaspy.readthedocs.io/\n  dev_url: https://github.com/paulscherrerinstitute/pcaspy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Portable Channel Access Server in Python\n  description: |\n    PCASpy provides not only the low level python binding to\n    EPICS Portable Channel Access Server but also the necessary\n    high level abstraction to ease the server tool programming.\n\nextra:\n  recipe-maintainers:\n    - duncanmmacleod\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "epics-base",
      "pip",
      "python",
      "setuptools",
      "swig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "epics-base",
        "pip",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "epics-base",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "epics-base 3",
        "pip",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "epics-base",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.8.1.tar.gz",
  "version": "0.8.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pcaspy.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "PCASpy provides not only the low level python binding to\nEPICS Portable Channel Access Server but also the necessary\nhigh level abstraction to ease the server tool programming.\n",
      "dev_url": "https://github.com/paulscherrerinstitute/pcaspy",
      "doc_url": "https://pcaspy.readthedocs.io/",
      "home": "https://github.com/paulscherrerinstitute/pcaspy/wiki",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Portable Channel Access Server in Python"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "pcaspy",
      "version": "0.8.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "epics-base 3",
        "pip",
        "python",
        "setuptools",
        "swig"
      ],
      "run": [
        "epics-base",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "80f6aafacdd796c471b62737ad242a322cff22d8b8f18d9c56feed4270d221bf",
      "url": "https://pypi.io/packages/source/p/pcaspy/pcaspy-0.8.1.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pcaspy",
        "python test/gddTest.py"
      ],
      "imports": [
        "pcaspy",
        "pcaspy.alarm",
        "pcaspy.cas",
        "pcaspy.driver",
        "pcaspy.tools"
      ],
      "requires": [
        "numpy",
        "pip"
      ],
      "source_files": [
        "test/gddTest.py"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "epics-base",
        "pip",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "epics-base",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip"
      ]
    }
  }
}