{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "ale-py",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "llvm-tools"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "ale-py",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "llvm-tools",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-tools",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "llvm-tools",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0002-build-shared-libs.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-tools",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ale-py"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ale-py.json"
  },
  "raw_meta_yaml": "{% set version = \"0.11.0\" %}\n\npackage:\n  name: ale-py\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97\n  patches:\n    # upstream avoids ninja on windows, but we don't need to\n    - patches/0001-unconditionally-use-ninja.patch\n    - patches/0002-build-shared-libs.patch  # [not win]\n    - patches/0003-avoid-vcpkg-toolchain.patch\n    - patches/0004-fix-python-executable.patch\n    - patches/0005-fix-installation-on-windows.patch\n    - patches/0006-use-find-python.patch\n    - patches/0007-backport-pr-631.patch\n\nbuild:\n  number: 0\n  # opencv still needs to be migrated to python 3.14,\n  # see https://github.com/conda-forge/ale-py-feedstock/pull/26#issuecomment-3243635414\n  skip: true  # [py==314]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    # for llvm-ar\n    - llvm-tools             # [osx]\n    - cmake\n    - ninja\n  host:\n    - python\n    - pybind11\n    - pip\n    - setuptools\n    - libiconv\n    - sdl2\n    - zlib\n    - libopencv\n  run:\n    - python\n    - py-opencv\n    # not clear where these come from, but enforced by pip check\n    - importlib-metadata\n    - importlib-resources\n    - typing-extensions\n    - numpy\n\ntest:\n  imports:\n    - ale_py\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/Farama-Foundation/Arcade-Learning-Environment\n  license: GPL-2.0-only\n  license_family: GPL\n  license_file: LICENSE.md\n  summary: The Arcade Learning Environment (ALE) -- a platform for AI research.\n  description: |\n    The Arcade Learning Environment (ALE) is a simple framework that allows\n    researchers and hobbyists to develop AI agents for Atari 2600 games.\n\n    A difference between the PyPI distribution of ale-py and the conda-forge package\n    is that the conda-forge package was unable to verify the copyright status of the ROM\n    required to use the library, and if conda-forge is allowed to redistribute them.\n    For these reason, to actually work with the library, if you are legally allowed to\n    access the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh \n    script) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n  dev_url: https://github.com/Farama-Foundation/Arcade-Learning-Environment\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n    - Tobias-Fischer\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "importlib-metadata",
      "importlib-resources",
      "libiconv",
      "libopencv",
      "llvm-tools",
      "ninja",
      "numpy",
      "pip",
      "py-opencv",
      "pybind11",
      "python",
      "sdl2",
      "setuptools",
      "typing-extensions",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-tools",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-tools",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz",
  "version": "0.11.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ale-py.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The Arcade Learning Environment (ALE) is a simple framework that allows\nresearchers and hobbyists to develop AI agents for Atari 2600 games.\n\nA difference between the PyPI distribution of ale-py and the conda-forge package\nis that the conda-forge package was unable to verify the copyright status of the ROM\nrequired to use the library, and if conda-forge is allowed to redistribute them.\nFor these reason, to actually work with the library, if you are legally allowed to\naccess the ROMs, download them (for example with the https://github.com/Farama-Foundation/Arcade-Learning-Environment/blob/master/scripts/download_unpack_roms.sh\nscript) and then set the `ALE_ROMS_DIR` environment variable to point to the directory that contains the ROMs.\n",
      "dev_url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "home": "https://github.com/Farama-Foundation/Arcade-Learning-Environment",
      "license": "GPL-2.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.md",
      "summary": "The Arcade Learning Environment (ALE) -- a platform for AI research."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "Tobias-Fischer"
      ]
    },
    "package": {
      "name": "ale-py",
      "version": "0.11.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "libiconv",
        "sdl2",
        "zlib",
        "libopencv"
      ],
      "run": [
        "python",
        "py-opencv",
        "importlib-metadata",
        "importlib-resources",
        "typing-extensions",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-unconditionally-use-ninja.patch",
        "patches/0003-avoid-vcpkg-toolchain.patch",
        "patches/0004-fix-python-executable.patch",
        "patches/0005-fix-installation-on-windows.patch",
        "patches/0006-use-find-python.patch",
        "patches/0007-backport-pr-631.patch"
      ],
      "sha256": "300717009d18c784bf4b407f608e269d7c87e40769c277206230011352e65b97",
      "url": "https://github.com/Farama-Foundation/Arcade-Learning-Environment/archive/refs/tags/v0.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "ale_py"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libiconv",
        "libopencv",
        "pip",
        "pybind11",
        "python",
        "sdl2",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "importlib-metadata",
        "importlib-resources",
        "numpy",
        "py-opencv",
        "python",
        "typing-extensions"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}