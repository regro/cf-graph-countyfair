{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-seqminer",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "http://seqminer.genomic.codes",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "LICENSE"
      ],
      "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-seqminer",
      "version": "9.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "zstd",
        "zlib",
        "bzip2"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patch"
      ],
      "sha256": "ac7c6dcca46e3efe3f2f49e42ddb196683b8b218ed19d446148c404670d33e55",
      "url": [
        "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('seqminer')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "r-base",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "http://seqminer.genomic.codes",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "LICENSE"
      ],
      "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-seqminer",
      "version": "9.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "grep",
        "automake-wrapper",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "zstd",
        "zlib",
        "bzip2"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "ac7c6dcca46e3efe3f2f49e42ddb196683b8b218ed19d446148c404670d33e55",
      "url": [
        "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('seqminer')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"",
        "\"%R%\" -e \"library('seqminer')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "name": "r-seqminer",
  "osx_64_meta_yaml": {
    "about": {
      "home": "http://seqminer.genomic.codes",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "LICENSE"
      ],
      "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-seqminer",
      "version": "9.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "sed",
        "autoconf",
        "automake",
        "pkg-config",
        "make"
      ],
      "host": [
        "r-base",
        "zstd",
        "zlib",
        "bzip2"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patch"
      ],
      "sha256": "ac7c6dcca46e3efe3f2f49e42ddb196683b8b218ed19d446148c404670d33e55",
      "url": [
        "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('seqminer')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "r-base",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-seqminer"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-seqminer.json"
  },
  "raw_meta_yaml": "{% set version = \"9.4\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-seqminer\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/seqminer_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/seqminer/seqminer_{{ version }}.tar.gz\n  sha256: ac7c6dcca46e3efe3f2f49e42ddb196683b8b218ed19d446148c404670d33e55\n  patches:\n    - patch  # [not win]\n\nbuild:\n  number: 2\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}sed\n    - {{ posix }}grep              # [win]\n    - {{ posix }}autoconf\n    - {{ posix }}automake          # [not win]\n    - {{ posix }}automake-wrapper  # [win]\n    - {{ posix }}pkg-config\n    - {{ posix }}make\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - zstd\n    - zlib\n    - bzip2\n  run:\n    - r-base\n\ntest:\n  requires:\n    - r-testthat\n  source_files:\n    - tests/\n  commands:\n    - $R -e \"library('seqminer')\"                                                     # [not win]\n    - $R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('seqminer')\\\"\"                                            # [win]\n    - \"\\\"%R%\\\" -e \\\"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\\\"\"  # [win]\n\nabout:\n  home: http://seqminer.genomic.codes\n  license: GPL-2.0-or-later\n  summary: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5)\n    create customized workflow based on Makefile.\n  license_family: GPL\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: seqminer\n# Type: Package\n# Title: Efficiently Read Sequence Data (VCF Format, BCF Format, METAL Format and BGEN Format) into R\n# Version: 7.1\n# Date: 2019-1-7\n# Authors@R: c(person(\"Xiaowei\", \"Zhan\", email = \"zhanxw@gmail.com\", role = c(\"aut\", \"cre\")), person(\"Dajiang\", \"Liu\", email = \"dajiang.liu@gmail.com\", role = \"aut\"), person(\"Attractive Chaos\", email = \"attractor@live.co.uk\", role = \"cph\", comment = \"We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.\"),\t person(\"Broad Institute / Massachusetts Institute of Technology\", role = \"cph\"), person(\"Genome Research Ltd (GRL)\", role = \"cph\"), person(\"Facebook, Inc\", role = \"cph\"))\n# Maintainer: Xiaowei Zhan <zhanxw@gmail.com>\n# Description: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile.\n# Copyright: We have used the following software and made minimal necessary changes: tabix, Heng Li <lh3@live.co.uk> (MIT license), SQLite (Public Domain), Zstandard (MIT license). For tabix, we removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics. For zstandard, we removed compiler (clang, MSVC) specific preprocessing flags.\n# License: GPL | file LICENSE\n# URL: http://seqminer.genomic.codes\n# BugReports: https://github.com/zhanxw/seqminer/issues\n# Packaged: 2019-01-07 21:30:23 UTC; zhanxw\n# Repository: CRAN\n# Suggests: testthat, SKAT\n# SystemRequirements: C++11, zlib headers and libraries, GNU make, optionally also bzip2 and POSIX-compliant regex functions.\n# NeedsCompilation: yes\n# RoxygenNote: 6.1.1\n# Encoding: UTF-8\n# Author: Xiaowei Zhan [aut, cre], Dajiang Liu [aut], Attractive Chaos [cph] (We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.), Broad Institute / Massachusetts Institute of Technology [cph], Genome Research Ltd (GRL) [cph], Facebook, Inc [cph]\n# Date/Publication: 2019-01-08 15:20:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "automake-wrapper",
      "bzip2",
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "grep",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "pkg-config",
      "r-base",
      "sed",
      "zip",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "automake-wrapper",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "r-base",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz",
    "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz",
    "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz"
  ],
  "version": "9.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-seqminer.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "http://seqminer.genomic.codes",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "LICENSE"
      ],
      "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-seqminer",
      "version": "9.4"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "grep",
        "autoconf",
        "automake-wrapper",
        "pkg-config",
        "make",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "zstd",
        "zlib",
        "bzip2"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": null,
      "sha256": "ac7c6dcca46e3efe3f2f49e42ddb196683b8b218ed19d446148c404670d33e55",
      "url": [
        "https://cran.r-project.org/src/contrib/seqminer_9.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_9.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('seqminer')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake-wrapper",
        "coreutils",
        "filesystem",
        "grep",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "pkg-config",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "r-base",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat"
      ]
    }
  }
}