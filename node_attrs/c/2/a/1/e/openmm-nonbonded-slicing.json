{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "openmm-nonbonded-slicing",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This plugin contains the SlicedNonbondedForce class, a variant of\nOpenMM's NonbondedForce. By partitioning all particles among disjoint\nsubsets, the total potential energy becomes a linear combination of\ncontributions from pairs of subsets.\n",
      "dev_url": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "doc_url": "https://craabreu.github.io/openmm-nonbonded-slicing",
      "home": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "An OpenMM plugin for slicing nonbonded interactions"
    },
    "build": {
      "number": "2",
      "rpaths": [
        "lib/"
      ],
      "string": "cuda120py39h1234567_2"
    },
    "extra": {
      "recipe-maintainers": [
        "craabreu",
        "jananzhu"
      ]
    },
    "package": {
      "name": "openmm-nonbonded-slicing",
      "version": "0.2.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cdt_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig <4.1",
        "openmm >=8.0.0",
        "ocl-icd"
      ],
      "run": [
        "python",
        "openmm",
        "ocl-icd",
        "ocl-icd-system"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1d88f618ae5bff1fb1c09aa9fa34a943c5a62b2cbe77684fd1835d4b11eb29b3",
      "url": "https://github.com/craabreu/openmm-nonbonded-slicing/archive/v0.2.2.tar.gz"
    },
    "test": {
      "commands": "cd ${CONDA_PREFIX}/share/openmm-nonbonded-slicing/tests\nls -al\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
      "imports": [
        "nonbondedslicing"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "ocl-icd",
        "openmm",
        "pip",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ocl-icd",
        "ocl-icd-system",
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This plugin contains the SlicedNonbondedForce class, a variant of\nOpenMM's NonbondedForce. By partitioning all particles among disjoint\nsubsets, the total potential energy becomes a linear combination of\ncontributions from pairs of subsets.\n",
      "dev_url": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "doc_url": "https://craabreu.github.io/openmm-nonbonded-slicing",
      "home": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "An OpenMM plugin for slicing nonbonded interactions"
    },
    "build": {
      "number": "2",
      "rpaths": [
        "lib/"
      ],
      "string": "cpu_py39h1234567_2"
    },
    "extra": {
      "recipe-maintainers": [
        "craabreu",
        "jananzhu"
      ]
    },
    "package": {
      "name": "openmm-nonbonded-slicing",
      "version": "0.2.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cdt_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig <4.1",
        "openmm >=8.0.0",
        "ocl-icd",
        "khronos-opencl-icd-loader"
      ],
      "run": [
        "python",
        "openmm",
        "ocl-icd",
        "ocl-icd-system",
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1d88f618ae5bff1fb1c09aa9fa34a943c5a62b2cbe77684fd1835d4b11eb29b3",
      "url": "https://github.com/craabreu/openmm-nonbonded-slicing/archive/v0.2.2.tar.gz"
    },
    "test": {
      "commands": "cd ${CONDA_PREFIX}/share/openmm-nonbonded-slicing/tests\nls -al\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
      "imports": [
        "nonbondedslicing"
      ]
    }
  },
  "name": "openmm-nonbonded-slicing",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This plugin contains the SlicedNonbondedForce class, a variant of\nOpenMM's NonbondedForce. By partitioning all particles among disjoint\nsubsets, the total potential energy becomes a linear combination of\ncontributions from pairs of subsets.\n",
      "dev_url": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "doc_url": "https://craabreu.github.io/openmm-nonbonded-slicing",
      "home": "https://github.com/craabreu/openmm-nonbonded-slicing",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "An OpenMM plugin for slicing nonbonded interactions"
    },
    "build": {
      "number": "2",
      "rpaths": [
        "lib/"
      ],
      "string": "cpu_py39h1234567_2"
    },
    "extra": {
      "recipe-maintainers": [
        "craabreu",
        "jananzhu"
      ]
    },
    "package": {
      "name": "openmm-nonbonded-slicing",
      "version": "0.2.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig <4.1",
        "openmm >=8.0.0",
        "khronos-opencl-icd-loader"
      ],
      "run": [
        "python",
        "openmm",
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1d88f618ae5bff1fb1c09aa9fa34a943c5a62b2cbe77684fd1835d4b11eb29b3",
      "url": "https://github.com/craabreu/openmm-nonbonded-slicing/archive/v0.2.2.tar.gz"
    },
    "test": {
      "commands": "cd ${CONDA_PREFIX}/share/openmm-nonbonded-slicing/tests\nls -al\nset +e\nsummary=\"\"\nexitcode=0\nfor f in Test*; do\n  if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n    continue\n  fi\n  echo \"Running $f...\"\n  ./${f}\n  thisexitcode=$?\n  summary+=\"\\n${f}: \"\n  if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n  ((exitcode+=$thisexitcode))\ndone\necho \"-------\"\necho \"Summary\"\necho \"-------\"\necho -e \"${summary}\"\nexit $exitcode\n",
      "imports": [
        "nonbondedslicing"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "openmm",
        "pip",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple",
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "openmm-nonbonded-slicing"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openmm-nonbonded-slicing.json"
  },
  "raw_meta_yaml": "{% set version = \"0.2.2\" %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: openmm-nonbonded-slicing\n  version: {{ version }}\n\nsource:\n  url: https://github.com/craabreu/openmm-nonbonded-slicing/archive/v{{ version }}.tar.gz\n  sha256: 1d88f618ae5bff1fb1c09aa9fa34a943c5a62b2cbe77684fd1835d4b11eb29b3\nbuild:\n  number: 2\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  skip: true  # [win]\n  skip: true  # [aarch64 and cuda_compiler_version not in (undefined, 'None')]\n  rpaths:\n    - lib/\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy >=1.19                           # [build_platform != target_platform]\n    - swig <4.1                              # [build_platform != target_platform]\n    - openmm >=8.0.0                         # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    {% if cuda_major >= 12 %}\n    - cuda-driver-dev\n    - cuda-nvrtc-dev\n    - libcufft-dev\n    {% endif %}\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n    - swig <4.1\n    - openmm >=8.0.0\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n    {% if cuda_major >= 12 %}\n    - cuda-driver-dev\n    - cuda-cudart-dev\n    - cuda-nvrtc-dev\n    - cuda-nvtx-dev\n    - cuda-nvml-dev\n    - libcublas-dev\n    - libcufft-dev\n    - libcurand-dev\n    {% endif %}\n  run:\n    - python\n    - {{ pin_compatible('openmm', max_pin='x.x') }}\n    - ocl-icd  # [linux]\n    - ocl-icd-system  # [linux]\n    - khronos-opencl-icd-loader  # [osx]\n    - ocl_icd_wrapper_apple      # [osx]\n\ntest:\n  imports:\n    - nonbondedslicing\n  commands: |\n    cd ${CONDA_PREFIX}/share/openmm-nonbonded-slicing/tests\n    ls -al\n    set +e\n    summary=\"\"\n    exitcode=0\n    for f in Test*; do\n      if [[ $f == *Cuda* || $f == *OpenCL* ]]; then\n        continue\n      fi\n      echo \"Running $f...\"\n      ./${f}\n      thisexitcode=$?\n      summary+=\"\\n${f}: \"\n      if [[ $thisexitcode == 0 ]]; then summary+=\"OK\"; else summary+=\"FAILED\"; fi\n      ((exitcode+=$thisexitcode))\n    done\n    echo \"-------\"\n    echo \"Summary\"\n    echo \"-------\"\n    echo -e \"${summary}\"\n    exit $exitcode\n\nabout:\n  home: https://github.com/craabreu/openmm-nonbonded-slicing\n  summary: 'An OpenMM plugin for slicing nonbonded interactions'\n  description: |\n    This plugin contains the SlicedNonbondedForce class, a variant of\n    OpenMM's NonbondedForce. By partitioning all particles among disjoint\n    subsets, the total potential energy becomes a linear combination of\n    contributions from pairs of subsets.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.md\n  doc_url: https://craabreu.github.io/openmm-nonbonded-slicing\n  dev_url: https://github.com/craabreu/openmm-nonbonded-slicing\n\nextra:\n  recipe-maintainers:\n    - craabreu\n    - jananzhu\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cdt_stub",
      "cmake",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "khronos-opencl-icd-loader",
      "make",
      "ocl-icd",
      "ocl-icd-system",
      "ocl_icd_wrapper_apple",
      "openmm",
      "pip",
      "python",
      "swig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "khronos-opencl-icd-loader",
        "ocl-icd",
        "openmm",
        "pip",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "khronos-opencl-icd-loader",
        "ocl-icd",
        "ocl-icd-system",
        "ocl_icd_wrapper_apple",
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cdt_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "ocl-icd",
        "openmm >=8.0.0",
        "pip",
        "python",
        "swig <4.1"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "ocl-icd",
        "ocl-icd-system",
        "ocl_icd_wrapper_apple",
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/craabreu/openmm-nonbonded-slicing/archive/v0.2.2.tar.gz",
  "version": "0.2.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openmm-nonbonded-slicing.json"
  }
}