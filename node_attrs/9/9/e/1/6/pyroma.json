{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "c921c1b182769a76ea3ce3d6efc265330f1f3ba5",
  "feedstock_hash_ts": 1752613845,
  "feedstock_name": "pyroma",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Pyroma rhymes with aroma, and is a product aimed at giving a rating of how well a Python project complies with the best practices of the Python packaging ecosystem, primarily PyPI, pip, Distribute etc, as well as a list of issues that could be improved.\nThe aim of this is both to help people make a project that is nice and usable, but also to improve the quality of Python third-party software, making it easier and more enjoyable to use the vast array of available modules for Python.\nIt’s written so that there are a library with methods to call from Python, as well as a script, also called pyroma.\n",
      "dev_url": "https://github.com/regebro/pyroma",
      "doc_url": "https://github.com/regebro/pyroma/blob/master/README.rst",
      "home": "https://github.com/regebro/pyroma/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Test your project's packaging friendliness"
    },
    "build": {
      "entry_points": [
        "pyroma = pyroma:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "CAM-Gerlach",
        "jakirkham"
      ]
    },
    "package": {
      "name": "pyroma",
      "version": "5.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools >=42"
      ],
      "run": [
        "docutils",
        "packaging",
        "pygments",
        "python >=3.9",
        "python-build >=0.7.0",
        "requests",
        "setuptools >=61",
        "trove-classifiers >=2022.6.26"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "20b28f5ad08d2588618ac3a2f0a7ba7a4febe6aa514963e4211cfa6d2ad81eb5",
      "url": "https://pypi.org/packages/source/p/pyroma/pyroma-5.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pyroma --help",
        "cp -r $SRC_DIR/pyroma/testdata $(python -c 'from pathlib import Path; import pyroma; print(Path(pyroma.__file__).parent)')/testdata",
        "python -b -X dev -m pytest -v --pyargs pyroma.tests::ProjectDataTest pyroma.tests::DistroDataTest pyroma.tests::PyPITest"
      ],
      "imports": [
        "pyroma"
      ],
      "requires": [
        "flit-core >=3.4,<4",
        "pip >=21",
        "python 3.9",
        "pytest",
        "setuptools >=61"
      ],
      "source_files": [
        "pyroma/testdata"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docutils",
        "packaging",
        "pygments",
        "python",
        "python-build",
        "requests",
        "setuptools",
        "trove-classifiers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "pytest",
        "python",
        "setuptools"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Pyroma rhymes with aroma, and is a product aimed at giving a rating of how well a Python project complies with the best practices of the Python packaging ecosystem, primarily PyPI, pip, Distribute etc, as well as a list of issues that could be improved.\nThe aim of this is both to help people make a project that is nice and usable, but also to improve the quality of Python third-party software, making it easier and more enjoyable to use the vast array of available modules for Python.\nIt’s written so that there are a library with methods to call from Python, as well as a script, also called pyroma.\n",
      "dev_url": "https://github.com/regebro/pyroma",
      "doc_url": "https://github.com/regebro/pyroma/blob/master/README.rst",
      "home": "https://github.com/regebro/pyroma/",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Test your project's packaging friendliness"
    },
    "build": {
      "entry_points": [
        "pyroma = pyroma:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "CAM-Gerlach",
        "jakirkham"
      ]
    },
    "package": {
      "name": "pyroma",
      "version": "5.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools >=42"
      ],
      "run": [
        "docutils",
        "packaging",
        "pygments",
        "python >=3.9",
        "python-build >=0.7.0",
        "requests",
        "setuptools >=61",
        "trove-classifiers >=2022.6.26"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "20b28f5ad08d2588618ac3a2f0a7ba7a4febe6aa514963e4211cfa6d2ad81eb5",
      "url": "https://pypi.org/packages/source/p/pyroma/pyroma-5.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pyroma --help",
        "cp -r $SRC_DIR/pyroma/testdata $(python -c 'from pathlib import Path; import pyroma; print(Path(pyroma.__file__).parent)')/testdata",
        "python -b -X dev -m pytest -v --pyargs pyroma.tests::ProjectDataTest pyroma.tests::DistroDataTest pyroma.tests::PyPITest"
      ],
      "imports": [
        "pyroma"
      ],
      "requires": [
        "flit-core >=3.4,<4",
        "pip >=21",
        "python 3.9",
        "pytest",
        "setuptools >=61"
      ],
      "source_files": [
        "pyroma/testdata"
      ]
    }
  },
  "name": "pyroma",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyroma"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyroma.json"
  },
  "raw_meta_yaml": "{% set name = \"pyroma\" %}\n{% set import = \"pyroma\" %}\n{% set entrypoint = \"pyroma\" %}\n{% set version = \"5.0\" %}\n{% set sha256 = \"20b28f5ad08d2588618ac3a2f0a7ba7a4febe6aa514963e4211cfa6d2ad81eb5\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - {{ entrypoint }} = {{ import }}:main\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n    - setuptools >=42\n\n  run:\n    - docutils\n    - packaging\n    - pygments  # Required internally by docutils for readme check to work\n    - python >={{ python_min }}\n    - python-build >=0.7.0\n    - requests\n    - setuptools >=61\n    - trove-classifiers >=2022.6.26\n\ntest:\n  requires:\n    - flit-core >=3.4,<4\n    - pip >=21  # For pip check\n    - python {{ python_min }}\n    - pytest\n    - setuptools >=61\n\n  source_files:\n    # Test data to copy to installed package\n    - {{ import }}/testdata\n\n  imports:\n    - {{ import }}\n\n  commands:\n    - pip check\n    - {{ entrypoint }} --help\n    # Copy the test data into the expected place, since it isn't normally installed with the package\n    - cp -r $SRC_DIR/{{ import }}/testdata $(python -c 'from pathlib import Path; import {{ import }}; print(Path({{ import }}.__file__).parent)')/testdata\n    - python -b -X dev -m pytest -v --pyargs pyroma.tests::ProjectDataTest pyroma.tests::DistroDataTest pyroma.tests::PyPITest\n\nabout:\n  home: https://github.com/regebro/pyroma/\n  license: MIT\n  license_file: LICENSE.txt\n  summary: Test your project's packaging friendliness\n  description: |\n    Pyroma rhymes with aroma, and is a product aimed at giving a rating of how well a Python project complies with the best practices of the Python packaging ecosystem, primarily PyPI, pip, Distribute etc, as well as a list of issues that could be improved.\n    The aim of this is both to help people make a project that is nice and usable, but also to improve the quality of Python third-party software, making it easier and more enjoyable to use the vast array of available modules for Python.\n    It’s written so that there are a library with methods to call from Python, as well as a script, also called pyroma.\n  dev_url: https://github.com/regebro/pyroma\n  doc_url: https://github.com/regebro/pyroma/blob/master/README.rst\n\nextra:\n  recipe-maintainers:\n    - CAM-Gerlach\n    - jakirkham\n",
  "req": {
    "__set__": true,
    "elements": [
      "docutils",
      "packaging",
      "pip",
      "pygments",
      "python",
      "python-build",
      "requests",
      "setuptools",
      "trove-classifiers"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docutils",
        "packaging",
        "pygments",
        "python",
        "python-build",
        "requests",
        "setuptools",
        "trove-classifiers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "pytest",
        "python",
        "setuptools"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools >=42"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "docutils",
        "packaging",
        "pygments",
        "python >=3.9",
        "python-build >=0.7.0",
        "requests",
        "setuptools >=61",
        "trove-classifiers >=2022.6.26"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "flit-core >=3.4,<4",
        "pip >=21",
        "pytest",
        "python 3.9",
        "setuptools >=61"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyroma/pyroma-5.0.tar.gz",
  "version": "5.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyroma.json"
  }
}