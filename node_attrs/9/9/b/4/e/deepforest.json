{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "deepforest",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "DeepForest is a python package for training and predicting individual\ntree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\nmodel trained on data from the National Ecological Observation Network.\nUsers can extend this model by annotating and training custom models\nstarting from the prebuilt model.\n\nDeepForest es un paquete de python para la predicción\nde coronas de árboles individuales basada en modelos entrenados\ncon imágenes remotas RVA ( RGB, por sus siglas en inglés).\nDeepForest viene con un modelo entrenado con datos proveídos por la\nRed Nacional de Observatorios Ecológicos (NEON, por sus siglas en inglés).\nLos usuarios pueden ampliar este modelo pre-construido por anotación\nde etiquetas y entrenamiento con datos locales. La documentación de\nDeepForest está escrita en inglés, sin embargo, agradeceríamos\ncontribuciones con fin de hacerla accesible en otros idiomas.\n",
      "dev_url": "https://github.com/weecology/DeepForest",
      "doc_url": "https://deepforest.readthedocs.io/en/latest/",
      "home": "https://github.com/weecology/DeepForest",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python Package for Tree Crown Detection in Airborne RGB imagery"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": [
        "PYTHON -m pip install . --no-deps --ignore-installed -vv "
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bw4sz",
        "henrykironde",
        "ethanwhite"
      ]
    },
    "package": {
      "name": "deepforest",
      "version": "1.5.2"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip >=20.1",
        "numpy"
      ],
      "run": [
        "aiohttp",
        "aiolimiter",
        "albumentations >=1.0.0",
        "docformatter",
        "docutils <0.18",
        "geopandas",
        "h5py",
        "huggingface_hub >=0.25.0",
        "imagecodecs",
        "matplotlib",
        "nbmake",
        "nbqa",
        "nbsphinx",
        "numpy",
        "numpydoc",
        "opencv >=4.5.4",
        "pandas",
        "pillow >6.2.0",
        "pip",
        "pycocotools",
        "pydata-sphinx-theme",
        "pygments",
        "pytest",
        "pytest-profiling",
        "python >=3.9",
        "pytorch",
        "pytorch-lightning >=1.5.8",
        "rasterio",
        "recommonmark",
        "rtree",
        "safetensors",
        "setuptools <59.6.0",
        "slidingwindow",
        "sphinx",
        "sphinx-design",
        "sphinx-markdown-tables",
        "sphinx_rtd_theme",
        "supervision",
        "torchvision >=0.13",
        "tqdm",
        "xmltodict"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7f987aef5e85812da324a8023c92e1e3c7fcb5a0143c6f8383c247da67fad23",
      "url": "https://pypi.org/packages/source/d/deepforest/deepforest-1.5.2.tar.gz"
    },
    "test": {
      "commands": [
        "echo \"No tests run on feedstock PR\""
      ],
      "imports": [
        "deepforest",
        "deepforest.main"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "aiolimiter",
        "albumentations",
        "docformatter",
        "docutils",
        "geopandas",
        "h5py",
        "huggingface_hub",
        "imagecodecs",
        "matplotlib",
        "nbmake",
        "nbqa",
        "nbsphinx",
        "numpy",
        "numpydoc",
        "opencv",
        "pandas",
        "pillow",
        "pip",
        "pycocotools",
        "pydata-sphinx-theme",
        "pygments",
        "pytest",
        "pytest-profiling",
        "python",
        "pytorch",
        "pytorch-lightning",
        "rasterio",
        "recommonmark",
        "rtree",
        "safetensors",
        "setuptools",
        "slidingwindow",
        "sphinx",
        "sphinx-design",
        "sphinx-markdown-tables",
        "sphinx_rtd_theme",
        "supervision",
        "torchvision",
        "tqdm",
        "xmltodict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "DeepForest is a python package for training and predicting individual\ntree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\nmodel trained on data from the National Ecological Observation Network.\nUsers can extend this model by annotating and training custom models\nstarting from the prebuilt model.\n\nDeepForest es un paquete de python para la predicción\nde coronas de árboles individuales basada en modelos entrenados\ncon imágenes remotas RVA ( RGB, por sus siglas en inglés).\nDeepForest viene con un modelo entrenado con datos proveídos por la\nRed Nacional de Observatorios Ecológicos (NEON, por sus siglas en inglés).\nLos usuarios pueden ampliar este modelo pre-construido por anotación\nde etiquetas y entrenamiento con datos locales. La documentación de\nDeepForest está escrita en inglés, sin embargo, agradeceríamos\ncontribuciones con fin de hacerla accesible en otros idiomas.\n",
      "dev_url": "https://github.com/weecology/DeepForest",
      "doc_url": "https://deepforest.readthedocs.io/en/latest/",
      "home": "https://github.com/weecology/DeepForest",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python Package for Tree Crown Detection in Airborne RGB imagery"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": [
        "PYTHON -m pip install . --no-deps --ignore-installed -vv "
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bw4sz",
        "henrykironde",
        "ethanwhite"
      ]
    },
    "package": {
      "name": "deepforest",
      "version": "1.5.2"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip >=20.1",
        "numpy"
      ],
      "run": [
        "aiohttp",
        "aiolimiter",
        "albumentations >=1.0.0",
        "docformatter",
        "docutils <0.18",
        "geopandas",
        "h5py",
        "huggingface_hub >=0.25.0",
        "imagecodecs",
        "matplotlib",
        "nbmake",
        "nbqa",
        "nbsphinx",
        "numpy",
        "numpydoc",
        "opencv >=4.5.4",
        "pandas",
        "pillow >6.2.0",
        "pip",
        "pycocotools",
        "pydata-sphinx-theme",
        "pygments",
        "pytest",
        "pytest-profiling",
        "python >=3.9",
        "pytorch",
        "pytorch-lightning >=1.5.8",
        "rasterio",
        "recommonmark",
        "rtree",
        "safetensors",
        "setuptools <59.6.0",
        "slidingwindow",
        "sphinx",
        "sphinx-design",
        "sphinx-markdown-tables",
        "sphinx_rtd_theme",
        "supervision",
        "torchvision >=0.13",
        "tqdm",
        "xmltodict"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a7f987aef5e85812da324a8023c92e1e3c7fcb5a0143c6f8383c247da67fad23",
      "url": "https://pypi.org/packages/source/d/deepforest/deepforest-1.5.2.tar.gz"
    },
    "test": {
      "commands": [
        "echo \"No tests run on feedstock PR\""
      ],
      "imports": [
        "deepforest",
        "deepforest.main"
      ],
      "requires": [
        "python 3.9"
      ]
    }
  },
  "name": "deepforest",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "deepforest"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/deepforest.json"
  },
  "raw_meta_yaml": "{% set name = \"deepforest\" %}\n{% set version = \"1.5.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: a7f987aef5e85812da324a8023c92e1e3c7fcb5a0143c6f8383c247da67fad23\n\nbuild:\n  noarch: python\n  number: 0\n  script:\n    - '{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv '\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip >=20.1\n    - numpy\n  run:\n    - aiohttp\n    - aiolimiter\n    - albumentations >=1.0.0\n    - docformatter\n    - docutils <0.18\n    - geopandas\n    - h5py\n    - huggingface_hub >=0.25.0\n    - imagecodecs\n    - matplotlib\n    - nbmake\n    - nbqa\n    - nbsphinx\n    - {{ pin_compatible('numpy') }}\n    - numpydoc\n    - opencv >=4.5.4\n    - pandas\n    - pillow >6.2.0\n    - pip\n    - pycocotools\n    - pydata-sphinx-theme\n    - pygments\n    - pytest\n    - pytest-profiling\n    - python >={{ python_min }}\n    - pytorch\n    - pytorch-lightning >=1.5.8\n    - rasterio\n    - recommonmark\n    - rtree\n    - safetensors\n    - setuptools <59.6.0\n    - slidingwindow\n    - sphinx\n    - sphinx-design\n    - sphinx-markdown-tables\n    - sphinx_rtd_theme\n    - supervision\n    - torchvision >=0.13\n    - tqdm\n    - xmltodict\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - deepforest\n    - deepforest.main\n  commands:\n    - echo \"No tests run on feedstock PR\"\n\nabout:\n  home: https://github.com/weecology/DeepForest\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python Package for Tree Crown Detection in Airborne RGB imagery\n  description: |\n    DeepForest is a python package for training and predicting individual\n    tree crowns from airborne RGB imagery. DeepForest comes with a prebuilt\n    model trained on data from the National Ecological Observation Network.\n    Users can extend this model by annotating and training custom models\n    starting from the prebuilt model.\n\n    DeepForest es un paquete de python para la predicción\n    de coronas de árboles individuales basada en modelos entrenados\n    con imágenes remotas RVA ( RGB, por sus siglas en inglés).\n    DeepForest viene con un modelo entrenado con datos proveídos por la\n    Red Nacional de Observatorios Ecológicos (NEON, por sus siglas en inglés).\n    Los usuarios pueden ampliar este modelo pre-construido por anotación\n    de etiquetas y entrenamiento con datos locales. La documentación de\n    DeepForest está escrita en inglés, sin embargo, agradeceríamos\n    contribuciones con fin de hacerla accesible en otros idiomas.\n  doc_url: https://deepforest.readthedocs.io/en/latest/\n  dev_url: https://github.com/weecology/DeepForest\n\nextra:\n  recipe-maintainers:\n    - bw4sz\n    - henrykironde\n    - ethanwhite\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "aiolimiter",
      "albumentations",
      "docformatter",
      "docutils",
      "geopandas",
      "h5py",
      "huggingface_hub",
      "imagecodecs",
      "matplotlib",
      "nbmake",
      "nbqa",
      "nbsphinx",
      "numpy",
      "numpydoc",
      "opencv",
      "pandas",
      "pillow",
      "pip",
      "pycocotools",
      "pydata-sphinx-theme",
      "pygments",
      "pytest",
      "pytest-profiling",
      "python",
      "pytorch",
      "pytorch-lightning",
      "rasterio",
      "recommonmark",
      "rtree",
      "safetensors",
      "setuptools",
      "slidingwindow",
      "sphinx",
      "sphinx-design",
      "sphinx-markdown-tables",
      "sphinx_rtd_theme",
      "supervision",
      "torchvision",
      "tqdm",
      "xmltodict"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "aiolimiter",
        "albumentations",
        "docformatter",
        "docutils",
        "geopandas",
        "h5py",
        "huggingface_hub",
        "imagecodecs",
        "matplotlib",
        "nbmake",
        "nbqa",
        "nbsphinx",
        "numpy",
        "numpydoc",
        "opencv",
        "pandas",
        "pillow",
        "pip",
        "pycocotools",
        "pydata-sphinx-theme",
        "pygments",
        "pytest",
        "pytest-profiling",
        "python",
        "pytorch",
        "pytorch-lightning",
        "rasterio",
        "recommonmark",
        "rtree",
        "safetensors",
        "setuptools",
        "slidingwindow",
        "sphinx",
        "sphinx-design",
        "sphinx-markdown-tables",
        "sphinx_rtd_theme",
        "supervision",
        "torchvision",
        "tqdm",
        "xmltodict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip >=20.1",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "aiolimiter",
        "albumentations >=1.0.0",
        "docformatter",
        "docutils <0.18",
        "geopandas",
        "h5py",
        "huggingface_hub >=0.25.0",
        "imagecodecs",
        "matplotlib",
        "nbmake",
        "nbqa",
        "nbsphinx",
        "numpy",
        "numpydoc",
        "opencv >=4.5.4",
        "pandas",
        "pillow >6.2.0",
        "pip",
        "pycocotools",
        "pydata-sphinx-theme",
        "pygments",
        "pytest",
        "pytest-profiling",
        "python >=3.9",
        "pytorch",
        "pytorch-lightning >=1.5.8",
        "rasterio",
        "recommonmark",
        "rtree",
        "safetensors",
        "setuptools <59.6.0",
        "slidingwindow",
        "sphinx",
        "sphinx-design",
        "sphinx-markdown-tables",
        "sphinx_rtd_theme",
        "supervision",
        "torchvision >=0.13",
        "tqdm",
        "xmltodict"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/d/deepforest/deepforest-1.5.2.tar.gz",
  "version": "1.5.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/deepforest.json"
  }
}