{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "os_version": {
      "linux_64": "cos7"
    }
  },
  "feedstock_hash": "3b45cda1e2c521a4e2581da9554721648800d791",
  "feedstock_hash_ts": 1730893664,
  "feedstock_name": "pyomicron",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This package provides a set of python utilities for gravitational-wave\ndetector characterisation and data quality. It is intended for use by\nthe International Gravitational Wave Network (IGWN) of ground-based\ndetectors, along with the Omicron (C++) package.\n",
      "dev_url": "https://github.com/gwpy/pyomicron.git",
      "doc_url": "https://pyomicron.readthedocs.io",
      "home": "https://github.com/gwpy/pyomicron",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Python utilities and extensions for the Omicron (C++) GW event trigger generator"
    },
    "build": {
      "entry_points": [
        "omicron-hdf5-merge = omicron.cli.hdf5_merge:main",
        "omicron-show = omicron.cli.show:main",
        "omicron-process = omicron.cli.process:main",
        "omicron-root-merge = omicron.cli.root_merge:main",
        "omicron-status = omicron.cli.status:main",
        "omicron-archive = omicron.cli.archive:main",
        "omicron-merge-with-gaps = omicron.cli.merge_with_gaps:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "areeda",
        "duncanmmacleod",
        "eagoetz",
        "robertbruntz"
      ]
    },
    "package": {
      "name": "pyomicron",
      "version": "2.0.8"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.9",
        "setuptools"
      ],
      "run": [
        "dqsegdb2 >=1.2.0",
        "gwdatafind",
        "gwpy >=2.0.0",
        "h5py",
        "igwn-auth-utils >=0.3.0",
        "ligo-segments",
        "lscsoft-glue >=1.60.0",
        "markuppy",
        "numpy",
        "omicron >=2.3.12",
        "pycondor",
        "python >=3.9",
        "python-htcondor",
        "python-ldas-tools-framecpp",
        "python-ligo-lw >=1.4.0",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "27ae6b981dae8c9940774daa01a046c7eeae5aacfb01964bbde875ba3656ba67",
      "url": "https://pypi.io/packages/source/p/pyomicron/pyomicron-2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pyomicron",
        "python -m pytest -ra --pyargs omicron",
        "omicron-hdf5-merge --help",
        "omicron-show --help",
        "omicron-process --help",
        "omicron-root-merge --help",
        "omicron-status --help",
        "omicron-archive --help",
        "omicron-merge-with-gaps --help"
      ],
      "imports": [
        "omicron",
        "omicron.cli",
        "omicron.condor",
        "omicron.const",
        "omicron.data",
        "omicron.io",
        "omicron.log",
        "omicron.nagios",
        "omicron.parameters",
        "omicron.segments",
        "omicron.utils"
      ],
      "requires": [
        "pip",
        "pytest >=3.9.1"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dqsegdb2",
        "gwdatafind",
        "gwpy",
        "h5py",
        "igwn-auth-utils",
        "ligo-segments",
        "lscsoft-glue",
        "markuppy",
        "numpy",
        "omicron",
        "pycondor",
        "python",
        "python-htcondor",
        "python-ldas-tools-framecpp",
        "python-ligo-lw",
        "root_base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This package provides a set of python utilities for gravitational-wave\ndetector characterisation and data quality. It is intended for use by\nthe International Gravitational Wave Network (IGWN) of ground-based\ndetectors, along with the Omicron (C++) package.\n",
      "dev_url": "https://github.com/gwpy/pyomicron.git",
      "doc_url": "https://pyomicron.readthedocs.io",
      "home": "https://github.com/gwpy/pyomicron",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "LICENSE",
      "summary": "Python utilities and extensions for the Omicron (C++) GW event trigger generator"
    },
    "build": {
      "entry_points": [
        "omicron-hdf5-merge = omicron.cli.hdf5_merge:main",
        "omicron-show = omicron.cli.show:main",
        "omicron-process = omicron.cli.process:main",
        "omicron-root-merge = omicron.cli.root_merge:main",
        "omicron-status = omicron.cli.status:main",
        "omicron-archive = omicron.cli.archive:main",
        "omicron-merge-with-gaps = omicron.cli.merge_with_gaps:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "areeda",
        "duncanmmacleod",
        "eagoetz",
        "robertbruntz"
      ]
    },
    "package": {
      "name": "pyomicron",
      "version": "2.0.8"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.9",
        "setuptools"
      ],
      "run": [
        "dqsegdb2 >=1.2.0",
        "gwdatafind",
        "gwpy >=2.0.0",
        "h5py",
        "igwn-auth-utils >=0.3.0",
        "ligo-segments",
        "lscsoft-glue >=1.60.0",
        "markuppy",
        "numpy",
        "omicron >=2.3.12",
        "pycondor",
        "python >=3.9",
        "python-htcondor",
        "python-ldas-tools-framecpp",
        "python-ligo-lw >=1.4.0",
        "root_base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "27ae6b981dae8c9940774daa01a046c7eeae5aacfb01964bbde875ba3656ba67",
      "url": "https://pypi.io/packages/source/p/pyomicron/pyomicron-2.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "python -m pip check",
        "python -m pip show pyomicron",
        "python -m pytest -ra --pyargs omicron",
        "omicron-hdf5-merge --help",
        "omicron-show --help",
        "omicron-process --help",
        "omicron-root-merge --help",
        "omicron-status --help",
        "omicron-archive --help",
        "omicron-merge-with-gaps --help"
      ],
      "imports": [
        "omicron",
        "omicron.cli",
        "omicron.condor",
        "omicron.const",
        "omicron.data",
        "omicron.io",
        "omicron.log",
        "omicron.nagios",
        "omicron.parameters",
        "omicron.segments",
        "omicron.utils"
      ],
      "requires": [
        "pip",
        "pytest >=3.9.1"
      ]
    }
  },
  "name": "pyomicron",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyomicron"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyomicron.json"
  },
  "raw_meta_yaml": "{% set name = \"pyomicron\" %}\n{% set version = \"2.0.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 27ae6b981dae8c9940774daa01a046c7eeae5aacfb01964bbde875ba3656ba67\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - omicron-hdf5-merge = omicron.cli.hdf5_merge:main\n    - omicron-show = omicron.cli.show:main\n    - omicron-process = omicron.cli.process:main\n    - omicron-root-merge = omicron.cli.root_merge:main\n    - omicron-status = omicron.cli.status:main\n    - omicron-archive = omicron.cli.archive:main\n    - omicron-merge-with-gaps = omicron.cli.merge_with_gaps:main\n\nrequirements:\n  host:\n    - pip\n    - python >=3.9\n    - setuptools\n  run:\n    - dqsegdb2 >=1.2.0\n    - gwdatafind\n    - gwpy >=2.0.0\n    - h5py\n    - igwn-auth-utils >=0.3.0\n    - ligo-segments\n    - lscsoft-glue >=1.60.0\n    - markuppy\n    - numpy\n    - omicron >=2.3.12\n    - pycondor\n    - python >=3.9\n    - python-htcondor\n    - python-ldas-tools-framecpp\n    - python-ligo-lw >=1.4.0\n    - root_base\n\ntest:\n  requires:\n    - pip\n    - pytest >=3.9.1\n  imports:\n    - omicron\n    - omicron.cli\n    - omicron.condor\n    - omicron.const\n    - omicron.data\n    - omicron.io\n    - omicron.log\n    - omicron.nagios\n    - omicron.parameters\n    - omicron.segments\n    - omicron.utils\n  commands:\n    # check dependencies\n    - python -m pip check\n    - python -m pip show pyomicron\n    # run unit tests\n    - python -m pytest -ra --pyargs omicron\n    # check that scripts were built\n    - omicron-hdf5-merge --help\n    - omicron-show --help\n    - omicron-process --help\n    - omicron-root-merge --help\n    - omicron-status --help\n    - omicron-archive --help\n    - omicron-merge-with-gaps --help\n\nabout:\n  home: https://github.com/gwpy/pyomicron\n  dev_url: https://github.com/gwpy/pyomicron.git\n  doc_url: https://pyomicron.readthedocs.io\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: LICENSE\n  summary: Python utilities and extensions for the Omicron (C++) GW event trigger generator\n  description: |\n    This package provides a set of python utilities for gravitational-wave\n    detector characterisation and data quality. It is intended for use by\n    the International Gravitational Wave Network (IGWN) of ground-based\n    detectors, along with the Omicron (C++) package.\n\nextra:\n  recipe-maintainers:\n    - areeda\n    - duncanmmacleod\n    - eagoetz\n    - robertbruntz\n",
  "req": {
    "__set__": true,
    "elements": [
      "dqsegdb2",
      "gwdatafind",
      "gwpy",
      "h5py",
      "igwn-auth-utils",
      "ligo-segments",
      "lscsoft-glue",
      "markuppy",
      "numpy",
      "omicron",
      "pip",
      "pycondor",
      "python",
      "python-htcondor",
      "python-ldas-tools-framecpp",
      "python-ligo-lw",
      "root_base",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dqsegdb2",
        "gwdatafind",
        "gwpy",
        "h5py",
        "igwn-auth-utils",
        "ligo-segments",
        "lscsoft-glue",
        "markuppy",
        "numpy",
        "omicron",
        "pycondor",
        "python",
        "python-htcondor",
        "python-ldas-tools-framecpp",
        "python-ligo-lw",
        "root_base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dqsegdb2 >=1.2.0",
        "gwdatafind",
        "gwpy >=2.0.0",
        "h5py",
        "igwn-auth-utils >=0.3.0",
        "ligo-segments",
        "lscsoft-glue >=1.60.0",
        "markuppy",
        "numpy",
        "omicron >=2.3.12",
        "pycondor",
        "python >=3.9",
        "python-htcondor",
        "python-ldas-tools-framecpp",
        "python-ligo-lw >=1.4.0",
        "root_base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest >=3.9.1"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/p/pyomicron/pyomicron-2.0.8.tar.gz",
  "version": "2.0.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyomicron.json"
  }
}