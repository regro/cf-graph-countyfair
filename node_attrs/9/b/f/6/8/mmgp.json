{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "mmgp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "MMGP is the name of the numerical method proposed at SafranTech, the research center of Safran group, in the paper: Mesh Morphing Gaussian Process-based machine learning method for regression of physical problems under non-parameterized geometrical variability. MMGP also refers to this library, which implements this methods.\n",
      "dev_url": "https://gitlab.com/drti/mmgp",
      "doc_url": "https://mmgp.readthedocs.io",
      "home": "https://gitlab.com/drti/mmgp",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Mesh Morphing Gaussian Process (MMGP)"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=0.0.8"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bstaber",
        "casenave",
        "xroynard"
      ]
    },
    "package": {
      "name": "mmgp",
      "version": "0.0.8"
    },
    "requirements": {
      "host": [
        "python >=3.11",
        "setuptools",
        "setuptools-scm",
        "pip"
      ],
      "run": [
        "python >=3.11",
        "plaid",
        "muscat",
        "scikit-learn",
        "gpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c7a98a92ba4d27eeee65512b47f286af7bf7f5fe4fbceea21ebc78d32560d166",
      "url": "https://gitlab.com/drti/mmgp/-/archive/0.0.8/mmgp-0.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "cd tests",
        "python -m pytest",
        "cd ../examples",
        "python run_examples.py --backend scikit-learn",
        "python run_examples.py --backend GPy"
      ],
      "imports": [
        "mmgp"
      ],
      "requires": [
        "pytest",
        "deepdiff"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gpy",
        "muscat",
        "plaid",
        "python",
        "scikit-learn"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "deepdiff",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "MMGP is the name of the numerical method proposed at SafranTech, the research center of Safran group, in the paper: Mesh Morphing Gaussian Process-based machine learning method for regression of physical problems under non-parameterized geometrical variability. MMGP also refers to this library, which implements this methods.\n",
      "dev_url": "https://gitlab.com/drti/mmgp",
      "doc_url": "https://mmgp.readthedocs.io",
      "home": "https://gitlab.com/drti/mmgp",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Mesh Morphing Gaussian Process (MMGP)"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "SETUPTOOLS_SCM_PRETEND_VERSION=0.0.8"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bstaber",
        "casenave",
        "xroynard"
      ]
    },
    "package": {
      "name": "mmgp",
      "version": "0.0.8"
    },
    "requirements": {
      "host": [
        "python >=3.11",
        "setuptools",
        "setuptools-scm",
        "pip"
      ],
      "run": [
        "python >=3.11",
        "plaid",
        "muscat",
        "scikit-learn",
        "gpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c7a98a92ba4d27eeee65512b47f286af7bf7f5fe4fbceea21ebc78d32560d166",
      "url": "https://gitlab.com/drti/mmgp/-/archive/0.0.8/mmgp-0.0.8.tar.gz"
    },
    "test": {
      "commands": [
        "cd tests",
        "python -m pytest",
        "cd ../examples",
        "python run_examples.py --backend scikit-learn",
        "python run_examples.py --backend GPy"
      ],
      "imports": [
        "mmgp"
      ],
      "requires": [
        "pytest",
        "deepdiff"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "name": "mmgp",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mmgp"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mmgp.json"
  },
  "raw_meta_yaml": "{% set version = \"0.0.8\" %}\n\npackage:\n  name: mmgp\n  version: {{ version }}\n\nsource:\n  url: https://gitlab.com/drti/mmgp/-/archive/{{ version }}/mmgp-{{ version }}.tar.gz\n  sha256: c7a98a92ba4d27eeee65512b47f286af7bf7f5fe4fbceea21ebc78d32560d166\n\nbuild:\n  script_env:\n    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}\n  script: {{ PYTHON }} -m pip install . -vv\n  noarch: python\n  number: 0\n\nrequirements:\n  host:\n    - python >=3.11\n    - setuptools\n    - setuptools-scm\n    - pip\n\n  run:\n    - python >=3.11\n    - plaid\n    - muscat\n    - scikit-learn\n    - gpy\n    \ntest:\n  requires:\n    - pytest\n    - deepdiff\n  imports:\n    - mmgp\n  source_files:\n    - tests\n    - examples\n  commands:\n    - cd tests\n    - python -m pytest\n    - cd ../examples\n    - python run_examples.py --backend scikit-learn\n    - python run_examples.py --backend GPy\n\nabout:\n  home: https://gitlab.com/drti/mmgp\n  summary: 'Mesh Morphing Gaussian Process (MMGP)'\n  description: |\n    MMGP is the name of the numerical method proposed at SafranTech, the research center of Safran group, in the paper: Mesh Morphing Gaussian Process-based machine learning method for regression of physical problems under non-parameterized geometrical variability. MMGP also refers to this library, which implements this methods.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  doc_url: https://mmgp.readthedocs.io\n  dev_url: https://gitlab.com/drti/mmgp\n\nextra:\n  recipe-maintainers:\n    - bstaber\n    - casenave\n    - xroynard\n",
  "req": {
    "__set__": true,
    "elements": [
      "gpy",
      "muscat",
      "pip",
      "plaid",
      "python",
      "scikit-learn",
      "setuptools",
      "setuptools-scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gpy",
        "muscat",
        "plaid",
        "python",
        "scikit-learn"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "deepdiff",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.11",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gpy",
        "muscat",
        "plaid",
        "python >=3.11",
        "scikit-learn"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "deepdiff",
        "pytest"
      ]
    }
  },
  "url": "https://gitlab.com/drti/mmgp/-/archive/0.0.8/mmgp-0.0.8.tar.gz",
  "version": "0.0.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mmgp.json"
  }
}