{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "noarch_platforms": [
      "linux_64",
      "osx_64",
      "win_64"
    ],
    "test": "native_and_emulated"
  },
  "feedstock_name": "pythran",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
      "dev_url": "https://github.com/serge-sans-paille/pythran",
      "doc_url": "https://pythran.readthedocs.io/",
      "home": "http://github.com/serge-sans-paille/pythran",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "a claimless python to c++ converter"
    },
    "build": {
      "entry_points": [
        "pythran = pythran.run:run",
        "pythran-config = pythran.config:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": [
        "python -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "saraedum",
        "serge-sans-paille",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "pythran",
      "version": "0.18.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "gxx",
        "python >=3.9",
        "decorator",
        "gast 0.6",
        "ply >=3.4",
        "colorlog",
        "beniget 0.4.*",
        "numpy",
        "__linux"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d3f879f86fde1c0eb62e02e52fbe30e2468fb59d8751b951b7cc6faf16e7df3e",
      "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.18.0.tar.gz"
    },
    "test": {
      "commands": [
        "pythran -v dprod.py",
        "python -c \"import dprod\"",
        "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
        "python -c \"import simple_numexpr\""
      ],
      "files": [
        "dprod.py",
        "simple_numexpr.py"
      ],
      "imports": [
        "omp",
        "pythran",
        "pythran.analyses",
        "pythran.optimizations",
        "pythran.transformations",
        "pythran.types"
      ],
      "requires": [
        "python 3.9",
        "setuptools <76"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__linux",
        "beniget",
        "colorlog",
        "decorator",
        "gast",
        "gxx",
        "numpy",
        "ply",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
      "dev_url": "https://github.com/serge-sans-paille/pythran",
      "doc_url": "https://pythran.readthedocs.io/",
      "home": "http://github.com/serge-sans-paille/pythran",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "a claimless python to c++ converter"
    },
    "build": {
      "entry_points": [
        "pythran = pythran.run:run",
        "pythran-config = pythran.config:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": [
        "python -m pip install . --no-deps -vv",
        "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
        "type pythran\\pythran-win32.cfg"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "saraedum",
        "serge-sans-paille",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "pythran",
      "version": "0.18.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "gxx",
        "python >=3.9",
        "decorator",
        "gast 0.6",
        "ply >=3.4",
        "colorlog",
        "beniget 0.4.*",
        "numpy",
        "__linux",
        "clangxx",
        "__osx",
        "__win"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d3f879f86fde1c0eb62e02e52fbe30e2468fb59d8751b951b7cc6faf16e7df3e",
      "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.18.0.tar.gz"
    },
    "test": {
      "commands": [
        "pythran -v dprod.py",
        "python -c \"import dprod\"",
        "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
        "python -c \"import simple_numexpr\""
      ],
      "files": [
        "dprod.py",
        "simple_numexpr.py"
      ],
      "imports": [
        "omp",
        "pythran",
        "pythran.analyses",
        "pythran.optimizations",
        "pythran.transformations",
        "pythran.types"
      ],
      "requires": [
        "python 3.9",
        "setuptools <76"
      ]
    }
  },
  "name": "pythran",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
      "dev_url": "https://github.com/serge-sans-paille/pythran",
      "doc_url": "https://pythran.readthedocs.io/",
      "home": "http://github.com/serge-sans-paille/pythran",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "a claimless python to c++ converter"
    },
    "build": {
      "entry_points": [
        "pythran = pythran.run:run",
        "pythran-config = pythran.config:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": [
        "python -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "saraedum",
        "serge-sans-paille",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "pythran",
      "version": "0.18.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "clangxx",
        "python >=3.9",
        "decorator",
        "gast 0.6",
        "ply >=3.4",
        "colorlog",
        "beniget 0.4.*",
        "numpy",
        "__osx"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d3f879f86fde1c0eb62e02e52fbe30e2468fb59d8751b951b7cc6faf16e7df3e",
      "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.18.0.tar.gz"
    },
    "test": {
      "commands": [
        "pythran -v dprod.py",
        "python -c \"import dprod\"",
        "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
        "python -c \"import simple_numexpr\""
      ],
      "files": [
        "dprod.py",
        "simple_numexpr.py"
      ],
      "imports": [
        "omp",
        "pythran",
        "pythran.analyses",
        "pythran.optimizations",
        "pythran.transformations",
        "pythran.types"
      ],
      "requires": [
        "python 3.9",
        "setuptools <76"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__osx",
        "beniget",
        "clangxx",
        "colorlog",
        "decorator",
        "gast",
        "numpy",
        "ply",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pythran"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pythran.json"
  },
  "raw_meta_yaml": "{% set version = \"0.18.0\" %}\n\npackage:\n  name: pythran\n  version: {{ version }}\n\nsource:\n  url: https://github.com/serge-sans-paille/pythran/archive/refs/tags/{{ version }}.tar.gz\n  sha256: d3f879f86fde1c0eb62e02e52fbe30e2468fb59d8751b951b7cc6faf16e7df3e\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    # on windows, pythran wrongly sets %PREFIX\\include instead of %PREFIX%\\Library\\include;\n    # pythran-win32.cfg already exists and has [compiler].include_dirs; we replace it on the fly;\n    # conda will detect the written environment-path and replace it as appropriate for user installs;\n    # note that we need r'...' for this due to paths like D:\\bld\\... where python would interpret \\b.\n    - \"python -c \\\"with open('pythran\\\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\\\"\"  # [win]\n    # sanity check to ensure this is set correctly\n    - type pythran\\pythran-win32.cfg  # [win]\n    - python -m pip install . --no-deps -vv\n  entry_points:\n    - pythran = pythran.run:run\n    - pythran-config = pythran.config:run\n\nrequirements:\n  build:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n  run:\n    - gxx                    # [linux]\n    - clangxx                # [osx or win]\n    - python >={{ python_min }}\n    - decorator\n    - gast 0.6\n    - ply >=3.4\n    - colorlog\n    - beniget 0.4.*\n    - numpy\n    - __linux                # [linux]\n    - __osx                  # [osx]\n    - __win                  # [win]\n\ntest:\n  requires:\n    - python {{ python_min }}\n    # hmaarrfk -- 2025/07/06\n    # Needed to find the compiler on windows for pythran 0.17.0\n    - setuptools <76\n  files:\n    - dprod.py\n    - simple_numexpr.py\n  commands:\n    - pythran -v dprod.py\n    - python -c \"import dprod\"\n    - pythran -v simple_numexpr.py -DUSE_XSIMD -march=native  # [not (ppc64le or (osx and arm64))]\n    - pythran -v simple_numexpr.py -DUSE_XSIMD                # [osx and arm64]\n    - pythran -v simple_numexpr.py                            # [ppc64le]\n    - python -c \"import simple_numexpr\"\n  imports:\n    - omp  # [not win]\n    - pythran\n    - pythran.analyses\n    - pythran.optimizations\n    - pythran.transformations\n    - pythran.types\n\nabout:\n  home: http://github.com/serge-sans-paille/pythran\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: a claimless python to c++ converter\n\n  description: |\n    Pythran is an ahead of time compiler for a subset of the Python language,\n    with a focus on scientific computing. It takes a Python module annotated\n    with a few interface description and turns it into a native Python module\n    with the same interface, but (hopefully) faster.\n  doc_url: https://pythran.readthedocs.io/\n  dev_url: https://github.com/serge-sans-paille/pythran\n\nextra:\n  recipe-maintainers:\n    - saraedum\n    - serge-sans-paille\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "__linux",
      "__osx",
      "__win",
      "beniget",
      "clangxx",
      "colorlog",
      "decorator",
      "gast",
      "gxx",
      "numpy",
      "pip",
      "ply",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "ctng-compilers",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__linux",
        "__osx",
        "__win",
        "beniget",
        "clangxx",
        "colorlog",
        "ctng-compilers",
        "decorator",
        "gast",
        "gxx",
        "numpy",
        "ply",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__linux",
        "__osx",
        "__win",
        "beniget 0.4.*",
        "clangxx",
        "colorlog",
        "decorator",
        "gast 0.6",
        "gxx",
        "numpy",
        "ply >=3.4",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.9",
        "setuptools <76"
      ]
    }
  },
  "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.18.0.tar.gz",
  "version": "0.18.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pythran.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Pythran is an ahead of time compiler for a subset of the Python language,\nwith a focus on scientific computing. It takes a Python module annotated\nwith a few interface description and turns it into a native Python module\nwith the same interface, but (hopefully) faster.\n",
      "dev_url": "https://github.com/serge-sans-paille/pythran",
      "doc_url": "https://pythran.readthedocs.io/",
      "home": "http://github.com/serge-sans-paille/pythran",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "a claimless python to c++ converter"
    },
    "build": {
      "entry_points": [
        "pythran = pythran.run:run",
        "pythran-config = pythran.config:run"
      ],
      "noarch": "python",
      "number": "0",
      "script": [
        "python -c \"with open('pythran\\pythran-win32.cfg', 'r+') as s: a=s.read(); s.seek(0); s.write(a.replace('include_dirs=', r'include_dirs=%PREFIX%/Library/include'))\"",
        "type pythran\\pythran-win32.cfg",
        "python -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "saraedum",
        "serge-sans-paille",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "pythran",
      "version": "0.18.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "clangxx",
        "python >=3.9",
        "decorator",
        "gast 0.6",
        "ply >=3.4",
        "colorlog",
        "beniget 0.4.*",
        "numpy",
        "__win"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d3f879f86fde1c0eb62e02e52fbe30e2468fb59d8751b951b7cc6faf16e7df3e",
      "url": "https://github.com/serge-sans-paille/pythran/archive/refs/tags/0.18.0.tar.gz"
    },
    "test": {
      "commands": [
        "pythran -v dprod.py",
        "python -c \"import dprod\"",
        "pythran -v simple_numexpr.py -DUSE_XSIMD -march=native",
        "python -c \"import simple_numexpr\""
      ],
      "files": [
        "dprod.py",
        "simple_numexpr.py"
      ],
      "imports": [
        "pythran",
        "pythran.analyses",
        "pythran.optimizations",
        "pythran.transformations",
        "pythran.types"
      ],
      "requires": [
        "python 3.9",
        "setuptools <76"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "beniget",
        "clangxx",
        "colorlog",
        "decorator",
        "gast",
        "numpy",
        "ply",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    }
  }
}