{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default"
    }
  },
  "feedstock_hash": "fd8be47418d7655c670fe53c10e34c4758b58a9b",
  "feedstock_hash_ts": 1761244758,
  "feedstock_name": "cudnn",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
      "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
      "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
      "home": "https://developer.nvidia.com/cudnn",
      "license": "LicenseRef-cuDNN-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
      "summary": "NVIDIA's cuDNN deep neural network acceleration library"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cudnn",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "billysuh7",
        "adibbley",
        "bdice",
        "jakirkham",
        "vyasr"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn*.so.*"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_adv.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_adv.so.9",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9",
            "test -f $PREFIX/lib/libcudnn_ops.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_ops.so.9",
            "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
            "for f in $PREFIX/lib/libcudnn*.so.9.14.0; do ./test_load_elf $f; done"
          ],
          "files": [
            "test_load_elf.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn*.so"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_adv.so",
            "test -L $PREFIX/lib/libcudnn_cnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_precompiled.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so",
            "test -L $PREFIX/lib/libcudnn_heuristic.so",
            "test -L $PREFIX/lib/libcudnn_ops.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn.so.9.14.0",
          "lib/libcudnn.so.9",
          "lib/libcudnn_engines_runtime_compiled.so.9.14.0",
          "lib/libcudnn_engines_runtime_compiled.so.9",
          "lib/libcudnn_graph.so.9.14.0",
          "lib/libcudnn_graph.so.9"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "patchelf >=0.12"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn.so",
          "lib/libcudnn_engines_runtime_compiled.so",
          "lib/libcudnn_graph.so"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so"
          ]
        }
      }
    ],
    "package": {
      "name": "cudnn-split",
      "version": "9.14.0.64"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "75b8c5feb7e65107dc8881af2cf245f9be77274f607c019a966347e36d1526e7",
      "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.14.0.64_cuda13-archive.zip"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvrtc",
        "cuda-version",
        "libcublas",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
      "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
      "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
      "home": "https://developer.nvidia.com/cudnn",
      "license": "LicenseRef-cuDNN-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
      "summary": "NVIDIA's cuDNN deep neural network acceleration library"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cudnn",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "billysuh7",
        "adibbley",
        "bdice",
        "jakirkham",
        "vyasr"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn*.so.*"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_adv.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_adv.so.9",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9",
            "test -f $PREFIX/lib/libcudnn_ops.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_ops.so.9",
            "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
            "for f in $PREFIX/lib/libcudnn*.so.9.14.0; do ./test_load_elf $f; done"
          ],
          "files": [
            "test_load_elf.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn*.so"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_adv.so",
            "test -L $PREFIX/lib/libcudnn_cnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_precompiled.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so",
            "test -L $PREFIX/lib/libcudnn_heuristic.so",
            "test -L $PREFIX/lib/libcudnn_ops.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn.so.9.14.0",
          "lib/libcudnn.so.9",
          "lib/libcudnn_engines_runtime_compiled.so.9.14.0",
          "lib/libcudnn_engines_runtime_compiled.so.9",
          "lib/libcudnn_graph.so.9.14.0",
          "lib/libcudnn_graph.so.9"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "patchelf >=0.12"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn.so",
          "lib/libcudnn_engines_runtime_compiled.so",
          "lib/libcudnn_graph.so"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so"
          ]
        }
      }
    ],
    "package": {
      "name": "cudnn-split",
      "version": "9.14.0.64"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79b052a3c78784b7010fe07ffa56c86f731abe365678851dc92a6ee1c1ee5452",
      "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.14.0.64_cuda13-archive.zip"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvrtc",
        "cuda-version",
        "libcublas",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
      "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
      "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
      "home": "https://developer.nvidia.com/cudnn",
      "license": "LicenseRef-cuDNN-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
      "summary": "NVIDIA's cuDNN deep neural network acceleration library"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cudnn",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "billysuh7",
        "adibbley",
        "bdice",
        "jakirkham",
        "vyasr"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn*.so.*"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_adv.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_adv.so.9",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9",
            "test -f $PREFIX/lib/libcudnn_ops.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_ops.so.9",
            "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
            "for f in $PREFIX/lib/libcudnn*.so.9.14.0; do ./test_load_elf $f; done"
          ],
          "files": [
            "test_load_elf.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn*.so"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_adv.so",
            "test -L $PREFIX/lib/libcudnn_cnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_precompiled.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so",
            "test -L $PREFIX/lib/libcudnn_heuristic.so",
            "test -L $PREFIX/lib/libcudnn_ops.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn.so.9.14.0",
          "lib/libcudnn.so.9",
          "lib/libcudnn_engines_runtime_compiled.so.9.14.0",
          "lib/libcudnn_engines_runtime_compiled.so.9",
          "lib/libcudnn_graph.so.9.14.0",
          "lib/libcudnn_graph.so.9"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "patchelf >=0.12"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn.so",
          "lib/libcudnn_engines_runtime_compiled.so",
          "lib/libcudnn_graph.so"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn*.so.*"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_adv.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_adv.so.9",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_cnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_precompiled.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_heuristic.so.9",
            "test -f $PREFIX/lib/libcudnn_ops.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_ops.so.9",
            "${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf",
            "for f in $PREFIX/lib/libcudnn*.so.9.14.0; do ./test_load_elf $f; done"
          ],
          "files": [
            "test_load_elf.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn*.so"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_adv.so",
            "test -L $PREFIX/lib/libcudnn_cnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_precompiled.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so",
            "test -L $PREFIX/lib/libcudnn_heuristic.so",
            "test -L $PREFIX/lib/libcudnn_ops.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "lib/libcudnn.so.9.14.0",
          "lib/libcudnn.so.9",
          "lib/libcudnn_engines_runtime_compiled.so.9.14.0",
          "lib/libcudnn_engines_runtime_compiled.so.9",
          "lib/libcudnn_graph.so.9.14.0",
          "lib/libcudnn_graph.so.9"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "patchelf >=0.12"
          ],
          "host": [
            "cuda-version 13.0",
            "zlib"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libcudnn.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn.so.9",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.9",
            "test -f $PREFIX/lib/libcudnn_graph.so.9.14.0",
            "test -f $PREFIX/lib/libcudnn_graph.so.9"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ]
        },
        "files": [
          "include/cudnn*.h",
          "lib/libcudnn.so",
          "lib/libcudnn_engines_runtime_compiled.so",
          "lib/libcudnn_graph.so"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/include/cudnn.h",
            "test -f $PREFIX/include/cudnn_adv.h",
            "test -f $PREFIX/include/cudnn_adv_v9.h",
            "test -f $PREFIX/include/cudnn_backend.h",
            "test -f $PREFIX/include/cudnn_backend_v9.h",
            "test -f $PREFIX/include/cudnn_cnn.h",
            "test -f $PREFIX/include/cudnn_cnn_v9.h",
            "test -f $PREFIX/include/cudnn_graph.h",
            "test -f $PREFIX/include/cudnn_graph_v9.h",
            "test -f $PREFIX/include/cudnn_ops.h",
            "test -f $PREFIX/include/cudnn_ops_v9.h",
            "test -f $PREFIX/include/cudnn_v9.h",
            "test -f $PREFIX/include/cudnn_version.h",
            "test -f $PREFIX/include/cudnn_version_v9.h",
            "test -L $PREFIX/lib/libcudnn.so",
            "test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so",
            "test -L $PREFIX/lib/libcudnn_graph.so"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "Library/bin/cudnn*.dll"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%/cudnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_adv64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_cnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_precompiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_graph64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_heuristic64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_ops64_9.dll exit 1"
          ],
          "files": null,
          "requires": null
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "Library/include/cudnn*.h",
          "Library/lib/cudnn*.lib"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%/cudnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_adv.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_backend.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_graph.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_ops.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_version.h exit 1",
            "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_adv.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_adv64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_cnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_cnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_precompiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_precompiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_heuristic.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_heuristic64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_ops.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_ops64_9.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "skip": true
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ],
          "skip": true
        },
        "files": [
          "Library/bin/cudnn64_9.dll",
          "Library/bin/cudnn_engines_runtime_compiled64_9.dll",
          "Library/bin/cudnn_graph64_9.dll"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%/cudnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_graph64_9.dll exit 1"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ],
          "skip": true
        },
        "files": [
          "Library/include/cudnn*.h",
          "Library/lib/cudnn.lib",
          "Library/lib/cudnn64_9.lib",
          "Library/lib/cudnn_engines_runtime_compiled.lib",
          "Library/lib/cudnn_engines_runtime_compiled64_9.lib",
          "Library/lib/cudnn_graph.lib",
          "Library/lib/cudnn_graph64_9.lib"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%/cudnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_adv.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_backend.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_graph.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_ops.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_version.h exit 1",
            "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph64_9.lib exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "cudnn-split",
      "version": "9.14.0.64"
    },
    "requirements": {
      "build": [
        "cf-nvidia-tools 1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b98b51bcead704e32640eca1770cadecec1bdf67c6db4093ff4fbcc4a206bd8",
      "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.14.0.64_cuda13-archive.zip"
    }
  },
  "name": "cudnn-split",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cudnn",
      "cudnn-jit",
      "libcudnn",
      "libcudnn-dev",
      "libcudnn-jit",
      "libcudnn-jit-dev"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cudnn.json"
  },
  "raw_meta_yaml": "{% set version = \"9.14.0.64\" %}\n{% set soname = version.split('.')[0] %}\n{% set majorminorpatch = '.'.join(version.split('.')[:3]) %}\n{% set platform = \"linux-x86_64\" %}  # [linux64]\n{% set platform = \"linux-sbsa\" %}  # [aarch64]\n{% set platform = \"windows-x86_64\" %}  # [win]\n{% set extension = \"tar.xz\" %}  # [not win]\n{% set extension = \"zip\" %}  # [win]\n\npackage:\n  name: cudnn-split\n  version: {{ version }}\n\nsource:\n  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda12-archive.{{ extension }}  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda13-archive.{{ extension }}  # [(cuda_compiler_version or \"\").startswith(\"13\")]\n  sha256: fcaf904938b5bab4e782f4d064dd5b5fca7d9872a7f21a9491cf145634be4473  # [linux64 and (cuda_compiler_version or \"\").startswith(\"12\")]\n  sha256: 75b8c5feb7e65107dc8881af2cf245f9be77274f607c019a966347e36d1526e7  # [linux64 and (cuda_compiler_version or \"\").startswith(\"13\")]\n  sha256: 971edb53eb694fc94d3d167d5332ac9e79a6eefb85b1668b21c070940da353e5  # [aarch64 and (cuda_compiler_version or \"\").startswith(\"12\")]\n  sha256: 79b052a3c78784b7010fe07ffa56c86f731abe365678851dc92a6ee1c1ee5452  # [aarch64 and (cuda_compiler_version or \"\").startswith(\"13\")]\n  sha256: 27db1cf50f830a1335de991cf1edde43afb4fc65c365dbf013245f1364ec2b12  # [win and (cuda_compiler_version or \"\").startswith(\"12\")]\n  sha256: 9b98b51bcead704e32640eca1770cadecec1bdf67c6db4093ff4fbcc4a206bd8  # [win and (cuda_compiler_version or \"\").startswith(\"13\")]\n\nbuild:\n  number: 0\n  # Skip CTK12 variants. See https://github.com/conda-forge/cudnn-feedstock/issues/124\n  skip: true  # [cuda_compiler_version in (None, \"None\", \"\") or (cuda_compiler_version or \"\").startswith(\"12\")]\n\nrequirements:\n  build:\n    - cf-nvidia-tools 1  # [linux]\n\noutputs:\n  # Even though cudnn is a meta package, need build/host/run to be set in order to generate unique outputs with unique hash\n  # for each build variant.\n  - name: cudnn\n    build:\n      ignore_run_exports:\n        - cuda-version\n      # The run_exports is present on cudnn for backward compatibility\n      run_exports:\n        - {{ pin_subpackage(\"cudnn\", max_pin=\"x\") }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib(\"c\") }}\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        - {{ pin_subpackage(\"libcudnn-dev\", exact=True) }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libcudnn-dev\", exact=True) }}\n      run_constrained:\n        - cudnn-jit <0a\n\n  - name: libcudnn\n    build:\n      # Disable binary relocation to workaround patchelf issue\n      # xref: https://github.com/NixOS/patchelf/issues/492\n      binary_relocation: false\n      ignore_run_exports:\n        - cuda-version\n    files:\n      - lib/libcudnn*.so.*                  # [linux]\n      - Library/bin/cudnn*.dll              # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib(\"c\") }}\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        # For Windows, zlib is statically linked into CUDNN since version 9.2\n        # https://docs.nvidia.com/deeplearning/cudnn/latest/release-notes.html#cudnn-9-2-0\n        # For Linux, zlib remains a dynamically linked dependency\n        - zlib  # [not win]\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - cuda-nvrtc\n        - libcublas\n      run_constrained:\n        - libcudnn-jit <0a\n    test:\n      requires:\n        - {{ compiler('c') }}  # [linux]\n      files:\n        - test_load_elf.c      # [linux]\n      commands:\n        - if not exist %LIBRARY_BIN%/cudnn64_{{ soname }}.dll exit 1                                 # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_adv64_{{ soname }}.dll exit 1                             # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_cnn64_{{ soname }}.dll exit 1                             # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_engines_precompiled64_{{ soname }}.dll exit 1             # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_{{ soname }}.dll exit 1        # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_graph64_{{ soname }}.dll exit 1                           # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_heuristic64_{{ soname }}.dll exit 1                       # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_ops64_{{ soname }}.dll exit 1                             # [win]\n        - test -f $PREFIX/lib/libcudnn.so.{{ majorminorpatch }}                                      # [linux]\n        - test -f $PREFIX/lib/libcudnn.so.{{ soname }}                                               # [linux]\n        - test -f $PREFIX/lib/libcudnn_adv.so.{{ majorminorpatch }}                                  # [linux]\n        - test -f $PREFIX/lib/libcudnn_adv.so.{{ soname }}                                           # [linux]\n        - test -f $PREFIX/lib/libcudnn_cnn.so.{{ majorminorpatch }}                                  # [linux]\n        - test -f $PREFIX/lib/libcudnn_cnn.so.{{ soname }}                                           # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_precompiled.so.{{ majorminorpatch }}                  # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_precompiled.so.{{ soname }}                           # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.{{ majorminorpatch }}             # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.{{ soname }}                      # [linux]\n        - test -f $PREFIX/lib/libcudnn_graph.so.{{ majorminorpatch }}                                # [linux]\n        - test -f $PREFIX/lib/libcudnn_graph.so.{{ soname }}                                         # [linux]\n        - test -f $PREFIX/lib/libcudnn_heuristic.so.{{ majorminorpatch }}                            # [linux]\n        - test -f $PREFIX/lib/libcudnn_heuristic.so.{{ soname }}                                     # [linux]\n        - test -f $PREFIX/lib/libcudnn_ops.so.{{ majorminorpatch }}                                  # [linux]\n        - test -f $PREFIX/lib/libcudnn_ops.so.{{ soname }}                                           # [linux]\n        - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf                              # [linux]\n        - for f in $PREFIX/lib/libcudnn*.so.{{ majorminorpatch }}; do ./test_load_elf $f; done       # [linux]\n\n  - name: libcudnn-dev\n    build:\n      ignore_run_exports:\n        - cuda-version\n      run_exports:\n        - {{ pin_subpackage(\"libcudnn\", max_pin=\"x\") }}\n    files:\n      - include/cudnn*.h                                                                             # [linux]\n      - Library/include/cudnn*.h                                                                     # [win]\n      - lib/libcudnn*.so                                                                             # [linux]\n      - Library/lib/cudnn*.lib                                                                       # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib(\"c\") }}\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        - {{ pin_subpackage(\"libcudnn\", exact=True) }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libcudnn\", exact=True) }}\n      run_constrained:\n        - libcudnn-jit-dev <0a\n    test:\n      commands:\n        - if not exist %LIBRARY_INC%/cudnn.h exit 1                                                  # [win]\n        - if not exist %LIBRARY_INC%/cudnn_adv.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_backend.h exit 1                                          # [win]\n        - if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_graph.h exit 1                                            # [win]\n        - if not exist %LIBRARY_INC%/cudnn_ops.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_version.h exit 1                                          # [win]\n        - if not exist %LIBRARY_LIB%/cudnn.lib exit 1                                                # [win]\n        - if not exist %LIBRARY_LIB%/cudnn64_{{ soname }}.lib exit 1                                 # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_adv.lib exit 1                                            # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_adv64_{{ soname }}.lib exit 1                             # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_cnn.lib exit 1                                            # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_cnn64_{{ soname }}.lib exit 1                             # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_precompiled.lib exit 1                            # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_precompiled64_{{ soname }}.lib exit 1             # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1                       # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_{{ soname }}.lib exit 1        # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1                                          # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_graph64_{{ soname }}.lib exit 1                           # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_heuristic.lib exit 1                                      # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_heuristic64_{{ soname }}.lib exit 1                       # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_ops.lib exit 1                                            # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_ops64_{{ soname }}.lib exit 1                             # [win]\n        - test -f $PREFIX/include/cudnn.h                                                            # [linux]\n        - test -f $PREFIX/include/cudnn_adv.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_adv_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_backend.h                                                    # [linux]\n        - test -f $PREFIX/include/cudnn_backend_v{{ soname }}.h                                      # [linux]\n        - test -f $PREFIX/include/cudnn_cnn.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_cnn_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_graph.h                                                      # [linux]\n        - test -f $PREFIX/include/cudnn_graph_v{{ soname }}.h                                        # [linux]\n        - test -f $PREFIX/include/cudnn_ops.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_ops_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_v{{ soname }}.h                                              # [linux]\n        - test -f $PREFIX/include/cudnn_version.h                                                    # [linux]\n        - test -f $PREFIX/include/cudnn_version_v{{ soname }}.h                                      # [linux]\n        - test -L $PREFIX/lib/libcudnn.so                                                            # [linux]\n        - test -L $PREFIX/lib/libcudnn_adv.so                                                        # [linux]\n        - test -L $PREFIX/lib/libcudnn_cnn.so                                                        # [linux]\n        - test -L $PREFIX/lib/libcudnn_engines_precompiled.so                                        # [linux]\n        - test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so                                   # [linux]\n        - test -L $PREFIX/lib/libcudnn_graph.so                                                      # [linux]\n        - test -L $PREFIX/lib/libcudnn_heuristic.so                                                  # [linux]\n        - test -L $PREFIX/lib/libcudnn_ops.so                                                        # [linux]\n\n  # Even though cudnn-jit is a meta package, need build/host/run to be set in order to generate unique outputs with unique hash\n  # for each build variant.\n  - name: cudnn-jit\n    build:\n      skip: true  # [win]\n      ignore_run_exports:\n        - cuda-version\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib(\"c\") }}\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        - {{ pin_subpackage(\"libcudnn-jit-dev\", exact=True) }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libcudnn-jit-dev\", exact=True) }}\n      run_constrained:\n        - cudnn <0a\n\n  - name: libcudnn-jit\n    build:\n      skip: true  # [win]\n      # Disable binary relocation to workaround patchelf issue\n      # xref: https://github.com/NixOS/patchelf/issues/492\n      binary_relocation: false\n      ignore_run_exports:\n        - cuda-version\n    files:\n      - Library/bin/cudnn64_{{ soname }}.dll                                          # [win]\n      - Library/bin/cudnn_engines_runtime_compiled64_{{ soname }}.dll                 # [win]\n      - Library/bin/cudnn_graph64_{{ soname }}.dll                                    # [win]\n      - lib/libcudnn.so.{{ majorminorpatch }}                                         # [linux]\n      - lib/libcudnn.so.{{ soname }}                                                  # [linux]\n      - lib/libcudnn_engines_runtime_compiled.so.{{ majorminorpatch }}                # [linux]\n      - lib/libcudnn_engines_runtime_compiled.so.{{ soname }}                         # [linux]\n      - lib/libcudnn_graph.so.{{ majorminorpatch }}                                   # [linux]\n      - lib/libcudnn_graph.so.{{ soname }}                                            # [linux]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib('c') }}\n        - patchelf >=0.12  # [linux]\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        # For Windows, zlib is statically linked into CUDNN since version 9.2\n        # https://docs.nvidia.com/deeplearning/cudnn/latest/release-notes.html#cudnn-9-2-0\n        # For Linux, zlib remains a dynamically linked dependency\n        - zlib  # [not win]\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - cuda-nvrtc\n        - libcublas\n      run_constrained:\n        - libcudnn <0a\n    test:\n      commands:\n        - if not exist %LIBRARY_BIN%/cudnn64_{{ soname }}.dll exit 1                                 # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_{{ soname }}.dll exit 1        # [win]\n        - if not exist %LIBRARY_BIN%/cudnn_graph64_{{ soname }}.dll exit 1                           # [win]\n        - test -f $PREFIX/lib/libcudnn.so.{{ majorminorpatch }}                                      # [linux]\n        - test -f $PREFIX/lib/libcudnn.so.{{ soname }}                                               # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.{{ majorminorpatch }}             # [linux]\n        - test -f $PREFIX/lib/libcudnn_engines_runtime_compiled.so.{{ soname }}                      # [linux]\n        - test -f $PREFIX/lib/libcudnn_graph.so.{{ majorminorpatch }}                                # [linux]\n        - test -f $PREFIX/lib/libcudnn_graph.so.{{ soname }}                                         # [linux]\n    about:\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_file: LICENSE\n      license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n      summary: Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n      description: |\n        This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\n        Developers should install libcudnn-jit-dev.\n\n  - name: libcudnn-jit-dev\n    build:\n      skip: true  # [win]\n      ignore_run_exports:\n        - cuda-version\n      run_exports:\n        - {{ pin_subpackage(\"libcudnn-jit\", max_pin=\"x\") }}\n    files:\n      - Library/include/cudnn*.h                                                                  # [win]\n      - Library/lib/cudnn.lib                                                                     # [win]\n      - Library/lib/cudnn64_{{ soname }}.lib                                                      # [win]\n      - Library/lib/cudnn_engines_runtime_compiled.lib                                            # [win]\n      - Library/lib/cudnn_engines_runtime_compiled64_{{ soname }}.lib                             # [win]\n      - Library/lib/cudnn_graph.lib                                                               # [win]\n      - Library/lib/cudnn_graph64_{{ soname }}.lib                                                # [win]\n      - include/cudnn*.h                                                                          # [linux]\n      - lib/libcudnn.so                                                                           # [linux]\n      - lib/libcudnn_engines_runtime_compiled.so                                                  # [linux]\n      - lib/libcudnn_graph.so                                                                     # [linux]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}\n        - {{ stdlib(\"c\") }}\n      host:\n        - cuda-version {{ cuda_compiler_version }}\n        - {{ pin_subpackage(\"libcudnn-jit\", exact=True) }}\n      run:\n        - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n        - {{ pin_subpackage(\"libcudnn-jit\", exact=True) }}\n      run_constrained:\n        - libcudnn-dev <0a\n    test:\n      commands:\n        - if not exist %LIBRARY_INC%/cudnn.h exit 1                                                  # [win]\n        - if not exist %LIBRARY_INC%/cudnn_adv.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_backend.h exit 1                                          # [win]\n        - if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_graph.h exit 1                                            # [win]\n        - if not exist %LIBRARY_INC%/cudnn_ops.h exit 1                                              # [win]\n        - if not exist %LIBRARY_INC%/cudnn_version.h exit 1                                          # [win]\n        - if not exist %LIBRARY_LIB%/cudnn.lib exit 1                                                # [win]\n        - if not exist %LIBRARY_LIB%/cudnn64_{{ soname }}.lib exit 1                                 # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1                       # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_{{ soname }}.lib exit 1        # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1                                          # [win]\n        - if not exist %LIBRARY_LIB%/cudnn_graph64_{{ soname }}.lib exit 1                           # [win]\n        - test -f $PREFIX/include/cudnn.h                                                            # [linux]\n        - test -f $PREFIX/include/cudnn_adv.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_adv_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_backend.h                                                    # [linux]\n        - test -f $PREFIX/include/cudnn_backend_v{{ soname }}.h                                      # [linux]\n        - test -f $PREFIX/include/cudnn_cnn.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_cnn_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_graph.h                                                      # [linux]\n        - test -f $PREFIX/include/cudnn_graph_v{{ soname }}.h                                        # [linux]\n        - test -f $PREFIX/include/cudnn_ops.h                                                        # [linux]\n        - test -f $PREFIX/include/cudnn_ops_v{{ soname }}.h                                          # [linux]\n        - test -f $PREFIX/include/cudnn_v{{ soname }}.h                                              # [linux]\n        - test -f $PREFIX/include/cudnn_version.h                                                    # [linux]\n        - test -f $PREFIX/include/cudnn_version_v{{ soname }}.h                                      # [linux]\n        - test -L $PREFIX/lib/libcudnn.so                                                            # [linux]\n        - test -L $PREFIX/lib/libcudnn_engines_runtime_compiled.so                                   # [linux]\n        - test -L $PREFIX/lib/libcudnn_graph.so                                                      # [linux]\n    about:\n      license: LicenseRef-NVIDIA-End-User-License-Agreement\n      license_file: LICENSE\n      license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n      summary: Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n      description: |\n        This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n\nabout:\n  home: https://developer.nvidia.com/cudnn\n  license: LicenseRef-cuDNN-Software-License-Agreement\n  license_file: LICENSE\n  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  summary: \"NVIDIA's cuDNN deep neural network acceleration library\"\n  description: |\n    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\n    primitives for deep neural networks. It provides highly tuned\n    implementations of routines arising frequently in DNN applications.\n\n    License Agreements:- The packages are governed by the NVIDIA cuDNN\n    Software License Agreement (EULA). By downloading and using the packages,\n    you accept the terms and conditions of the NVIDIA cuDNN EULA -\n    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n  doc_url: https://docs.nvidia.com/deeplearning/cudnn/\n  dev_url: https://developer.nvidia.com/rdp/cudnn-download\n\nextra:\n  feedstock-name: cudnn\n  recipe-maintainers:\n    - conda-forge/cuda\n    - billysuh7\n    - adibbley\n    - bdice\n    - jakirkham\n    - vyasr\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cf-nvidia-tools",
      "cuda-nvrtc",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "libcublas",
      "libcudnn",
      "libcudnn-dev",
      "libcudnn-jit",
      "libcudnn-jit-dev",
      "patchelf",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "patchelf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvrtc",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cf-nvidia-tools 1",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "patchelf >=0.12"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 13.0",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvrtc",
        "cuda-version",
        "libcublas",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.14.0.64_cuda13-archive.zip",
  "version": "9.14.0.64",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cudnn.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of\nprimitives for deep neural networks. It provides highly tuned\nimplementations of routines arising frequently in DNN applications.\n\nLicense Agreements:- The packages are governed by the NVIDIA cuDNN\nSoftware License Agreement (EULA). By downloading and using the packages,\nyou accept the terms and conditions of the NVIDIA cuDNN EULA -\nhttps://docs.nvidia.com/deeplearning/cudnn/sla/index.html\n",
      "dev_url": "https://developer.nvidia.com/rdp/cudnn-download",
      "doc_url": "https://docs.nvidia.com/deeplearning/cudnn/",
      "home": "https://developer.nvidia.com/cudnn",
      "license": "LicenseRef-cuDNN-Software-License-Agreement",
      "license_file": "LICENSE",
      "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
      "summary": "NVIDIA's cuDNN deep neural network acceleration library"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "cudnn",
      "recipe-maintainers": [
        "conda-forge/cuda",
        "billysuh7",
        "adibbley",
        "bdice",
        "jakirkham",
        "vyasr"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "cudnn"
          ]
        },
        "name": "cudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-dev"
          ],
          "run_constrained": [
            "cudnn-jit <0a"
          ]
        }
      },
      {
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ]
        },
        "files": [
          "Library/bin/cudnn*.dll"
        ],
        "name": "libcudnn",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn-jit <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%/cudnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_adv64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_cnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_precompiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_graph64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_heuristic64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_ops64_9.dll exit 1"
          ],
          "files": null,
          "requires": null
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn"
          ]
        },
        "files": [
          "Library/include/cudnn*.h",
          "Library/lib/cudnn*.lib"
        ],
        "name": "libcudnn-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn"
          ],
          "run": [
            "cuda-version",
            "libcudnn"
          ],
          "run_constrained": [
            "libcudnn-jit-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%/cudnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_adv.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_backend.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_graph.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_ops.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_version.h exit 1",
            "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_adv.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_adv64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_cnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_cnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_precompiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_precompiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_heuristic.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_heuristic64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_ops.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_ops64_9.lib exit 1"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "skip": true
        },
        "name": "cudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit-dev"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit-dev"
          ],
          "run_constrained": [
            "cudnn <0a"
          ]
        }
      },
      {
        "about": {
          "description": "This is a runtime package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library.\nDevelopers should install libcudnn-jit-dev.\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "binary_relocation": false,
          "ignore_run_exports": [
            "cuda-version"
          ],
          "skip": true
        },
        "files": [
          "Library/bin/cudnn64_9.dll",
          "Library/bin/cudnn_engines_runtime_compiled64_9.dll",
          "Library/bin/cudnn_graph64_9.dll"
        ],
        "name": "libcudnn-jit",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0"
          ],
          "run": [
            "cuda-version",
            "cuda-nvrtc",
            "libcublas"
          ],
          "run_constrained": [
            "libcudnn <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%/cudnn64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_engines_runtime_compiled64_9.dll exit 1",
            "if not exist %LIBRARY_BIN%/cudnn_graph64_9.dll exit 1"
          ]
        }
      },
      {
        "about": {
          "description": "This is a development package for Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library\n",
          "license": "LicenseRef-NVIDIA-End-User-License-Agreement",
          "license_file": "LICENSE",
          "license_url": "https://docs.nvidia.com/deeplearning/cudnn/sla/index.html",
          "summary": "Graph JIT configuration for NVIDIA's cuDNN deep neural network acceleration library"
        },
        "build": {
          "ignore_run_exports": [
            "cuda-version"
          ],
          "run_exports": [
            "libcudnn-jit"
          ],
          "skip": true
        },
        "files": [
          "Library/include/cudnn*.h",
          "Library/lib/cudnn.lib",
          "Library/lib/cudnn64_9.lib",
          "Library/lib/cudnn_engines_runtime_compiled.lib",
          "Library/lib/cudnn_engines_runtime_compiled64_9.lib",
          "Library/lib/cudnn_graph.lib",
          "Library/lib/cudnn_graph64_9.lib"
        ],
        "name": "libcudnn-jit-dev",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "cuda-version 13.0",
            "libcudnn-jit"
          ],
          "run": [
            "cuda-version",
            "libcudnn-jit"
          ],
          "run_constrained": [
            "libcudnn-dev <0a"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%/cudnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_adv.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_backend.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_cnn.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_graph.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_ops.h exit 1",
            "if not exist %LIBRARY_INC%/cudnn_version.h exit 1",
            "if not exist %LIBRARY_LIB%/cudnn.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_engines_runtime_compiled64_9.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph.lib exit 1",
            "if not exist %LIBRARY_LIB%/cudnn_graph64_9.lib exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "cudnn-split",
      "version": "9.14.0.64"
    },
    "requirements": {
      "build": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "9b98b51bcead704e32640eca1770cadecec1bdf67c6db4093ff4fbcc4a206bd8",
      "url": "https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/windows-x86_64/cudnn-windows-x86_64-9.14.0.64_cuda13-archive.zip"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-nvrtc",
        "cuda-version",
        "libcublas",
        "libcudnn",
        "libcudnn-dev",
        "libcudnn-jit",
        "libcudnn-jit-dev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}