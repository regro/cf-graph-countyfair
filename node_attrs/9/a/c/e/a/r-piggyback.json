{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "cb010a4948c63d6647963ef6d031d53b80dec331",
  "feedstock_hash_ts": 1758679904,
  "feedstock_name": "r-piggyback",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/ropensci/piggyback",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Because larger (> 50 MB) data files cannot easily be committed to git, a different approach is required to manage data associated with an analysis in a GitHub repository.  This package provides a simple work-around by allowing larger (up to 2 GB) data files to piggyback on a repository as assets attached to individual GitHub releases.  These files are not handled by git in any way, but instead are uploaded, downloaded, or edited directly by calls through the GitHub API. These data files can be versioned manually by creating different releases.  This approach works equally well with public or private repositories.  Data can be uploaded and downloaded programmatically from scripts. No authentication is required to download data from public repositories."
    },
    "build": {
      "noarch": "generic",
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jdblischak"
      ]
    },
    "package": {
      "name": "r-piggyback",
      "version": "0.1.5"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "983b5a46792ff5f2895f36ee29afcbd7723d05fe3daefdaefaada12987e36aee",
      "url": [
        "https://cran.r-project.org/src/contrib/piggyback_0.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/piggyback/piggyback_0.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('piggyback')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/ropensci/piggyback",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Because larger (> 50 MB) data files cannot easily be committed to git, a different approach is required to manage data associated with an analysis in a GitHub repository.  This package provides a simple work-around by allowing larger (up to 2 GB) data files to piggyback on a repository as assets attached to individual GitHub releases.  These files are not handled by git in any way, but instead are uploaded, downloaded, or edited directly by calls through the GitHub API. These data files can be versioned manually by creating different releases.  This approach works equally well with public or private repositories.  Data can be uploaded and downloaded programmatically from scripts. No authentication is required to download data from public repositories."
    },
    "build": {
      "noarch": "generic",
      "number": "2",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "jdblischak"
      ]
    },
    "package": {
      "name": "r-piggyback",
      "version": "0.1.5"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "983b5a46792ff5f2895f36ee29afcbd7723d05fe3daefdaefaada12987e36aee",
      "url": [
        "https://cran.r-project.org/src/contrib/piggyback_0.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/piggyback/piggyback_0.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('piggyback')\""
      ]
    }
  },
  "name": "r-piggyback",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-piggyback"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-piggyback.json"
  },
  "raw_meta_yaml": "{% set version = \"0.1.5\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-piggyback\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/piggyback_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/piggyback/piggyback_{{ version }}.tar.gz\n  sha256: 983b5a46792ff5f2895f36ee29afcbd7723d05fe3daefdaefaada12987e36aee\n\nbuild:\n  number: 2\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-cli\n    - r-fs\n    - r-gh\n    - r-glue\n    - r-httr\n    - r-jsonlite\n    - r-lubridate\n    - r-memoise\n  run:\n    - r-base\n    - r-cli\n    - r-fs\n    - r-gh\n    - r-glue\n    - r-httr\n    - r-jsonlite\n    - r-lubridate\n    - r-memoise\n\ntest:\n  commands:\n    - $R -e \"library('piggyback')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('piggyback')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/ropensci/piggyback\n  license: GPL-3.0-only\n  summary: Because larger (> 50 MB) data files cannot easily be committed to git, a different approach is required to manage data associated with an analysis in a GitHub repository.  This package provides a simple work-around by allowing larger (up to 2 GB) data files to piggyback on a repository as assets attached to individual\n    GitHub releases.  These files are not handled by git in any way, but instead are uploaded, downloaded, or edited directly by calls through the GitHub API. These data files can be versioned manually by creating different releases.  This approach works equally well with public or private repositories.  Data can be uploaded\n    and downloaded programmatically from scripts. No authentication is required to download data from public repositories.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - jdblischak\n\n# Package: piggyback\n# Version: 0.1.4\n# Title: Managing Larger Data on a GitHub Repository\n# Description: Because larger (> 50 MB) data files cannot easily be committed to git, a different approach is required to manage data associated with an analysis in a GitHub repository.  This package provides a simple work-around by allowing larger (up to 2 GB) data files to piggyback on a repository as assets attached to individual GitHub releases.  These files are not handled by git in any way, but instead are uploaded, downloaded, or edited directly by calls through the GitHub API. These data files can be versioned manually by creating different releases.  This approach works equally well with public or private repositories.  Data can be uploaded and downloaded programmatically from scripts. No authentication is required to download data from public repositories.\n# Authors@R: c(person(\"Carl\", \"Boettiger\", email = \"cboettig@gmail.com\", role = c(\"aut\", \"cre\", \"cph\"), comment = c(ORCID = \"0000-0002-1642-628X\")), person(\"Tan\", \"Ho\", role = c(\"aut\"), comment = c(ORCID = \"0000-0001-8388-5155\")), person(\"Mark\", \"Padgham\", role = c(\"ctb\"), comment = c(ORCID = \"0000-0003-2172-5265\")), person(c('Jeffrey', 'O'), 'Hanson', role = c(\"ctb\"), comment = c(ORCID = \"0000-0002-4716-6134\")), person(\"Kevin\", 'Kuo', role = c(\"ctb\"), comment = c(ORCID = \"0000-0001-7803-7901\")) )\n# URL: https://github.com/ropensci/piggyback\n# BugReports: https://github.com/ropensci/piggyback/issues\n# License: GPL-3\n# Encoding: UTF-8\n# ByteCompile: true\n# Imports: cli, glue, gh, httr, jsonlite, fs, lubridate, memoise\n# Suggests: spelling, readr, covr, testthat, knitr, rmarkdown, gert, withr, magrittr\n# VignetteBuilder: knitr\n# RoxygenNote: 7.1.2\n# Language: en-US\n# NeedsCompilation: no\n# Packaged: 2022-07-19 22:28:59 UTC; cboettig\n# Author: Carl Boettiger [aut, cre, cph] (<https://orcid.org/0000-0002-1642-628X>), Tan Ho [aut] (<https://orcid.org/0000-0001-8388-5155>), Mark Padgham [ctb] (<https://orcid.org/0000-0003-2172-5265>), Jeffrey O Hanson [ctb] (<https://orcid.org/0000-0002-4716-6134>), Kevin Kuo [ctb] (<https://orcid.org/0000-0001-7803-7901>)\n# Maintainer: Carl Boettiger <cboettig@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2022-07-19 23:20:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-cli",
      "r-fs",
      "r-gh",
      "r-glue",
      "r-httr",
      "r-jsonlite",
      "r-lubridate",
      "r-memoise"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-fs",
        "r-gh",
        "r-glue",
        "r-httr",
        "r-jsonlite",
        "r-lubridate",
        "r-memoise"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/piggyback_0.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/piggyback/piggyback_0.1.5.tar.gz"
  ],
  "version": "0.1.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-piggyback.json"
  }
}