{
  "archived": true,
  "branch": "main",
  "conda-forge.yml": {},
  "feedstock_name": "root5",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://root.cern.ch/",
      "license": "LGPL-2.1",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other languages such as Python and R."
    },
    "build": {
      "number": "4",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "giacomov",
        "jasercion",
        "Areustle"
      ]
    },
    "package": {
      "name": "root5",
      "version": "5.34.38"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "fftw",
        "mesalib",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-libsm",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ],
      "run": [
        "python",
        "fftw",
        "mesalib",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-libsm",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ]
    },
    "source": {
      "fn": "root_v5.34.38.source.tar.gz",
      "sha256": "2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2",
      "url": "https://root.cern.ch/download/root_v5.34.38.source.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/lib/root/libCore.so",
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://root.cern.ch/",
      "license": "LGPL-2.1",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other languages such as Python and R."
    },
    "build": {
      "number": "4",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "giacomov",
        "jasercion",
        "Areustle",
        "giacomov",
        "jasercion",
        "Areustle",
        "giacomov",
        "jasercion",
        "Areustle"
      ]
    },
    "package": {
      "name": "root5",
      "version": "5.34.38"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "fftw",
        "mesalib",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-libsm",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu",
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu",
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ],
      "run": [
        "python",
        "fftw",
        "mesalib",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-libsm",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu",
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu",
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ]
    },
    "source": {
      "fn": "root_v5.34.38.source.tar.gz",
      "sha256": "2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2",
      "url": "https://root.cern.ch/download/root_v5.34.38.source.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/lib/root/libCore.so",
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null",
        "test -f ${PREFIX}/lib/root/libCore.so",
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null",
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null"
      ]
    }
  },
  "name": "root5",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://root.cern.ch/",
      "license": "LGPL-2.1",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other languages such as Python and R."
    },
    "build": {
      "number": "4",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "giacomov",
        "jasercion",
        "Areustle"
      ]
    },
    "package": {
      "name": "root5",
      "version": "5.34.38"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ],
      "run": [
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ]
    },
    "source": {
      "fn": "root_v5.34.38.source.tar.gz",
      "sha256": "2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2",
      "url": "https://root.cern.ch/download/root_v5.34.38.source.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/lib/root/libCore.so",
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "root5"
    ]
  },
  "parsing_error": "make_graph: missing parsing_error key",
  "pr_info": {
    "__lazy_json__": "pr_info/root5.json"
  },
  "raw_meta_yaml": "{% set name = \"root5\" %}\n{% set version = \"5.34.38\" %}\n{% set sha256 = \"2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: root_v{{ version }}.source.tar.gz\n  url: https://root.cern.ch/download/root_v{{ version }}.source.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n   number: 4\n   skip: true  # [win]\n   skip: true  # [py3k]\n\nrequirements:\n \n build:\n     - cmake\n#     - {{ compiler('fortran') }}\n     - {{ compiler('c') }}\n     - {{ compiler('cxx') }}\n host:\n     - python\n     - fftw\n#     - cfitsio\n     - mesalib\n     - xorg-libxft  # [linux]\n     - xorg-libxpm  # [linux]\n     - xorg-libsm  # [linux]\n     - jpeg\n     - libpng\n     - zlib\n     - libxml2\n     - blas\n     - openblas\n     - gsl\n     - krb5\n     - readline\n     - icu\n\n run:\n     - python\n     - fftw\n#     - cfitsio\n     - mesalib\n     - xorg-libxft  # [linux]\n     - xorg-libxpm  # [linux]\n     - xorg-libsm  # [linux]\n     - jpeg\n     - libpng\n     - zlib\n     - libxml2\n     - blas\n     - openblas\n     - gsl\n     - krb5\n     - readline\n     - icu\n\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/root/libCore.so  # [linux]\n    - test -f ${PREFIX}/lib/root/libCore.so  # [osx]\n    - test -f ${PREFIX}/include/root/TROOT.h\n    # NOTE: it is normal for the following to complain about missing links to\n    # *.dll files of CINT. They will be found at runtime thanks to the system.rootrc\n    # file which is read when ROOT starts\n    # Committing these because they take too long and the Travis CI and Circle CI build\n    # would time out\n    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null\n    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null\n    - root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null\n    - cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null\n    #- cd ${PREFIX}/share/doc/root/tutorials/fitsio && root -b -x -q FITS_tutorial1.C >& /dev/null\n\nabout:\n  home: https://root.cern.ch/\n  license: LGPL-2.1\n  summary: 'A modular scientific software framework. It provides all the\n  functionalities needed to deal with big data processing, statistical analysis,\n  visualisation and storage. It is mainly written in C++ but integrated with\n  other languages such as Python and R.'\n  license_family: LGPL\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - giacomov\n    - jasercion\n    - Areustle\n",
  "req": {
    "__set__": true,
    "elements": [
      "blas",
      "c_compiler_stub",
      "cmake",
      "cxx_compiler_stub",
      "fftw",
      "gsl",
      "icu",
      "jpeg",
      "krb5",
      "libpng",
      "libxml2",
      "mesalib",
      "openblas",
      "python",
      "readline",
      "xorg-libsm",
      "xorg-libxft",
      "xorg-libxpm",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "blas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "xorg-libsm",
        "xorg-libxft",
        "xorg-libxpm",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://root.cern.ch/download/root_v5.34.38.source.tar.gz",
  "version": "5.34.38",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/root5.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://root.cern.ch/",
      "license": "LGPL-2.1",
      "license_family": "LGPL",
      "license_file": "LICENSE",
      "summary": "A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other languages such as Python and R."
    },
    "build": {
      "number": "4",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "giacomov",
        "jasercion",
        "Areustle"
      ]
    },
    "package": {
      "name": "root5",
      "version": "5.34.38"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ],
      "run": [
        "python",
        "fftw",
        "mesalib",
        "jpeg",
        "libpng",
        "zlib",
        "libxml2",
        "blas",
        "openblas",
        "gsl",
        "krb5",
        "readline",
        "icu"
      ]
    },
    "source": {
      "fn": "root_v5.34.38.source.tar.gz",
      "sha256": "2c3bda69601d94836bdd88283a6585b4774eafc813deb6aa348df0af2922c4d2",
      "url": "https://root.cern.ch/download/root_v5.34.38.source.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/root/TROOT.h",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/roofit/rf101_basics.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/fft/FFT.C >& /dev/null",
        "root -b -q -x ${PREFIX}/share/doc/root/tutorials/physics/PhaseSpace.C >& /dev/null",
        "cd ${PREFIX}/share/doc/root/tutorials/pyroot && python fillrandom.py && python fit1.py >& /dev/null"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "blas",
        "fftw",
        "gsl",
        "icu",
        "jpeg",
        "krb5",
        "libpng",
        "libxml2",
        "mesalib",
        "openblas",
        "python",
        "readline",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}