{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_64": "azure",
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "osx_64": "azure",
      "win_64": "azure"
    },
    "test": "native"
  },
  "feedstock_name": "Iris-Codec",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide",
        "ninja"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "name": "iris-codec",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "make",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng",
        "openslide"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "iris-codec"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/Iris-Codec.json"
  },
  "raw_meta_yaml": "{% set version = \"2025.2.0a3\" %}\n\npackage:\n  name: iris-codec\n  version: {{ version }}\n\nsource:\n  url: https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz\n  sha256: 8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('iris-codec', max_pin='x.x') }}\n    - libjpeg-turbo\n    - libavif\n    - libpng\n  missing_dso_whitelist:\n    - '*/libopenslide.1.*' # Eventually remove reliance on OpenSlide\n\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - python\n    - cmake\n    - make                    # [not win]\n    - ninja                   # [win]\n    - pybind11\n    - libjpeg-turbo 3.0\n    - libavif\n    - libpng\n    - openslide               # [not win]\n  host:\n    - python\n    - libjpeg-turbo 3.0\n    - libavif\n    - libpng\n    - openslide               # [not win]\n  run:\n    - python\n    - libjpeg-turbo 3.0\n    - libavif\n    - libpng\n    - openslide               # [not win]\n\n\ntest:\n  imports:\n   - Iris\n\n\nabout:\n  home: https://github.com/IrisDigitalPathology/Iris-Codec\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension\n  dev_url: https://github.com/IrisDigitalPathology/Iris-Codec\n  description: |\n    The Iris Codec Community module is a part of the Iris Digital Pathology project. \n    This module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and \n    allows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow \n    for extremely fast slide access using what we consider a very simple API as we want to simplify access to these\n    files for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n\nextra:\n  feedstock-name: Iris-Codec\n  recipe-maintainers:\n    - ryanlandvater\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libavif",
      "libjpeg-turbo",
      "libpng",
      "make",
      "ninja",
      "openslide",
      "pybind11",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "make",
        "ninja",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo 3.0",
        "libpng",
        "make",
        "ninja",
        "openslide",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo 3.0",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo 3.0",
        "libpng",
        "openslide",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz",
  "version": "2025.2.0a3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/Iris-Codec.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The Iris Codec Community module is a part of the Iris Digital Pathology project.\nThis module allows for the reading and writing of Iris whole slide image (WSI) digital slide files (.iris) and\nallows for the decoding of Iris Codec-type compressed tile image data. This repository was designed to allow\nfor extremely fast slide access using what we consider a very simple API as we want to simplify access to these\nfiles for you. Please see <https://github.com/IrisDigitalPathology/Iris-Codec> for more information.\n",
      "dev_url": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "home": "https://github.com/IrisDigitalPathology/Iris-Codec",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Portable and blazingly fast whole slide image compression and serialization library for the Iris File Extension"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libopenslide.1.*"
      ],
      "number": "0",
      "run_exports": [
        "iris-codec",
        "libjpeg-turbo",
        "libavif",
        "libpng"
      ]
    },
    "extra": {
      "feedstock-name": "Iris-Codec",
      "recipe-maintainers": [
        "ryanlandvater"
      ]
    },
    "package": {
      "name": "iris-codec",
      "version": "2025.2.0a3"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "cmake",
        "ninja",
        "pybind11",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng"
      ],
      "host": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng"
      ],
      "run": [
        "python",
        "libjpeg-turbo 3.0",
        "libavif",
        "libpng"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8b6ca82459da6415bf90792b80a8dd947859632b755362e0f213df91680f132e",
      "url": "https://github.com/IrisDigitalPathology/Iris-Codec/archive/refs/tags/2025.2.0a3.tar.gz"
    },
    "test": {
      "imports": [
        "Iris"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "ninja",
        "pybind11",
        "python"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libavif",
        "libjpeg-turbo",
        "libpng",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}