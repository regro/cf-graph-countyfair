{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "compiler_stack": "comp7",
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "max_py_ver": "37",
    "max_r_ver": "35",
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_name": "sdsl-lite",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 research publications. Succinct data structures can\nrepresent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations of\nthe original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n",
      "dev_url": "https://github.com/simongog/sdsl-lite",
      "home": "https://github.com/simongog/sdsl-lite",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "/LICENSE",
      "summary": "The Succinct Data Structure Library (SDSL)"
    },
    "build": {
      "number": "1002"
    },
    "extra": {
      "recipe-maintainers": [
        "jvolkening",
        "johnlees",
        "yp"
      ]
    },
    "package": {
      "name": "sdsl-lite",
      "version": "2.1.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "sdsl-lite.tar.gz",
      "patches": [
        "00-missing_stdcout.patch",
        "01-fix_version.patch",
        "05-remove_warning.patch",
        "10-default_verbose_install.patch",
        "15-fix_cmake.patch"
      ],
      "sha256": "2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed",
      "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz"
    },
    "test": {
      "commands": [
        "cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include"
      ],
      "requires": [
        "cxx_compiler_stub",
        "make"
      ],
      "source_files": [
        "Make.helper",
        "examples"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub",
        "make"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 research publications. Succinct data structures can\nrepresent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations of\nthe original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n",
      "dev_url": "https://github.com/simongog/sdsl-lite",
      "home": "https://github.com/simongog/sdsl-lite",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "/LICENSE",
      "summary": "The Succinct Data Structure Library (SDSL)"
    },
    "build": {
      "number": "1002"
    },
    "extra": {
      "recipe-maintainers": [
        "jvolkening",
        "johnlees",
        "yp"
      ]
    },
    "package": {
      "name": "sdsl-lite",
      "version": "2.1.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "sdsl-lite.tar.gz",
      "patches": [
        "00-missing_stdcout.patch",
        "01-fix_version.patch",
        "05-remove_warning.patch",
        "10-default_verbose_install.patch",
        "15-fix_cmake.patch"
      ],
      "sha256": "2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed",
      "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz"
    },
    "test": {
      "commands": [
        "cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include"
      ],
      "requires": [
        "cxx_compiler_stub",
        "make"
      ],
      "source_files": [
        "Make.helper",
        "examples"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub",
        "make"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 research publications. Succinct data structures can\nrepresent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations of\nthe original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n",
      "dev_url": "https://github.com/simongog/sdsl-lite",
      "home": "https://github.com/simongog/sdsl-lite",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "/LICENSE",
      "summary": "The Succinct Data Structure Library (SDSL)"
    },
    "build": {
      "number": "1002"
    },
    "extra": {
      "recipe-maintainers": [
        "jvolkening",
        "johnlees",
        "yp"
      ]
    },
    "package": {
      "name": "sdsl-lite",
      "version": "2.1.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "sdsl-lite.tar.gz",
      "patches": [
        "00-missing_stdcout.patch",
        "01-fix_version.patch",
        "05-remove_warning.patch",
        "10-default_verbose_install.patch",
        "15-fix_cmake.patch"
      ],
      "sha256": "2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed",
      "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz"
    },
    "test": {
      "commands": [
        "cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include"
      ],
      "requires": [
        "cxx_compiler_stub",
        "make"
      ],
      "source_files": [
        "Make.helper",
        "examples"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub",
        "make"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 research publications. Succinct data structures can\nrepresent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations of\nthe original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n",
      "dev_url": "https://github.com/simongog/sdsl-lite",
      "home": "https://github.com/simongog/sdsl-lite",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "/LICENSE",
      "summary": "The Succinct Data Structure Library (SDSL)"
    },
    "build": {
      "number": "1002"
    },
    "extra": {
      "recipe-maintainers": [
        "jvolkening",
        "johnlees",
        "yp"
      ]
    },
    "package": {
      "name": "sdsl-lite",
      "version": "2.1.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "sdsl-lite.tar.gz",
      "patches": [
        "00-missing_stdcout.patch",
        "01-fix_version.patch",
        "05-remove_warning.patch",
        "10-default_verbose_install.patch",
        "15-fix_cmake.patch"
      ],
      "sha256": "2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed",
      "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz"
    },
    "test": {
      "commands": [
        "cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include"
      ],
      "requires": [
        "cxx_compiler_stub",
        "make"
      ],
      "source_files": [
        "Make.helper",
        "examples"
      ]
    }
  },
  "name": "sdsl-lite",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 research publications. Succinct data structures can\nrepresent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations of\nthe original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n",
      "dev_url": "https://github.com/simongog/sdsl-lite",
      "home": "https://github.com/simongog/sdsl-lite",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "/LICENSE",
      "summary": "The Succinct Data Structure Library (SDSL)"
    },
    "build": {
      "number": "1002"
    },
    "extra": {
      "recipe-maintainers": [
        "jvolkening",
        "johnlees",
        "yp"
      ]
    },
    "package": {
      "name": "sdsl-lite",
      "version": "2.1.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "sdsl-lite.tar.gz",
      "patches": [
        "00-missing_stdcout.patch",
        "01-fix_version.patch",
        "05-remove_warning.patch",
        "10-default_verbose_install.patch",
        "15-fix_cmake.patch"
      ],
      "sha256": "2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed",
      "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz"
    },
    "test": {
      "commands": [
        "cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "Make.helper",
        "examples"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "sdsl-lite"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/sdsl-lite.json"
  },
  "raw_meta_yaml": "{% set name = \"sdsl-lite\" %}\n{% set version = \"2.1.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/simongog/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz.offline.install.gz\n  fn: {{ name }}.tar.gz # necessary because of the nonstandard file extension from upstream\n  sha256: 2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed\n  patches:\n    - 00-missing_stdcout.patch\n    - 01-fix_version.patch\n    - 05-remove_warning.patch\n    - 10-default_verbose_install.patch\n    - 15-fix_cmake.patch\n\nbuild:\n  number: 1002\n  # TODO: fix Windows build/testing\n  skip: true  # [win]\n  #script: \"del %SRC_DIR%\\\\build\\\\CMakeCache.txt && %SRC_DIR%\\\\install.bat %PREFIX%\"  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [linux]\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - make  # [linux]\n  source_files:\n    - Make.helper\n    - examples\n  commands:\n    - cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include\n\nabout:\n  home: https://github.com/simongog/sdsl-lite\n  license: GPL-3.0-or-later\n  license_family: GPL\n  summary: 'The Succinct Data Structure Library (SDSL)'\n  description: |\n    The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\n    library implementing succinct data structures. In total, the library contains\n    the highlights of 40 research publications. Succinct data structures can\n    represent an object (such as a bitvector or a tree) in space close to the\n    information-theoretic lower bound of the object while supporting operations of\n    the original object efficiently. The theoretical time complexity of an\n    operation performed on the classical data structure and the equivalent\n    succinct data structure are (most of the time) identical.\n  dev_url: https://github.com/simongog/sdsl-lite\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n\nextra:\n  recipe-maintainers:\n    - jvolkening\n    - johnlees\n    - yp\n",
  "req": {
    "__set__": true,
    "elements": [
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub",
        "make"
      ]
    }
  },
  "strong_exports": false,
  "time": 1568135297.9506838,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub",
        "make"
      ]
    }
  },
  "url": "https://github.com/simongog/sdsl-lite/releases/download/v2.1.1/sdsl-lite-2.1.1.tar.gz.offline.install.gz",
  "version": "2.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/sdsl-lite.json"
  }
}