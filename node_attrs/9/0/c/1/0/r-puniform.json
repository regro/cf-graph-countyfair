{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "5d5f362239d745dad6a1e24c43106da218980058",
  "feedstock_hash_ts": 1758722282,
  "feedstock_name": "r-puniform",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/RobbievanAert/puniform",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017) <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts, 2021)."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "thewchan"
      ]
    },
    "package": {
      "name": "r-puniform",
      "version": "0.2.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "libgomp"
      ],
      "host": [
        "libblas",
        "liblapack",
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ],
      "run": [
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fed1a0c126a51e3b5f7e49ffd62a8475d686cf787cee34a866967830343378a7",
      "url": [
        "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('puniform')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/RobbievanAert/puniform",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017) <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts, 2021)."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "thewchan"
      ]
    },
    "package": {
      "name": "r-puniform",
      "version": "0.2.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "libblas",
        "liblapack",
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ],
      "run": [
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fed1a0c126a51e3b5f7e49ffd62a8475d686cf787cee34a866967830343378a7",
      "url": [
        "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('puniform')\"",
        "\"%R%\" -e \"library('puniform')\""
      ]
    }
  },
  "name": "r-puniform",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/RobbievanAert/puniform",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017) <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts, 2021)."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "thewchan"
      ]
    },
    "package": {
      "name": "r-puniform",
      "version": "0.2.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "llvm-openmp"
      ],
      "host": [
        "libblas",
        "liblapack",
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ],
      "run": [
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fed1a0c126a51e3b5f7e49ffd62a8475d686cf787cee34a866967830343378a7",
      "url": [
        "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('puniform')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "llvm-openmp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-puniform"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-puniform.json"
  },
  "raw_meta_yaml": "{% set version = \"0.2.8\" %}\n\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-puniform\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/puniform_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/puniform/puniform_{{ version }}.tar.gz\n  sha256: fed1a0c126a51e3b5f7e49ffd62a8475d686cf787cee34a866967830343378a7\n\nbuild:\n  number: 1\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}  # [not win]\n    - {{ stdlib(\"c\") }}    # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ stdlib(\"m2w64_c\") }}    # [win]\n    - {{ compiler('cxx') }}  # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem  # [win]\n    - {{ posix }}make\n    - {{ posix }}sed  # [win]\n    - {{ posix }}coreutils  # [win]\n    - {{ posix }}zip  # [win]\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n\n  host:\n    - libblas  # [unix]\n    - liblapack  # [unix]\n    - r-base\n    - r-adgoftest >=0.3\n    - r-rcpp >=0.12.15\n    - r-rcpparmadillo\n    - r-metafor\n\n  run:\n    - r-base\n    - r-adgoftest >=0.3\n    - r-rcpp >=0.12.15\n    - r-rcpparmadillo\n    - r-metafor\n\ntest:\n  commands:\n    - $R -e \"library('puniform')\"  # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('puniform')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/RobbievanAert/puniform\n  license: GPL-2.0-or-later\n  summary: Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating\n    the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method\n    is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017)\n    <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional\n    on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original\n    study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the\n    primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts,\n    2021).\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - thewchan\n\n# The original CRAN metadata for this package was:\n\n# Package: puniform\n# Type: Package\n# Title: Meta-Analysis Methods Correcting for Publication Bias\n# Version: 0.2.5\n# Date: 2022-03-18\n# Author: Robbie C.M. van Aert\n# Maintainer: Robbie C.M. van Aert <R.C.M.vanAert@tilburguniversity.edu>\n# Description: Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017) <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts, 2021).\n# License: GPL (>= 2)\n# Imports: Rcpp (>= 0.12.15), ADGofTest (>= 0.3), stats, metafor\n# LinkingTo: Rcpp, RcppArmadillo\n# RoxygenNote: 7.1.1\n# URL: https://github.com/RobbievanAert/puniform\n# BugReports: https://github.com/RobbievanAert/puniform/issues\n# NeedsCompilation: yes\n# Packaged: 2022-03-18 19:52:02 UTC; s787802\n# Repository: CRAN\n# Date/Publication: 2022-03-21 07:40:05 UTC\n\n# See\n# https://docs.conda.io/projects/conda-build for\n# more information about meta.yaml\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "libblas",
      "libgomp",
      "liblapack",
      "llvm-openmp",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-adgoftest",
      "r-base",
      "r-metafor",
      "r-rcpp",
      "r-rcpparmadillo",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libblas",
        "liblapack",
        "openmp",
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "openmp",
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-adgoftest >=0.3",
        "r-base",
        "r-metafor",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-adgoftest >=0.3",
        "r-base",
        "r-metafor",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz",
    "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz",
    "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz"
  ],
  "version": "0.2.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-puniform.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/RobbievanAert/puniform",
      "license": "GPL-2.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Provides meta-analysis methods that correct for publication bias and outcome reporting bias. Four methods and a visual tool are currently included in the package. The p-uniform method as described in van Assen, van Aert, and Wicherts (2015) <https:psycnet.apa.org/record/2014-48759-001> can be used for estimating the average effect size, testing the null hypothesis of no effect, and testing for publication bias using only the statistically significant effect sizes of primary studies. The second method in the package is the p-uniform* method as described in van Aert and van Assen (2019) <doi:10.31222/osf.io/zqjr9>. This method is an extension of the p-uniform method that allows for estimation of the average effect size and the between-study variance in a meta-analysis, and uses both the statistically significant and nonsignificant effect sizes. The third method in the package is the hybrid method as described in van Aert and van Assen (2017) <doi:10.3758/s13428-017-0967-6>. The hybrid method is a meta-analysis method for combining an original study and replication and while taking into account statistical significance of the  original study. The p-uniform and hybrid method are based on the statistical theory that the distribution of p-values is uniform conditional on the population effect size. The fourth method in the package is the Snapshot Bayesian Hybrid Meta-Analysis Method as described in van Aert and van Assen (2018) <doi:10.1371/journal.pone.0175302>. This method computes posterior probabilities for four true effect sizes (no, small, medium, and large) based on an original study and replication while taking into account publication bias in the original study. The method can also be used for computing the required sample size of the replication akin to power analysis in null hypothesis significance testing. The meta-plot is a visual tool for meta-analysis that provides information on the primary studies in the meta-analysis, the results of the meta-analysis, and characteristics of the research on the effect under study (van Assen et al., 2021). Helper functions to apply the Correcting for Outcome Reporting Bias (CORB) method to correct for outcome reporting bias in a meta-analysis (van Aert & Wicherts, 2021)."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "thewchan"
      ]
    },
    "package": {
      "name": "r-puniform",
      "version": "0.2.8"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ],
      "run": [
        "r-base",
        "r-adgoftest >=0.3",
        "r-rcpp >=0.12.15",
        "r-rcpparmadillo",
        "r-metafor"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "fed1a0c126a51e3b5f7e49ffd62a8475d686cf787cee34a866967830343378a7",
      "url": [
        "https://cran.r-project.org/src/contrib/puniform_0.2.8.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/puniform/puniform_0.2.8.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('puniform')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-adgoftest",
        "r-base",
        "r-metafor",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}