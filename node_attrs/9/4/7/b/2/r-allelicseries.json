{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-allelicseries",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=AllelicSeries",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": [
        "/lib/R/share/licenses/BSD_3_clause",
        "LICENSE"
      ],
      "summary": "Implementation of gene-level rare variant association tests targeting allelic series: genes where increasingly deleterious mutations have increasingly large phenotypic effects. The COding-variant Allelic Series Test (COAST) operates on the benign missense variants (BMVs), deleterious missense variants (DMVs), and protein truncating variants (PTVs) within a gene. COAST uses a set of adjustable weights that tailor the test towards rejecting the null hypothesis for genes where the average magnitude of effect increases monotonically from BMVs to DMVs to PTVs. See McCaw ZR, Somineni H, Bereket M, Klein C, Karaletsos T, Casale FP, Koller D, Soare TW. (2022) \"An allelic series rare variant association test for candidate gene discovery\" <doi:10.1101/2022.12.23.521658>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-allelicseries",
      "version": "0.1.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "libgomp"
      ],
      "host": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ebc39c95f08f9b30e4f1d2abee144294be27a5eacace1657b20870f80ba99cd7",
      "url": [
        "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('AllelicSeries')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat",
        "r-withr"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libgomp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat",
        "r-withr"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=AllelicSeries",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": [
        "/lib/R/share/licenses/BSD_3_clause",
        "LICENSE"
      ],
      "summary": "Implementation of gene-level rare variant association tests targeting allelic series: genes where increasingly deleterious mutations have increasingly large phenotypic effects. The COding-variant Allelic Series Test (COAST) operates on the benign missense variants (BMVs), deleterious missense variants (DMVs), and protein truncating variants (PTVs) within a gene. COAST uses a set of adjustable weights that tailor the test towards rejecting the null hypothesis for genes where the average magnitude of effect increases monotonically from BMVs to DMVs to PTVs. See McCaw ZR, Somineni H, Bereket M, Klein C, Karaletsos T, Casale FP, Koller D, Soare TW. (2022) \"An allelic series rare variant association test for candidate gene discovery\" <doi:10.1101/2022.12.23.521658>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rlapack.dll",
        "*/Rblas.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-allelicseries",
      "version": "0.1.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libblas",
        "liblapack",
        "llvm-openmp"
      ],
      "run": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libgomp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ebc39c95f08f9b30e4f1d2abee144294be27a5eacace1657b20870f80ba99cd7",
      "url": [
        "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('AllelicSeries')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"",
        "\"%R%\" -e \"library('AllelicSeries')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat",
        "r-withr"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "name": "r-allelicseries",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=AllelicSeries",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": [
        "/lib/R/share/licenses/BSD_3_clause",
        "LICENSE"
      ],
      "summary": "Implementation of gene-level rare variant association tests targeting allelic series: genes where increasingly deleterious mutations have increasingly large phenotypic effects. The COding-variant Allelic Series Test (COAST) operates on the benign missense variants (BMVs), deleterious missense variants (DMVs), and protein truncating variants (PTVs) within a gene. COAST uses a set of adjustable weights that tailor the test towards rejecting the null hypothesis for genes where the average magnitude of effect increases monotonically from BMVs to DMVs to PTVs. See McCaw ZR, Somineni H, Bereket M, Klein C, Karaletsos T, Casale FP, Koller D, Soare TW. (2022) \"An allelic series rare variant association test for candidate gene discovery\" <doi:10.1101/2022.12.23.521658>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-allelicseries",
      "version": "0.1.1.5"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "llvm-openmp"
      ],
      "host": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libblas",
        "liblapack",
        "llvm-openmp"
      ],
      "run": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ebc39c95f08f9b30e4f1d2abee144294be27a5eacace1657b20870f80ba99cd7",
      "url": [
        "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('AllelicSeries')\"",
        "$R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat",
        "r-withr"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "llvm-openmp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat",
        "r-withr"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-allelicseries"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-allelicseries.json"
  },
  "raw_meta_yaml": "{% set version = \"0.1.1.5\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-allelicseries\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/AllelicSeries_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/AllelicSeries/AllelicSeries_{{ version }}.tar.gz\n  sha256: ebc39c95f08f9b30e4f1d2abee144294be27a5eacace1657b20870f80ba99cd7\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rlapack.dll'  # [win]\n    - '*/Rblas.dll'    # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - libgomp                      # [not osx]\n    - llvm-openmp                  # [osx]\n  host:\n    - r-base\n    - r-compquadform\n    - r-glue\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-rnomni\n    - r-skat\n    - libblas\n    - liblapack\n    - llvm-openmp                  # [osx]\n  run:\n    - r-base\n    - r-compquadform\n    - r-glue\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-rnomni\n    - r-skat\n    - libgomp                      # [win]\n\ntest:\n  requires:\n    - r-testthat\n    - r-withr\n  source_files:\n    - tests/\n  commands:\n    - $R -e \"library('AllelicSeries')\"                                                # [not win]\n    - $R -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('AllelicSeries')\\\"\"                                       # [win]\n    - \"\\\"%R%\\\" -e \\\"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=AllelicSeries\n  license: BSD-3-Clause\n  summary: 'Implementation of gene-level rare variant association tests targeting allelic series: genes where increasingly deleterious mutations have increasingly large phenotypic effects. The COding-variant Allelic Series Test (COAST) operates on the benign missense variants (BMVs), deleterious missense variants (DMVs),\n    and protein truncating variants (PTVs) within a gene. COAST uses a set of adjustable weights that tailor the test towards rejecting the null hypothesis for genes where the average magnitude of effect increases monotonically from BMVs to DMVs to PTVs. See McCaw ZR, Somineni H, Bereket M, Klein C, Karaletsos T, Casale\n    FP, Koller D, Soare TW. (2022) \"An allelic series rare variant association test for candidate gene discovery\" <doi:10.1101/2022.12.23.521658>.'\n  license_family: BSD\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/BSD_3_clause\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "libblas",
      "libgomp",
      "liblapack",
      "llvm-openmp",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-compquadform",
      "r-glue",
      "r-rcpp",
      "r-rcpparmadillo",
      "r-rnomni",
      "r-skat",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libblas",
        "liblapack",
        "llvm-openmp",
        "openmp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libgomp",
        "openmp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat",
        "r-withr"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "libgomp",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "llvm-openmp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgomp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat",
        "r-withr"
      ]
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz"
  ],
  "version": "0.1.1.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-allelicseries.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=AllelicSeries",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": [
        "/lib/R/share/licenses/BSD_3_clause",
        "LICENSE"
      ],
      "summary": "Implementation of gene-level rare variant association tests targeting allelic series: genes where increasingly deleterious mutations have increasingly large phenotypic effects. The COding-variant Allelic Series Test (COAST) operates on the benign missense variants (BMVs), deleterious missense variants (DMVs), and protein truncating variants (PTVs) within a gene. COAST uses a set of adjustable weights that tailor the test towards rejecting the null hypothesis for genes where the average magnitude of effect increases monotonically from BMVs to DMVs to PTVs. See McCaw ZR, Somineni H, Bereket M, Klein C, Karaletsos T, Casale FP, Koller D, Soare TW. (2022) \"An allelic series rare variant association test for candidate gene discovery\" <doi:10.1101/2022.12.23.521658>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rlapack.dll",
        "*/Rblas.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-allelicseries",
      "version": "0.1.1.5"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip",
        "libgomp"
      ],
      "host": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat",
        "libgomp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ebc39c95f08f9b30e4f1d2abee144294be27a5eacace1657b20870f80ba99cd7",
      "url": [
        "https://cran.r-project.org/src/contrib/AllelicSeries_0.1.1.5.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/AllelicSeries/AllelicSeries_0.1.1.5.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('AllelicSeries')\"",
        "\"%R%\" -e \"testthat::test_file('tests/testthat.R', stop_on_failure=TRUE)\""
      ],
      "requires": [
        "r-testthat",
        "r-withr"
      ],
      "source_files": [
        "tests/"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "libgomp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgomp",
        "r-base",
        "r-compquadform",
        "r-glue",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rnomni",
        "r-skat"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "r-testthat",
        "r-withr"
      ]
    }
  }
}