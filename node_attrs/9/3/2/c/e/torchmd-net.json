{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\bld",
          "MINIFORGE_HOME": "C:\\Miniforge",
          "SET_PAGEFILE": "True"
        }
      }
    },
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_aarch64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "bfa72ec7e57e14be3c70d1eee7f306a5aa8bc108",
  "feedstock_hash_ts": 1756318149,
  "feedstock_name": "torchmd-net",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcublas-dev",
        "cuda-nvrtc-dev",
        "libcusparse-dev",
        "libcusolver-dev"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cuda*",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm",
        "cuda-cudart"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help",
        "pytest -v -k \"not compile\" -s tests"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest",
        "gxx"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-version",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "gxx",
        "pip",
        "pytest"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcublas-dev",
        "cuda-nvrtc-dev",
        "libcusparse-dev",
        "libcusolver-dev"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cuda*",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm",
        "cuda-cudart"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest",
        "gxx"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-version",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "gxx",
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": [
        "*/c10.dll",
        "*/torch_cpu.dll",
        "*/c10_cuda.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcublas-dev",
        "cuda-nvrtc-dev",
        "libcusparse-dev",
        "libcusolver-dev",
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cuda*",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm",
        "cuda-cudart"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help",
        "pytest -v -k \"not compile\" -s tests"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest",
        "gxx",
        "clang"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "name": "torchmd-net",
  "osx_64_meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help",
        "pytest -v -k \"not compile\" -s tests"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest",
        "clang"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang",
        "pip",
        "pytest"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": null,
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help",
        "pytest -v -k \"not compile\" -s tests"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest",
        "clang"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang",
        "pip",
        "pytest"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "torchmd-net"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/torchmd-net.json"
  },
  "raw_meta_yaml": "{% set version = \"2.4.11\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: torchmd-net\n  version: {{ version }}\n\nsource:\n  url: https://github.com/torchmd/torchmd-net/archive/v{{ version }}.tar.gz\n  sha256: ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4\n\nbuild:\n  # Currently there is no pytorch 2.5.1 for Windows and CUDA 11.8. Only 12+. Same for aarch64.\n  skip: true  # [(win or aarch64) and (cuda_compiler_version == '11.8')]\n  entry_points:\n    - torchmd-train = torchmdnet.scripts.train:main\n  number: 0\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  rpaths:\n    - lib/\n    - {{ SP_DIR }}/torch/lib\n  missing_dso_whitelist:\n    - \"*/c10.dll\"         # [win]\n    - \"*/torch_cpu.dll\"   # [win]\n    - \"*/c10_cuda.dll\"    # [win]\n\nrequirements:\n  build:\n    - python                                    # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}        # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cuda') }}                    # [cuda_compiler_version not in (undefined, 'None')]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - pytorch                                   # [build_platform != target_platform]\n    - pytorch =*={{ torch_proc_type }}*         # [(build_platform != target_platform) or win]\n    - cuda-cudart-dev                           # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-driver-dev                           # [(cuda_compiler_version or \"\").startswith(\"12\") and linux]\n    - libcufft-dev                              # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcurand-dev                             # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcublas-dev                             # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvrtc-dev                            # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcusparse-dev                           # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcusolver-dev                           # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  host:\n    - python\n    - setuptools >=78\n    - pip\n    - pytorch =*={{ torch_proc_type }}*\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version not in (undefined, 'None')]\n    - cuda-cudart-dev                           # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  run:\n    - python\n    - h5py\n    - pytorch_geometric\n    - lightning\n    - tqdm\n    - cuda-cudart                               # [(cuda_compiler_version or \"\").startswith(\"12\")]\n  run_constrained:\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torchmdnet\n  commands:\n    # - pip check\n    - torchmd-train --help\n    - pytest -v -s tests  # [py<3.12 and not aarch64]\n    # Pytorch compile does not support 3.12\n    - pytest -v -k \"not compile\" -s tests  # [py>=3.12 and not aarch64]\n  requires:\n    - pip\n    - pytest\n    # Needed by pytorch for the compile functionality\n    - gxx  # [linux]\n    - clang  # [osx]\n  source_files:\n    - tests\n    - examples\n\nabout:\n  home: https://github.com/torchmd/torchmd-net\n  license: MIT\n  license_file: README.md\n  summary: 'State of the art Pytorch Neural Network Potentials (NNPs)'\n  description: |\n    TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n  doc_url: https://github.com/torchmd/torchmd-net\n  dev_url: https://github.com/torchmd/torchmd-net\n\nextra:\n  recipe-maintainers:\n    - sef43\n    - stefdoerr\n    - RaulPPelaez\n    - raimis\n    - giadefa\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cuda-cudart",
      "cuda-cudart-dev",
      "cuda-driver-dev",
      "cuda-nvrtc-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "h5py",
      "libcublas-dev",
      "libcufft-dev",
      "libcurand-dev",
      "libcusolver-dev",
      "libcusparse-dev",
      "lightning",
      "pip",
      "python",
      "pytorch",
      "pytorch_geometric",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "pytorch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cuda-cudart-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cuda-cudart",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang",
        "gxx",
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-version 12.6",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-version 12.6",
        "pip",
        "python",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*",
        "setuptools >=78"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "clang",
        "gxx",
        "pip",
        "pytest"
      ]
    }
  },
  "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz",
  "version": "2.4.11",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/torchmd-net.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "TorchMD-NET provides state-of-the-art neural networks potentials (NNPs) and a mechanism to train them. It offers efficient and fast implementations of several NNPs and it is integrated in GPU-accelerated molecular dynamics code like ACEMD, OpenMM and TorchMD. TorchMD-NET exposes its NNPs as PyTorch modules.\n",
      "dev_url": "https://github.com/torchmd/torchmd-net",
      "doc_url": "https://github.com/torchmd/torchmd-net",
      "home": "https://github.com/torchmd/torchmd-net",
      "license": "MIT",
      "license_file": "README.md",
      "summary": "State of the art Pytorch Neural Network Potentials (NNPs)"
    },
    "build": {
      "entry_points": [
        "torchmd-train = torchmdnet.scripts.train:main"
      ],
      "missing_dso_whitelist": [
        "*/c10.dll",
        "*/torch_cpu.dll",
        "*/c10_cuda.dll"
      ],
      "number": "0",
      "rpaths": [
        "lib/",
        "SP_DIR/torch/lib"
      ],
      "string": "cpu_py313h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "sef43",
        "stefdoerr",
        "RaulPPelaez",
        "raimis",
        "giadefa"
      ]
    },
    "package": {
      "name": "torchmd-net",
      "version": "2.4.11"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "pytorch =*=cuda*",
        "cuda-cudart-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcublas-dev",
        "cuda-nvrtc-dev",
        "libcusparse-dev",
        "libcusolver-dev",
        "pytorch =*=cpu*"
      ],
      "host": [
        "python",
        "setuptools >=78",
        "pip",
        "pytorch =*=cuda*",
        "cuda-version 12.6",
        "cuda-cudart-dev",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "h5py",
        "pytorch_geometric",
        "lightning",
        "tqdm",
        "cuda-cudart"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ac76aa652c7e4ae38029d58605b0e200d4b7d4185f0c55d7ffe50f4943357fc4",
      "url": "https://github.com/torchmd/torchmd-net/archive/v2.4.11.tar.gz"
    },
    "test": {
      "commands": [
        "torchmd-train --help",
        "pytest -v -k \"not compile\" -s tests"
      ],
      "imports": [
        "torchmdnet"
      ],
      "requires": [
        "pip",
        "pytest"
      ],
      "source_files": [
        "tests",
        "examples"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-nvrtc-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "pytorch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-version",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "h5py",
        "lightning",
        "python",
        "pytorch_geometric",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  }
}