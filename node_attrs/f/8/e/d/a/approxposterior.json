{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "e041a477a491f215fbd9845b4ed32a44e105fb97",
  "feedstock_hash_ts": 1730869683,
  "feedstock_name": "approxposterior",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This package is a Python implementation of Bayesian Active Learning for\nPosterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\nprocess approximation for Bayesian inference with expensive likelihood\nfunctions by Wang & Li (2017). These algorithms allows the user to compute\napproximate posterior probability distributions using computationally\nexpensive forward models by training a Gaussian Process (GP) surrogate\nfor the likelihood evaluation. The algorithms leverage the inherent\nuncertainty in the GP's predictions to identify high-likelihood regions\nin parameter space where the GP is uncertain. The algorithms then run the\nforward model at these points to compute their likelihood and re-trains\nthe GP to maximize the GP's predictive ability while minimizing the number\nof forward model evaluations. Check out Bayesian Active Learning for\nPosterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\nprocess approximation for Bayesian inference with expensive likelihood\nfunctions by Wang & Li (2017) for in-depth descriptions of the respective\nalgorithms.\n",
      "dev_url": "https://github.com/dflemin3/approxposterior",
      "doc_url": "https://dflemin3.github.io/approxposterior/",
      "home": "http://github.com/dflemin3/approxposterior",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python implementation of Bayesian Approximate Posterior Estimation algorithm"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "dflemin3",
        "jakevdp"
      ]
    },
    "package": {
      "name": "approxposterior",
      "version": "0.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.5"
      ],
      "run": [
        "python >=3.5",
        "numpy",
        "matplotlib-base",
        "scipy",
        "george",
        "emcee >=3",
        "corner",
        "scikit-learn",
        "h5py"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "approxposterior-0.4.tar.gz",
      "sha256": "5a6a64a7291d17450771f2471f92253511e77c86e82b6dcd04d5ffb4a64c1ebc",
      "url": "https://pypi.io/packages/source/a/approxposterior/approxposterior-0.4.tar.gz"
    },
    "test": {
      "imports": [
        "approxposterior",
        "approxposterior.approx"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "emcee",
        "george",
        "h5py",
        "matplotlib-base",
        "numpy",
        "python",
        "scikit-learn",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This package is a Python implementation of Bayesian Active Learning for\nPosterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\nprocess approximation for Bayesian inference with expensive likelihood\nfunctions by Wang & Li (2017). These algorithms allows the user to compute\napproximate posterior probability distributions using computationally\nexpensive forward models by training a Gaussian Process (GP) surrogate\nfor the likelihood evaluation. The algorithms leverage the inherent\nuncertainty in the GP's predictions to identify high-likelihood regions\nin parameter space where the GP is uncertain. The algorithms then run the\nforward model at these points to compute their likelihood and re-trains\nthe GP to maximize the GP's predictive ability while minimizing the number\nof forward model evaluations. Check out Bayesian Active Learning for\nPosterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\nprocess approximation for Bayesian inference with expensive likelihood\nfunctions by Wang & Li (2017) for in-depth descriptions of the respective\nalgorithms.\n",
      "dev_url": "https://github.com/dflemin3/approxposterior",
      "doc_url": "https://dflemin3.github.io/approxposterior/",
      "home": "http://github.com/dflemin3/approxposterior",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python implementation of Bayesian Approximate Posterior Estimation algorithm"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "dflemin3",
        "jakevdp"
      ]
    },
    "package": {
      "name": "approxposterior",
      "version": "0.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.5"
      ],
      "run": [
        "python >=3.5",
        "numpy",
        "matplotlib-base",
        "scipy",
        "george",
        "emcee >=3",
        "corner",
        "scikit-learn",
        "h5py"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "approxposterior-0.4.tar.gz",
      "sha256": "5a6a64a7291d17450771f2471f92253511e77c86e82b6dcd04d5ffb4a64c1ebc",
      "url": "https://pypi.io/packages/source/a/approxposterior/approxposterior-0.4.tar.gz"
    },
    "test": {
      "imports": [
        "approxposterior",
        "approxposterior.approx"
      ]
    }
  },
  "name": "approxposterior",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "approxposterior"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/approxposterior.json"
  },
  "raw_meta_yaml": "{% set name = \"approxposterior\" %}\n{% set version = \"0.4\" %}\n{% set sha256 = \"5a6a64a7291d17450771f2471f92253511e77c86e82b6dcd04d5ffb4a64c1ebc\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.5\n  run:\n    - python >=3.5\n    - numpy\n    - matplotlib-base\n    - scipy\n    - george\n    - emcee >=3\n    - corner\n    - scikit-learn\n    - h5py\n\ntest:\n  imports:\n    - approxposterior\n    - approxposterior.approx\n\nabout:\n  home: http://github.com/dflemin3/approxposterior\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Python implementation of Bayesian Approximate Posterior Estimation algorithm'\n\n  description: |\n    This package is a Python implementation of Bayesian Active Learning for\n    Posterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\n    process approximation for Bayesian inference with expensive likelihood\n    functions by Wang & Li (2017). These algorithms allows the user to compute\n    approximate posterior probability distributions using computationally\n    expensive forward models by training a Gaussian Process (GP) surrogate\n    for the likelihood evaluation. The algorithms leverage the inherent\n    uncertainty in the GP's predictions to identify high-likelihood regions\n    in parameter space where the GP is uncertain. The algorithms then run the\n    forward model at these points to compute their likelihood and re-trains\n    the GP to maximize the GP's predictive ability while minimizing the number\n    of forward model evaluations. Check out Bayesian Active Learning for\n    Posterior Estimation by Kandasamy et al. (2015) and Adaptive Gaussian\n    process approximation for Bayesian inference with expensive likelihood\n    functions by Wang & Li (2017) for in-depth descriptions of the respective\n    algorithms.\n  doc_url: https://dflemin3.github.io/approxposterior/\n  dev_url: https://github.com/dflemin3/approxposterior\n\nextra:\n  recipe-maintainers:\n    - dflemin3\n    - jakevdp\n",
  "req": {
    "__set__": true,
    "elements": [
      "corner",
      "emcee",
      "george",
      "h5py",
      "matplotlib-base",
      "numpy",
      "pip",
      "python",
      "scikit-learn",
      "scipy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "emcee",
        "george",
        "h5py",
        "matplotlib-base",
        "numpy",
        "python",
        "scikit-learn",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.5"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "corner",
        "emcee >=3",
        "george",
        "h5py",
        "matplotlib-base",
        "numpy",
        "python >=3.5",
        "scikit-learn",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/a/approxposterior/approxposterior-0.4.tar.gz",
  "version": "0.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/approxposterior.json"
  }
}