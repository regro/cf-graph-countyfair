{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "763a15fbb7fd836cc61ef6bb2354fdba35ce9e1c",
  "feedstock_hash_ts": 1730842866,
  "feedstock_name": "quartet",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Quartet converts a watertight triangle mesh into a high-quality uniform\ntetrahedral mesh that closely approximates the geometry, up to the curvature\nimplied by the specified grid sampling (dx). Optionally, the tetrahedral mesh\ncan be warped to match sharp features on the input, and also improved by a\nquality optimization pass.\n",
      "dev_url": "https://github.com/PyMesh/quartet",
      "home": "https://github.com/PyMesh/quartet",
      "license": "ISC",
      "summary": "A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "quartet"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ngodber"
      ]
    },
    "package": {
      "name": "quartet",
      "version": "1.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "cxx_compiler_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398",
      "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/quartet",
        "test -f ${PREFIX}/lib/libquartet${SHLIB_EXT}"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Quartet converts a watertight triangle mesh into a high-quality uniform\ntetrahedral mesh that closely approximates the geometry, up to the curvature\nimplied by the specified grid sampling (dx). Optionally, the tetrahedral mesh\ncan be warped to match sharp features on the input, and also improved by a\nquality optimization pass.\n",
      "dev_url": "https://github.com/PyMesh/quartet",
      "home": "https://github.com/PyMesh/quartet",
      "license": "ISC",
      "summary": "A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "quartet"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ngodber"
      ]
    },
    "package": {
      "name": "quartet",
      "version": "1.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "cxx_compiler_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398",
      "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/quartet",
        "test -f ${PREFIX}/lib/libquartet${SHLIB_EXT}",
        "if not exist %LIBRARY_PREFIX%\\bin\\quartet.dll exit 1",
        "if not exist %LIBRARY_PREFIX%\\bin\\quartet.exe exit 1"
      ]
    }
  },
  "name": "quartet",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Quartet converts a watertight triangle mesh into a high-quality uniform\ntetrahedral mesh that closely approximates the geometry, up to the curvature\nimplied by the specified grid sampling (dx). Optionally, the tetrahedral mesh\ncan be warped to match sharp features on the input, and also improved by a\nquality optimization pass.\n",
      "dev_url": "https://github.com/PyMesh/quartet",
      "home": "https://github.com/PyMesh/quartet",
      "license": "ISC",
      "summary": "A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "quartet"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ngodber"
      ]
    },
    "package": {
      "name": "quartet",
      "version": "1.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "cxx_compiler_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398",
      "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/quartet",
        "test -f ${PREFIX}/lib/libquartet${SHLIB_EXT}"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "quartet"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/quartet.json"
  },
  "raw_meta_yaml": "{% set name = \"quartet\" %}\n{% set version = \"1.0\" %}\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\nsource:\n  url: https://github.com/ngodber/quartet/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"quartet\", max_pin=\"x.x\")}}\n\nrequirements:\n  build:\n    - cmake\n    - {{ compiler('cxx') }}\n  host:\n  run:\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/quartet  # [unix]\n    - test -f ${PREFIX}/lib/libquartet${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\bin\\quartet.dll exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\bin\\quartet.exe exit 1  # [win]\n\nabout:\n  home: https://github.com/PyMesh/quartet\n  license: ISC\n  summary: 'A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile.'\n  description: |\n    Quartet converts a watertight triangle mesh into a high-quality uniform \n    tetrahedral mesh that closely approximates the geometry, up to the curvature \n    implied by the specified grid sampling (dx). Optionally, the tetrahedral mesh \n    can be warped to match sharp features on the input, and also improved by a \n    quality optimization pass.\n  dev_url: https://github.com/PyMesh/quartet\nextra:\n  recipe-maintainers:\n    - ngodber\n",
  "req": {
    "__set__": true,
    "elements": [
      "cmake",
      "cxx_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz",
  "version": "1.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/quartet.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Quartet converts a watertight triangle mesh into a high-quality uniform\ntetrahedral mesh that closely approximates the geometry, up to the curvature\nimplied by the specified grid sampling (dx). Optionally, the tetrahedral mesh\ncan be warped to match sharp features on the input, and also improved by a\nquality optimization pass.\n",
      "dev_url": "https://github.com/PyMesh/quartet",
      "home": "https://github.com/PyMesh/quartet",
      "license": "ISC",
      "summary": "A tetrahedral mesh generator based on Jonathon Shewchuks isosurface stuffing algorithm in combination with the A15 acute tetrahedral tile."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "quartet"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ngodber"
      ]
    },
    "package": {
      "name": "quartet",
      "version": "1.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "cxx_compiler_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "sha256": "75c3b95f632e3410348ea6485b80562c1cd8ecc856a4d37234f9fb33140f4398",
      "url": "https://github.com/ngodber/quartet/archive/refs/tags/v1.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\bin\\quartet.dll exit 1",
        "if not exist %LIBRARY_PREFIX%\\bin\\quartet.exe exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}