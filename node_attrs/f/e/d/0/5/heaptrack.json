{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "1c3cea54768e3755286a282297f48f4d232c60dc",
  "feedstock_hash_ts": 1736502482,
  "feedstock_name": "heaptrack",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:\n  find hotspots that need to be optimized to reduce the memory footprint of your application\n  find memory leaks, i.e. locations that allocate memory which is never deallocated\n  find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls\n  find temporary allocations, which are allocations that are directly followed by their deallocation\n",
      "dev_url": "https://github.com/KDE/heaptrack",
      "doc_url": "https://userbase.kde.org/Heaptrack",
      "home": "https://github.com/KDE/heaptrack",
      "license": "GPL-2.0-or-later",
      "license_file": "source/LICENSES/GPL-2.0-or-later.txt",
      "summary": "heaptrack - a heap memory profiler for Linux"
    },
    "build": {
      "ignore_run_exports": [
        "elfutils"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "bcouturi",
        "chrisburr"
      ]
    },
    "package": {
      "name": "heaptrack",
      "version": "1.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "libunwind",
        "elfutils",
        "zlib"
      ],
      "run": [
        "libunwind",
        "elfutils"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "source",
      "patches": [
        "stdc_format.patch"
      ],
      "sha256": "44e6aefc13460556acced7192bf3600605cd7a5f3a46e670c3127aeae97e19dd",
      "url": "https://github.com/KDE/heaptrack/archive/v1.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "heaptrack_print --help"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libboost-devel",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libunwind"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:\n  find hotspots that need to be optimized to reduce the memory footprint of your application\n  find memory leaks, i.e. locations that allocate memory which is never deallocated\n  find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls\n  find temporary allocations, which are allocations that are directly followed by their deallocation\n",
      "dev_url": "https://github.com/KDE/heaptrack",
      "doc_url": "https://userbase.kde.org/Heaptrack",
      "home": "https://github.com/KDE/heaptrack",
      "license": "GPL-2.0-or-later",
      "license_file": "source/LICENSES/GPL-2.0-or-later.txt",
      "summary": "heaptrack - a heap memory profiler for Linux"
    },
    "build": {
      "ignore_run_exports": [
        "elfutils"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "bcouturi",
        "chrisburr"
      ]
    },
    "package": {
      "name": "heaptrack",
      "version": "1.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "libunwind",
        "elfutils",
        "zlib"
      ],
      "run": [
        "libunwind",
        "elfutils"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "source",
      "patches": [
        "stdc_format.patch"
      ],
      "sha256": "44e6aefc13460556acced7192bf3600605cd7a5f3a46e670c3127aeae97e19dd",
      "url": "https://github.com/KDE/heaptrack/archive/v1.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "heaptrack_print --help"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libboost-devel",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libunwind"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:\n  find hotspots that need to be optimized to reduce the memory footprint of your application\n  find memory leaks, i.e. locations that allocate memory which is never deallocated\n  find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls\n  find temporary allocations, which are allocations that are directly followed by their deallocation\n",
      "dev_url": "https://github.com/KDE/heaptrack",
      "doc_url": "https://userbase.kde.org/Heaptrack",
      "home": "https://github.com/KDE/heaptrack",
      "license": "GPL-2.0-or-later",
      "license_file": "source/LICENSES/GPL-2.0-or-later.txt",
      "summary": "heaptrack - a heap memory profiler for Linux"
    },
    "build": {
      "ignore_run_exports": [
        "elfutils"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "bcouturi",
        "chrisburr"
      ]
    },
    "package": {
      "name": "heaptrack",
      "version": "1.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "libunwind",
        "elfutils",
        "zlib"
      ],
      "run": [
        "libunwind",
        "elfutils"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "source",
      "patches": [
        "stdc_format.patch"
      ],
      "sha256": "44e6aefc13460556acced7192bf3600605cd7a5f3a46e670c3127aeae97e19dd",
      "url": "https://github.com/KDE/heaptrack/archive/v1.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "heaptrack_print --help"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libboost-devel",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libunwind"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:\n  find hotspots that need to be optimized to reduce the memory footprint of your application\n  find memory leaks, i.e. locations that allocate memory which is never deallocated\n  find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls\n  find temporary allocations, which are allocations that are directly followed by their deallocation\n",
      "dev_url": "https://github.com/KDE/heaptrack",
      "doc_url": "https://userbase.kde.org/Heaptrack",
      "home": "https://github.com/KDE/heaptrack",
      "license": "GPL-2.0-or-later",
      "license_file": "source/LICENSES/GPL-2.0-or-later.txt",
      "summary": "heaptrack - a heap memory profiler for Linux"
    },
    "build": {
      "ignore_run_exports": [
        "elfutils"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "bcouturi",
        "chrisburr"
      ]
    },
    "package": {
      "name": "heaptrack",
      "version": "1.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "libunwind",
        "elfutils",
        "zlib"
      ],
      "run": [
        "libunwind",
        "elfutils"
      ]
    },
    "schema_version": 0,
    "source": {
      "folder": "source",
      "patches": [
        "stdc_format.patch"
      ],
      "sha256": "44e6aefc13460556acced7192bf3600605cd7a5f3a46e670c3127aeae97e19dd",
      "url": "https://github.com/KDE/heaptrack/archive/v1.5.0.tar.gz"
    },
    "test": {
      "commands": [
        "heaptrack_print --help"
      ]
    }
  },
  "name": "heaptrack",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "heaptrack"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/heaptrack.json"
  },
  "raw_meta_yaml": "{% set name = \"heaptrack\" %}\n{% set version = \"1.5.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/KDE/heaptrack/archive/v{{ version }}.tar.gz\n  sha256: 44e6aefc13460556acced7192bf3600605cd7a5f3a46e670c3127aeae97e19dd\n  folder: source\n  patches:\n    - stdc_format.patch\n\nbuild:\n  number: 1\n  skip: true  # [not linux]\n  ignore_run_exports:\n    - elfutils\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make\n  host:\n    - libboost-devel\n    - libunwind\n    - elfutils\n    - zlib\n  run:\n    - libunwind\n    - elfutils\n\ntest:\n  commands:\n    - heaptrack_print --help\n\nabout:\n  home: https://github.com/KDE/heaptrack\n  license: GPL-2.0-or-later\n  license_file: source/LICENSES/GPL-2.0-or-later.txt\n  summary: 'heaptrack - a heap memory profiler for Linux'\n  description: |\n    Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:\n      find hotspots that need to be optimized to reduce the memory footprint of your application\n      find memory leaks, i.e. locations that allocate memory which is never deallocated\n      find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls\n      find temporary allocations, which are allocations that are directly followed by their deallocation\n  doc_url: https://userbase.kde.org/Heaptrack\n  dev_url: https://github.com/KDE/heaptrack\n\nextra:\n  recipe-maintainers:\n    - bcouturi\n    - chrisburr\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "elfutils",
      "libboost-devel",
      "libunwind",
      "make",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "elfutils",
        "libboost-devel",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "elfutils",
        "libunwind"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libboost-devel",
        "libunwind",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "elfutils",
        "libunwind"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/KDE/heaptrack/archive/v1.5.0.tar.gz",
  "version": "1.5.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/heaptrack.json"
  }
}