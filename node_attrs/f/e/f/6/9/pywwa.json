{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "pywwa",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/akrherz/pyWWA",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A suite of parsers and utils for NWS products."
    },
    "build": {
      "entry_points": [
        "pywwa-parse-afos-dump = pywwa.workflows.afos_dump:main",
        "pywwa-parse-alaska-marine = pywwa.workflows.alaska_marine:main",
        "pywwa-parse-aviation = pywwa.workflows.aviation:main",
        "pywwa-parse-bufr-surface = pywwa.workflows.bufr_surface:main",
        "pywwa-parse-cf6 = pywwa.workflows.cf6:main",
        "pywwa-parse-cli = pywwa.workflows.cli:main",
        "pywwa-parse-dsm = pywwa.workflows.dsm:main",
        "pywwa-parse-dsm2afos = pywwa.workflows.dsm2afos:main",
        "pywwa-parse-ero = pywwa.workflows.ero:main",
        "pywwa-parse-fake-afos-dump = pywwa.workflows.fake_afos_dump:main",
        "pywwa-parse-fd = pywwa.workflows.fd:main",
        "pywwa-parse-ffg = pywwa.workflows.ffg:main",
        "pywwa-parse-gairmet = pywwa.workflows.gairmet:main",
        "pywwa-parse-generic = pywwa.workflows.generic:main",
        "pywwa-parse-gini2gis = pywwa.workflows.gini2gis:main",
        "pywwa-parse-hml = pywwa.workflows.hml:main",
        "pywwa-parse-lsr = pywwa.workflows.lsr:main",
        "pywwa-parse-mcd = pywwa.workflows.mcd:main",
        "pywwa-parse-metar = pywwa.workflows.metar:main",
        "pywwa-parse-mos = pywwa.workflows.mos:main",
        "pywwa-parse-nexrad3-attr = pywwa.workflows.nexrad3_attr:main",
        "pywwa-parse-nldn = pywwa.workflows.nldn:main",
        "pywwa-parse-pirep = pywwa.workflows.pirep:main",
        "pywwa-parse-rr7 = pywwa.workflows.rr7:main",
        "pywwa-parse-scp = pywwa.workflows.scp:main",
        "pywwa-parse-shef = pywwa.workflows.shef:main",
        "pywwa-parse-spc = pywwa.workflows.spc:main",
        "pywwa-parse-spe = pywwa.workflows.spe:main",
        "pywwa-parse-split-mav = pywwa.workflows.split_mav:main",
        "pywwa-parse-sps = pywwa.workflows.sps:main",
        "pywwa-parse-taf = pywwa.workflows.taf:main",
        "pywwa-parse-vtec = pywwa.workflows.vtec:main",
        "pywwa-parse-watch = pywwa.workflows.watch:main",
        "pywwa-parse-xteus = pywwa.workflows.xteus:main",
        "pywwa-spammer = pywwa.workflows.spammer:main"
      ],
      "ignore_run_exports_from": [
        "tomli"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "akrherz"
      ]
    },
    "package": {
      "name": "pywwa",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "setuptools-scm",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "click",
        "geopandas",
        "metpy",
        "metar >=1.7.0",
        "netcdf4",
        "numpy",
        "pandas",
        "pint",
        "psycopg",
        "pybufrkit",
        "pyiem",
        "pymemcache",
        "pyproj",
        "shapely",
        "sqlalchemy",
        "tomli",
        "treq",
        "twisted"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d14c82934bfc50a34477ad070b244317f0bd4f21cfe6dac44513249be6f7bda",
      "url": "https://pypi.org/packages/source/p/pywwa/pywwa-1.7.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pywwa-parse-afos-dump --help",
        "pywwa-parse-alaska-marine --help",
        "pywwa-parse-aviation --help",
        "pywwa-parse-bufr-surface --help",
        "pywwa-parse-cf6 --help",
        "pywwa-parse-cli --help",
        "pywwa-parse-dsm --help",
        "pywwa-parse-dsm2afos --help",
        "pywwa-parse-ero --help",
        "pywwa-parse-fake-afos-dump --help",
        "pywwa-parse-fd --help",
        "pywwa-parse-ffg --help",
        "pywwa-parse-gairmet --help",
        "pywwa-parse-generic --help",
        "pywwa-parse-gini2gis --help",
        "pywwa-parse-hml --help",
        "pywwa-parse-lsr --help",
        "pywwa-parse-mcd --help",
        "pywwa-parse-metar --help",
        "pywwa-parse-mos --help",
        "pywwa-parse-nexrad3-attr --help",
        "pywwa-parse-nldn --help",
        "pywwa-parse-pirep --help",
        "pywwa-parse-rr7 --help",
        "pywwa-parse-scp --help",
        "pywwa-parse-shef --help",
        "pywwa-parse-spc --help",
        "pywwa-parse-spe --help",
        "pywwa-parse-split-mav --help",
        "pywwa-parse-sps --help",
        "pywwa-parse-taf --help",
        "pywwa-parse-vtec --help",
        "pywwa-parse-watch --help",
        "pywwa-parse-xteus --help",
        "pywwa-spammer --help"
      ],
      "imports": [
        "pywwa"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click",
        "geopandas",
        "metar",
        "metpy",
        "netcdf4",
        "numpy",
        "pandas",
        "pint",
        "psycopg",
        "pybufrkit",
        "pyiem",
        "pymemcache",
        "pyproj",
        "python",
        "shapely",
        "sqlalchemy",
        "tomli",
        "treq",
        "twisted"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/akrherz/pyWWA",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A suite of parsers and utils for NWS products."
    },
    "build": {
      "entry_points": [
        "pywwa-parse-afos-dump = pywwa.workflows.afos_dump:main",
        "pywwa-parse-alaska-marine = pywwa.workflows.alaska_marine:main",
        "pywwa-parse-aviation = pywwa.workflows.aviation:main",
        "pywwa-parse-bufr-surface = pywwa.workflows.bufr_surface:main",
        "pywwa-parse-cf6 = pywwa.workflows.cf6:main",
        "pywwa-parse-cli = pywwa.workflows.cli:main",
        "pywwa-parse-dsm = pywwa.workflows.dsm:main",
        "pywwa-parse-dsm2afos = pywwa.workflows.dsm2afos:main",
        "pywwa-parse-ero = pywwa.workflows.ero:main",
        "pywwa-parse-fake-afos-dump = pywwa.workflows.fake_afos_dump:main",
        "pywwa-parse-fd = pywwa.workflows.fd:main",
        "pywwa-parse-ffg = pywwa.workflows.ffg:main",
        "pywwa-parse-gairmet = pywwa.workflows.gairmet:main",
        "pywwa-parse-generic = pywwa.workflows.generic:main",
        "pywwa-parse-gini2gis = pywwa.workflows.gini2gis:main",
        "pywwa-parse-hml = pywwa.workflows.hml:main",
        "pywwa-parse-lsr = pywwa.workflows.lsr:main",
        "pywwa-parse-mcd = pywwa.workflows.mcd:main",
        "pywwa-parse-metar = pywwa.workflows.metar:main",
        "pywwa-parse-mos = pywwa.workflows.mos:main",
        "pywwa-parse-nexrad3-attr = pywwa.workflows.nexrad3_attr:main",
        "pywwa-parse-nldn = pywwa.workflows.nldn:main",
        "pywwa-parse-pirep = pywwa.workflows.pirep:main",
        "pywwa-parse-rr7 = pywwa.workflows.rr7:main",
        "pywwa-parse-scp = pywwa.workflows.scp:main",
        "pywwa-parse-shef = pywwa.workflows.shef:main",
        "pywwa-parse-spc = pywwa.workflows.spc:main",
        "pywwa-parse-spe = pywwa.workflows.spe:main",
        "pywwa-parse-split-mav = pywwa.workflows.split_mav:main",
        "pywwa-parse-sps = pywwa.workflows.sps:main",
        "pywwa-parse-taf = pywwa.workflows.taf:main",
        "pywwa-parse-vtec = pywwa.workflows.vtec:main",
        "pywwa-parse-watch = pywwa.workflows.watch:main",
        "pywwa-parse-xteus = pywwa.workflows.xteus:main",
        "pywwa-spammer = pywwa.workflows.spammer:main"
      ],
      "ignore_run_exports_from": [
        "tomli"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "akrherz"
      ]
    },
    "package": {
      "name": "pywwa",
      "version": "1.7.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "setuptools-scm",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10",
        "click",
        "geopandas",
        "metpy",
        "metar >=1.7.0",
        "netcdf4",
        "numpy",
        "pandas",
        "pint",
        "psycopg",
        "pybufrkit",
        "pyiem",
        "pymemcache",
        "pyproj",
        "shapely",
        "sqlalchemy",
        "tomli",
        "treq",
        "twisted"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "6d14c82934bfc50a34477ad070b244317f0bd4f21cfe6dac44513249be6f7bda",
      "url": "https://pypi.org/packages/source/p/pywwa/pywwa-1.7.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "pywwa-parse-afos-dump --help",
        "pywwa-parse-alaska-marine --help",
        "pywwa-parse-aviation --help",
        "pywwa-parse-bufr-surface --help",
        "pywwa-parse-cf6 --help",
        "pywwa-parse-cli --help",
        "pywwa-parse-dsm --help",
        "pywwa-parse-dsm2afos --help",
        "pywwa-parse-ero --help",
        "pywwa-parse-fake-afos-dump --help",
        "pywwa-parse-fd --help",
        "pywwa-parse-ffg --help",
        "pywwa-parse-gairmet --help",
        "pywwa-parse-generic --help",
        "pywwa-parse-gini2gis --help",
        "pywwa-parse-hml --help",
        "pywwa-parse-lsr --help",
        "pywwa-parse-mcd --help",
        "pywwa-parse-metar --help",
        "pywwa-parse-mos --help",
        "pywwa-parse-nexrad3-attr --help",
        "pywwa-parse-nldn --help",
        "pywwa-parse-pirep --help",
        "pywwa-parse-rr7 --help",
        "pywwa-parse-scp --help",
        "pywwa-parse-shef --help",
        "pywwa-parse-spc --help",
        "pywwa-parse-spe --help",
        "pywwa-parse-split-mav --help",
        "pywwa-parse-sps --help",
        "pywwa-parse-taf --help",
        "pywwa-parse-vtec --help",
        "pywwa-parse-watch --help",
        "pywwa-parse-xteus --help",
        "pywwa-spammer --help"
      ],
      "imports": [
        "pywwa"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "name": "pywwa",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pywwa"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pywwa.json"
  },
  "raw_meta_yaml": "{% set name = \"pywwa\" %}\n{% set version = \"1.7.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/pywwa-{{ version }}.tar.gz\n  sha256: 6d14c82934bfc50a34477ad070b244317f0bd4f21cfe6dac44513249be6f7bda\n\nbuild:\n  entry_points:\n    - pywwa-parse-afos-dump = pywwa.workflows.afos_dump:main\n    - pywwa-parse-alaska-marine = pywwa.workflows.alaska_marine:main\n    - pywwa-parse-aviation = pywwa.workflows.aviation:main\n    - pywwa-parse-bufr-surface = pywwa.workflows.bufr_surface:main\n    - pywwa-parse-cf6 = pywwa.workflows.cf6:main\n    - pywwa-parse-cli = pywwa.workflows.cli:main\n    - pywwa-parse-dsm = pywwa.workflows.dsm:main\n    - pywwa-parse-dsm2afos = pywwa.workflows.dsm2afos:main\n    - pywwa-parse-ero = pywwa.workflows.ero:main\n    - pywwa-parse-fake-afos-dump = pywwa.workflows.fake_afos_dump:main\n    - pywwa-parse-fd = pywwa.workflows.fd:main\n    - pywwa-parse-ffg = pywwa.workflows.ffg:main\n    - pywwa-parse-gairmet = pywwa.workflows.gairmet:main\n    - pywwa-parse-generic = pywwa.workflows.generic:main\n    - pywwa-parse-gini2gis = pywwa.workflows.gini2gis:main\n    - pywwa-parse-hml = pywwa.workflows.hml:main\n    - pywwa-parse-lsr = pywwa.workflows.lsr:main\n    - pywwa-parse-mcd = pywwa.workflows.mcd:main\n    - pywwa-parse-metar = pywwa.workflows.metar:main\n    - pywwa-parse-mos = pywwa.workflows.mos:main\n    - pywwa-parse-nexrad3-attr = pywwa.workflows.nexrad3_attr:main\n    - pywwa-parse-nldn = pywwa.workflows.nldn:main\n    - pywwa-parse-pirep = pywwa.workflows.pirep:main\n    - pywwa-parse-rr7 = pywwa.workflows.rr7:main\n    - pywwa-parse-scp = pywwa.workflows.scp:main\n    - pywwa-parse-shef = pywwa.workflows.shef:main\n    - pywwa-parse-spc = pywwa.workflows.spc:main\n    - pywwa-parse-spe = pywwa.workflows.spe:main\n    - pywwa-parse-split-mav = pywwa.workflows.split_mav:main\n    - pywwa-parse-sps = pywwa.workflows.sps:main\n    - pywwa-parse-taf = pywwa.workflows.taf:main\n    - pywwa-parse-vtec = pywwa.workflows.vtec:main\n    - pywwa-parse-watch = pywwa.workflows.watch:main\n    - pywwa-parse-xteus = pywwa.workflows.xteus:main\n    - pywwa-spammer = pywwa.workflows.spammer:main\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n  number: 0\n  ignore_run_exports_from:\n    - tomli\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - setuptools-scm\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - click\n    - geopandas\n    - metpy\n    - metar >=1.7.0\n    - netcdf4\n    - numpy\n    - pandas\n    - pint\n    - psycopg\n    - pybufrkit\n    - pyiem\n    - pymemcache\n    - pyproj\n    - shapely\n    - sqlalchemy\n    # sigh\n    - tomli\n    - treq\n    - twisted\n\ntest:\n  imports:\n    - pywwa\n  commands:\n    - pip check\n    - pywwa-parse-afos-dump --help\n    - pywwa-parse-alaska-marine --help\n    - pywwa-parse-aviation --help\n    - pywwa-parse-bufr-surface --help\n    - pywwa-parse-cf6 --help\n    - pywwa-parse-cli --help\n    - pywwa-parse-dsm --help\n    - pywwa-parse-dsm2afos --help\n    - pywwa-parse-ero --help\n    - pywwa-parse-fake-afos-dump --help\n    - pywwa-parse-fd --help\n    - pywwa-parse-ffg --help\n    - pywwa-parse-gairmet --help\n    - pywwa-parse-generic --help\n    - pywwa-parse-gini2gis --help\n    - pywwa-parse-hml --help\n    - pywwa-parse-lsr --help\n    - pywwa-parse-mcd --help\n    - pywwa-parse-metar --help\n    - pywwa-parse-mos --help\n    - pywwa-parse-nexrad3-attr --help\n    - pywwa-parse-nldn --help\n    - pywwa-parse-pirep --help\n    - pywwa-parse-rr7 --help\n    - pywwa-parse-scp --help\n    - pywwa-parse-shef --help\n    - pywwa-parse-spc --help\n    - pywwa-parse-spe --help\n    - pywwa-parse-split-mav --help\n    - pywwa-parse-sps --help\n    - pywwa-parse-taf --help\n    - pywwa-parse-vtec --help\n    - pywwa-parse-watch --help\n    - pywwa-parse-xteus --help\n    - pywwa-spammer --help\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/akrherz/pyWWA\n  summary: A suite of parsers and utils for NWS products.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - akrherz\n",
  "req": {
    "__set__": true,
    "elements": [
      "click",
      "geopandas",
      "metar",
      "metpy",
      "netcdf4",
      "numpy",
      "pandas",
      "pint",
      "pip",
      "psycopg",
      "pybufrkit",
      "pyiem",
      "pymemcache",
      "pyproj",
      "python",
      "setuptools",
      "setuptools-scm",
      "shapely",
      "sqlalchemy",
      "tomli",
      "treq",
      "twisted"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click",
        "geopandas",
        "metar",
        "metpy",
        "netcdf4",
        "numpy",
        "pandas",
        "pint",
        "psycopg",
        "pybufrkit",
        "pyiem",
        "pymemcache",
        "pyproj",
        "python",
        "shapely",
        "sqlalchemy",
        "tomli",
        "treq",
        "twisted"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click",
        "geopandas",
        "metar >=1.7.0",
        "metpy",
        "netcdf4",
        "numpy",
        "pandas",
        "pint",
        "psycopg",
        "pybufrkit",
        "pyiem",
        "pymemcache",
        "pyproj",
        "python >=3.10",
        "shapely",
        "sqlalchemy",
        "tomli",
        "treq",
        "twisted"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pywwa/pywwa-1.7.1.tar.gz",
  "version": "1.7.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pywwa.json"
  }
}