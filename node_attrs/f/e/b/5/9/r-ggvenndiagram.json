{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-ggvenndiagram",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/gaospecial/ggVennDiagram",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Easy-to-use functions to generate 2-7 sets Venn plot in publication quality. 'ggVennDiagram' plot Venn using well-defined geometry dataset and 'ggplot2'. The shapes of 2-4 sets Venn use circles and ellipses, while the shapes of 4-7 sets Venn use irregular polygons (4 has both forms), which are developed and imported from another package 'venn', authored by Adrian Dusa. We provided internal functions to integrate shape data with user provided sets data, and calculated the geometry of every regions/intersections of them, then separately plot Venn in three components: set edges, set labels, and regions. From version 1.0, it is possible to customize these components as you demand in ordinary 'ggplot2' grammar."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "mfansler"
      ]
    },
    "package": {
      "name": "r-ggvenndiagram",
      "version": "1.5.4"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-aplot",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ],
      "run": [
        "r-base",
        "r-aplot",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e96f891eb16808edf99161e8859dd938c616c92332f2fcb740e6b52e2cf99e77",
      "url": [
        "https://cran.r-project.org/src/contrib/ggVennDiagram_1.5.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ggVennDiagram/ggVennDiagram_1.5.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ggVennDiagram')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2",
        "r-tibble",
        "r-venn",
        "r-yulab.utils"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2",
        "r-tibble",
        "r-venn",
        "r-yulab.utils"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/gaospecial/ggVennDiagram",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Easy-to-use functions to generate 2-7 sets Venn plot in publication quality. 'ggVennDiagram' plot Venn using well-defined geometry dataset and 'ggplot2'. The shapes of 2-4 sets Venn use circles and ellipses, while the shapes of 4-7 sets Venn use irregular polygons (4 has both forms), which are developed and imported from another package 'venn', authored by Adrian Dusa. We provided internal functions to integrate shape data with user provided sets data, and calculated the geometry of every regions/intersections of them, then separately plot Venn in three components: set edges, set labels, and regions. From version 1.0, it is possible to customize these components as you demand in ordinary 'ggplot2' grammar."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "mfansler"
      ]
    },
    "package": {
      "name": "r-ggvenndiagram",
      "version": "1.5.4"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-aplot",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ],
      "run": [
        "r-base",
        "r-aplot",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e96f891eb16808edf99161e8859dd938c616c92332f2fcb740e6b52e2cf99e77",
      "url": [
        "https://cran.r-project.org/src/contrib/ggVennDiagram_1.5.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ggVennDiagram/ggVennDiagram_1.5.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ggVennDiagram')\""
      ]
    }
  },
  "name": "r-ggvenndiagram",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ggvenndiagram"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ggvenndiagram.json"
  },
  "raw_meta_yaml": "{% set version = \"1.5.4\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ggvenndiagram\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ggVennDiagram_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ggVennDiagram/ggVennDiagram_{{ version }}.tar.gz\n  sha256: e96f891eb16808edf99161e8859dd938c616c92332f2fcb740e6b52e2cf99e77\n\nbuild:\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-aplot\n    - r-dplyr\n    - r-forcats\n    - r-ggplot2 >=3.4.0\n    - r-tibble\n    - r-venn >=1.12\n    - r-yulab.utils\n  run:\n    - r-base\n    - r-aplot\n    - r-dplyr\n    - r-forcats\n    - r-ggplot2 >=3.4.0\n    - r-tibble\n    - r-venn >=1.12\n    - r-yulab.utils\n\ntest:\n  commands:\n    - $R -e \"library('ggVennDiagram')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ggVennDiagram')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/gaospecial/ggVennDiagram\n  license: GPL-3.0-only\n  summary: 'Easy-to-use functions to generate 2-7 sets Venn plot in publication quality. ''ggVennDiagram'' plot Venn using well-defined geometry dataset and ''ggplot2''. The shapes of 2-4 sets Venn use circles and ellipses, while the shapes of 4-7 sets Venn use irregular polygons (4 has both forms), which are developed and\n    imported from another package ''venn'', authored by Adrian Dusa. We provided internal functions to integrate shape data with user provided sets data, and calculated the geometry of every regions/intersections of them, then separately plot Venn in three components: set edges, set labels, and regions. From version 1.0,\n    it is possible to customize these components as you demand in ordinary ''ggplot2'' grammar.'\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - mfansler\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-aplot",
      "r-base",
      "r-dplyr",
      "r-forcats",
      "r-ggplot2",
      "r-tibble",
      "r-venn",
      "r-yulab.utils"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2",
        "r-tibble",
        "r-venn",
        "r-yulab.utils"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2",
        "r-tibble",
        "r-venn",
        "r-yulab.utils"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-aplot",
        "r-base",
        "r-dplyr",
        "r-forcats",
        "r-ggplot2 >=3.4.0",
        "r-tibble",
        "r-venn >=1.12",
        "r-yulab.utils"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/ggVennDiagram_1.5.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ggVennDiagram/ggVennDiagram_1.5.4.tar.gz"
  ],
  "version": "1.5.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ggvenndiagram.json"
  }
}