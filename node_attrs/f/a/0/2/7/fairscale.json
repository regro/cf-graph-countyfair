{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "os_version": {
      "linux_64": "cos7"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "fairscale",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/facebookresearch/fairscale",
      "doc_url": "https://fairscale.readthedocs.io/",
      "home": "https://github.com/facebookresearch/fairscale",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "PyTorch extensions for high performance and large scale training."
    },
    "build": {
      "number": "1",
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari"
      ]
    },
    "package": {
      "name": "fairscale",
      "version": "0.4.13"
    },
    "requirements": {
      "build": [
        "sysroot_linux-64 2.17",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "pytorch",
        "pytorch =*=cuda*"
      ],
      "run": [
        "python",
        "pgzip",
        "pygit2",
        "__cuda"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b",
      "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.13.tar.gz"
    },
    "test": {
      "commands": [
        "pytest tests -k \"not (_not_a_real_test or test_balance_by_time)\""
      ],
      "imports": [
        "fairscale",
        "fairscale.nn",
        "fairscale.nn.data_parallel",
        "fairscale.nn.model_parallel",
        "fairscale.nn.pipe",
        "fairscale.nn.pipe.balance",
        "fairscale.nn.pipe.skip",
        "fairscale.optim"
      ],
      "requires": [
        "pytest",
        "parameterized",
        "scikit-learn",
        "torchvision"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "sysroot_linux-64"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "pgzip",
        "pygit2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pytest",
        "scikit-learn",
        "torchvision"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/facebookresearch/fairscale",
      "doc_url": "https://fairscale.readthedocs.io/",
      "home": "https://github.com/facebookresearch/fairscale",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "PyTorch extensions for high performance and large scale training."
    },
    "build": {
      "number": "1",
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari"
      ]
    },
    "package": {
      "name": "fairscale",
      "version": "0.4.13"
    },
    "requirements": {
      "build": [
        "sysroot_linux-64 2.17",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "pytorch",
        "pytorch =*=cuda*"
      ],
      "run": [
        "python",
        "pgzip",
        "pygit2",
        "__cuda"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b",
      "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.13.tar.gz"
    },
    "test": {
      "commands": [
        "pytest tests -k \"not (_not_a_real_test or test_balance_by_time)\""
      ],
      "imports": [
        "fairscale",
        "fairscale.nn",
        "fairscale.nn.data_parallel",
        "fairscale.nn.model_parallel",
        "fairscale.nn.pipe",
        "fairscale.nn.pipe.balance",
        "fairscale.nn.pipe.skip",
        "fairscale.optim"
      ],
      "requires": [
        "pytest",
        "parameterized",
        "scikit-learn",
        "torchvision"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "name": "fairscale",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/facebookresearch/fairscale",
      "doc_url": "https://fairscale.readthedocs.io/",
      "home": "https://github.com/facebookresearch/fairscale",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "PyTorch extensions for high performance and large scale training."
    },
    "build": {
      "number": "1",
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari"
      ]
    },
    "package": {
      "name": "fairscale",
      "version": "0.4.13"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "pytorch"
      ],
      "run": [
        "python",
        "pgzip",
        "pygit2"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b",
      "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.13.tar.gz"
    },
    "test": {
      "commands": [
        "pytest tests -k \"not (_not_a_real_test or test_balance_by_time)\""
      ],
      "imports": [
        "fairscale",
        "fairscale.nn",
        "fairscale.nn.data_parallel",
        "fairscale.nn.model_parallel",
        "fairscale.nn.pipe",
        "fairscale.nn.pipe.balance",
        "fairscale.nn.pipe.skip",
        "fairscale.optim"
      ],
      "requires": [
        "pytest",
        "parameterized",
        "scikit-learn",
        "torchvision"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pgzip",
        "pygit2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pytest",
        "scikit-learn",
        "torchvision"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/facebookresearch/fairscale",
      "doc_url": "https://fairscale.readthedocs.io/",
      "home": "https://github.com/facebookresearch/fairscale",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "PyTorch extensions for high performance and large scale training."
    },
    "build": {
      "number": "1",
      "string": "cpu_py39h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari"
      ]
    },
    "package": {
      "name": "fairscale",
      "version": "0.4.13"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "pytorch"
      ],
      "run": [
        "python",
        "pgzip",
        "pygit2"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b",
      "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.13.tar.gz"
    },
    "test": {
      "commands": [
        "pytest tests -k \"not (_not_a_real_test or test_balance_by_time)\""
      ],
      "imports": [
        "fairscale",
        "fairscale.nn",
        "fairscale.nn.data_parallel",
        "fairscale.nn.model_parallel",
        "fairscale.nn.pipe",
        "fairscale.nn.pipe.balance",
        "fairscale.nn.pipe.skip",
        "fairscale.optim"
      ],
      "requires": [
        "pytest",
        "parameterized",
        "scikit-learn",
        "torchvision"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pgzip",
        "pygit2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pytest",
        "scikit-learn",
        "torchvision"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fairscale"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/fairscale.json"
  },
  "raw_meta_yaml": "{% set version = \"0.4.13\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: fairscale\n  version: {{ version }}\n\nsource:\n  url: https://github.com/facebookresearch/fairscale/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b\n\nbuild:\n  number: 1\n  # no pytorch on windows in conda-forge, see\n  # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/32\n  skip: true  # [win]\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [cuda_compiler_version in (\"10.2\", \"11.0\", \"11.1\")]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - sysroot_linux-64 2.17                  # [linux]\n    # compilers only needed for CUDA extensions\n    - {{ compiler('cxx') }}                  # [cuda_compiler_version != \"None\"]\n    - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n  host:\n    - python\n    - pip\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*      # [cuda_compiler_version != \"None\"]\n  run:\n    - python\n    - pgzip\n    - pygit2\n    - __cuda  # [cuda_compiler_version != \"None\"]\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - fairscale\n    - fairscale.nn\n    - fairscale.nn.data_parallel\n    - fairscale.nn.model_parallel\n    - fairscale.nn.pipe\n    - fairscale.nn.pipe.balance\n    - fairscale.nn.pipe.skip\n    - fairscale.optim\n  requires:\n    - pytest\n    - parameterized\n    - scikit-learn\n    - torchvision\n  source_files:\n    - tests\n  commands:\n    {% set tests_to_skip = \"_not_a_real_test\" %}\n    # flaky on osx due to timing sensitivity\n    {% set tests_to_skip = tests_to_skip + \" or test_balance_by_time\" %}  # [osx]\n    - pytest tests -k \"not ({{ tests_to_skip }})\"\n\nabout:\n  home: https://github.com/facebookresearch/fairscale\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: PyTorch extensions for high performance and large scale training.\n  dev_url: https://github.com/facebookresearch/fairscale\n  doc_url: https://fairscale.readthedocs.io/\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "pgzip",
      "pip",
      "pygit2",
      "python",
      "pytorch",
      "sysroot_linux-64"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "sysroot_linux-64"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "linux-sysroot",
        "pip",
        "python",
        "pytorch"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "linux-sysroot",
        "pgzip",
        "pygit2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pytest",
        "scikit-learn",
        "torchvision"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "sysroot_linux-64 2.17"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "pytorch",
        "pytorch =*=cuda*"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "pgzip",
        "pygit2",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "parameterized",
        "pytest",
        "scikit-learn",
        "torchvision"
      ]
    }
  },
  "url": "https://github.com/facebookresearch/fairscale/archive/refs/tags/v0.4.13.tar.gz",
  "version": "0.4.13",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fairscale.json"
  }
}