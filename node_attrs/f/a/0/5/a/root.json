{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "store_build_artifacts": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "osx_arm64": "default"
    },
    "test": "native"
  },
  "feedstock_name": "root",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.",
      "dev_url": "https://github.com/root-project/root/",
      "doc_url": "https://root.cern/documentation",
      "home": "https://root.cern/",
      "license": "LGPL-2.1-only",
      "license_family": "LGPL-2.1-only",
      "license_file": "root-source/LICENSE",
      "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R."
    },
    "build": {
      "number": "1",
      "run_exports": {
        "weak": [
          "root_base"
        ]
      },
      "script": {
        "env": {
          "ROOT_CONDA_BUILTIN_PYROOT": "true",
          "ROOT_CXX_STANDARD": "20",
          "clang_patches_version": "root_63406",
          "clang_version": "18.1.8"
        },
        "file": "build_root.sh",
        "interpreter": "bash"
      }
    },
    "extra": {
      "recipe-maintainers": [
        "vepadulano",
        "chrisburr",
        "henryiii",
        "duncanmmacleod"
      ]
    },
    "outputs": [
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "root_base",
      "version": "6.34.06"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "cmake",
        "git",
        "pkg-config",
        "sed",
        "make",
        "ninja",
        "gnuconfig"
      ],
      "host": [
        "libblas",
        "libcblas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "libglu",
        "libgl-devel",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "c_stdlib_stub",
        "cfitsio",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "glew",
        "glib",
        "gl2ps",
        "graphviz",
        "gsl",
        "gtest",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "lz4-c",
        "nlohmann_json",
        "openssl",
        "pcre",
        "pythia8",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vector-classes",
        "vdt",
        "python",
        "numpy",
        "xrootd",
        "liblzma-devel",
        "xxhash",
        "zlib",
        "zstd",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "clangdev 18.1.8.* root_63406*"
      ],
      "run": [
        "python",
        "numpy",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "xxhash",
        "nlohmann_json",
        "cffi",
        "graphviz",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxpm",
        "xorg-libxft",
        "libglu"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
        "patches/0001-Hacks.patch",
        "patches/0001-Patch-for-apple-silicon.patch",
        "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
        "patches/0001-Hackily-fix-cross-compilation.patch",
        "0002-Debugging.patch",
        "patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch",
        "0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch",
        "0002-Remove-cocoa-afterimage-overrides.patch",
        "0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch",
        "patches/0001-Don-t-include-RootCPack.patch"
      ],
      "sha256": "42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64",
      "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.",
      "dev_url": "https://github.com/root-project/root/",
      "doc_url": "https://root.cern/documentation",
      "home": "https://root.cern/",
      "license": "LGPL-2.1-only",
      "license_family": "LGPL-2.1-only",
      "license_file": "root-source/LICENSE",
      "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R."
    },
    "build": {
      "number": "1",
      "run_exports": {
        "weak": [
          "root_base"
        ]
      },
      "script": {
        "env": {
          "ROOT_CONDA_BUILTIN_PYROOT": "true",
          "ROOT_CXX_STANDARD": "20",
          "clang_patches_version": "root_63406",
          "clang_version": "18.1.8"
        },
        "file": "build_root.sh",
        "interpreter": "bash"
      }
    },
    "extra": {
      "recipe-maintainers": [
        "vepadulano",
        "chrisburr",
        "henryiii",
        "duncanmmacleod"
      ]
    },
    "outputs": [
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "root_base",
      "version": "6.34.06"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "cmake",
        "git",
        "pkg-config",
        "sed",
        "make",
        "ninja",
        "gnuconfig"
      ],
      "host": [
        "libblas",
        "libcblas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "libglu",
        "libgl-devel",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "c_stdlib_stub",
        "cfitsio",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "glew",
        "glib",
        "gl2ps",
        "graphviz",
        "gsl",
        "gtest",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "lz4-c",
        "nlohmann_json",
        "openssl",
        "pcre",
        "pythia8",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vector-classes",
        "vdt",
        "python",
        "numpy",
        "xrootd",
        "liblzma-devel",
        "xxhash",
        "zlib",
        "zstd",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "clangdev 18.1.8.* root_63406*"
      ],
      "run": [
        "python",
        "numpy",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "xxhash",
        "nlohmann_json",
        "cffi",
        "graphviz",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxpm",
        "xorg-libxft",
        "libglu"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
        "patches/0001-Hacks.patch",
        "patches/0001-Patch-for-apple-silicon.patch",
        "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
        "patches/0001-Hackily-fix-cross-compilation.patch",
        "0002-Debugging.patch",
        "patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch",
        "0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch",
        "0002-Remove-cocoa-afterimage-overrides.patch",
        "0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch",
        "patches/0001-Don-t-include-RootCPack.patch"
      ],
      "sha256": "42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64",
      "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.",
      "dev_url": "https://github.com/root-project/root/",
      "doc_url": "https://root.cern/documentation",
      "home": "https://root.cern/",
      "license": "LGPL-2.1-only",
      "license_family": "LGPL-2.1-only",
      "license_file": "root-source/LICENSE",
      "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R."
    },
    "build": {
      "number": "1",
      "run_exports": {
        "weak": [
          "root_base"
        ]
      },
      "script": {
        "env": {
          "ROOT_CONDA_BUILTIN_PYROOT": "true",
          "ROOT_CXX_STANDARD": "20",
          "clang_patches_version": "root_63406",
          "clang_version": "18.1.8"
        },
        "file": "build_root.sh",
        "interpreter": "bash"
      }
    },
    "extra": {
      "recipe-maintainers": [
        "vepadulano",
        "chrisburr",
        "henryiii",
        "duncanmmacleod"
      ]
    },
    "outputs": [
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "root_base",
      "version": "6.34.06"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "cmake",
        "git",
        "pkg-config",
        "sed",
        "make",
        "ninja",
        "gnuconfig"
      ],
      "host": [
        "libblas",
        "libcblas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "libglu",
        "libgl-devel",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "c_stdlib_stub",
        "cfitsio",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "glew",
        "glib",
        "gl2ps",
        "graphviz",
        "gsl",
        "gtest",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "lz4-c",
        "nlohmann_json",
        "openssl",
        "pcre",
        "pythia8",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vector-classes",
        "vdt",
        "python",
        "numpy",
        "xrootd",
        "liblzma-devel",
        "xxhash",
        "zlib",
        "zstd",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "clangdev 18.1.8.* root_63406*"
      ],
      "run": [
        "python",
        "numpy",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "xxhash",
        "nlohmann_json",
        "cffi",
        "graphviz",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxpm",
        "xorg-libxft",
        "libglu"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
        "patches/0001-Hacks.patch",
        "patches/0001-Patch-for-apple-silicon.patch",
        "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
        "patches/0001-Hackily-fix-cross-compilation.patch",
        "0002-Debugging.patch",
        "patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch",
        "0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch",
        "0002-Remove-cocoa-afterimage-overrides.patch",
        "0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch",
        "patches/0001-Don-t-include-RootCPack.patch"
      ],
      "sha256": "42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64",
      "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.",
      "dev_url": "https://github.com/root-project/root/",
      "doc_url": "https://root.cern/documentation",
      "home": "https://root.cern/",
      "license": "LGPL-2.1-only",
      "license_family": "LGPL-2.1-only",
      "license_file": "root-source/LICENSE",
      "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R."
    },
    "build": {
      "number": "1",
      "run_exports": {
        "weak": [
          "root_base"
        ]
      },
      "script": {
        "env": {
          "ROOT_CONDA_BUILTIN_PYROOT": "true",
          "ROOT_CXX_STANDARD": "20",
          "clang_patches_version": "root_63406",
          "clang_version": "18.1.8"
        },
        "file": "build_root.sh",
        "interpreter": "bash"
      }
    },
    "extra": {
      "recipe-maintainers": [
        "vepadulano",
        "chrisburr",
        "henryiii",
        "duncanmmacleod"
      ]
    },
    "outputs": [
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "root_base",
      "version": "6.34.06"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "cmake",
        "git",
        "pkg-config",
        "sed",
        "make",
        "ninja",
        "gnuconfig"
      ],
      "host": [
        "libblas",
        "libcblas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "libglu",
        "libgl-devel",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "c_stdlib_stub",
        "cfitsio",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "glew",
        "glib",
        "gl2ps",
        "graphviz",
        "gsl",
        "gtest",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "lz4-c",
        "nlohmann_json",
        "openssl",
        "pcre",
        "pythia8",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vector-classes",
        "vdt",
        "python",
        "numpy",
        "xrootd",
        "liblzma-devel",
        "xxhash",
        "zlib",
        "zstd",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "clangdev 18.1.8.* root_63406*"
      ],
      "run": [
        "python",
        "numpy",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "xxhash",
        "nlohmann_json",
        "cffi",
        "graphviz",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxpm",
        "xorg-libxft",
        "libglu"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
        "patches/0001-Hacks.patch",
        "patches/0001-Patch-for-apple-silicon.patch",
        "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
        "patches/0001-Hackily-fix-cross-compilation.patch",
        "0002-Debugging.patch",
        "patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch",
        "0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch",
        "0002-Remove-cocoa-afterimage-overrides.patch",
        "0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch",
        "patches/0001-Don-t-include-RootCPack.patch"
      ],
      "sha256": "42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64",
      "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz"
    }
  },
  "name": "root_base",
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\non. Here are a few things to try:\n\n* `root`: you can start up a session and see the splash screen; Control-D to exit.\n* `python` followed by `import ROOT` will load PyROOT.\n* `root --notebook` will start a notebook server with a ROOT kernel choice.\n* `rootbrowse` will open a TBrowser session so you can look through files.\n* `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n* `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n* `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\nSee the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\nThe ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n`$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\nscripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\nThere is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\nhaving a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\nIn most cases users should use the `root` package directly, since it adds both of these, along with compilers,\nJupyter, and a few other things to facilitate using ROOT or PyROOT.",
      "dev_url": "https://github.com/root-project/root/",
      "doc_url": "https://root.cern/documentation",
      "home": "https://root.cern/",
      "license": "LGPL-2.1-only",
      "license_family": "LGPL-2.1-only",
      "license_file": "root-source/LICENSE",
      "summary": "ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\nprocessing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\nlanguages such as Python and R."
    },
    "build": {
      "number": "1",
      "run_exports": {
        "weak": [
          "root_base"
        ]
      },
      "script": {
        "env": {
          "ROOT_CONDA_BUILTIN_PYROOT": "true",
          "ROOT_CXX_STANDARD": "20",
          "clang_patches_version": "root_63406",
          "clang_version": "18.1.8"
        },
        "file": "build_root.sh",
        "interpreter": "bash"
      }
    },
    "extra": {
      "recipe-maintainers": [
        "vepadulano",
        "chrisburr",
        "henryiii",
        "duncanmmacleod"
      ]
    },
    "outputs": [
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook",
            "numba"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      },
      {
        "build": {
          "strong": [],
          "weak": [
            "root_base"
          ]
        },
        "name": "root_base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "autoconf",
            "cmake",
            "git",
            "pkg-config",
            "sed",
            "make",
            "ninja",
            "gnuconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "libglu",
            "libgl-devel",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxau",
            "xorg-libxcursor",
            "xorg-libxext",
            "xorg-libxfixes",
            "xorg-libxft",
            "xorg-libxpm",
            "c_stdlib_stub",
            "cfitsio",
            "davix",
            "fftw",
            "freetype",
            "ftgl",
            "gdk-pixbuf",
            "giflib",
            "glew",
            "glib",
            "gl2ps",
            "graphviz",
            "gsl",
            "gtest",
            "libpng",
            "librsvg",
            "libtiff",
            "libxml2",
            "lz4-c",
            "nlohmann_json",
            "openssl",
            "pcre",
            "pythia8",
            "sqlite",
            "tbb",
            "tbb-devel",
            "vector-classes",
            "vdt",
            "python",
            "numpy",
            "xrootd",
            "liblzma-devel",
            "xxhash",
            "zlib",
            "zstd",
            "llvm 18.1.8.* root_63406*",
            "llvm-openmp 18.1.8.*",
            "llvmdev 18.1.8.* root_63406*",
            "clangdev 18.1.8.* root_63406*"
          ],
          "run": [
            "python",
            "numpy",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "xxhash",
            "nlohmann_json",
            "cffi",
            "graphviz",
            "xorg-xorgproto",
            "xorg-libx11",
            "xorg-libxext",
            "xorg-libxpm",
            "xorg-libxft",
            "libglu"
          ]
        },
        "tests": [
          {
            "files": {
              "recipe": [
                "test.cpp"
              ]
            },
            "script": [
              "root -l -b -q -x",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e '2+3; 0'",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "thisroot.sh",
              "thisroot.csh",
              "thisroot.fish",
              "root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\"OpenGL does not appear to be working\"); }'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "XrdSecPROTOCOL=unix python -c \"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\"",
              "root -l -b -q -x test.cpp++",
              "echo '.q' | root -e 'sddsa0'"
            ]
          }
        ]
      },
      {
        "build": null,
        "name": "root",
        "requirements": {
          "build": [],
          "host": [
            "root_base",
            "python"
          ],
          "run": [
            "root_base",
            "python",
            "compilers",
            "metakernel",
            "ipython",
            "notebook"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ROOT",
                "JupyROOT"
              ],
              "pip_check": false
            }
          },
          {
            "files": {
              "recipe": [
                "test.cpp",
                "test_pyroot.py"
              ]
            },
            "script": [
              "python test_pyroot.py",
              "root -l -b -q -x test.cpp",
              "root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'",
              "root -b -l -q -x \"${PREFIX}/tutorials/eve/geom_lhcb.C\" || true",
              "root -b -l -q -x \"${PREFIX}/tutorials/tree/run_h1analysis.C\"",
              "root -l -b -q -x test.cpp++",
              "jupyter-kernelspec list | grep ' root '"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "root_base",
      "version": "6.34.06"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "autoconf",
        "cmake",
        "git",
        "pkg-config",
        "sed",
        "make",
        "ninja",
        "gnuconfig"
      ],
      "host": [
        "libblas",
        "libcblas",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "libglu",
        "libgl-devel",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "c_stdlib_stub",
        "cfitsio",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "glew",
        "glib",
        "gl2ps",
        "graphviz",
        "gsl",
        "gtest",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "lz4-c",
        "nlohmann_json",
        "openssl",
        "pcre",
        "pythia8",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vector-classes",
        "vdt",
        "python",
        "numpy",
        "xrootd",
        "liblzma-devel",
        "xxhash",
        "zlib",
        "zstd",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "clangdev 18.1.8.* root_63406*"
      ],
      "run": [
        "python",
        "numpy",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "xxhash",
        "nlohmann_json",
        "cffi",
        "graphviz",
        "xorg-xorgproto",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxpm",
        "xorg-libxft",
        "libglu"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/root-x.xx.xx_cling-runtime-sysroot.patch",
        "patches/0001-Hacks.patch",
        "patches/0001-Patch-for-apple-silicon.patch",
        "patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch",
        "patches/0001-Hackily-fix-cross-compilation.patch",
        "0002-Debugging.patch",
        "patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch",
        "0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch",
        "0002-Remove-cocoa-afterimage-overrides.patch",
        "0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch",
        "patches/0001-Don-t-include-RootCPack.patch"
      ],
      "sha256": "42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64",
      "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "root",
      "root_base"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/root.json"
  },
  "raw_meta_yaml": "context:\n  name: root\n  tag_name: 6-34-06\n  build_number: 1\n  clang_version: 18.1.8\n  clang_patches_version: root_63406\n  builtin_pyroot: true\n  builtin_clang: false\n  run_gtests: false\n  # When new Python versions are released numba tends to be slow to support them\n  # to prevent ROOT from being held up by this, only have a strong dependency on\n  # numba for supported python versions\n  max_supported_numba_py: 3.13\n  root_cxx_standard: 20\n\nrecipe:\n  name: root\n  version: ${{ tag_name | replace(\"-\", \".\") }}\n\nsource:\n  url: https://github.com/root-project/root/archive/refs/tags/v${{ tag_name }}.tar.gz\n  sha256: 42685407545794392db22596f49e8b34874083ae720db061ea3e06f690291e64\n  target_directory: root-source\n  patches:\n    - patches/root-x.xx.xx_cling-runtime-sysroot.patch\n    - if: osx\n      then: patches/root-x.xx.xx-osx-remove-hardcoded-sysroot.patch\n    - patches/0001-Hacks.patch\n    - patches/0001-Patch-for-apple-silicon.patch\n    - patches/0001-Set-LLVM_REQUIRES_EH-for-Cling.patch\n    - if: build_platform != target_platform\n      then: patches/0001-Don-t-try-to-generate-hsimple.root-when-cross-compil.patch\n    - if: osx\n      then:\n        - patches/0001-Avoid-linking-TPython-against-libPython.patch\n    - patches/0001-Hackily-fix-cross-compilation.patch\n    - 0002-Debugging.patch\n    - patches/0001-Remove-bad-check-on-SDK-for-std_darwin.MacOSX14.2.sd.patch\n    - if: build_platform != target_platform\n      then:\n        - 0002-HACK-Support-overriding-triplet-used-by-cling.patch\n    - 0001-Enforce-fail-on-missing-with-afterimage-dependencies.patch\n    - 0002-Remove-cocoa-afterimage-overrides.patch\n    - 0001-Detect-which-ar-binary-should-be-used-to-build-libAf.patch\n    - patches/0001-Don-t-include-RootCPack.patch\n\nbuild:\n  number: ${{ build_number }}\n  skip:\n    - win\n     # newer macOS needs root >=6.34.8, see\n     # https://github.com/root-project/root/issues/18429\n    - osx and x86_64\n\noutputs:\n  - package:\n      name: root_base\n    build:\n      script:\n        file: build_root.sh\n        env:\n          clang_version: ${{ clang_version }}\n          clang_patches_version: ${{ clang_patches_version }}\n          ROOT_CONDA_BUILTIN_PYROOT: ${{ builtin_pyroot }}\n          ROOT_CXX_STANDARD: ${{ root_cxx_standard }}\n      dynamic_linking:\n        overdepending_behavior: ignore\n      prefix_detection:\n        ignore:\n          - if: aarch64\n            then: etc/allDict.cxx.pch\n            else: lib/*.pcm\n      files:\n        include:\n          - \"**\"\n        exclude:\n          - LICENSE\n          - README/**\n    requirements:\n      build:\n        - ${{ compiler('c') }}\n        - ${{ compiler('cxx') }}\n        - ${{ stdlib(\"c\") }}\n        - autoconf\n        - cmake\n        - git\n        - pkg-config\n        - sed\n        - make\n        - ninja\n        - if: unix\n          then: gnuconfig\n        - if: build_platform != target_platform\n          then:\n            - cross-python_${{ target_platform }}\n            - python\n            - numpy\n            - xxhash\n            - zlib\n            - zstd\n            - freetype\n            - liblzma-devel\n            - if: not osx\n              then:\n                - llvm ${{ clang_version }}.* ${{ clang_patches_version }}*\n                - llvm-openmp ${{ clang_version }}.*\n                - llvmdev ${{ clang_version }}.* ${{ clang_patches_version }}*\n                - clangdev ${{ clang_version }}.* ${{ clang_patches_version }}*\n      host:\n        - libblas\n        - libcblas\n        - if: linux\n          then:\n            - ${{ compiler('c') }}\n            - ${{ compiler('cxx') }}\n            - libglu\n            - libgl-devel\n            - xorg-xorgproto\n            - xorg-libx11\n            - xorg-libxau\n            - xorg-libxcursor\n            - xorg-libxext\n            - xorg-libxfixes\n            - xorg-libxft\n            - xorg-libxpm\n        - ${{ stdlib(\"c\") }}\n        - cfitsio\n        - davix\n        - fftw\n        - freetype\n        - ftgl\n        - gdk-pixbuf\n        - giflib\n        - glew\n        - glib\n        - gl2ps\n        - graphviz\n        - gsl\n        - gtest\n        - libpng\n        - librsvg\n        - libtiff\n        - libxml2\n        - lz4-c\n        # - mysql\n        - nlohmann_json\n        - openssl\n        - pcre\n        # - postgresql\n        - pythia8\n        - sqlite\n        - tbb\n        - tbb-devel\n        - vector-classes\n        - vdt\n        - python\n        - numpy\n        - xrootd\n        - liblzma-devel\n        # FIXME: The generated allDict.cxx.pch is dependent on version of the C++ headers used\n        - xxhash\n        - zlib\n        - zstd\n        - if: not (osx and arm64)\n          then:\n            - llvm ${{ clang_version }}.* ${{ clang_patches_version }}*\n            - llvm-openmp ${{ clang_version }}.*\n            - llvmdev ${{ clang_version }}.* ${{ clang_patches_version }}*\n            - clangdev ${{ clang_version }}.* ${{ clang_patches_version }}*\n      run:\n        - python\n        - numpy\n        # FIXME: Required to ensure a consistent etc/allDict.cxx.pch\n        - ${{ compiler('c') }}\n        - ${{ compiler('cxx') }}\n        - ${{ stdlib(\"c\") }}\n        - ${{ pin_compatible('xxhash', upper_bound='x.x.x') }}\n        - ${{ pin_compatible('nlohmann_json', upper_bound='x.x.x') }}\n        - cffi\n        - graphviz\n        - if: linux\n          then:\n            - xorg-xorgproto\n            - xorg-libx11\n            - xorg-libxext\n            - xorg-libxpm\n            - xorg-libxft\n            - libglu\n      run_constraints:\n        - numba >=0.52\n        - cling ==9999\n        - root5 ==9999\n        - afterimage ==9999\n      run_exports:\n        - ${{ pin_subpackage('root_base', upper_bound='x.x.x') }}\n    tests:\n      - files:\n          recipe:\n            - test.cpp\n        script:\n          - root -l -b -q -x\n          - root -l -b -q -x test.cpp\n          - \"root -b -l -q -x -e '2+3; 0'\"\n          - \"root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'\"\n          - thisroot.sh\n          - thisroot.csh\n          - thisroot.fish\n          - \"root -b -l -q -x -e 'gStyle->SetCanvasPreferGL(kTRUE); c = new TCanvas(); if (!c->UseGL()) { throw std::runtime_error(\\\"OpenGL does not appear to be working\\\"); }'\"\n          - \"root -b -l -q -x \\\"${PREFIX}/tutorials/eve/geom_lhcb.C\\\" || true\"\n          - \"root -b -l -q -x \\\"${PREFIX}/tutorials/tree/run_h1analysis.C\\\"\"\n          - if: not ppc64le\n            then: \"XrdSecPROTOCOL=unix python -c \\\"import ROOT; ROOT.ROOT.EnableImplicitMT(); rdf = ROOT.RDataFrame('DecayTree', 'root://eospublic.cern.ch//eos/opendata/lhcb/AntimatterMatters2017/data/B2HHH_MagnetUp.root'); print(rdf.Cache('H1_PX').AsNumpy())\\\"\"\n          - root -l -b -q -x test.cpp++\n          - if: not (osx and arm64) and build_platform == target_platform\n            then: \"echo '.q' | root -e 'sddsa0'\"\n\n  - package:\n      name: root\n    requirements:\n      host:\n        - ${{ pin_subpackage('root_base', exact=True) }}\n        - python\n      run:\n        - ${{ pin_subpackage('root_base', exact=True) }}\n        - python\n        - compilers  # This package is hostile to how conda-build manages compilers\n        - metakernel\n        - ipython\n        - notebook\n        - if: python <= max_supported_numba_py\n          then: numba\n    tests:\n      - python:\n          imports:\n            - ROOT\n            - JupyROOT\n          pip_check: false\n      - files:\n          recipe:\n            - test.cpp\n            - test_pyroot.py\n        script:\n          - python test_pyroot.py\n          - root -l -b -q -x test.cpp\n          - \"root -b -l -q -x -e 'gSystem->LoadAllLibraries(); 0'\"\n          - \"root -b -l -q -x \\\"${PREFIX}/tutorials/eve/geom_lhcb.C\\\" || true\"\n          - \"root -b -l -q -x \\\"${PREFIX}/tutorials/tree/run_h1analysis.C\\\"\"\n          - root -l -b -q -x test.cpp++\n          - \"jupyter-kernelspec list | grep ' root '\"\n\nabout:\n  license: LGPL-2.1-only\n  license_file: root-source/LICENSE\n  summary: |\n    ROOT is a modular scientific software toolkit. It provides all the functionalities needed to deal with big data\n    processing, statistical analysis, visualisation and storage. It is mainly written in C++ but integrated with other\n    languages such as Python and R.\n  description: |\n    Almost everything in ROOT should be supported in this Conda package; ROOT was built with lots of options turned\n    on. Here are a few things to try:\n\n    * `root`: you can start up a session and see the splash screen; Control-D to exit.\n    * `python` followed by `import ROOT` will load PyROOT.\n    * `root --notebook` will start a notebook server with a ROOT kernel choice.\n    * `rootbrowse` will open a TBrowser session so you can look through files.\n    * `root -l -q $ROOTSYS/tutorials/dataframe/df013_InspectAnalysis.C` will run a DataFrame example with an animated plot.\n    * `root -b -q -l -n -e \"std::cout << TROOT::GetTutorialDir() << std::endl;\"` will print the tutorial dir.\n    * `root -b -l -q -e 'std::cout << (float) TPython::Eval(\"1+1\") << endl;'` will run Python from C++ ROOT.\n\n    See the post [here](https://iscinumpy.gitlab.io/post/root-conda/) for more information about using this Conda package.\n\n    The ROOT package will prepare the required compilers. Everything in Conda is symlinked into\n    `$CONDA_PREFIX` if you build things by hand; tools like CMake should find it automatically. The `thisroot.*`\n    scripts should not be used and are not provided. Graphics, `rootbrowse`, etc. all should work. OpenGL is enabled.\n\n    There is also a `root_base` package, with minimal dependecies, that libraries should depend on this to avoid\n    having a runtime dependency on the `compilers` package. `root-dependencies` and `root-binaries` are also available.\n    In most cases users should use the `root` package directly, since it adds both of these, along with compilers,\n    Jupyter, and a few other things to facilitate using ROOT or PyROOT.\n\n\n  homepage: https://root.cern/\n  repository: https://github.com/root-project/root/\n  documentation: https://root.cern/documentation\n\nextra:\n  recipe-maintainers:\n    - vepadulano\n    - chrisburr\n    - henryiii\n    - duncanmmacleod\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cffi",
      "cfitsio",
      "clangdev",
      "cmake",
      "compilers",
      "cxx_compiler_stub",
      "davix",
      "fftw",
      "freetype",
      "ftgl",
      "gdk-pixbuf",
      "giflib",
      "git",
      "gl2ps",
      "glew",
      "glib",
      "gnuconfig",
      "graphviz",
      "gsl",
      "gtest",
      "ipython",
      "libblas",
      "libcblas",
      "libgl-devel",
      "libglu",
      "liblzma-devel",
      "libpng",
      "librsvg",
      "libtiff",
      "libxml2",
      "llvm",
      "llvm-openmp",
      "llvmdev",
      "lz4-c",
      "make",
      "metakernel",
      "ninja",
      "nlohmann_json",
      "notebook",
      "numba",
      "numpy",
      "openssl",
      "pcre",
      "pkg-config",
      "pythia8",
      "python",
      "root_base",
      "sed",
      "sqlite",
      "tbb",
      "tbb-devel",
      "vdt",
      "vector-classes",
      "xorg-libx11",
      "xorg-libxau",
      "xorg-libxcursor",
      "xorg-libxext",
      "xorg-libxfixes",
      "xorg-libxft",
      "xorg-libxpm",
      "xorg-xorgproto",
      "xrootd",
      "xxhash",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm",
        "llvm-openmp",
        "llvmdev",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openmp",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "openmp",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "gnuconfig",
        "make",
        "ninja",
        "pkg-config",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cfitsio",
        "clangdev 18.1.8.* root_63406*",
        "cxx_compiler_stub",
        "davix",
        "fftw",
        "freetype",
        "ftgl",
        "gdk-pixbuf",
        "giflib",
        "gl2ps",
        "glew",
        "glib",
        "graphviz",
        "gsl",
        "gtest",
        "libblas",
        "libcblas",
        "libgl-devel",
        "libglu",
        "liblzma-devel",
        "libpng",
        "librsvg",
        "libtiff",
        "libxml2",
        "llvm 18.1.8.* root_63406*",
        "llvm-openmp 18.1.8.*",
        "llvmdev 18.1.8.* root_63406*",
        "lz4-c",
        "nlohmann_json",
        "numpy",
        "openssl",
        "pcre",
        "pythia8",
        "python",
        "root_base",
        "sqlite",
        "tbb",
        "tbb-devel",
        "vdt",
        "vector-classes",
        "xorg-libx11",
        "xorg-libxau",
        "xorg-libxcursor",
        "xorg-libxext",
        "xorg-libxfixes",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xrootd",
        "xxhash",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "compilers",
        "cxx_compiler_stub",
        "graphviz",
        "ipython",
        "libglu",
        "metakernel",
        "nlohmann_json",
        "notebook",
        "numba",
        "numpy",
        "python",
        "root_base",
        "xorg-libx11",
        "xorg-libxext",
        "xorg-libxft",
        "xorg-libxpm",
        "xorg-xorgproto",
        "xxhash"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/root-project/root/archive/refs/tags/v6-34-06.tar.gz",
  "version": "6.34.06",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/root.json"
  }
}