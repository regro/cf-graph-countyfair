{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "cosign",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      },
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      },
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      },
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      },
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "name": "cosign",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cosign"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cosign.json"
  },
  "raw_meta_yaml": "context:\n  version: \"2.6.0\"\n\npackage:\n  name: cosign\n  version: ${{ version }}\n\nsource:\n  # cosign uses `GitVersion`` and thus needs to be checked out with a tag\n  - git: https://github.com/sigstore/cosign\n    tag: v${{ version }}\n\nbuild:\n  number: 0\n  script:\n    - go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign\n\n    # Generate shell completions (only on Unix and when target platform equals build platform)\n    - if: unix and target_platform == build_platform\n      then:\n        - mkdir -p $PREFIX/share/bash-completion/completions\n        - mkdir -p $PREFIX/share/zsh/site-functions\n        - mkdir -p $PREFIX/share/fish/vendor_completions.d\n        - $PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign\n        - $PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign\n        - $PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish\n\n    # Collect license information\n    - go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true\n\nrequirements:\n  build:\n    - ${{ compiler('go-nocgo') }}\n    - go-licenses\n\ntests:\n  - script: cosign version\n  - script: |\n      echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\n      test -f cosign.pub\n\n\nabout:\n  homepage: https://github.com/sigstore/cosign\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - license-files/\n  summary: Container Signing\n  description: |\n    Cosign aims to make signatures invisible infrastructure. \n    Cosign supports:\n    - Container Signing\n    - Artifacts in OCI registries\n    - Blobs\n    - Multiple architectures\n    - Other artifacts (SBOM, SLSA, etc.)\n  repository: https://github.com/sigstore/cosign\n  documentation: https://github.com/sigstore/cosign\n\nextra:\n  recipe-maintainers:\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": [
      "go-licenses",
      "go-nocgo_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": null,
  "version": "2.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cosign.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Cosign aims to make signatures invisible infrastructure. \nCosign supports:\n- Container Signing\n- Artifacts in OCI registries\n- Blobs\n- Multiple architectures\n- Other artifacts (SBOM, SLSA, etc.)",
      "dev_url": "https://github.com/sigstore/cosign",
      "doc_url": "https://github.com/sigstore/cosign",
      "home": "https://github.com/sigstore/cosign",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Container Signing"
    },
    "build": {
      "number": "0",
      "script": [
        "go build -ldflags=\"-s -w\" -o ${{ PREFIX }}/bin/cosign${{ \".exe\" if win }} ./cmd/cosign",
        "mkdir -p $PREFIX/share/bash-completion/completions",
        "mkdir -p $PREFIX/share/zsh/site-functions",
        "mkdir -p $PREFIX/share/fish/vendor_completions.d",
        "$PREFIX/bin/cosign completion bash > $PREFIX/share/bash-completion/completions/cosign",
        "$PREFIX/bin/cosign completion zsh > $PREFIX/share/zsh/site-functions/_cosign",
        "$PREFIX/bin/cosign completion fish > $PREFIX/share/fish/vendor_completions.d/cosign.fish",
        "go-licenses save --save_path ${{ \"$SRC_DIR\" if unix else \"%SRC_DIR%\" }}/license-files ./cmd/cosign || true"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cosign",
        "requirements": {
          "build": [
            "go-nocgo_compiler_stub",
            "go-licenses"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "script": "cosign version"
          },
          {
            "script": "echo -e \"testpassword\\ntestpassword\" | cosign generate-key-pair\ntest -f cosign.pub\n"
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cosign",
      "version": "2.6.0"
    },
    "requirements": {
      "build": [
        "go-nocgo_compiler_stub",
        "go-licenses"
      ]
    },
    "schema_version": 1,
    "source": {
      "git_url": "https://github.com/sigstore/cosign"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "go-licenses",
        "go-nocgo_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}