{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "qhull",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      },
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      },
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      },
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      },
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      },
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "Library/lib/cmake/Qhull/"
          ],
          "skip": true
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\qhull_r.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\qhull_r.dll exit 1"
      ]
    }
  },
  "name": "qhull",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "lib/cmake/Qhull/"
          ]
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja",
            "make"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja",
        "make"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "test ! -f $PREFIX/lib/libqhullcpp.a",
        "test ! -f $PREFIX/lib/libqhullstatic.a",
        "test ! -f $PREFIX/lib/libqhullstatic_r.a",
        "test -f $PREFIX/lib/libqhull_r${SHLIB_EXT}",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "qhull",
      "qhull-static"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/qhull.json"
  },
  "raw_meta_yaml": "{% set name = \"qhull\" %}\n{% set version = \"2020.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/qhull/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5\n  patches:\n    - fix-osx-rpath.patch\n    - windows.patch\n\nbuild:\n  number: 5\n  run_exports:\n    - {{ pin_subpackage('qhull', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n    - make  # [unix]\n  host:\n  run:\n\ntest:\n  commands:\n    # Check non-existence of static libs\n    {% set qhull_libs = [\"qhullcpp\", \"qhullstatic\", \"qhullstatic_r\"] %}\n    {% for each_qhull_lib in qhull_libs %}\n    - test ! -f $PREFIX/lib/lib{{ each_qhull_lib }}.a                         # [unix]\n    {% endfor %}\n    # Shared libs existence\n    {% set qhull_dynlibs = [\"qhull_r\"] %}\n    {% for each_qhull_lib in qhull_dynlibs %}\n    - test -f $PREFIX/lib/lib{{ each_qhull_lib }}${SHLIB_EXT}                 # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ each_qhull_lib }}.lib exit 1    # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ each_qhull_lib }}.dll exit 1    # [win]\n    {% endfor %}\n    - rbox c P0 D2 | qvoronoi s o\n    - rbox c | qconvex FQ FV n | qhalf Fp\n    - rbox 1000 D3 | qhull C-1e-4 FO Ts\n\noutputs:\n  - name: qhull\n  - name: qhull-static\n    build:\n      skip: true  # [win]\n      always_include_files:\n        # Must overwrite the CMake metadata from shared libprotobuf\n        - lib/cmake/Qhull/           # [unix]\n        - Library/lib/cmake/Qhull/   # [win]\n    script: build_static.sh\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n        - make  # [unix]\n      host:\n      run:\n        - {{ pin_subpackage('qhull', exact=True) }}\n    test:\n      commands:\n        # Static libs existence\n        {% set qhull_libs = [\"qhullcpp\", \"qhullstatic\", \"qhullstatic_r\"] %}\n        {% for each_qhull_lib in qhull_libs %}\n        - test -f $PREFIX/lib/lib{{ each_qhull_lib }}.a\n        {% endfor %}\n\nabout:\n  home: http://www.qhull.org/\n  license: LicenseRef-Qhull\n  license_file: COPYING.txt\n  summary: Qhull computes the convex hull\n  doc_url: http://www.qhull.org/html\n  dev_url: https://github.com/qhull/qhull\n\nextra:\n  recipe-maintainers:\n    - sirokujira\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "make",
      "ninja",
      "qhull"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz",
  "version": "2020.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/qhull.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/qhull/qhull",
      "doc_url": "http://www.qhull.org/html",
      "home": "http://www.qhull.org/",
      "license": "LicenseRef-Qhull",
      "license_file": "COPYING.txt",
      "summary": "Qhull computes the convex hull"
    },
    "build": {
      "number": "5",
      "run_exports": [
        "qhull"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sirokujira",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "name": "qhull"
      },
      {
        "build": {
          "always_include_files": [
            "Library/lib/cmake/Qhull/"
          ],
          "skip": true
        },
        "name": "qhull-static",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [],
          "run": [
            "qhull"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libqhullcpp.a",
            "test -f $PREFIX/lib/libqhullstatic.a",
            "test -f $PREFIX/lib/libqhullstatic_r.a"
          ]
        }
      }
    ],
    "package": {
      "name": "qhull",
      "version": "2020.2"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "fix-osx-rpath.patch",
        "windows.patch"
      ],
      "sha256": "59356b229b768e6e2b09a701448bfa222c37b797a84f87f864f97462d8dbc7c5",
      "url": "https://github.com/qhull/qhull/archive/2020.2.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\qhull_r.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\qhull_r.dll exit 1",
        "rbox c P0 D2 | qvoronoi s o",
        "rbox c | qconvex FQ FV n | qhalf Fp",
        "rbox 1000 D3 | qhull C-1e-4 FO Ts"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "qhull"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}