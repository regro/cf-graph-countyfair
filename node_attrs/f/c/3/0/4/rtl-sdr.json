{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "rtl-sdr",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "post-link": "post-link",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "post-link": "post-link",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "post-link": "post-link",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "post-link": "post-link",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config",
        "ninja"
      ],
      "host": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}",
        "setlocal EnableDelayedExpansion",
        "rtl_adsb -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_biast -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_eeprom -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_fm -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_power -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_sdr -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_tcp -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_test -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr_export.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\rtlsdr.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr.lib exit 1"
      ]
    }
  },
  "name": "rtl-sdr",
  "osx_64_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "libusb"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
        "test -f $PREFIX/include/rtl-sdr.h",
        "test -f $PREFIX/include/rtl-sdr_export.h",
        "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "rtl-sdr"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/rtl-sdr.json"
  },
  "raw_meta_yaml": "{% set name = \"rtl-sdr\" %}\n{% set version = \"2.0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/osmocom/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9\n  patches:\n    - 0001-add-libusb-lib-directories-in-cmake-for-macos.patch\n    - 0002-open-with-file-descriptor.patch\n    - 0003-l-band-lock-optimizations.patch\n    - 0004-Add-rtl-sdr-blog-features.patch\n    - 0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch\n    - 0006-Handle-USB-bulk-transfer-timeouts.patch\n    - 0007-Wait-until-all-transfers-are-cancelled.patch\n\nbuild:\n  number: 3\n  run_exports:\n    - {{ pin_subpackage('rtl-sdr', max_pin='x') }}\n  # instructions for manually linking udev rules\n  post-link: post-link  # [linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make  # [not win]\n    - ninja  # [win]\n    - pkg-config\n  host:\n    - libusb\n    - winpthreads-devel  # [win]\n\ntest:\n  commands:\n    # make it possible to check !ERRORLEVEL! after || on Windows\n    - setlocal EnableDelayedExpansion  # [win]\n\n    # verify that executables get installed\n    - rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_biast -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n\n    - rtl_adsb -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_biast -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_eeprom -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_fm -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_power -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_sdr -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_tcp -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    - rtl_test -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n\n    # verify that headers get installed\n    - test -f $PREFIX/include/rtl-sdr.h  # [not win]\n    - test -f $PREFIX/include/rtl-sdr_export.h  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr_export.h exit 1  # [win]\n\n    # verify that libraries get installed\n    - test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\rtlsdr.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr.lib exit 1  # [win]\n\nabout:\n  home: https://osmocom.org/projects/rtl-sdr/wiki\n  license: GPL-2.0-or-later AND LGPL-2.1-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver'\n  description: >\n    DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\n\n    For Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n        sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n        sudo udevadm control --reload\n        sudo udevadm trigger\n\n    You may have to restart for this change to take effect.\n\n    Even though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n        sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n        sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n  doc_url: https://osmocom.org/projects/rtl-sdr/wiki\n  dev_url: https://gitea.osmocom.org/sdr/rtl-sdr\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "libusb",
      "make",
      "ninja",
      "pkg-config",
      "winpthreads-devel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "libusb",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz",
  "version": "2.0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/rtl-sdr.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the chip allows transferring the raw I/Q samples to the host, which is officially used for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\nFor Linux users of `rtl-sdr`, you will likely want to link the provided udev rule into your system installation in order for the hardware to have the correct permissions:\n\n    sudo ln -s $CONDA_PREFIX/lib/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/\n    sudo udevadm control --reload\n    sudo udevadm trigger\n\nYou may have to restart for this change to take effect.\nEven though the Linux kernel's built-in DVB-T module that would normally claim the device should be unloaded automatically, you might also want to blacklist the DVB-T module by running:\n\n    sudo ln -s $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf /etc/modprobe.d/\n    sudo modprobe -r $(cat $CONDA_PREFIX/etc/modprobe.d/rtl-sdr-blacklist.conf | sed -n -e 's/^blacklist //p')\n",
      "dev_url": "https://gitea.osmocom.org/sdr/rtl-sdr",
      "doc_url": "https://osmocom.org/projects/rtl-sdr/wiki",
      "home": "https://osmocom.org/projects/rtl-sdr/wiki",
      "license": "GPL-2.0-or-later AND LGPL-2.1-or-later",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
    },
    "build": {
      "number": "3",
      "run_exports": [
        "rtl-sdr"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "ryanvolz"
      ]
    },
    "package": {
      "name": "rtl-sdr",
      "version": "2.0.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-add-libusb-lib-directories-in-cmake-for-macos.patch",
        "0002-open-with-file-descriptor.patch",
        "0003-l-band-lock-optimizations.patch",
        "0004-Add-rtl-sdr-blog-features.patch",
        "0005-follow-keenerd-and-don-t-stop-the-i2c-repeater-on-tu.patch",
        "0006-Handle-USB-bulk-transfer-timeouts.patch",
        "0007-Wait-until-all-transfers-are-cancelled.patch"
      ],
      "sha256": "d69943eb32df742bc38a00ce6615e41250fd57851174e5ff916ec31e9e9e68e9",
      "url": "https://github.com/osmocom/rtl-sdr/archive/refs/tags/v2.0.2.tar.gz"
    },
    "test": {
      "commands": [
        "setlocal EnableDelayedExpansion",
        "rtl_adsb -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_biast -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_eeprom -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_fm -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_power -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_sdr -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_tcp -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "rtl_test -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr_export.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\rtlsdr.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr.lib exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libusb",
        "winpthreads-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}