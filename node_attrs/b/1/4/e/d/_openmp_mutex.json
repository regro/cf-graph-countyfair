{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_name": "_openmp_mutex",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/openmp-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "OpenMP Implementation Mutex"
    },
    "build": {
      "always_include_files": [
        "lib/libgomp.so.1"
      ],
      "ignore_run_exports": [
        "_openmp_mutex"
      ],
      "number": "3",
      "run_exports": [
        "_openmp_mutex"
      ],
      "string": "3_kmp_llvm"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "beckermr"
      ]
    },
    "package": {
      "name": "_openmp_mutex",
      "version": "4.5"
    },
    "requirements": {
      "host": [],
      "run": [
        "llvm-openmp >=9.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libgomp.so.1",
        "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
        "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
        "ldd omp_hello",
        "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
      ],
      "files": [
        "omp_hello.c"
      ],
      "requires": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/openmp-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "OpenMP Implementation Mutex"
    },
    "build": {
      "always_include_files": [
        "lib/libgomp.so.1"
      ],
      "ignore_run_exports": [
        "_openmp_mutex"
      ],
      "number": "3",
      "run_exports": [
        "_openmp_mutex"
      ],
      "string": "3_kmp_llvm"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "beckermr"
      ]
    },
    "package": {
      "name": "_openmp_mutex",
      "version": "4.5"
    },
    "requirements": {
      "host": [],
      "run": [
        "llvm-openmp >=9.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libgomp.so.1",
        "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
        "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
        "ldd omp_hello",
        "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
      ],
      "files": [
        "omp_hello.c"
      ],
      "requires": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/openmp-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "OpenMP Implementation Mutex"
    },
    "build": {
      "always_include_files": [
        "lib/libgomp.so.1"
      ],
      "ignore_run_exports": [
        "_openmp_mutex"
      ],
      "number": "3",
      "run_exports": [
        "_openmp_mutex"
      ],
      "string": "3_kmp_llvm"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "beckermr"
      ]
    },
    "package": {
      "name": "_openmp_mutex",
      "version": "4.5"
    },
    "requirements": {
      "host": [],
      "run": [
        "llvm-openmp >=9.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libgomp.so.1",
        "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
        "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
        "ldd omp_hello",
        "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
      ],
      "files": [
        "omp_hello.c"
      ],
      "requires": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/openmp-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "OpenMP Implementation Mutex"
    },
    "build": {
      "always_include_files": [
        "lib/libgomp.so.1"
      ],
      "ignore_run_exports": [
        "_openmp_mutex"
      ],
      "number": "3",
      "run_exports": [
        "_openmp_mutex"
      ],
      "string": "3_kmp_llvm"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "beckermr"
      ]
    },
    "package": {
      "name": "_openmp_mutex",
      "version": "4.5"
    },
    "requirements": {
      "host": [],
      "run": [
        "llvm-openmp >=9.0.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libgomp.so.1",
        "if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi",
        "rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello",
        "ldd omp_hello",
        "rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello"
      ],
      "files": [
        "omp_hello.c"
      ],
      "requires": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "name": "_openmp_mutex",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "_openmp_mutex"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/_openmp_mutex.json"
  },
  "raw_meta_yaml": "{% set name = \"_openmp_mutex\" %}\n{% set version = \"4.5\" %}\n{% set build = \"3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  number: {{ build }}\n  string: {{ build }}_kmp_llvm\n  skip: true  # [not linux]\n  always_include_files:\n    # this major version has to match the libgomp version from gcc\n    - lib/libgomp.so.1\n  # Remove track_features because directly depending on mutex=*=*llvm\n  # would make the downstream package have low priority\n  # For eg: newer blas packages are not used by the solver\n  # track_features:\n  #  - llvm_openmp\n  ignore_run_exports:\n    - _openmp_mutex\n  run_exports:\n    - {{ pin_subpackage('_openmp_mutex', max_pin=None) }}\n\nrequirements:\n  host:\n  run:\n    - llvm-openmp >=9.0.1\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  commands:\n    - test -f $PREFIX/lib/libgomp.so.1\n    - if [ ! \"$PREFIX/lib/libgomp.so.1\" -ef \"$PREFIX/lib/libomp.so\" ]; then exit 1; fi\n    - rm -f omp_hello && ${CC} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n    - rm -f omp_hello && ${CXX} -v -fopenmp omp_hello.c -o omp_hello && ./omp_hello\n    - ldd omp_hello  # [linux]\n  files:\n    - omp_hello.c\n\nabout:\n  summary: OpenMP Implementation Mutex\n  license: BSD-3-Clause\n  license_file: LICENSE\n  home: https://github.com/conda-forge/openmp-feedstock\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - beckermr\n",
  "req": {
    "__set__": true,
    "elements": [
      "llvm-openmp"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "openmp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "llvm-openmp",
        "openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp >=9.0.1"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    }
  },
  "url": null,
  "version": "4.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/_openmp_mutex.json"
  }
}