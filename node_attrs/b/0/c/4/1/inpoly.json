{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "b9349c2fa50abba4c4f7f210c68d56aafa31397e",
  "feedstock_hash_ts": 1756886949,
  "feedstock_name": "inpoly",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "name": "inpoly",
  "osx_64_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "inpoly"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/inpoly.json"
  },
  "raw_meta_yaml": "{% set name = \"inpoly\" %}\n{% set version = \"0.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/dengwirda/inpoly-python/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f\n  patches:\n    - 0001-remove-msh.patch\n    - 0002-save-plots.patch\n\nbuild:\n  number: 9\n  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n\n  host:\n    - python\n    - cython\n    - pip\n    - numpy\n    - setuptools\n  run:\n    - python\n\ntest:\n  requires:\n    - pip\n    - matplotlib-base\n  imports:\n    - inpoly\n  source_files:\n    - msh/*\n    - dat/*\n    - example.py\n  commands:\n    - pip check\n    - python example.py --IDnumber 1\n    - python example.py --IDnumber 2\n    - python example.py --IDnumber 3\n  \nabout:\n  home: https://github.com/dengwirda/inpoly-python\n  license: custom\n  license_file: LICENSE.md\n  summary: A fast point(s)-in-polygon routine for Python.\n  description: |\n    INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\n    polygon (PSLG) embedded in the two-dimensional plane. General non-convex and\n    multiply-connected polygonal regions can be handled.\n  doc_url: https://github.com/dengwirda/inpoly-python/blob/master/README.md\n  dev_url: https://github.com/dengwirda/inpoly-python\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - dengwirda\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cython",
      "numpy",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  },
  "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz",
  "version": "0.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/inpoly.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "INPOLY returns the \"inside/outside\" status for a set of vertices VERT and a general\npolygon (PSLG) embedded in the two-dimensional plane. General non-convex and\nmultiply-connected polygonal regions can be handled.\n",
      "dev_url": "https://github.com/dengwirda/inpoly-python",
      "doc_url": "https://github.com/dengwirda/inpoly-python/blob/master/README.md",
      "home": "https://github.com/dengwirda/inpoly-python",
      "license": "custom",
      "license_file": "LICENSE.md",
      "summary": "A fast point(s)-in-polygon routine for Python."
    },
    "build": {
      "number": "9",
      "script": "PYTHON -m pip install . -vv --no-deps --no-build-isolation"
    },
    "extra": {
      "recipe-maintainers": [
        "xylar",
        "dengwirda"
      ]
    },
    "package": {
      "name": "inpoly",
      "version": "0.2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "cython",
        "pip",
        "numpy",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-remove-msh.patch",
        "0002-save-plots.patch"
      ],
      "sha256": "a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f",
      "url": "https://github.com/dengwirda/inpoly-python/archive/refs/tags/v0.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python example.py --IDnumber 1",
        "python example.py --IDnumber 2",
        "python example.py --IDnumber 3"
      ],
      "imports": [
        "inpoly"
      ],
      "requires": [
        "pip",
        "matplotlib-base"
      ],
      "source_files": [
        "msh/*",
        "dat/*",
        "example.py"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "pip"
      ]
    }
  }
}