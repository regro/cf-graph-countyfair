{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "test": "native_and_emulated"
  },
  "feedstock_name": "fcl",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch",
        "enable-shared-libs.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\fcl\\\\geometry\\\\shape\\\\cylinder.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\fcl.pc exit 1",
        "if not exist %PREFIX%\\\\Library\\\\CMake\\\\fcl-config.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\fcl.dll exit 1"
      ]
    }
  },
  "name": "fcl",
  "osx_64_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/include/fcl/geometry/shape/cylinder.h",
        "test -f $PREFIX/lib/pkgconfig/fcl.pc",
        "test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake",
        "test -f $PREFIX/lib/libfcl${SHLIB_EXT}"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fcl"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/fcl.json"
  },
  "raw_meta_yaml": "{% set name = \"fcl\" %}\n{% set version = \"0.7.0\" %}\n{% set sha256 = \"90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/flexible-collision-library/fcl/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - 553.patch\n    - enable-shared-libs.patch  # [win]\n\nbuild:\n  number: 8\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n    - cmake\n    - ninja\n  host:\n    - flann\n    - libccd-double\n    - eigen\n    - octomap\n  run:\n    - flann\n\ntest:\n  commands:\n    - test -f $PREFIX/include/fcl/geometry/shape/cylinder.h  # [not win]\n    - test -f $PREFIX/lib/pkgconfig/fcl.pc  # [not win]\n    - test -f $PREFIX/lib/cmake/fcl/fcl-config.cmake  # [not win]\n    - test -f $PREFIX/lib/libfcl${SHLIB_EXT}  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\fcl\\\\geometry\\\\shape\\\\cylinder.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\fcl.pc exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\CMake\\\\fcl-config.cmake exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\fcl.dll exit 1  # [win]\n\nabout:\n  home: https://github.com/flexible-collision-library/fcl\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: The flexible collision library (FCL) is a library for performing proximity queries.\n  description: |\n    FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n    - Collision detection: detecting whether the two models overlap, and\n      optionally, all of the triangles that overlap.\n    - Distance computation: computing the minimum distance between a pair of\n      models, i.e., the distance between the closest pair of points.\n    - Tolerance verification: determining whether two models are closer or\n      farther than a tolerance distance.\n    - Continuous collision detection: detecting whether the two moving\n      models overlap during the movement, and optionally, the time of\n      contact.\n    - Contact information: for collision detection and continuous collision\n      detection, the contact information (including contact normals and\n      contact points) can be returned optionally.\n\nextra:\n  recipe-maintainers:\n    - jeongseok-meta\n    - wolfv\n    - traversaro\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "eigen",
      "flann",
      "libccd-double",
      "ninja",
      "octomap"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz",
  "version": "0.7.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fcl.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "FCL is a library for performing three types of proximity queries on a pair of geometric models composed of triangles.\n\n- Collision detection: detecting whether the two models overlap, and\n  optionally, all of the triangles that overlap.\n- Distance computation: computing the minimum distance between a pair of\n  models, i.e., the distance between the closest pair of points.\n- Tolerance verification: determining whether two models are closer or\n  farther than a tolerance distance.\n- Continuous collision detection: detecting whether the two moving\n  models overlap during the movement, and optionally, the time of\n  contact.\n- Contact information: for collision detection and continuous collision\n  detection, the contact information (including contact normals and\n  contact points) can be returned optionally.\n",
      "home": "https://github.com/flexible-collision-library/fcl",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "The flexible collision library (FCL) is a library for performing proximity queries."
    },
    "build": {
      "number": "8",
      "run_exports": [
        "fcl"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jeongseok-meta",
        "wolfv",
        "traversaro"
      ]
    },
    "package": {
      "name": "fcl",
      "version": "0.7.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "flann",
        "libccd-double",
        "eigen",
        "octomap"
      ],
      "run": [
        "flann"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "553.patch",
        "enable-shared-libs.patch"
      ],
      "sha256": "90409e940b24045987506a6b239424a4222e2daf648c86dd146cbcb692ebdcbc",
      "url": "https://github.com/flexible-collision-library/fcl/archive/0.7.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\include\\\\fcl\\\\geometry\\\\shape\\\\cylinder.h exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\pkgconfig\\\\fcl.pc exit 1",
        "if not exist %PREFIX%\\\\Library\\\\CMake\\\\fcl-config.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\fcl.dll exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "flann",
        "libccd-double",
        "octomap"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flann"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}