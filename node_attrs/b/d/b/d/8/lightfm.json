{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "lightfm",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
      "dev_url": "https://github.com/lyst/lightfm",
      "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
      "home": "https://github.com/lyst/lightfm",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
    },
    "build": {
      "number": "2",
      "script": [
        "export LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "SimonCW",
        "maciejkula",
        "rth"
      ]
    },
    "package": {
      "name": "lightfm",
      "version": "1.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "numpy",
        "scipy >=0.17",
        "requests"
      ],
      "run": [
        "python",
        "numpy",
        "scipy >=0.17",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8",
      "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz"
    },
    "test": {
      "imports": [
        "lightfm._lightfm_fast_openmp",
        "lightfm",
        "lightfm.lightfm"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
      "dev_url": "https://github.com/lyst/lightfm",
      "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
      "home": "https://github.com/lyst/lightfm",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
    },
    "build": {
      "number": "2",
      "script": [
        "export LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv",
        "set LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "SimonCW",
        "maciejkula",
        "rth"
      ]
    },
    "package": {
      "name": "lightfm",
      "version": "1.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "numpy",
        "scipy >=0.17",
        "requests"
      ],
      "run": [
        "python",
        "numpy",
        "scipy >=0.17",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8",
      "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz"
    },
    "test": {
      "imports": [
        "lightfm._lightfm_fast_openmp",
        "lightfm",
        "lightfm.lightfm"
      ]
    }
  },
  "name": "lightfm",
  "osx_64_meta_yaml": {
    "about": {
      "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
      "dev_url": "https://github.com/lyst/lightfm",
      "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
      "home": "https://github.com/lyst/lightfm",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
    },
    "build": {
      "number": "2",
      "script": [
        "export LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "SimonCW",
        "maciejkula",
        "rth"
      ]
    },
    "package": {
      "name": "lightfm",
      "version": "1.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "numpy",
        "scipy >=0.17",
        "requests"
      ],
      "run": [
        "python",
        "numpy",
        "scipy >=0.17",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8",
      "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz"
    },
    "test": {
      "imports": [
        "lightfm",
        "lightfm.lightfm"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
      "dev_url": "https://github.com/lyst/lightfm",
      "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
      "home": "https://github.com/lyst/lightfm",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
    },
    "build": {
      "number": "2",
      "script": [
        "export LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "SimonCW",
        "maciejkula",
        "rth"
      ]
    },
    "package": {
      "name": "lightfm",
      "version": "1.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "numpy",
        "scipy >=0.17",
        "requests"
      ],
      "run": [
        "python",
        "numpy",
        "scipy >=0.17",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8",
      "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz"
    },
    "test": {
      "imports": [
        "lightfm",
        "lightfm.lightfm"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "lightfm"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lightfm.json"
  },
  "raw_meta_yaml": "{% set version = \"1.17\" %}\n\npackage:\n  name: lightfm\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lightfm/lightfm-{{ version }}.tar.gz\n  sha256: 2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8\n\nbuild:\n  number: 2\n  script:\n    # LIGHTFM_NO_CFLAGS is set to build without -march=nativ and -ffast-math as defined in setup.py\n    - export LIGHTFM_NO_CFLAGS=1 && {{ PYTHON }} -m pip install . --no-deps -vv  # [unix]\n    - set LIGHTFM_NO_CFLAGS=1 && {{ PYTHON }} -m pip install . --no-deps -vv  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - numpy\n    - scipy >=0.17\n    - requests\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.17\n    - requests\n\ntest:\n  imports:\n    # ensure OpenMP backend is used on linux\n    - lightfm._lightfm_fast_openmp  # [linux]\n    - lightfm\n    - lightfm.lightfm\n\nabout:\n  home: https://github.com/lyst/lightfm\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: A Python implementation of LightFM, a hybrid recommendation algorithm.\n  description: |\n    LightFM is a Python implementation of a number of popular recommendation\n    algorithms for both implicit and explicit feedback, including efficient\n    implementation of BPR and WARP ranking losses. It's easy to use,\n    fast (via multithreaded model estimation), and produces high quality results.\n  doc_url: http://lyst.github.io/lightfm/docs/home.html\n  dev_url: https://github.com/lyst/lightfm\n\nextra:\n  recipe-maintainers:\n    - SimonCW\n    - maciejkula\n    - rth\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cython",
      "numpy",
      "pip",
      "python",
      "requests",
      "scipy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "numpy",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy >=0.17"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "requests",
        "scipy >=0.17"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz",
  "version": "1.17",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lightfm.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "LightFM is a Python implementation of a number of popular recommendation\nalgorithms for both implicit and explicit feedback, including efficient\nimplementation of BPR and WARP ranking losses. It's easy to use,\nfast (via multithreaded model estimation), and produces high quality results.\n",
      "dev_url": "https://github.com/lyst/lightfm",
      "doc_url": "http://lyst.github.io/lightfm/docs/home.html",
      "home": "https://github.com/lyst/lightfm",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A Python implementation of LightFM, a hybrid recommendation algorithm."
    },
    "build": {
      "number": "2",
      "script": [
        "set LIGHTFM_NO_CFLAGS=1 && PYTHON -m pip install . --no-deps -vv"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "SimonCW",
        "maciejkula",
        "rth"
      ]
    },
    "package": {
      "name": "lightfm",
      "version": "1.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "python",
        "pip",
        "cython",
        "numpy",
        "scipy >=0.17",
        "requests"
      ],
      "run": [
        "python",
        "numpy",
        "scipy >=0.17",
        "requests"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2b77ada182ccd768a8d7643ab3cfcd8b6e855db09087f7cc7329bd63316697a8",
      "url": "https://pypi.io/packages/source/l/lightfm/lightfm-1.17.tar.gz"
    },
    "test": {
      "imports": [
        "lightfm",
        "lightfm.lightfm"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pip",
        "python",
        "requests",
        "scipy"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python",
        "requests",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}