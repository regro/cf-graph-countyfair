{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64",
      "win_64": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "remote_ci_setup": [
      "conda-forge-ci-setup=4",
      "conda-build <24.11"
    ],
    "test": "native_and_emulated"
  },
  "feedstock_name": "binutils",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "ignore_run_exports_from": [
            "cxx_compiler_stub"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports": [
            "libwinpthread"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "libwinpthread"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make",
        "texinfo",
        "flex"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "name": "binutils_split",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make",
        "texinfo",
        "flex"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "make",
        "texinfo"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-64 2.44"
          ],
          "run": [
            "ld_impl_linux-64",
            "sysroot_linux-64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-conda-linux-gnu-addr2line --help",
            "x86_64-conda-linux-gnu-ar --help",
            "x86_64-conda-linux-gnu-as --help",
            "x86_64-conda-linux-gnu-c++filt --help",
            "x86_64-conda-linux-gnu-elfedit --help",
            "x86_64-conda-linux-gnu-gprof --help",
            "x86_64-conda-linux-gnu-ld --help",
            "x86_64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "x86_64-conda-linux-gnu-ld.bfd --help",
            "x86_64-conda-linux-gnu-nm --help",
            "x86_64-conda-linux-gnu-objcopy --help",
            "x86_64-conda-linux-gnu-objdump --help",
            "x86_64-conda-linux-gnu-ranlib --help",
            "x86_64-conda-linux-gnu-readelf --help",
            "x86_64-conda-linux-gnu-size --help",
            "x86_64-conda-linux-gnu-strings --help",
            "x86_64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-64",
            "gcc_impl_linux-64"
          ]
        }
      },
      {
        "name": "binutils_linux-64",
        "requirements": {
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-64"
          ],
          "run": [
            "binutils_impl_linux-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-aarch64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-aarch64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-aarch64 2.44"
          ],
          "run": [
            "ld_impl_linux-aarch64",
            "sysroot_linux-aarch64"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "aarch64-conda-linux-gnu-addr2line --help",
            "aarch64-conda-linux-gnu-ar --help",
            "aarch64-conda-linux-gnu-as --help",
            "aarch64-conda-linux-gnu-c++filt --help",
            "aarch64-conda-linux-gnu-elfedit --help",
            "aarch64-conda-linux-gnu-gprof --help",
            "aarch64-conda-linux-gnu-ld --help",
            "aarch64-conda-linux-gnu-ld --verbose | grep SEARCH",
            "aarch64-conda-linux-gnu-ld.bfd --help",
            "aarch64-conda-linux-gnu-nm --help",
            "aarch64-conda-linux-gnu-objcopy --help",
            "aarch64-conda-linux-gnu-objdump --help",
            "aarch64-conda-linux-gnu-ranlib --help",
            "aarch64-conda-linux-gnu-readelf --help",
            "aarch64-conda-linux-gnu-size --help",
            "aarch64-conda-linux-gnu-strings --help",
            "aarch64-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-aarch64",
            "gcc_impl_linux-aarch64"
          ]
        }
      },
      {
        "name": "binutils_linux-aarch64",
        "requirements": {
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-aarch64"
          ],
          "run": [
            "binutils_impl_linux-aarch64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-ppc64le 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-ppc64le",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-ppc64le 2.44"
          ],
          "run": [
            "ld_impl_linux-ppc64le",
            "sysroot_linux-ppc64le"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "powerpc64le-conda-linux-gnu-addr2line --help",
            "powerpc64le-conda-linux-gnu-ar --help",
            "powerpc64le-conda-linux-gnu-as --help",
            "powerpc64le-conda-linux-gnu-c++filt --help",
            "powerpc64le-conda-linux-gnu-elfedit --help",
            "powerpc64le-conda-linux-gnu-gprof --help",
            "powerpc64le-conda-linux-gnu-ld --help",
            "powerpc64le-conda-linux-gnu-ld --verbose | grep SEARCH",
            "powerpc64le-conda-linux-gnu-ld.bfd --help",
            "powerpc64le-conda-linux-gnu-nm --help",
            "powerpc64le-conda-linux-gnu-objcopy --help",
            "powerpc64le-conda-linux-gnu-objdump --help",
            "powerpc64le-conda-linux-gnu-ranlib --help",
            "powerpc64le-conda-linux-gnu-readelf --help",
            "powerpc64le-conda-linux-gnu-size --help",
            "powerpc64le-conda-linux-gnu-strings --help",
            "powerpc64le-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-ppc64le",
            "gcc_impl_linux-ppc64le"
          ]
        }
      },
      {
        "name": "binutils_linux-ppc64le",
        "requirements": {
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-ppc64le"
          ],
          "run": [
            "binutils_impl_linux-ppc64le"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_linux-s390x 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-ld --help",
            "echo \"conda\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_linux-s390x",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_linux-s390x 2.44"
          ],
          "run": [
            "ld_impl_linux-s390x",
            "sysroot_linux-s390x"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "s390x-conda-linux-gnu-addr2line --help",
            "s390x-conda-linux-gnu-ar --help",
            "s390x-conda-linux-gnu-as --help",
            "s390x-conda-linux-gnu-c++filt --help",
            "s390x-conda-linux-gnu-elfedit --help",
            "s390x-conda-linux-gnu-gprof --help",
            "s390x-conda-linux-gnu-ld --help",
            "s390x-conda-linux-gnu-ld --verbose | grep SEARCH",
            "s390x-conda-linux-gnu-ld.bfd --help",
            "s390x-conda-linux-gnu-nm --help",
            "s390x-conda-linux-gnu-objcopy --help",
            "s390x-conda-linux-gnu-objdump --help",
            "s390x-conda-linux-gnu-ranlib --help",
            "s390x-conda-linux-gnu-readelf --help",
            "s390x-conda-linux-gnu-size --help",
            "s390x-conda-linux-gnu-strings --help",
            "s390x-conda-linux-gnu-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_linux-s390x",
            "gcc_impl_linux-s390x"
          ]
        }
      },
      {
        "name": "binutils_linux-s390x",
        "requirements": {
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$LD --help",
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_linux-s390x"
          ],
          "run": [
            "binutils_impl_linux-s390x"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-apple-darwin13.4.0-addr2line --help",
            "x86_64-apple-darwin13.4.0-ar --help",
            "x86_64-apple-darwin13.4.0-c++filt --help",
            "x86_64-apple-darwin13.4.0-elfedit --help",
            "x86_64-apple-darwin13.4.0-nm --help",
            "x86_64-apple-darwin13.4.0-objcopy --help",
            "x86_64-apple-darwin13.4.0-objdump --help",
            "x86_64-apple-darwin13.4.0-ranlib --help",
            "x86_64-apple-darwin13.4.0-readelf --help",
            "x86_64-apple-darwin13.4.0-size --help",
            "x86_64-apple-darwin13.4.0-strings --help",
            "x86_64-apple-darwin13.4.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-64",
            "gcc_impl_osx-64"
          ]
        }
      },
      {
        "name": "binutils_osx-64",
        "requirements": {
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-64"
          ],
          "run": [
            "binutils_impl_osx-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false,
          "skip": true
        },
        "name": "ld_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_osx-arm64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_osx-arm64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": []
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "arm64-apple-darwin20.0.0-addr2line --help",
            "arm64-apple-darwin20.0.0-ar --help",
            "arm64-apple-darwin20.0.0-c++filt --help",
            "arm64-apple-darwin20.0.0-elfedit --help",
            "arm64-apple-darwin20.0.0-nm --help",
            "arm64-apple-darwin20.0.0-objcopy --help",
            "arm64-apple-darwin20.0.0-objdump --help",
            "arm64-apple-darwin20.0.0-ranlib --help",
            "arm64-apple-darwin20.0.0-readelf --help",
            "arm64-apple-darwin20.0.0-size --help",
            "arm64-apple-darwin20.0.0-strings --help",
            "arm64-apple-darwin20.0.0-strip --help"
          ],
          "downstreams": [
            "gfortran_impl_osx-arm64",
            "gcc_impl_osx-arm64"
          ]
        }
      },
      {
        "name": "binutils_osx-arm64",
        "requirements": {
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_osx-arm64"
          ],
          "run": [
            "binutils_impl_osx-arm64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "__glibc"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false,
          "skip": true
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "make",
        "texinfo",
        "flex"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      },
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "make",
        "texinfo"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "binutils",
      "binutils_impl_linux-64",
      "binutils_impl_linux-aarch64",
      "binutils_impl_linux-ppc64le",
      "binutils_impl_linux-s390x",
      "binutils_impl_osx-64",
      "binutils_impl_osx-arm64",
      "binutils_impl_win-64",
      "binutils_linux-64",
      "binutils_linux-aarch64",
      "binutils_linux-ppc64le",
      "binutils_linux-s390x",
      "binutils_osx-64",
      "binutils_osx-arm64",
      "binutils_split",
      "binutils_win-64",
      "ld_impl_linux-64",
      "ld_impl_linux-aarch64",
      "ld_impl_linux-ppc64le",
      "ld_impl_linux-s390x",
      "ld_impl_osx-64",
      "ld_impl_osx-arm64",
      "ld_impl_win-64"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/binutils.json"
  },
  "raw_meta_yaml": "{% set name = \"binutils\" %}\n{% set version = \"2.44\" %}\n\npackage:\n  name: binutils_split\n  version: {{ version }}\n\nsource:\n  - url: https://ftp.gnu.org/gnu/binutils/binutils-{{ version }}.tar.bz2\n    sha256: f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a\n    patches:\n      - patches/0001-fallback-sysroot.diff\n\nbuild:\n  number: 1\n  skip: true  # [win64 and cross_target_platform != \"win-64\"]\n  detect_binary_files_with_prefix: false\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n    - make                    # [osx]\n    - texinfo                 # [osx]\n    - flex                    # [osx]\n  host:\n  run:\n\noutputs:\n  - name: ld_impl_{{ cross_target_platform }}\n    script: install_ld.sh\n    build:\n      skip: true  # [cross_target_platform in (\"osx-arm64\", \"osx-64\")]\n      merge_build_host: false\n      # ld binaries have host prefix search paths embeded in them\n      detect_binary_files_with_prefix: true\n      ignore_run_exports_from:   # [linux]\n        - {{ compiler('cxx') }}   # [linux]\n      ignore_run_exports:   # [win]\n        - libwinpthread           # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n      run:\n      run_constrained:\n        - binutils_impl_{{ cross_target_platform }} {{ version }}\n    test:\n      commands:\n        - {{ triplet }}-ld --help\n        - echo \"{{ ctng_vendor }}\"\n\n  - name: binutils_impl_{{ cross_target_platform }}\n    script: install_binutils.sh\n    build:\n      merge_build_host: false\n      detect_binary_files_with_prefix: false\n      ignore_run_exports:\n        - __glibc\n      ignore_run_exports_from:   # [linux]\n        - {{ compiler('cxx') }}   # [linux]\n      ignore_run_exports:   # [win]\n        - libwinpthread           # [win]\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib('c') }}\n      host:\n        - ld_impl_{{ cross_target_platform }} {{ version }}  # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n      run:\n        - {{ pin_subpackage(\"ld_impl_\" ~ cross_target_platform, exact=True) }}  # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - sysroot_{{ cross_target_platform }}  # [cross_target_platform not in (\"win-64\", \"osx-arm64\", \"osx-64\")]\n        - m2w64-sysroot_{{ cross_target_platform }} >=12.0.0.r0  # [cross_target_platform == \"win-64\"]\n    test:\n      downstreams:\n        - gfortran_impl_{{ cross_target_platform }}  # [cross_target_platform != \"win-64\"]\n        - gcc_impl_{{ cross_target_platform }}       # [cross_target_platform != \"win-64\"]\n      commands:\n        - {{ triplet }}-addr2line --help\n        - {{ triplet }}-ar --help\n        - {{ triplet }}-as --help                   # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - {{ triplet }}-c++filt --help\n        - {{ triplet }}-elfedit --help\n        - {{ triplet }}-gprof --help                # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - {{ triplet }}-ld --help                   # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        # Look here to check that search path prefixes have been replaced\n        - {{ triplet }}-ld --verbose | grep SEARCH  # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - {{ triplet }}-ld.bfd --help               # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - {{ triplet }}-nm --help\n        - {{ triplet }}-objcopy --help\n        - {{ triplet }}-objdump --help\n        - {{ triplet }}-ranlib --help\n        - {{ triplet }}-readelf --help\n        - {{ triplet }}-size --help\n        - {{ triplet }}-strings --help\n        - {{ triplet }}-strip --help\n\n  - name: binutils_{{ cross_target_platform }}\n    script: install_activation.sh\n    requirements:\n      run:\n        - {{ pin_subpackage(\"binutils_impl_\" ~ cross_target_platform, exact=True) }}\n    test:\n      commands:\n        - $LD --help  # [cross_target_platform not in (\"win-64\", \"osx-arm64\", \"osx-64\")]\n        - $AR --help\n\n  - name: binutils\n    script: install_binutils_symlinks.sh\n    build:\n      merge_build_host: false\n      detect_binary_files_with_prefix: false\n      skip: true  # [cross_target_platform != target_platform]\n    requirements:\n      build:\n      host:\n        - binutils_impl_{{ cross_target_platform }}\n      run:\n        - {{ pin_subpackage(\"binutils_impl_\" ~ cross_target_platform, max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - $PREFIX/bin/addr2line --help\n        - $PREFIX/bin/ar --help\n        - $PREFIX/bin/as --help       # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - $PREFIX/bin/c++filt --help\n        - $PREFIX/bin/elfedit --help\n        - $PREFIX/bin/gprof --help    # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - $PREFIX/bin/ld --help       # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - $PREFIX/bin/ld.bfd --help   # [cross_target_platform not in (\"osx-arm64\", \"osx-64\")]\n        - $PREFIX/bin/nm --help\n        - $PREFIX/bin/objcopy --help\n        - $PREFIX/bin/objdump --help\n        - $PREFIX/bin/ranlib --help\n        - $PREFIX/bin/readelf --help\n        - $PREFIX/bin/size --help\n        - $PREFIX/bin/strings --help\n        - $PREFIX/bin/strip --help\n\nabout:\n  home: https://www.gnu.org/software/binutils/\n  license: GPL-3.0-only\n  license_file:\n    - COPYING\n    - COPYING.LIB\n    - COPYING3\n    - COPYING3.LIB\n  summary: |\n    A set of programming tools for creating and managing binary programs, object files,\n    libraries, profile data, and assembly source code.\n\nextra:\n  recipe-maintainers:\n    - frol\n    - isuruf\n    - jjhelmus\n    - beckermr\n",
  "req": {
    "__set__": true,
    "elements": [
      "binutils_impl_linux-64",
      "binutils_impl_linux-aarch64",
      "binutils_impl_linux-ppc64le",
      "binutils_impl_linux-s390x",
      "binutils_impl_osx-64",
      "binutils_impl_osx-arm64",
      "binutils_impl_win-64",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "flex",
      "ld_impl_linux-64",
      "ld_impl_linux-aarch64",
      "ld_impl_linux-ppc64le",
      "ld_impl_linux-s390x",
      "ld_impl_win-64",
      "m2w64-sysroot_win-64",
      "make",
      "sysroot_linux-64",
      "sysroot_linux-aarch64",
      "sysroot_linux-ppc64le",
      "sysroot_linux-s390x",
      "texinfo"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "make",
        "texinfo"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "linux-sysroot"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "linux-sysroot",
        "m2w64-sysroot_win-64",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "flex",
        "make",
        "texinfo"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64 2.44",
        "ld_impl_linux-aarch64 2.44",
        "ld_impl_linux-ppc64le 2.44",
        "ld_impl_linux-s390x 2.44",
        "ld_impl_win-64 2.44"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "binutils_impl_linux-s390x",
        "binutils_impl_osx-64",
        "binutils_impl_osx-arm64",
        "binutils_impl_win-64",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "ld_impl_linux-s390x",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64 >=12.0.0.r0",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "sysroot_linux-s390x"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2",
  "version": "2.44",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/binutils.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://www.gnu.org/software/binutils/",
      "license": "GPL-3.0-only",
      "license_file": [
        "COPYING",
        "COPYING.LIB",
        "COPYING3",
        "COPYING3.LIB"
      ],
      "summary": "A set of programming tools for creating and managing binary programs, object files,\nlibraries, profile data, and assembly source code.\n"
    },
    "build": {
      "detect_binary_files_with_prefix": false,
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "frol",
        "isuruf",
        "jjhelmus",
        "beckermr"
      ]
    },
    "outputs": [
      {
        "build": {
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports": [
            "libwinpthread"
          ],
          "merge_build_host": false
        },
        "name": "ld_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [],
          "run_constrained": [
            "binutils_impl_win-64 2.44"
          ]
        },
        "script": "install_ld.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-ld --help",
            "echo \"none\""
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "ignore_run_exports": [
            "libwinpthread"
          ],
          "merge_build_host": false
        },
        "name": "binutils_impl_win-64",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [
            "ld_impl_win-64 2.44"
          ],
          "run": [
            "ld_impl_win-64",
            "m2w64-sysroot_win-64 >=12.0.0.r0"
          ]
        },
        "script": "install_binutils.sh",
        "test": {
          "commands": [
            "x86_64-w64-mingw32-addr2line --help",
            "x86_64-w64-mingw32-ar --help",
            "x86_64-w64-mingw32-as --help",
            "x86_64-w64-mingw32-c++filt --help",
            "x86_64-w64-mingw32-elfedit --help",
            "x86_64-w64-mingw32-gprof --help",
            "x86_64-w64-mingw32-ld --help",
            "x86_64-w64-mingw32-ld --verbose | grep SEARCH",
            "x86_64-w64-mingw32-ld.bfd --help",
            "x86_64-w64-mingw32-nm --help",
            "x86_64-w64-mingw32-objcopy --help",
            "x86_64-w64-mingw32-objdump --help",
            "x86_64-w64-mingw32-ranlib --help",
            "x86_64-w64-mingw32-readelf --help",
            "x86_64-w64-mingw32-size --help",
            "x86_64-w64-mingw32-strings --help",
            "x86_64-w64-mingw32-strip --help"
          ],
          "downstreams": null
        }
      },
      {
        "name": "binutils_win-64",
        "requirements": {
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_activation.sh",
        "test": {
          "commands": [
            "$AR --help"
          ]
        }
      },
      {
        "build": {
          "detect_binary_files_with_prefix": false,
          "merge_build_host": false
        },
        "name": "binutils",
        "requirements": {
          "build": [],
          "host": [
            "binutils_impl_win-64"
          ],
          "run": [
            "binutils_impl_win-64"
          ]
        },
        "script": "install_binutils_symlinks.sh",
        "test": {
          "commands": [
            "$PREFIX/bin/addr2line --help",
            "$PREFIX/bin/ar --help",
            "$PREFIX/bin/as --help",
            "$PREFIX/bin/c++filt --help",
            "$PREFIX/bin/elfedit --help",
            "$PREFIX/bin/gprof --help",
            "$PREFIX/bin/ld --help",
            "$PREFIX/bin/ld.bfd --help",
            "$PREFIX/bin/nm --help",
            "$PREFIX/bin/objcopy --help",
            "$PREFIX/bin/objdump --help",
            "$PREFIX/bin/ranlib --help",
            "$PREFIX/bin/readelf --help",
            "$PREFIX/bin/size --help",
            "$PREFIX/bin/strings --help",
            "$PREFIX/bin/strip --help"
          ]
        }
      }
    ],
    "package": {
      "name": "binutils_split",
      "version": "2.44"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-fallback-sysroot.diff"
        ],
        "sha256": "f66390a661faa117d00fab2e79cf2dc9d097b42cc296bf3f8677d1e7b452dc3a",
        "url": "https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.bz2"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "binutils_impl_win-64",
        "ld_impl_win-64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "binutils_impl_win-64",
        "ld_impl_win-64",
        "m2w64-sysroot_win-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}