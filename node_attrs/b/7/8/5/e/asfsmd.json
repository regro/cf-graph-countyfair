{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "asfsmd",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Small Python tool (`asfsmd`) that allows to download XML files containing\nSentinel-1 products metadata from the ASF archive.\n\nSentinel-1 products are stored in the ASF arcive as ZIP files that are\nquite large because they contain both the products annotations and the\nbinary image data.\n\nThe `asfsmd` tool is able to retrieve only the relatively samll annotation\nfiles (in XML format) without downloading the entire ZIP archive.\n\n`asfsmd` exploits Python packages like `fsspec` or `httpio` for reading HTTP\nresources as random-access file-like objects. In order to do it the remote\nserver must support the `Range` header.\n\nThis approach allows to open the ZIP archive remotely, inspects contents, and\ndownload only the pieces of data that are actually necessary to the user.\n\nPerformnces of this approach are quite poor but, in the specific case of\nSentinel-1 products, the entire process results to be faster than downloading\nthe entire ZIP archive and extracting only annotation files.\n",
      "dev_url": "https://github.com/avalentino/asfsmd",
      "home": "https://github.com/avalentino/asfsmd",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "ASF Sentinel-1 Metadata Download tool"
    },
    "build": {
      "entry_points": [
        "asfsmd = asfsmd.cli:main"
      ],
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "avalentino"
      ]
    },
    "package": {
      "name": "asfsmd",
      "version": "1.4.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.9",
        "fsspec",
        "requests",
        "aiohttp",
        "importlib-metadata >=4.4",
        "asf_search",
        "tqdm",
        "argcomplete"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c89798c25b888288c3ee9f367540d785fc4e1c68336d2ee8400bb14b5672e695",
      "url": "https://pypi.org/packages/source/a/asfsmd/asfsmd-1.4.1.tar.gz"
    },
    "test": {
      "commands": [
        "asfsmd -h",
        "pip check"
      ],
      "imports": [
        "asfsmd"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "argcomplete",
        "asf_search",
        "fsspec",
        "importlib-metadata",
        "python",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Small Python tool (`asfsmd`) that allows to download XML files containing\nSentinel-1 products metadata from the ASF archive.\n\nSentinel-1 products are stored in the ASF arcive as ZIP files that are\nquite large because they contain both the products annotations and the\nbinary image data.\n\nThe `asfsmd` tool is able to retrieve only the relatively samll annotation\nfiles (in XML format) without downloading the entire ZIP archive.\n\n`asfsmd` exploits Python packages like `fsspec` or `httpio` for reading HTTP\nresources as random-access file-like objects. In order to do it the remote\nserver must support the `Range` header.\n\nThis approach allows to open the ZIP archive remotely, inspects contents, and\ndownload only the pieces of data that are actually necessary to the user.\n\nPerformnces of this approach are quite poor but, in the specific case of\nSentinel-1 products, the entire process results to be faster than downloading\nthe entire ZIP archive and extracting only annotation files.\n",
      "dev_url": "https://github.com/avalentino/asfsmd",
      "home": "https://github.com/avalentino/asfsmd",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "ASF Sentinel-1 Metadata Download tool"
    },
    "build": {
      "entry_points": [
        "asfsmd = asfsmd.cli:main"
      ],
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "avalentino"
      ]
    },
    "package": {
      "name": "asfsmd",
      "version": "1.4.1"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.9",
        "fsspec",
        "requests",
        "aiohttp",
        "importlib-metadata >=4.4",
        "asf_search",
        "tqdm",
        "argcomplete"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c89798c25b888288c3ee9f367540d785fc4e1c68336d2ee8400bb14b5672e695",
      "url": "https://pypi.org/packages/source/a/asfsmd/asfsmd-1.4.1.tar.gz"
    },
    "test": {
      "commands": [
        "asfsmd -h",
        "pip check"
      ],
      "imports": [
        "asfsmd"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "asfsmd",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "asfsmd"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/asfsmd.json"
  },
  "raw_meta_yaml": "{% set name = \"asfsmd\" %}\n{% set version = \"1.4.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: c89798c25b888288c3ee9f367540d785fc4e1c68336d2ee8400bb14b5672e695\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n  entry_points:\n    - asfsmd = asfsmd.cli:main\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - fsspec\n    - requests\n    - aiohttp\n    - importlib-metadata >=4.4\n    - asf_search\n    - tqdm\n    - argcomplete\n\ntest:\n  imports:\n    - asfsmd\n  requires:\n    - pip\n    - python {{ python_min }}\n  commands:\n    - asfsmd -h\n    - pip check\n\nabout:\n  home: https://github.com/avalentino/asfsmd\n  summary: 'ASF Sentinel-1 Metadata Download tool'\n  description: |\n    Small Python tool (`asfsmd`) that allows to download XML files containing\n    Sentinel-1 products metadata from the ASF archive.\n\n    Sentinel-1 products are stored in the ASF arcive as ZIP files that are\n    quite large because they contain both the products annotations and the\n    binary image data.\n\n    The `asfsmd` tool is able to retrieve only the relatively samll annotation\n    files (in XML format) without downloading the entire ZIP archive.\n\n    `asfsmd` exploits Python packages like `fsspec` or `httpio` for reading HTTP \n    resources as random-access file-like objects. In order to do it the remote \n    server must support the `Range` header.\n\n    This approach allows to open the ZIP archive remotely, inspects contents, and\n    download only the pieces of data that are actually necessary to the user.\n\n    Performnces of this approach are quite poor but, in the specific case of\n    Sentinel-1 products, the entire process results to be faster than downloading\n    the entire ZIP archive and extracting only annotation files.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  dev_url: https://github.com/avalentino/asfsmd\n\nextra:\n  recipe-maintainers:\n    - avalentino\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiohttp",
      "argcomplete",
      "asf_search",
      "fsspec",
      "importlib-metadata",
      "pip",
      "python",
      "requests",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "argcomplete",
        "asf_search",
        "fsspec",
        "importlib-metadata",
        "python",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiohttp",
        "argcomplete",
        "asf_search",
        "fsspec",
        "importlib-metadata >=4.4",
        "python >=3.9",
        "requests",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/a/asfsmd/asfsmd-1.4.1.tar.gz",
  "version": "1.4.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/asfsmd.json"
  }
}