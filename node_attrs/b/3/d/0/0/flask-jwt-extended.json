{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": false,
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "flask-jwt-extended",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A Flask JWT extension that supports refresh tokens, blacklisting/revoking tokens,\nand token freshness (for accessing critical views)",
      "home": "https://github.com/vimalloc/flask-jwt-extended",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A Flask JWT extension"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "lvoliveira",
        "nicoddemus",
        "igortg",
        "synapticarbors"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "flask-jwt-extended",
        "requirements": {
          "build": [],
          "host": [
            "python ==3.9",
            "setuptools",
            "pip"
          ],
          "run": [
            "flask >=2.0,<4.0",
            "pyjwt >=2.0,<3.0",
            "python >=3.9",
            "werkzeug >=0.14"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "flask_jwt_extended"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9"
              ]
            },
            "script": "python -c \"import flask_jwt_extended\""
          }
        ]
      }
    ],
    "package": {
      "name": "flask-jwt-extended",
      "version": "4.7.0"
    },
    "requirements": {
      "host": [
        "python ==3.9",
        "setuptools",
        "pip"
      ],
      "run": [
        "flask >=2.0,<4.0",
        "pyjwt >=2.0,<3.0",
        "python >=3.9",
        "werkzeug >=0.14"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "be5785e2e3ef4d8773ba6d10247e78827dcf0b111efbfcd7a0794b5f7c750d90",
      "url": "https://pypi.org/packages/source/f/flask-jwt-extended/flask_jwt_extended-4.7.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask",
        "pyjwt",
        "python",
        "werkzeug"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A Flask JWT extension that supports refresh tokens, blacklisting/revoking tokens,\nand token freshness (for accessing critical views)",
      "home": "https://github.com/vimalloc/flask-jwt-extended",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "A Flask JWT extension"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "lvoliveira",
        "nicoddemus",
        "igortg",
        "synapticarbors"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "flask-jwt-extended",
        "requirements": {
          "build": [],
          "host": [
            "python ==3.9",
            "setuptools",
            "pip"
          ],
          "run": [
            "flask >=2.0,<4.0",
            "pyjwt >=2.0,<3.0",
            "python >=3.9",
            "werkzeug >=0.14"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "flask_jwt_extended"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9"
              ]
            },
            "script": "python -c \"import flask_jwt_extended\""
          }
        ]
      }
    ],
    "package": {
      "name": "flask-jwt-extended",
      "version": "4.7.0"
    },
    "requirements": {
      "host": [
        "python ==3.9",
        "setuptools",
        "pip"
      ],
      "run": [
        "flask >=2.0,<4.0",
        "pyjwt >=2.0,<3.0",
        "python >=3.9",
        "werkzeug >=0.14"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "be5785e2e3ef4d8773ba6d10247e78827dcf0b111efbfcd7a0794b5f7c750d90",
      "url": "https://pypi.org/packages/source/f/flask-jwt-extended/flask_jwt_extended-4.7.0.tar.gz"
    }
  },
  "name": "flask-jwt-extended",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "flask-jwt-extended"
    ]
  },
  "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', '/tmp/tmpqe229cct/flask-jwt-extended-feedstock-main/.ci_support/linux_64_.yaml']\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 101, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 758, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 705, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 232, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error CalledProcessError raised:\n1, ['rattler-build', 'build', '--render-only', '--variant-config', '/tmp/tmpqe229cct/flask-jwt-extended-feedstock-main/.ci_support/linux_64_.yaml']\n",
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/flask-jwt-extended.json"
  },
  "raw_meta_yaml": "context:\n  version: 4.7.0\n  sha256: be5785e2e3ef4d8773ba6d10247e78827dcf0b111efbfcd7a0794b5f7c750d90\n  python_min: \"3.9\"\n\npackage:\n  name: flask-jwt-extended\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/f/flask-jwt-extended/flask_jwt_extended-${{ version }}.tar.gz\n  sha256: ${{ sha256 }}\n\nbuild:\n  number: 0\n  noarch: python\n  script: python -m pip install . -vv\n\nrequirements:\n  host:\n    - python ${{ python_min }}\n    - setuptools\n    - pip\n  run:\n    - flask >=2.0,<4.0\n    - pyjwt >=2.0,<3.0\n    - python >=${{ python_min }}\n    - werkzeug >=0.14\n\ntests:\n  - python:\n      imports:\n        - flask_jwt_extended\n      pip_check: true\n  - script:\n      - python -c \"import flask_jwt_extended\"\n    requirements:\n      run:\n        - python ${{ python_min }}\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  summary: A Flask JWT extension\n  description: |\n    A Flask JWT extension that supports refresh tokens, blacklisting/revoking tokens,\n    and token freshness (for accessing critical views)\n  homepage: https://github.com/vimalloc/flask-jwt-extended\n\nextra:\n  recipe-maintainers:\n    - lvoliveira\n    - nicoddemus\n    - igortg\n    - synapticarbors\n",
  "req": {
    "__set__": true,
    "elements": [
      "flask",
      "pip",
      "pyjwt",
      "python",
      "setuptools",
      "werkzeug"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask",
        "pyjwt",
        "python",
        "werkzeug"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python ==3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "flask >=2.0,<4.0",
        "pyjwt >=2.0,<3.0",
        "python >=3.9",
        "werkzeug >=0.14"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/f/flask-jwt-extended/flask_jwt_extended-4.7.0.tar.gz",
  "version": "4.7.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/flask-jwt-extended.json"
  }
}