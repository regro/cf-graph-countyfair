{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "fans",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.\nFANS is written in C++, built using CMake, and it has MPI parallelization.\nThe package exposes the binary FANS and the Python-bindings via libFANS.",
      "home": "https://github.com/DataAnalyticsEngineering/FANS",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
    },
    "build": {
      "number": "1",
      "script": [
        "mkdir build",
        "cd build",
        "cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON",
        "cmake --build . -j",
        "cmake --install ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sanathkeshav",
        "claudiushaag",
        "EMMAOpenSource"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      }
    ],
    "package": {
      "name": "fans",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pybind11"
      ],
      "host": [
        "hdf5 * mpi_openmpi*",
        "fftw * mpi_openmpi*",
        "openmpi-mpicxx",
        "eigen"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9f076f4f7a4df7808a2532bae1ed8ce3cebbd18d8313095a1050a595c74f2b5a",
      "url": "https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "fftw",
        "hdf5",
        "openmpi-mpicxx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "jq"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.\nFANS is written in C++, built using CMake, and it has MPI parallelization.\nThe package exposes the binary FANS and the Python-bindings via libFANS.",
      "home": "https://github.com/DataAnalyticsEngineering/FANS",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
    },
    "build": {
      "number": "1",
      "script": [
        "mkdir build",
        "cd build",
        "cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON",
        "cmake --build . -j",
        "cmake --install ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sanathkeshav",
        "claudiushaag",
        "EMMAOpenSource"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      },
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      },
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      }
    ],
    "package": {
      "name": "fans",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pybind11"
      ],
      "host": [
        "hdf5 * mpi_openmpi*",
        "fftw * mpi_openmpi*",
        "openmpi-mpicxx",
        "eigen"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9f076f4f7a4df7808a2532bae1ed8ce3cebbd18d8313095a1050a595c74f2b5a",
      "url": "https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "name": "fans",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.\nFANS is written in C++, built using CMake, and it has MPI parallelization.\nThe package exposes the binary FANS and the Python-bindings via libFANS.",
      "home": "https://github.com/DataAnalyticsEngineering/FANS",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
    },
    "build": {
      "number": "1",
      "script": [
        "mkdir build",
        "cd build",
        "cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON",
        "cmake --build . -j",
        "cmake --install ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sanathkeshav",
        "claudiushaag",
        "EMMAOpenSource"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      }
    ],
    "package": {
      "name": "fans",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pybind11"
      ],
      "host": [
        "hdf5 * mpi_openmpi*",
        "fftw * mpi_openmpi*",
        "openmpi-mpicxx",
        "eigen"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9f076f4f7a4df7808a2532bae1ed8ce3cebbd18d8313095a1050a595c74f2b5a",
      "url": "https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "fftw",
        "hdf5",
        "openmpi-mpicxx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "jq"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.\nFANS is written in C++, built using CMake, and it has MPI parallelization.\nThe package exposes the binary FANS and the Python-bindings via libFANS.",
      "home": "https://github.com/DataAnalyticsEngineering/FANS",
      "license": "LGPL-3.0-only",
      "license_family": "LGPL-3.0-only",
      "license_file": "LICENSE",
      "summary": "FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems."
    },
    "build": {
      "number": "1",
      "script": [
        "mkdir build",
        "cd build",
        "cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON",
        "cmake --build . -j",
        "cmake --install ."
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "sanathkeshav",
        "claudiushaag",
        "EMMAOpenSource"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fans",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make",
            "ninja",
            "pybind11"
          ],
          "host": [
            "hdf5 * mpi_openmpi*",
            "fftw * mpi_openmpi*",
            "openmpi-mpicxx",
            "eigen"
          ],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "bin": [
                "FANS"
              ],
              "lib": [
                "FANS"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test/"
              ]
            },
            "requirements": {
              "run": [
                "jq"
              ]
            },
            "script": [
              "JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"",
              "MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"",
              "NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"",
              "jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"",
              "mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\""
            ]
          },
          {
            "script": "FANS --version"
          }
        ],
        "version": "0.4.2"
      }
    ],
    "package": {
      "name": "fans",
      "version": "0.4.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "pybind11"
      ],
      "host": [
        "hdf5 * mpi_openmpi*",
        "fftw * mpi_openmpi*",
        "openmpi-mpicxx",
        "eigen"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "9f076f4f7a4df7808a2532bae1ed8ce3cebbd18d8313095a1050a595c74f2b5a",
      "url": "https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v0.4.2.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "fftw",
        "hdf5",
        "openmpi-mpicxx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "jq"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fans"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/fans.json"
  },
  "raw_meta_yaml": "context:\n  version: \"0.4.2\"\n\npackage:\n  name: fans\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v${{ version }}.tar.gz\n  sha256: 9F076F4F7A4DF7808A2532BAE1ED8CE3CEBBD18D8313095A1050A595C74F2B5A\n\nbuild:\n  number: 1\n  skip:\n    - win\n  script:\n    - if: unix\n      then:\n        - if: (build_platform != target_platform)\n          then:\n            # flags from https://conda-forge.org/docs/maintainer/knowledge_base/#cross-compilation and https://github.com/conda-forge/mumps-feedstock/blob/966474677d28486ef897b0d3bb2c10558dc9b5ca/recipe/build-mumps.sh\n            - export OMPI_CC=$CC\n            - export OMPI_CXX=$CXX\n            - export OMPI_FC=$FC\n            - export OPAL_PREFIX=\"$PREFIX\"\n            - export FFLAGS=\"${FFLAGS} -DAVOID_MPI_IN_PLACE\"\n            - export LDFLAGS=\"${LDFLAGS} -headerpad_max_install_names\"\n        - mkdir build\n        - cd build\n        - cmake .. $CMAKE_ARGS -DFANS_LIBRARY_FOR_MICRO_MANAGER=ON\n        - cmake --build . -j\n        - cmake --install .\n\nrequirements:\n  build:\n    - ${{ compiler('c') }}\n    - ${{ compiler('cxx') }}\n    - ${{ stdlib('c') }}\n    - cmake\n    - make\n    - ninja\n    - pybind11\n    - if: (build_platform != target_platform)\n      then:\n        - openmpi-mpicxx\n  host:\n    - hdf5 * mpi_openmpi*\n    - fftw * mpi_openmpi*\n    - openmpi-mpicxx\n    - eigen\n\ntests:\n  - package_contents:\n      bin:\n        - FANS\n      lib:\n        - FANS\n  - script:\n      # JSON test file has relative path to h5 included - changing that\n      - JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic.json\"\n      - MODIFIED_JSON_FILE=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/input_files/test_LinearElastic_mod.json\"\n      - NEW_MS_FILENAME=\"$PREFIX/etc/conda/test-files/$PKG_NAME/0/test/microstructures/sphere32.h5\"\n      # Use jq to create a modified copy of the JSON file\n      - jq --arg new_filename \"$NEW_MS_FILENAME\" '.microstructure.filepath = $new_filename' \"$JSON_FILE\" > \"$MODIFIED_JSON_FILE\"\n      # Run tests\n      - mpiexec -n 1 FANS \"$MODIFIED_JSON_FILE\" \"$PREFIX/etc/conda/test-files/$PKG_NAME/0//test/test_results.h5\"\n    requirements:\n      run:\n        - jq\n    files:\n      source:\n        - test/\n  - script:\n      - FANS --version\n\nabout:\n  homepage: https://github.com/DataAnalyticsEngineering/FANS\n  summary: \"FANS: an open-source, efficient, and parallel FFT-based homogenization solver designed to solve microscale multiphysics problems.\"\n  description: |\n    Fourier-Accelerated Nodal Solver (FANS) is an FFT-based homogenization solver for microscale multiphysics problems.\n    FANS is written in C++, built using CMake, and it has MPI parallelization.\n    The package exposes the binary FANS and the Python-bindings via libFANS.\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - sanathkeshav\n    - claudiushaag\n    - EMMAOpenSource\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "eigen",
      "fftw",
      "hdf5",
      "make",
      "ninja",
      "openmpi-mpicxx",
      "pybind11"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen",
        "fftw",
        "hdf5",
        "openmpi-mpicxx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "jq"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja",
        "pybind11"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "fftw * mpi_openmpi*",
        "hdf5 * mpi_openmpi*",
        "openmpi-mpicxx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "jq"
      ]
    }
  },
  "url": "https://github.com/DataAnalyticsEngineering/FANS/archive/refs/tags/v0.4.2.tar.gz",
  "version": "0.4.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fans.json"
  }
}