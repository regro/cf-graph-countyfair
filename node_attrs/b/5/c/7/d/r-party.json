{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-party",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\"",
        "\"%R%\" -e \"library('party')\""
      ]
    }
  },
  "name": "r-party",
  "osx_64_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('party')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-party"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-party.json"
  },
  "raw_meta_yaml": "{% set version = \"1.3-18\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-party\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - https://cran.r-project.org/src/contrib/party_{{ version }}.tar.gz\n    - https://cran.r-project.org/src/contrib/Archive/party/party_{{ version }}.tar.gz\n  sha256: 1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n    - r-sandwich                 # [build_platform != target_platform]\n    - r-coin                     # [build_platform != target_platform]\n    - r-strucchange              # [build_platform != target_platform]\n    - r-survival                 # [build_platform != target_platform]\n    - r-zoo                      # [build_platform != target_platform]\n    - r-modeltools               # [build_platform != target_platform]\n    - r-mvtnorm                  # [build_platform != target_platform]\n    - {{ compiler('c') }}        # [not win]\n    - {{ stdlib(\"c\") }}          # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ stdlib(\"c\") }}          # [win]\n    - {{ compiler('fortran') }}  # [osx]\n    - {{ posix }}filesystem      # [win]\n    - {{ posix }}make\n    - {{ posix }}sed             # [win]\n    - {{ posix }}coreutils       # [win]\n    - {{ posix }}zip             # [win]\n  host:\n    - r-base\n    - r-coin >=1.1_0\n    - r-modeltools >=0.2_21\n    - r-mvtnorm >=1.0_2\n    - r-sandwich >=1.1_1\n    - r-strucchange\n    - r-survival >=2.37_7\n    - r-zoo\n  run:\n    - r-base\n    - r-coin >=1.1_0\n    - r-modeltools >=0.2_21\n    - r-mvtnorm >=1.0_2\n    - r-sandwich >=1.1_1\n    - r-strucchange\n    - r-survival >=2.37_7\n    - r-zoo\n\ntest:\n  commands:\n    - $R -e \"library('party')\"  # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('party')\\\"\"  # [win]\n\nabout:\n  home: http://party.R-forge.R-project.org\n  license: GPL-2.0-only\n  summary: A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to\n    all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm\n    for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>,\n    Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "fortran_compiler_stub",
      "m2w64_c_compiler_stub",
      "make",
      "r-base",
      "r-coin",
      "r-modeltools",
      "r-mvtnorm",
      "r-sandwich",
      "r-strucchange",
      "r-survival",
      "r-zoo",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
  ],
  "version": "1.3_18",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-party.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "http://party.R-forge.R-project.org",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "A computational toolbox for recursive partitioning. The core of the package is ctree(), an implementation of conditional inference trees which embed tree-structured  regression models into a well defined theory of conditional inference procedures. This non-parametric class of regression trees is applicable to all kinds of regression problems, including nominal, ordinal, numeric, censored as well as multivariate response variables and arbitrary measurement scales of the covariates.  Based on conditional inference trees, cforest() provides an implementation of Breiman's random forests. The function mob() implements an algorithm for recursive partitioning based on parametric models (e.g. linear models, GLMs or survival regression) employing parameter instability tests for split selection. Extensible functionality for visualizing tree-structured regression models is available. The methods are described in Hothorn et al. (2006) <doi:10.1198/106186006X133933>, Zeileis et al. (2008) <doi:10.1198/106186008X319331> and  Strobl et al. (2007) <doi:10.1186/1471-2105-8-25>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-party",
      "version": "1.3_18"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "c_stdlib_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ],
      "run": [
        "r-base",
        "r-coin >=1.1_0",
        "r-modeltools >=0.2_21",
        "r-mvtnorm >=1.0_2",
        "r-sandwich >=1.1_1",
        "r-strucchange",
        "r-survival >=2.37_7",
        "r-zoo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1ef77413a27897f8f884ea5d87cb87a0ce8f3169c2baaabde03aace0409956a7",
      "url": [
        "https://cran.r-project.org/src/contrib/party_1.3-18.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/party/party_1.3-18.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('party')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-coin",
        "r-modeltools",
        "r-mvtnorm",
        "r-sandwich",
        "r-strucchange",
        "r-survival",
        "r-zoo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}