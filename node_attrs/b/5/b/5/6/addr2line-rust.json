{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "addr2line-rust",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\nGiven an address, it can return the file name, line number, and function name associated with that address, as well as the\ninline call stack leading to that address.",
      "dev_url": "https://github.com/gimli-rs/addr2line",
      "home": "https://github.com/gimli-rs/addr2line",
      "license": "MIT OR Apache-2.0",
      "license_family": "MIT OR Apache-2.0",
      "license_file": "LICENSE-APACHE",
      "summary": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information."
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo auditable install --features bin --locked --no-track --bins --root ${{ PREFIX }} --path .",
          "cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "M-Sabrina",
        "Hofer-Julian"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      }
    ],
    "package": {
      "name": "addr2line-rust",
      "version": "0.25.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "rust_compiler_stub",
        "cargo-bundle-licenses",
        "cargo-auditable"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5",
      "url": "https://github.com/gimli-rs/addr2line/archive/refs/tags/0.25.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-auditable",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\nGiven an address, it can return the file name, line number, and function name associated with that address, as well as the\ninline call stack leading to that address.",
      "dev_url": "https://github.com/gimli-rs/addr2line",
      "home": "https://github.com/gimli-rs/addr2line",
      "license": "MIT OR Apache-2.0",
      "license_family": "MIT OR Apache-2.0",
      "license_file": "LICENSE-APACHE",
      "summary": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information."
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo auditable install --features bin --locked --no-track --bins --root ${{ PREFIX }} --path .",
          "cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "M-Sabrina",
        "Hofer-Julian"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      },
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      },
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      }
    ],
    "package": {
      "name": "addr2line-rust",
      "version": "0.25.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "rust_compiler_stub",
        "cargo-bundle-licenses",
        "cargo-auditable"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5",
      "url": "https://github.com/gimli-rs/addr2line/archive/refs/tags/0.25.0.tar.gz"
    }
  },
  "name": "addr2line-rust",
  "osx_64_meta_yaml": {
    "about": {
      "description": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\nGiven an address, it can return the file name, line number, and function name associated with that address, as well as the\ninline call stack leading to that address.",
      "dev_url": "https://github.com/gimli-rs/addr2line",
      "home": "https://github.com/gimli-rs/addr2line",
      "license": "MIT OR Apache-2.0",
      "license_family": "MIT OR Apache-2.0",
      "license_file": "LICENSE-APACHE",
      "summary": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information."
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo auditable install --features bin --locked --no-track --bins --root ${{ PREFIX }} --path .",
          "cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "M-Sabrina",
        "Hofer-Julian"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      }
    ],
    "package": {
      "name": "addr2line-rust",
      "version": "0.25.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "rust_compiler_stub",
        "cargo-bundle-licenses",
        "cargo-auditable"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5",
      "url": "https://github.com/gimli-rs/addr2line/archive/refs/tags/0.25.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-auditable",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "addr2line-rust"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/addr2line-rust.json"
  },
  "raw_meta_yaml": "context:\n  name: addr2line-rust\n  version: \"0.25.0\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/gimli-rs/addr2line/archive/refs/tags/${{ version }}.tar.gz\n  sha256: e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5\n\nbuild:\n  number: 0\n  script:\n    env:\n      CARGO_PROFILE_RELEASE_STRIP: symbols\n      CARGO_PROFILE_RELEASE_LTO: fat\n    content:\n      - cargo auditable install --features bin --locked --no-track --bins --root ${{ PREFIX }} --path .\n      - cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml\n\nrequirements:\n  build:\n    - ${{ stdlib('c') }}\n    - ${{ compiler('c') }}\n    - ${{ compiler('rust') }}\n    - cargo-bundle-licenses\n    - cargo-auditable\n\ntests:\n  - script:\n      interpreter: python\n      content: |\n        import subprocess\n        result = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\n        assert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n    requirements:\n        run:\n          - python\n\n\nabout:\n  homepage: https://github.com/gimli-rs/addr2line\n  summary: addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\n  description: |\n    addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\n    Given an address, it can return the file name, line number, and function name associated with that address, as well as the\n    inline call stack leading to that address.\n  license: MIT OR Apache-2.0\n  license_file:\n    - LICENSE-APACHE\n    - LICENSE-MIT\n    - THIRDPARTY.yml\n  repository: https://github.com/gimli-rs/addr2line\n\nextra:\n  recipe-maintainers:\n    - M-Sabrina\n    - Hofer-Julian\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cargo-auditable",
      "cargo-bundle-licenses",
      "rust_compiler_stub"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-auditable",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-auditable",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "url": "https://github.com/gimli-rs/addr2line/archive/refs/tags/0.25.0.tar.gz",
  "version": "0.25.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/addr2line-rust.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information.\nGiven an address, it can return the file name, line number, and function name associated with that address, as well as the\ninline call stack leading to that address.",
      "dev_url": "https://github.com/gimli-rs/addr2line",
      "home": "https://github.com/gimli-rs/addr2line",
      "license": "MIT OR Apache-2.0",
      "license_family": "MIT OR Apache-2.0",
      "license_file": "LICENSE-APACHE",
      "summary": "addr2line provides a cross-platform library for retrieving per-address debug information from files with DWARF debug information."
    },
    "build": {
      "number": "0",
      "script": {
        "content": [
          "cargo auditable install --features bin --locked --no-track --bins --root ${{ PREFIX }} --path .",
          "cargo-bundle-licenses --format yaml --output ./THIRDPARTY.yml"
        ],
        "env": {
          "CARGO_PROFILE_RELEASE_LTO": "fat",
          "CARGO_PROFILE_RELEASE_STRIP": "symbols"
        }
      }
    },
    "extra": {
      "recipe-maintainers": [
        "M-Sabrina",
        "Hofer-Julian"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "addr2line-rust",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "rust_compiler_stub",
            "cargo-bundle-licenses",
            "cargo-auditable"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "requirements": {
              "run": [
                "python"
              ]
            },
            "script": {
              "content": "import subprocess\nresult = subprocess.run([\"addr2line\", \"--help\"], capture_output=True, text=True, check=True)\nassert \"Rust port\" in result.stdout, \"'Rust port' not found in help output, this probably means it uses the binutils version\"\n",
              "interpreter": "python"
            }
          }
        ],
        "version": "0.25.0"
      }
    ],
    "package": {
      "name": "addr2line-rust",
      "version": "0.25.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "rust_compiler_stub",
        "cargo-bundle-licenses",
        "cargo-auditable"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "e793ca2e8a2496f3a05d04a08e86281b8aacb90bbaa29fbe4a1b664bb72e4bd5",
      "url": "https://github.com/gimli-rs/addr2line/archive/refs/tags/0.25.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cargo-auditable",
        "cargo-bundle-licenses",
        "rust_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  }
}