{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "pybamm",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://pybamm.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "LICENSE.txt",
      "summary": "Python Battery Mathematical Modelling"
    },
    "build": {
      "noarch": "python",
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "valentinsulzer",
        "Saransh-cpp",
        "agriyakhetarpal",
        "priyanshuone6",
        "tlestang"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "pybamm",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.9.*",
            "setuptools >=64"
          ],
          "run": [
            "pybamm-base",
            "bpx",
            "tqdm",
            "imageio >=2.3.0",
            "matplotlib-base >=3.6.0",
            "pybtex >=0.24.0",
            "jax ==0.4.27",
            "jaxlib ==0.4.27",
            "scikit-fem >=8.1.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pybamm",
                "pybamm.discretisations",
                "pybamm.experiment",
                "pybamm.experiment.step",
                "pybamm.expression_tree",
                "pybamm.expression_tree.operations",
                "pybamm.expression_tree.printing",
                "pybamm.geometry",
                "pybamm.meshes",
                "pybamm.models",
                "pybamm.models.full_battery_models",
                "pybamm.models.full_battery_models.equivalent_circuit",
                "pybamm.models.full_battery_models.lead_acid",
                "pybamm.models.full_battery_models.lithium_ion",
                "pybamm.models.submodels",
                "pybamm.models.submodels.active_material",
                "pybamm.models.submodels.convection",
                "pybamm.models.submodels.convection.through_cell",
                "pybamm.models.submodels.convection.transverse",
                "pybamm.models.submodels.current_collector",
                "pybamm.models.submodels.electrode",
                "pybamm.models.submodels.electrode.ohm",
                "pybamm.models.submodels.electrolyte_conductivity",
                "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
                "pybamm.models.submodels.electrolyte_diffusion",
                "pybamm.models.submodels.equivalent_circuit_elements",
                "pybamm.models.submodels.external_circuit",
                "pybamm.models.submodels.interface",
                "pybamm.models.submodels.interface.interface_utilisation",
                "pybamm.models.submodels.interface.kinetics",
                "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
                "pybamm.models.submodels.interface.lithium_plating",
                "pybamm.models.submodels.interface.open_circuit_potential",
                "pybamm.models.submodels.interface.sei",
                "pybamm.models.submodels.oxygen_diffusion",
                "pybamm.models.submodels.particle",
                "pybamm.models.submodels.particle_mechanics",
                "pybamm.models.submodels.porosity",
                "pybamm.models.submodels.thermal",
                "pybamm.models.submodels.thermal.pouch_cell",
                "pybamm.models.submodels.transport_efficiency",
                "pybamm.parameters",
                "pybamm.plotting",
                "pybamm.solvers",
                "pybamm.solvers.c_solvers",
                "pybamm.spatial_methods"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "pip check"
          }
        ],
        "version": "24.11.2"
      },
      {
        "build": null,
        "name": "pybamm-base",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.9.*",
            "setuptools >=64"
          ],
          "run": [
            "python >=3.9,<3.13",
            "anytree >=2.8.0",
            "casadi >=3.6.7",
            "posthog >=3.6.5",
            "numpy >=1.23.5,<2.0.0",
            "pandas >=1.5.0",
            "pooch >=1.8.1",
            "scipy >=1.11.4",
            "sympy >=1.12",
            "typing-extensions >=4.10.0",
            "xarray >=2022.6.0",
            "pyyaml",
            "platformdirs"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pybamm",
                "pybamm.discretisations",
                "pybamm.experiment",
                "pybamm.experiment.step",
                "pybamm.expression_tree",
                "pybamm.expression_tree.operations",
                "pybamm.expression_tree.printing",
                "pybamm.geometry",
                "pybamm.meshes",
                "pybamm.models",
                "pybamm.models.full_battery_models",
                "pybamm.models.full_battery_models.equivalent_circuit",
                "pybamm.models.full_battery_models.lead_acid",
                "pybamm.models.full_battery_models.lithium_ion",
                "pybamm.models.submodels",
                "pybamm.models.submodels.active_material",
                "pybamm.models.submodels.convection",
                "pybamm.models.submodels.convection.through_cell",
                "pybamm.models.submodels.convection.transverse",
                "pybamm.models.submodels.current_collector",
                "pybamm.models.submodels.electrode",
                "pybamm.models.submodels.electrode.ohm",
                "pybamm.models.submodels.electrolyte_conductivity",
                "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
                "pybamm.models.submodels.electrolyte_diffusion",
                "pybamm.models.submodels.equivalent_circuit_elements",
                "pybamm.models.submodels.external_circuit",
                "pybamm.models.submodels.interface",
                "pybamm.models.submodels.interface.interface_utilisation",
                "pybamm.models.submodels.interface.kinetics",
                "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
                "pybamm.models.submodels.interface.lithium_plating",
                "pybamm.models.submodels.interface.open_circuit_potential",
                "pybamm.models.submodels.interface.sei",
                "pybamm.models.submodels.oxygen_diffusion",
                "pybamm.models.submodels.particle",
                "pybamm.models.submodels.particle_mechanics",
                "pybamm.models.submodels.porosity",
                "pybamm.models.submodels.thermal",
                "pybamm.models.submodels.thermal.pouch_cell",
                "pybamm.models.submodels.transport_efficiency",
                "pybamm.parameters",
                "pybamm.plotting",
                "pybamm.solvers",
                "pybamm.solvers.c_solvers",
                "pybamm.spatial_methods"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "pip check"
          }
        ],
        "version": "24.11.2"
      }
    ],
    "package": {
      "name": "pybamm",
      "version": "24.11.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9.*",
        "setuptools >=64"
      ],
      "run": [
        "pybamm-base",
        "bpx",
        "tqdm",
        "imageio >=2.3.0",
        "matplotlib-base >=3.6.0",
        "pybtex >=0.24.0",
        "jax ==0.4.27",
        "jaxlib ==0.4.27",
        "scikit-fem >=8.1.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "5ce20c13d61c4dc9f142381a38f38d60e778c167d2683003688cefa754ba9e12",
      "url": "https://pypi.org/packages/source/p/pybamm/pybamm-24.11.2.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "anytree",
        "bpx",
        "casadi",
        "imageio",
        "jax",
        "jaxlib",
        "matplotlib-base",
        "numpy",
        "pandas",
        "platformdirs",
        "pooch",
        "posthog",
        "pybamm-base",
        "pybtex",
        "python",
        "pyyaml",
        "scikit-fem",
        "scipy",
        "sympy",
        "tqdm",
        "typing-extensions",
        "xarray"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://pybamm.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "LICENSE.txt",
      "summary": "Python Battery Mathematical Modelling"
    },
    "build": {
      "noarch": "python",
      "number": "3"
    },
    "extra": {
      "recipe-maintainers": [
        "valentinsulzer",
        "Saransh-cpp",
        "agriyakhetarpal",
        "priyanshuone6",
        "tlestang"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "pybamm",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.9.*",
            "setuptools >=64"
          ],
          "run": [
            "pybamm-base",
            "bpx",
            "tqdm",
            "imageio >=2.3.0",
            "matplotlib-base >=3.6.0",
            "pybtex >=0.24.0",
            "jax ==0.4.27",
            "jaxlib ==0.4.27",
            "scikit-fem >=8.1.0"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pybamm",
                "pybamm.discretisations",
                "pybamm.experiment",
                "pybamm.experiment.step",
                "pybamm.expression_tree",
                "pybamm.expression_tree.operations",
                "pybamm.expression_tree.printing",
                "pybamm.geometry",
                "pybamm.meshes",
                "pybamm.models",
                "pybamm.models.full_battery_models",
                "pybamm.models.full_battery_models.equivalent_circuit",
                "pybamm.models.full_battery_models.lead_acid",
                "pybamm.models.full_battery_models.lithium_ion",
                "pybamm.models.submodels",
                "pybamm.models.submodels.active_material",
                "pybamm.models.submodels.convection",
                "pybamm.models.submodels.convection.through_cell",
                "pybamm.models.submodels.convection.transverse",
                "pybamm.models.submodels.current_collector",
                "pybamm.models.submodels.electrode",
                "pybamm.models.submodels.electrode.ohm",
                "pybamm.models.submodels.electrolyte_conductivity",
                "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
                "pybamm.models.submodels.electrolyte_diffusion",
                "pybamm.models.submodels.equivalent_circuit_elements",
                "pybamm.models.submodels.external_circuit",
                "pybamm.models.submodels.interface",
                "pybamm.models.submodels.interface.interface_utilisation",
                "pybamm.models.submodels.interface.kinetics",
                "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
                "pybamm.models.submodels.interface.lithium_plating",
                "pybamm.models.submodels.interface.open_circuit_potential",
                "pybamm.models.submodels.interface.sei",
                "pybamm.models.submodels.oxygen_diffusion",
                "pybamm.models.submodels.particle",
                "pybamm.models.submodels.particle_mechanics",
                "pybamm.models.submodels.porosity",
                "pybamm.models.submodels.thermal",
                "pybamm.models.submodels.thermal.pouch_cell",
                "pybamm.models.submodels.transport_efficiency",
                "pybamm.parameters",
                "pybamm.plotting",
                "pybamm.solvers",
                "pybamm.solvers.c_solvers",
                "pybamm.spatial_methods"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "pip check"
          }
        ],
        "version": "24.11.2"
      },
      {
        "build": null,
        "name": "pybamm-base",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.9.*",
            "setuptools >=64"
          ],
          "run": [
            "python >=3.9,<3.13",
            "anytree >=2.8.0",
            "casadi >=3.6.7",
            "posthog >=3.6.5",
            "numpy >=1.23.5,<2.0.0",
            "pandas >=1.5.0",
            "pooch >=1.8.1",
            "scipy >=1.11.4",
            "sympy >=1.12",
            "typing-extensions >=4.10.0",
            "xarray >=2022.6.0",
            "pyyaml",
            "platformdirs"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "pybamm",
                "pybamm.discretisations",
                "pybamm.experiment",
                "pybamm.experiment.step",
                "pybamm.expression_tree",
                "pybamm.expression_tree.operations",
                "pybamm.expression_tree.printing",
                "pybamm.geometry",
                "pybamm.meshes",
                "pybamm.models",
                "pybamm.models.full_battery_models",
                "pybamm.models.full_battery_models.equivalent_circuit",
                "pybamm.models.full_battery_models.lead_acid",
                "pybamm.models.full_battery_models.lithium_ion",
                "pybamm.models.submodels",
                "pybamm.models.submodels.active_material",
                "pybamm.models.submodels.convection",
                "pybamm.models.submodels.convection.through_cell",
                "pybamm.models.submodels.convection.transverse",
                "pybamm.models.submodels.current_collector",
                "pybamm.models.submodels.electrode",
                "pybamm.models.submodels.electrode.ohm",
                "pybamm.models.submodels.electrolyte_conductivity",
                "pybamm.models.submodels.electrolyte_conductivity.surface_potential_form",
                "pybamm.models.submodels.electrolyte_diffusion",
                "pybamm.models.submodels.equivalent_circuit_elements",
                "pybamm.models.submodels.external_circuit",
                "pybamm.models.submodels.interface",
                "pybamm.models.submodels.interface.interface_utilisation",
                "pybamm.models.submodels.interface.kinetics",
                "pybamm.models.submodels.interface.kinetics.inverse_kinetics",
                "pybamm.models.submodels.interface.lithium_plating",
                "pybamm.models.submodels.interface.open_circuit_potential",
                "pybamm.models.submodels.interface.sei",
                "pybamm.models.submodels.oxygen_diffusion",
                "pybamm.models.submodels.particle",
                "pybamm.models.submodels.particle_mechanics",
                "pybamm.models.submodels.porosity",
                "pybamm.models.submodels.thermal",
                "pybamm.models.submodels.thermal.pouch_cell",
                "pybamm.models.submodels.transport_efficiency",
                "pybamm.parameters",
                "pybamm.plotting",
                "pybamm.solvers",
                "pybamm.solvers.c_solvers",
                "pybamm.spatial_methods"
              ]
            }
          },
          {
            "requirements": {
              "run": [
                "python 3.9.*",
                "pip"
              ]
            },
            "script": "pip check"
          }
        ],
        "version": "24.11.2"
      }
    ],
    "package": {
      "name": "pybamm",
      "version": "24.11.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9.*",
        "setuptools >=64"
      ],
      "run": [
        "pybamm-base",
        "bpx",
        "tqdm",
        "imageio >=2.3.0",
        "matplotlib-base >=3.6.0",
        "pybtex >=0.24.0",
        "jax ==0.4.27",
        "jaxlib ==0.4.27",
        "scikit-fem >=8.1.0"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "5ce20c13d61c4dc9f142381a38f38d60e778c167d2683003688cefa754ba9e12",
      "url": "https://pypi.org/packages/source/p/pybamm/pybamm-24.11.2.tar.gz"
    }
  },
  "name": "pybamm",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pybamm",
      "pybamm-base"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pybamm.json"
  },
  "raw_meta_yaml": "schema_version: 1\n\ncontext:\n  name: pybamm\n  version: 24.11.2\n  python_min: 3.9\n  python_max: 3.13\n\nrecipe:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/${{ name }}-${{ version }}.tar.gz\n  sha256: 5ce20c13d61c4dc9f142381a38f38d60e778c167d2683003688cefa754ba9e12\n\nbuild:\n  number: 3\n\noutputs:\n  - package:\n      name: pybamm-base\n    build:\n      noarch: python\n      script: python -m pip install . -vv --no-deps --no-build-isolation\n\n    requirements:\n      host:\n        - pip\n        - python ${{ python_min }}.*\n        - setuptools >=64\n        # See https://github.com/conda-forge/pybamm-feedstock/pull/70/files#r1876438836\n        # - wheel\n      run:\n        - python >=${{ python_min }},<${{ python_max }}\n        - anytree >=2.8.0\n        - casadi >=3.6.7\n        - posthog >=3.6.5\n        - numpy >=1.23.5,<2.0.0\n        - pandas >=1.5.0\n        - pooch >=1.8.1\n        - scipy >=1.11.4\n        - sympy >=1.12\n        - typing-extensions >=4.10.0\n        - xarray >=2022.6.0\n        - pyyaml\n        - platformdirs\n\n    tests:\n      - python:\n          imports:\n            - pybamm\n            - pybamm.discretisations\n            - pybamm.experiment\n            - pybamm.experiment.step\n            - pybamm.expression_tree\n            - pybamm.expression_tree.operations\n            - pybamm.expression_tree.printing\n            - pybamm.geometry\n            - pybamm.meshes\n            - pybamm.models\n            - pybamm.models.full_battery_models\n            - pybamm.models.full_battery_models.equivalent_circuit\n            - pybamm.models.full_battery_models.lead_acid\n            - pybamm.models.full_battery_models.lithium_ion\n            # See https://github.com/pybamm-team/PyBaMM/issues/1905\n            # - pybamm.models.full_battery_models.lithium_metal\n            - pybamm.models.submodels\n            - pybamm.models.submodels.active_material\n            - pybamm.models.submodels.convection\n            - pybamm.models.submodels.convection.through_cell\n            - pybamm.models.submodels.convection.transverse\n            - pybamm.models.submodels.current_collector\n            - pybamm.models.submodels.electrode\n            - pybamm.models.submodels.electrode.ohm\n            - pybamm.models.submodels.electrolyte_conductivity\n            - pybamm.models.submodels.electrolyte_conductivity.surface_potential_form\n            - pybamm.models.submodels.electrolyte_diffusion\n            - pybamm.models.submodels.equivalent_circuit_elements\n            - pybamm.models.submodels.external_circuit\n            - pybamm.models.submodels.interface\n            - pybamm.models.submodels.interface.interface_utilisation\n            - pybamm.models.submodels.interface.kinetics\n            - pybamm.models.submodels.interface.kinetics.inverse_kinetics\n            - pybamm.models.submodels.interface.lithium_plating\n            - pybamm.models.submodels.interface.open_circuit_potential\n            - pybamm.models.submodels.interface.sei\n            - pybamm.models.submodels.oxygen_diffusion\n            - pybamm.models.submodels.particle\n            - pybamm.models.submodels.particle_mechanics\n            - pybamm.models.submodels.porosity\n            - pybamm.models.submodels.thermal\n            - pybamm.models.submodels.thermal.pouch_cell\n            - pybamm.models.submodels.transport_efficiency\n            - pybamm.parameters\n            - pybamm.plotting\n            - pybamm.solvers\n            - pybamm.solvers.c_solvers\n            - pybamm.spatial_methods\n      - requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - pip check\n\n  - package:\n      name: pybamm\n    build:\n      noarch: python\n\n    requirements:\n      host:\n        - pip\n        - python ${{ python_min }}.*\n        - setuptools >=64\n      run:\n        - ${{ pin_subpackage('pybamm-base', exact=True) }}\n        # Battery Parameter eXchange format\n        - bpx\n        # Progress bars\n        - tqdm\n        # Plotting\n        - imageio >=2.3.0\n        - matplotlib-base >=3.6.0\n        # Cite\n        - pybtex >=0.24.0\n        # JAX\n        - jax ==0.4.27\n        - jaxlib ==0.4.27\n        # Other dependencies\n        - scikit-fem >=8.1.0\n        # - iree-compiler -- not available on conda\n\n    tests:\n      - python:\n          imports:\n            - pybamm\n            - pybamm.discretisations\n            - pybamm.experiment\n            - pybamm.experiment.step\n            - pybamm.expression_tree\n            - pybamm.expression_tree.operations\n            - pybamm.expression_tree.printing\n            - pybamm.geometry\n            - pybamm.meshes\n            - pybamm.models\n            - pybamm.models.full_battery_models\n            - pybamm.models.full_battery_models.equivalent_circuit\n            - pybamm.models.full_battery_models.lead_acid\n            - pybamm.models.full_battery_models.lithium_ion\n            # See https://github.com/pybamm-team/PyBaMM/issues/1905\n            # - pybamm.models.full_battery_models.lithium_metal\n            - pybamm.models.submodels\n            - pybamm.models.submodels.active_material\n            - pybamm.models.submodels.convection\n            - pybamm.models.submodels.convection.through_cell\n            - pybamm.models.submodels.convection.transverse\n            - pybamm.models.submodels.current_collector\n            - pybamm.models.submodels.electrode\n            - pybamm.models.submodels.electrode.ohm\n            - pybamm.models.submodels.electrolyte_conductivity\n            - pybamm.models.submodels.electrolyte_conductivity.surface_potential_form\n            - pybamm.models.submodels.electrolyte_diffusion\n            - pybamm.models.submodels.equivalent_circuit_elements\n            - pybamm.models.submodels.external_circuit\n            - pybamm.models.submodels.interface\n            - pybamm.models.submodels.interface.interface_utilisation\n            - pybamm.models.submodels.interface.kinetics\n            - pybamm.models.submodels.interface.kinetics.inverse_kinetics\n            - pybamm.models.submodels.interface.lithium_plating\n            - pybamm.models.submodels.interface.open_circuit_potential\n            - pybamm.models.submodels.interface.sei\n            - pybamm.models.submodels.oxygen_diffusion\n            - pybamm.models.submodels.particle\n            - pybamm.models.submodels.particle_mechanics\n            - pybamm.models.submodels.porosity\n            - pybamm.models.submodels.thermal\n            - pybamm.models.submodels.thermal.pouch_cell\n            - pybamm.models.submodels.transport_efficiency\n            - pybamm.parameters\n            - pybamm.plotting\n            - pybamm.solvers\n            - pybamm.solvers.c_solvers\n            - pybamm.spatial_methods\n      - requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n        script:\n          - pip check\n\nabout:\n  homepage: https://pybamm.org\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Python Battery Mathematical Modelling\n\nextra:\n  recipe-maintainers:\n    - valentinsulzer\n    - Saransh-cpp\n    - agriyakhetarpal\n    - priyanshuone6\n    - tlestang\n",
  "req": {
    "__set__": true,
    "elements": [
      "anytree",
      "bpx",
      "casadi",
      "imageio",
      "jax",
      "jaxlib",
      "matplotlib-base",
      "numpy",
      "pandas",
      "pip",
      "platformdirs",
      "pooch",
      "posthog",
      "pybamm-base",
      "pybtex",
      "python",
      "pyyaml",
      "scikit-fem",
      "scipy",
      "setuptools",
      "sympy",
      "tqdm",
      "typing-extensions",
      "xarray"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "anytree",
        "bpx",
        "casadi",
        "imageio",
        "jax",
        "jaxlib",
        "matplotlib-base",
        "numpy",
        "pandas",
        "platformdirs",
        "pooch",
        "posthog",
        "pybamm-base",
        "pybtex",
        "python",
        "pyyaml",
        "scikit-fem",
        "scipy",
        "sympy",
        "tqdm",
        "typing-extensions",
        "xarray"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9.*",
        "setuptools >=64"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "anytree >=2.8.0",
        "bpx",
        "casadi >=3.6.7",
        "imageio >=2.3.0",
        "jax ==0.4.27",
        "jaxlib ==0.4.27",
        "matplotlib-base >=3.6.0",
        "numpy >=1.23.5,<2.0.0",
        "pandas >=1.5.0",
        "platformdirs",
        "pooch >=1.8.1",
        "posthog >=3.6.5",
        "pybamm-base",
        "pybtex >=0.24.0",
        "python >=3.9,<3.13",
        "pyyaml",
        "scikit-fem >=8.1.0",
        "scipy >=1.11.4",
        "sympy >=1.12",
        "tqdm",
        "typing-extensions >=4.10.0",
        "xarray >=2022.6.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9.*"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pybamm/pybamm-24.11.2.tar.gz",
  "version": "24.11.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pybamm.json"
  }
}