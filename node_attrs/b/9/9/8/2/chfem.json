{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "chfem",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "`chfem`, which stands for _Computational Homogenization with the image-based Finite Element Method_, is a software written in C and CUDA, wrapped in Python, for the computational homogenization of material samples characterized via $\\mu$-CT. As it is, the effective properties that can be evaluated are:\n\n+ Thermal conductivity $\\rightarrow$ $\\kappa\\nabla^{2}u=0$\n+ Linear elasticity $\\rightarrow$ $\\nabla\\cdot\\mathbf{C}\\nabla\\mathbf{u}=0$\n+ Permeability $\\rightarrow$ $\\mu\\nabla^{2}\\mathbf{u}-\\nabla p+\\mathbf{b}=0$ ; $\\nabla\\cdot\\mathbf{u} -\\tau p=0$\n\nThe program follows a lightweight matrix-free approach to image-based finite element analysis, exploring GPU resources with CUDA to achieve significant performance gains. Our end goal is to be able to run large problems ($10^9$ DOFs) with relatively acessible graphics cards. Following is a visualization of the output from a permeability simulation.\n\n<p align=\"center\">\n  <img src=\"https://github.com/cortezpedro/chfem/raw/dev/docs/source/chfem_example.png\" width=\"100%\"></img>\n</p>\n\nIf you use `chfem` in your research, please use the following BibTeX entries to cite\n[our paper](https://doi.org/10.1016/j.commatsci.2023.112021):\n\n```Bibtex\n@article{toolkit2023,\n    title = {Simulation toolkit for digital material characterization of large image-based microstructures},\n    author = {Pedro C.F. Lopes and Rafael S. Vianna and Victor W. Sapucaia and Federico Semeraro and Ricardo Leiderman and André M.B. Pereira},\n    journal = {Computational Materials Science},\n    volume = {219},\n    pages = {112021},\n    year = {2023},\n    publisher={Elsevier}\n}\n```\nDeveloped at the _Laboratório de Computação Científica, Universidade Federal Fluminense_ (`LCC-UFF`). Niterói, Brazil.\n\nThere are two repositories for this project, a [development one on Gitlab](https://gitlab.com/cortezpedro/chfem_gpu) and a\n[mirror of this repository on Github](https://github.com/cortezpedro/chfem), mostly used to host the stable release tags, the tutorial and documentation.\n",
      "dev_url": "https://github.com/cortezpedro/chfem",
      "doc_url": "https://chfem.readthedocs.io/",
      "home": "https://github.com/cortezpedro/chfem",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Computational homogenization of material samples characterized via micro-CT."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "cortezpedro",
        "fsemerar"
      ]
    },
    "package": {
      "name": "chfem",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "libgomp"
      ],
      "host": [
        "cuda-version 11.2",
        "pip",
        "setuptools",
        "python",
        "numpy",
        "cuda-version 11.8",
        "cuda-version 12.0"
      ],
      "run": [
        "python",
        "numpy",
        "ocl-icd-system"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5ff18999332449cfe745a51e460efd7ea313d5cb99876d5fcadbda5d771fa11d",
      "url": "https://github.com/cortezpedro/chfem/archive/refs/tags/v2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m pytest"
      ],
      "imports": [
        "chfem"
      ],
      "requires": [
        "cuda-version 11.2",
        "pip",
        "pytest",
        "numpy",
        "cuda-version 11.8",
        "cuda-version 12.0"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "ocl-icd-system",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "numpy",
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "`chfem`, which stands for _Computational Homogenization with the image-based Finite Element Method_, is a software written in C and CUDA, wrapped in Python, for the computational homogenization of material samples characterized via $\\mu$-CT. As it is, the effective properties that can be evaluated are:\n\n+ Thermal conductivity $\\rightarrow$ $\\kappa\\nabla^{2}u=0$\n+ Linear elasticity $\\rightarrow$ $\\nabla\\cdot\\mathbf{C}\\nabla\\mathbf{u}=0$\n+ Permeability $\\rightarrow$ $\\mu\\nabla^{2}\\mathbf{u}-\\nabla p+\\mathbf{b}=0$ ; $\\nabla\\cdot\\mathbf{u} -\\tau p=0$\n\nThe program follows a lightweight matrix-free approach to image-based finite element analysis, exploring GPU resources with CUDA to achieve significant performance gains. Our end goal is to be able to run large problems ($10^9$ DOFs) with relatively acessible graphics cards. Following is a visualization of the output from a permeability simulation.\n\n<p align=\"center\">\n  <img src=\"https://github.com/cortezpedro/chfem/raw/dev/docs/source/chfem_example.png\" width=\"100%\"></img>\n</p>\n\nIf you use `chfem` in your research, please use the following BibTeX entries to cite\n[our paper](https://doi.org/10.1016/j.commatsci.2023.112021):\n\n```Bibtex\n@article{toolkit2023,\n    title = {Simulation toolkit for digital material characterization of large image-based microstructures},\n    author = {Pedro C.F. Lopes and Rafael S. Vianna and Victor W. Sapucaia and Federico Semeraro and Ricardo Leiderman and André M.B. Pereira},\n    journal = {Computational Materials Science},\n    volume = {219},\n    pages = {112021},\n    year = {2023},\n    publisher={Elsevier}\n}\n```\nDeveloped at the _Laboratório de Computação Científica, Universidade Federal Fluminense_ (`LCC-UFF`). Niterói, Brazil.\n\nThere are two repositories for this project, a [development one on Gitlab](https://gitlab.com/cortezpedro/chfem_gpu) and a\n[mirror of this repository on Github](https://github.com/cortezpedro/chfem), mostly used to host the stable release tags, the tutorial and documentation.\n",
      "dev_url": "https://github.com/cortezpedro/chfem",
      "doc_url": "https://chfem.readthedocs.io/",
      "home": "https://github.com/cortezpedro/chfem",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Computational homogenization of material samples characterized via micro-CT."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/nvcuda.dll"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "cortezpedro",
        "fsemerar"
      ]
    },
    "package": {
      "name": "chfem",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "libgomp"
      ],
      "host": [
        "cuda-version 11.2",
        "pip",
        "setuptools",
        "python",
        "numpy",
        "cuda-version 11.8",
        "cuda-version 12.0"
      ],
      "run": [
        "python",
        "numpy",
        "ocl-icd-system"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5ff18999332449cfe745a51e460efd7ea313d5cb99876d5fcadbda5d771fa11d",
      "url": "https://github.com/cortezpedro/chfem/archive/refs/tags/v2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m pytest"
      ],
      "imports": [
        "chfem"
      ],
      "requires": [
        "cuda-version 11.2",
        "pip",
        "pytest",
        "numpy",
        "cuda-version 11.8",
        "cuda-version 12.0"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "name": "chfem",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "chfem"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/chfem.json"
  },
  "raw_meta_yaml": "{% set name = \"chfem\" %}\n{% set version = \"2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/cortezpedro/chfem/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 5ff18999332449cfe745a51e460efd7ea313d5cb99876d5fcadbda5d771fa11d\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [osx]\n  skip: true  # [cuda_compiler_version in (undefined, \"None\")]\n  skip: true  # [linux and py<39]\n  missing_dso_whitelist:\n    - \"*/nvcuda.dll\"   # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - libgomp  # [linux]\n  host:\n    - cuda-version {{ cuda_compiler_version }}\n    - pip\n    - setuptools\n    - python\n    - numpy\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - ocl-icd-system  # [linux]\n\ntest:\n  imports:\n    - chfem\n  requires:\n    - cuda-version {{ cuda_compiler_version }}\n    - pip\n    - pytest\n    - numpy\n  commands:\n    - pip check\n    - python -m pytest\n  source_files:\n    - test/*\n\nabout:\n  home: https://github.com/cortezpedro/chfem\n  summary: 'Computational homogenization of material samples characterized via micro-CT.'\n  description: |\n    `chfem`, which stands for _Computational Homogenization with the image-based Finite Element Method_, is a software written in C and CUDA, wrapped in Python, for the computational homogenization of material samples characterized via $\\mu$-CT. As it is, the effective properties that can be evaluated are:\n\n    + Thermal conductivity $\\rightarrow$ $\\kappa\\nabla^{2}u=0$\n    + Linear elasticity $\\rightarrow$ $\\nabla\\cdot\\mathbf{C}\\nabla\\mathbf{u}=0$\n    + Permeability $\\rightarrow$ $\\mu\\nabla^{2}\\mathbf{u}-\\nabla p+\\mathbf{b}=0$ ; $\\nabla\\cdot\\mathbf{u} -\\tau p=0$\n\n    The program follows a lightweight matrix-free approach to image-based finite element analysis, exploring GPU resources with CUDA to achieve significant performance gains. Our end goal is to be able to run large problems ($10^9$ DOFs) with relatively acessible graphics cards. Following is a visualization of the output from a permeability simulation.\n\n    <p align=\"center\">\n      <img src=\"https://github.com/cortezpedro/chfem/raw/dev/docs/source/chfem_example.png\" width=\"100%\"></img>\n    </p>\n\n    If you use `chfem` in your research, please use the following BibTeX entries to cite \n    [our paper](https://doi.org/10.1016/j.commatsci.2023.112021):\n\n    ```Bibtex\n    @article{toolkit2023,\n        title = {Simulation toolkit for digital material characterization of large image-based microstructures},\n        author = {Pedro C.F. Lopes and Rafael S. Vianna and Victor W. Sapucaia and Federico Semeraro and Ricardo Leiderman and André M.B. Pereira},\n        journal = {Computational Materials Science},\n        volume = {219},\n        pages = {112021},\n        year = {2023},\n        publisher={Elsevier}\n    }\n    ```\n    Developed at the _Laboratório de Computação Científica, Universidade Federal Fluminense_ (`LCC-UFF`). Niterói, Brazil.\n\n    There are two repositories for this project, a [development one on Gitlab](https://gitlab.com/cortezpedro/chfem_gpu) and a \n    [mirror of this repository on Github](https://github.com/cortezpedro/chfem), mostly used to host the stable release tags, the tutorial and documentation.\n\n  license: MIT\n  license_file: LICENSE\n  doc_url: https://chfem.readthedocs.io/\n  dev_url: https://github.com/cortezpedro/chfem\n\nextra:\n  recipe-maintainers:\n    - cortezpedro\n    - fsemerar\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "libgomp",
      "numpy",
      "ocl-icd-system",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "ctng-compilers",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "ctng-compilers",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "numpy",
        "ocl-icd-system",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "numpy",
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgomp"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 11.2",
        "cuda-version 11.8",
        "cuda-version 12.0",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "ocl-icd-system",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version 11.2",
        "cuda-version 11.8",
        "cuda-version 12.0",
        "numpy",
        "pip",
        "pytest"
      ]
    }
  },
  "url": "https://github.com/cortezpedro/chfem/archive/refs/tags/v2.0.tar.gz",
  "version": "2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/chfem.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "`chfem`, which stands for _Computational Homogenization with the image-based Finite Element Method_, is a software written in C and CUDA, wrapped in Python, for the computational homogenization of material samples characterized via $\\mu$-CT. As it is, the effective properties that can be evaluated are:\n\n+ Thermal conductivity $\\rightarrow$ $\\kappa\\nabla^{2}u=0$\n+ Linear elasticity $\\rightarrow$ $\\nabla\\cdot\\mathbf{C}\\nabla\\mathbf{u}=0$\n+ Permeability $\\rightarrow$ $\\mu\\nabla^{2}\\mathbf{u}-\\nabla p+\\mathbf{b}=0$ ; $\\nabla\\cdot\\mathbf{u} -\\tau p=0$\n\nThe program follows a lightweight matrix-free approach to image-based finite element analysis, exploring GPU resources with CUDA to achieve significant performance gains. Our end goal is to be able to run large problems ($10^9$ DOFs) with relatively acessible graphics cards. Following is a visualization of the output from a permeability simulation.\n\n<p align=\"center\">\n  <img src=\"https://github.com/cortezpedro/chfem/raw/dev/docs/source/chfem_example.png\" width=\"100%\"></img>\n</p>\n\nIf you use `chfem` in your research, please use the following BibTeX entries to cite\n[our paper](https://doi.org/10.1016/j.commatsci.2023.112021):\n\n```Bibtex\n@article{toolkit2023,\n    title = {Simulation toolkit for digital material characterization of large image-based microstructures},\n    author = {Pedro C.F. Lopes and Rafael S. Vianna and Victor W. Sapucaia and Federico Semeraro and Ricardo Leiderman and André M.B. Pereira},\n    journal = {Computational Materials Science},\n    volume = {219},\n    pages = {112021},\n    year = {2023},\n    publisher={Elsevier}\n}\n```\nDeveloped at the _Laboratório de Computação Científica, Universidade Federal Fluminense_ (`LCC-UFF`). Niterói, Brazil.\n\nThere are two repositories for this project, a [development one on Gitlab](https://gitlab.com/cortezpedro/chfem_gpu) and a\n[mirror of this repository on Github](https://github.com/cortezpedro/chfem), mostly used to host the stable release tags, the tutorial and documentation.\n",
      "dev_url": "https://github.com/cortezpedro/chfem",
      "doc_url": "https://chfem.readthedocs.io/",
      "home": "https://github.com/cortezpedro/chfem",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Computational homogenization of material samples characterized via micro-CT."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/nvcuda.dll"
      ],
      "number": "2",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "cortezpedro",
        "fsemerar"
      ]
    },
    "package": {
      "name": "chfem",
      "version": "2.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub"
      ],
      "host": [
        "cuda-version 12.0",
        "pip",
        "setuptools",
        "python",
        "numpy",
        "cuda-version 11.2",
        "cuda-version 11.8"
      ],
      "run": [
        "python",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "5ff18999332449cfe745a51e460efd7ea313d5cb99876d5fcadbda5d771fa11d",
      "url": "https://github.com/cortezpedro/chfem/archive/refs/tags/v2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m pytest"
      ],
      "imports": [
        "chfem"
      ],
      "requires": [
        "cuda-version 12.0",
        "pip",
        "pytest",
        "numpy",
        "cuda-version 11.2",
        "cuda-version 11.8"
      ],
      "source_files": [
        "test/*"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "numpy",
        "pip",
        "pytest"
      ]
    }
  }
}