{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "conda-pypi",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\"",
        "@ECHO ON"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "name": "conda-pypi",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "set -x",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "conda-pypi"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/conda-pypi.json"
  },
  "raw_meta_yaml": "{% set name = \"conda-pypi\" %}\n{% set version = \"0.3.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/conda_pypi-{{ version }}.tar.gz\n  sha256: 79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630\n\nbuild:\n  skip: true  # [py<39]\n  # can't be noarch because we can't place EXTERNALLY-MANAGED in stdlib (first level is site-packages)\n  number: 0\n  script:\n    - set -x  # [unix]\n    - \"@ECHO ON\"  # [win]\n    - {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv\n    - {{ PYTHON }} -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\"\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - python\n    - pip\n    - hatchling >=1.12.2\n    - hatch-vcs >=0.2.0\n  run:\n    - python\n    - conda >=23.9.0\n    - pip >=23.0.1\n    - grayskull\n    - packaging\n    - unearth\n    - pydantic\n    - python-build\n    - python-installer\n    - requests\n    - ruamel.yaml\n    - typer\n    - platformdirs\n    - conda-index\n    - conda-libmamba-solver\n\ntest:\n  imports:\n    - conda_pypi\n    - conda_pypi.main\n  commands:\n    - python -m conda pypi --help  # Using 'conda pypi'  directly on Windows fails due to the actual 'base' conda being found earlier than test-env's conda\n    - python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"\n    - python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"\n    - python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"\n    - python -m pip install requests && exit 1 || exit 0\n\nabout:\n  home: https://github.com/conda-incubator/conda-pypi\n  license: MIT\n  license_file: LICENSE\n  summary: Better PyPI interoperability for the conda ecosystem\n  dev_url: https://github.com/conda-incubator/conda-pypi\n  doc_url: https://conda-incubator.github.io/conda-pypi\n\nextra:\n  recipe-maintainers:\n    - jaimergp\n    - jezdez\n",
  "req": {
    "__set__": true,
    "elements": [
      "conda",
      "conda-index",
      "conda-libmamba-solver",
      "grayskull",
      "hatch-vcs",
      "hatchling",
      "packaging",
      "pip",
      "platformdirs",
      "pydantic",
      "python",
      "python-build",
      "python-installer",
      "requests",
      "ruamel.yaml",
      "typer",
      "unearth"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs >=0.2.0",
        "hatchling >=1.12.2",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda >=23.9.0",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip >=23.0.1",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz",
  "version": "0.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/conda-pypi.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/conda-incubator/conda-pypi",
      "doc_url": "https://conda-incubator.github.io/conda-pypi",
      "home": "https://github.com/conda-incubator/conda-pypi",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Better PyPI interoperability for the conda ecosystem"
    },
    "build": {
      "number": "0",
      "script": [
        "@ECHO ON",
        "PYTHON -m pip install . --no-deps --no-build-isolation -vv",
        "PYTHON -c \"from conda_pypi.python_paths import ensure_externally_managed; ensure_externally_managed()\""
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jaimergp",
        "jezdez"
      ]
    },
    "package": {
      "name": "conda-pypi",
      "version": "0.3.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "pip",
        "hatchling >=1.12.2",
        "hatch-vcs >=0.2.0"
      ],
      "run": [
        "python",
        "conda >=23.9.0",
        "pip >=23.0.1",
        "grayskull",
        "packaging",
        "unearth",
        "pydantic",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "platformdirs",
        "conda-index",
        "conda-libmamba-solver"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "79d2ba6686ce2c66cd242f8a9e4a2c11824296abad00be48702baf70389f7630",
      "url": "https://pypi.org/packages/source/c/conda-pypi/conda_pypi-0.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "python -m conda pypi --help",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert '[externally-managed]' in content\"",
        "python -c \"from conda_pypi.python_paths import get_env_stdlib; content = (get_env_stdlib() / 'EXTERNALLY-MANAGED').read_text(); assert 'conda pypi' in content\"",
        "python -m pip install requests && exit 1 || exit 0"
      ],
      "imports": [
        "conda_pypi",
        "conda_pypi.main"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "hatch-vcs",
        "hatchling",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "conda",
        "conda-index",
        "conda-libmamba-solver",
        "grayskull",
        "packaging",
        "pip",
        "platformdirs",
        "pydantic",
        "python",
        "python-build",
        "python-installer",
        "requests",
        "ruamel.yaml",
        "typer",
        "unearth"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}