{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_linux": {
        "timeoutInMinutes": 1
      },
      "settings_osx": {
        "timeoutInMinutes": 1
      }
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "conda-build+conda-libmamba-solver",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "github_actions": {
      "self_hosted": true,
      "timeout_minutes": 720,
      "triggers": [
        "push",
        "pull_request"
      ]
    },
    "provider": {
      "linux_64": "github_actions"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "tensorflow",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "TensorFlow offers multiple levels of abstraction so you can choose the\nright one for your needs. Build and train models by using the high-level\nKeras API, which makes getting started with TensorFlow and machine learning\neasy.\n",
      "dev_url": "https://github.com/tensorflow/tensorflow",
      "doc_source_url": "https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src",
      "doc_url": "https://www.tensorflow.org/get_started/get_started",
      "home": "http://tensorflow.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "TensorFlow is an end-to-end open source platform for machine learning."
    },
    "build": {
      "number": "51"
    },
    "extra": {
      "feedstock-name": "tensorflow",
      "recipe-maintainers": [
        "isuruf",
        "ngam",
        "farhantejani",
        "ghego",
        "h-vetinari",
        "hajapy",
        "jschueller",
        "njzjz",
        "waitingkuo",
        "xhochy",
        "hmaarrfk",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": [
            "__cuda"
          ]
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cuda126py39h1234567_201",
          "track_features": null
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "cudnn",
            "nccl",
            "cuda-version 12.6",
            "cuda-cupti-dev",
            "cuda-cudart-dev",
            "cuda-nvml-dev",
            "cuda-nvtx-dev",
            "libcublas-dev",
            "libcusolver-dev",
            "libcurand-dev",
            "libcufft-dev",
            "libcusparse-dev",
            "libnvjitlink-dev",
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "__cuda",
            "cuda-nvcc-tools",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201",
          "track_features": null
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator",
            "__cuda"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cpu_py39h1234567_201"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": [
            "__cuda"
          ]
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cuda126py39h1234567_251",
          "track_features": null
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "cudnn",
            "nccl",
            "cuda-version 12.6",
            "cuda-cupti-dev",
            "cuda-cudart-dev",
            "cuda-nvml-dev",
            "cuda-nvtx-dev",
            "libcublas-dev",
            "libcusolver-dev",
            "libcurand-dev",
            "libcufft-dev",
            "libcusparse-dev",
            "libnvjitlink-dev",
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "__cuda",
            "cuda-nvcc-tools",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251",
          "track_features": null
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator",
            "__cuda"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cpu_py39h1234567_251"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_51",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_51"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      }
    ],
    "package": {
      "name": "tensorflow-split",
      "version": "2.18.0"
    },
    "requirements": {
      "build": [
        "perl",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "x86_64-microarch-level  1",
        "bazel 6.*",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "sed",
        "rsync",
        "coreutils",
        "x86_64-microarch-level  3"
      ],
      "host": [
        "cudnn",
        "nccl",
        "cuda-version 12.6",
        "cuda-cupti-dev",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-nvtx-dev",
        "libcublas-dev",
        "libcusolver-dev",
        "libcurand-dev",
        "libcufft-dev",
        "libcusparse-dev",
        "libnvjitlink-dev",
        "python 3.12.*",
        "pip",
        "setuptools",
        "packaging",
        "zlib",
        "libpng",
        "libcurl",
        "unzip",
        "zip",
        "openjdk >=8",
        "nsync",
        "libabseil",
        "astor",
        "cython",
        "dill",
        "giflib",
        "libgrpc",
        "flatbuffers",
        "icu",
        "libjpeg-turbo",
        "libprotobuf",
        "libprotobuf-python-headers",
        "openssl",
        "pybind11",
        "sqlite",
        "snappy",
        "ml_dtypes >=0.4.0,<0.5"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "perl",
        "rsync",
        "sed",
        "x86_64-microarch-level"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astor",
        "astunparse",
        "cuda-cudart-dev",
        "cuda-cupti-dev",
        "cuda-nvml-dev",
        "cuda-nvtx-dev",
        "cuda-version",
        "cudnn",
        "cython",
        "dill",
        "flatbuffers",
        "gast",
        "giflib",
        "google-pasta",
        "h5py",
        "icu",
        "keras",
        "libabseil",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcurl",
        "libcusolver-dev",
        "libcusparse-dev",
        "libgrpc",
        "libjpeg-turbo",
        "libnvjitlink-dev",
        "libpng",
        "libprotobuf",
        "libprotobuf-python-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "nccl",
        "nsync",
        "numpy",
        "openjdk",
        "openssl",
        "opt_einsum",
        "packaging",
        "pip",
        "protobuf",
        "pybind11",
        "python",
        "python-flatbuffers",
        "requests",
        "setuptools",
        "six",
        "snappy",
        "sqlite",
        "tensorboard",
        "tensorflow-base",
        "termcolor",
        "typing_extensions",
        "unzip",
        "wheel",
        "wrapt",
        "zip",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "absl-py",
        "astunparse",
        "cuda-nvcc-tools",
        "gast",
        "google-pasta",
        "grpcio",
        "h5py",
        "keras",
        "libml_dtypes-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "opt_einsum",
        "packaging",
        "protobuf",
        "python",
        "python-flatbuffers",
        "requests",
        "six",
        "tensorboard",
        "tensorflow",
        "tensorflow-base",
        "tensorflow-estimator",
        "termcolor",
        "typing_extensions",
        "wrapt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "TensorFlow offers multiple levels of abstraction so you can choose the\nright one for your needs. Build and train models by using the high-level\nKeras API, which makes getting started with TensorFlow and machine learning\neasy.\n",
      "dev_url": "https://github.com/tensorflow/tensorflow",
      "doc_source_url": "https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src",
      "doc_url": "https://www.tensorflow.org/get_started/get_started",
      "home": "http://tensorflow.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "TensorFlow is an end-to-end open source platform for machine learning."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "tensorflow",
      "recipe-maintainers": [
        "isuruf",
        "ngam",
        "farhantejani",
        "ghego",
        "h-vetinari",
        "hajapy",
        "jschueller",
        "njzjz",
        "waitingkuo",
        "xhochy",
        "hmaarrfk",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": [
            "__cuda"
          ]
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cuda126py39h1234567_201",
          "track_features": null
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "cudnn",
            "nccl",
            "cuda-version 12.6",
            "cuda-cupti-dev",
            "cuda-cudart-dev",
            "cuda-nvml-dev",
            "cuda-nvtx-dev",
            "libcublas-dev",
            "libcusolver-dev",
            "libcurand-dev",
            "libcufft-dev",
            "libcusparse-dev",
            "libnvjitlink-dev",
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "__cuda",
            "cuda-nvcc-tools",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201",
          "track_features": null
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator",
            "__cuda"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cuda126h1234567_201"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  1",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cpu_py39h1234567_201"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_201"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": [
            "__cuda"
          ]
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": null
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cuda126py39h1234567_251",
          "track_features": null
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "cudnn",
            "nccl",
            "cuda-version 12.6",
            "cuda-cupti-dev",
            "cuda-cudart-dev",
            "cuda-nvml-dev",
            "cuda-nvtx-dev",
            "libcublas-dev",
            "libcusolver-dev",
            "libcurand-dev",
            "libcufft-dev",
            "libcusparse-dev",
            "libnvjitlink-dev",
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "__cuda",
            "cuda-nvcc-tools",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251",
          "track_features": null
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator",
            "__cuda"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base",
            "cuda-version 12.6"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cuda126h1234567_251"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "x86_64-microarch-level  3",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "__cuda",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": null,
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cpu_py39h1234567_251"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "string": "cuda126py39h1234567_251"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  1",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_51",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_51"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "x86_64-microarch-level  3",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_51"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_51"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      }
    ],
    "package": {
      "name": "tensorflow-split",
      "version": "2.18.0"
    },
    "requirements": {
      "build": [
        "perl",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "x86_64-microarch-level  1",
        "bazel 6.*",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "sed",
        "rsync",
        "coreutils",
        "x86_64-microarch-level  3"
      ],
      "host": [
        "cudnn",
        "nccl",
        "cuda-version 12.6",
        "cuda-cupti-dev",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-nvtx-dev",
        "libcublas-dev",
        "libcusolver-dev",
        "libcurand-dev",
        "libcufft-dev",
        "libcusparse-dev",
        "libnvjitlink-dev",
        "python 3.12.*",
        "pip",
        "setuptools",
        "packaging",
        "zlib",
        "libpng",
        "libcurl",
        "unzip",
        "zip",
        "openjdk >=8",
        "nsync",
        "libabseil",
        "astor",
        "cython",
        "dill",
        "giflib",
        "libgrpc",
        "flatbuffers",
        "icu",
        "libjpeg-turbo",
        "libprotobuf",
        "libprotobuf-python-headers",
        "openssl",
        "pybind11",
        "sqlite",
        "snappy",
        "ml_dtypes >=0.4.0,<0.5"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      },
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      }
    ]
  },
  "name": "tensorflow-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "TensorFlow offers multiple levels of abstraction so you can choose the\nright one for your needs. Build and train models by using the high-level\nKeras API, which makes getting started with TensorFlow and machine learning\neasy.\n",
      "dev_url": "https://github.com/tensorflow/tensorflow",
      "doc_source_url": "https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src",
      "doc_url": "https://www.tensorflow.org/get_started/get_started",
      "home": "http://tensorflow.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "TensorFlow is an end-to-end open source platform for machine learning."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "tensorflow",
      "recipe-maintainers": [
        "isuruf",
        "ngam",
        "farhantejani",
        "ghego",
        "h-vetinari",
        "hajapy",
        "jschueller",
        "njzjz",
        "waitingkuo",
        "xhochy",
        "hmaarrfk",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": null,
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      }
    ],
    "package": {
      "name": "tensorflow-split",
      "version": "2.18.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "bazel 6.*",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "sed",
        "rsync"
      ],
      "host": [
        "python 3.12.*",
        "pip",
        "setuptools",
        "packaging",
        "zlib",
        "libpng",
        "libcurl",
        "unzip",
        "zip",
        "openjdk >=8",
        "nsync",
        "libabseil",
        "astor",
        "cython",
        "dill",
        "giflib",
        "libgrpc",
        "flatbuffers",
        "icu",
        "libjpeg-turbo",
        "libprotobuf",
        "libprotobuf-python-headers",
        "openssl",
        "pybind11",
        "sqlite",
        "snappy",
        "ml_dtypes >=0.4.0,<0.5"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "rsync",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astor",
        "astunparse",
        "cython",
        "dill",
        "flatbuffers",
        "gast",
        "giflib",
        "google-pasta",
        "h5py",
        "icu",
        "keras",
        "libabseil",
        "libcurl",
        "libgrpc",
        "libjpeg-turbo",
        "libpng",
        "libprotobuf",
        "libprotobuf-python-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "nsync",
        "numpy",
        "openjdk",
        "openssl",
        "opt_einsum",
        "packaging",
        "pip",
        "protobuf",
        "pybind11",
        "python",
        "python-flatbuffers",
        "requests",
        "setuptools",
        "six",
        "snappy",
        "sqlite",
        "tensorboard",
        "tensorflow-base",
        "termcolor",
        "typing_extensions",
        "unzip",
        "wheel",
        "wrapt",
        "zip",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astunparse",
        "gast",
        "google-pasta",
        "grpcio",
        "h5py",
        "keras",
        "libml_dtypes-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "opt_einsum",
        "packaging",
        "protobuf",
        "python",
        "python-flatbuffers",
        "requests",
        "six",
        "tensorboard",
        "tensorflow",
        "tensorflow-base",
        "tensorflow-estimator",
        "termcolor",
        "typing_extensions",
        "wrapt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "TensorFlow offers multiple levels of abstraction so you can choose the\nright one for your needs. Build and train models by using the high-level\nKeras API, which makes getting started with TensorFlow and machine learning\neasy.\n",
      "dev_url": "https://github.com/tensorflow/tensorflow",
      "doc_source_url": "https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src",
      "doc_url": "https://www.tensorflow.org/get_started/get_started",
      "home": "http://tensorflow.org/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "TensorFlow is an end-to-end open source platform for machine learning."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "tensorflow",
      "recipe-maintainers": [
        "isuruf",
        "ngam",
        "farhantejani",
        "ghego",
        "h-vetinari",
        "hajapy",
        "jschueller",
        "njzjz",
        "waitingkuo",
        "xhochy",
        "hmaarrfk",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libtensorflow_framework 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_framework",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib"
          ],
          "run": []
        },
        "script": "cp_libtensorflow_framework.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}",
            "test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "entry_points": [
            "toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main",
            "tflite_convert = tensorflow.lite.python.tflite_convert:main",
            "toco = tensorflow.lite.python.tflite_convert:main",
            "saved_model_cli = tensorflow.python.tools.saved_model_cli:main",
            "tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main",
            "estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main"
          ],
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow-base",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python",
            "pip",
            "setuptools",
            "packaging",
            "wheel",
            "libabseil",
            "astor",
            "cython",
            "dill",
            "giflib",
            "libgrpc",
            "flatbuffers",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "libprotobuf-python-headers",
            "openssl",
            "pybind11",
            "snappy",
            "sqlite",
            "zlib",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "numpy",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ],
          "run": [
            "python",
            "packaging",
            "absl-py >=1.0.0",
            "astunparse >=1.6.0",
            "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
            "google-pasta >=0.1.1",
            "grpcio 1.67.*",
            "h5py >=3.11",
            "ml_dtypes >=0.4.0,<0.5",
            "opt_einsum >=2.3.2",
            "protobuf >=5.26,<6",
            "python-flatbuffers >=24.3.25",
            "requests >=2.21.0,<3",
            "six >=1.12",
            "termcolor >=1.1.0",
            "typing_extensions >=3.6.6",
            "wrapt >=1.11.0",
            "tensorboard >=2.18,<2.19",
            "keras >=3.0",
            "libtensorflow_framework",
            "libtensorflow_cc"
          ]
        },
        "script": "build_pkg.sh",
        "test": {
          "commands": [
            "exit 0"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1",
          "track_features": [
            "tensorflow-cpu"
          ]
        },
        "name": "tensorflow",
        "requirements": {
          "host": [
            "python"
          ],
          "run": [
            "python",
            "tensorflow-base",
            "tensorflow-estimator"
          ]
        },
        "test": {
          "commands": [
            "pip check",
            "cat test_tensorflow.py",
            "python test_tensorflow.py",
            "tf_upgrade_v2 --help",
            "test -x $PREFIX/bin/saved_model_cli",
            "tflite_convert --help",
            "toco_from_protos --help",
            "toco --help",
            "python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'",
            "python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\""
          ],
          "files": [
            "test_tensorflow.py"
          ],
          "imports": [
            "tensorflow"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-estimator",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "bazel 6.*"
          ],
          "host": [
            "python",
            "pip",
            "packaging",
            "setuptools",
            "wheel",
            "openssl",
            "tensorflow-base"
          ],
          "run": [
            "python",
            "tensorflow-base"
          ]
        },
        "script": "build_estimator.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "libabseil",
            "giflib",
            "libgrpc",
            "icu",
            "libjpeg-turbo",
            "libcurl",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}",
            "./test_libtensorflow.sh"
          ],
          "files": [
            "test_libtensorflow.sh",
            "test_c.c"
          ],
          "requires": [
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libtensorflow_cc 2.18.0"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "libtensorflow_cc",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "rsync"
          ],
          "host": [
            "flatbuffers",
            "giflib",
            "icu",
            "libabseil",
            "libcurl",
            "libgrpc",
            "libjpeg-turbo",
            "libpng",
            "libprotobuf",
            "openssl",
            "snappy",
            "sqlite",
            "zlib",
            "libtensorflow_framework"
          ],
          "run": [
            "libml_dtypes-headers >=0.5.0,<0.6",
            "libtensorflow_framework"
          ]
        },
        "script": "cp_libtensorflow_cc.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}",
            "./test_libtensorflow_cc.sh"
          ],
          "files": [
            "test_libtensorflow_cc.sh",
            "test_cc.cc"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "string": "cpu_py39h1234567_1"
        },
        "name": "tensorflow-cpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true,
          "string": "cudaNonepy39h1234567_1"
        },
        "name": "tensorflow-gpu",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-sse3",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx2",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "tensorflow-avx512",
        "requirements": {
          "run": [
            "tensorflow"
          ]
        },
        "test": {
          "imports": [
            "tensorflow"
          ]
        }
      }
    ],
    "package": {
      "name": "tensorflow-split",
      "version": "2.18.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "bazel 6.*",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "sed",
        "rsync"
      ],
      "host": [
        "python 3.12.*",
        "pip",
        "setuptools",
        "packaging",
        "zlib",
        "libpng",
        "libcurl",
        "unzip",
        "zip",
        "openjdk >=8",
        "nsync",
        "libabseil",
        "astor",
        "cython",
        "dill",
        "giflib",
        "libgrpc",
        "flatbuffers",
        "icu",
        "libjpeg-turbo",
        "libprotobuf",
        "libprotobuf-python-headers",
        "openssl",
        "pybind11",
        "sqlite",
        "snappy",
        "ml_dtypes >=0.4.0,<0.5"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "patches/0001-loosen-requirements.patch",
          "patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch",
          "patches/0003-Fix-missing-abseil-linkages.patch",
          "patches/0004-Fix-protobuf_python-for-systemlibs.patch",
          "patches/0005-Add-absl_log-systemlib.patch",
          "patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch",
          "patches/0007-Fix-further-abseil-linkage.patch",
          "patches/0008-Add-constraint-to-pybind11-systemlib.patch",
          "patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch",
          "patches/0010-Use-correct-hermetic-python.patch",
          "patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch",
          "patches/0012-Add-protobuf-toolchain.patch",
          "patches/0013-fix-genproto.patch",
          "patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch",
          "patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch",
          "patches/0018-add-absl_string_view-target.patch",
          "patches/0019-add-absl_nullability-target.patch",
          "patches/0020-add-absl_prefetch-target.patch",
          "patches/0021-add-absl_die_if_null-target.patch",
          "patches/0022-add-absl_crc32c-targets.patch",
          "patches/0023-add-kernel_timeout_internal-target.patch",
          "patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch",
          "patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch",
          "patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch",
          "patches/0027-Protobuf-5-compatability.patch",
          "patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch",
          "patches/0029-Avoid-linking-with-internal-nvrtc.patch",
          "patches/0030-remove-dependencies-to-libcuda.patch"
        ],
        "sha256": "d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d",
        "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz"
      },
      {
        "folder": "tensorflow-estimator",
        "sha256": "2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530",
        "url": "https://github.com/tensorflow/estimator/archive/refs/tags/v2.15.0.tar.gz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "rsync",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astor",
        "astunparse",
        "cython",
        "dill",
        "flatbuffers",
        "gast",
        "giflib",
        "google-pasta",
        "h5py",
        "icu",
        "keras",
        "libabseil",
        "libcurl",
        "libgrpc",
        "libjpeg-turbo",
        "libpng",
        "libprotobuf",
        "libprotobuf-python-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "nsync",
        "numpy",
        "openjdk",
        "openssl",
        "opt_einsum",
        "packaging",
        "pip",
        "protobuf",
        "pybind11",
        "python",
        "python-flatbuffers",
        "requests",
        "setuptools",
        "six",
        "snappy",
        "sqlite",
        "tensorboard",
        "tensorflow-base",
        "termcolor",
        "typing_extensions",
        "unzip",
        "wheel",
        "wrapt",
        "zip",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astunparse",
        "gast",
        "google-pasta",
        "grpcio",
        "h5py",
        "keras",
        "libml_dtypes-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes",
        "opt_einsum",
        "packaging",
        "protobuf",
        "python",
        "python-flatbuffers",
        "requests",
        "six",
        "tensorboard",
        "tensorflow",
        "tensorflow-base",
        "tensorflow-estimator",
        "termcolor",
        "typing_extensions",
        "wrapt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libtensorflow",
      "libtensorflow_cc",
      "libtensorflow_framework",
      "tensorflow",
      "tensorflow-avx2",
      "tensorflow-avx512",
      "tensorflow-base",
      "tensorflow-cpu",
      "tensorflow-estimator",
      "tensorflow-gpu",
      "tensorflow-sse3"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/tensorflow.json"
  },
  "raw_meta_yaml": "{% set version = \"2.18.0\" %}\n{% set estimator_version = \"2.15.0\" %}\n{% set build = 1 %}\n\n{% if cuda_compiler_version != \"None\" %}\n{% set build = build + 200 %}\n{% endif %}\n\n{% if microarch_level is undefined %}\n{% set microarch_level = \"1\" %}\n{% endif %}\n\n{% set build = build + 25*(microarch_level | int - 1) %}\n\n# Quite often libml_dtypes-headers and ml_dtypes diverge.\n# https://github.com/tensorflow/tensorflow/blob/v2.18.0/third_party/py/ml_dtypes/workspace.bzl\n{% set libml_dtypes_version = \"0.5.0\" %}\n{% set ml_dtypes_version = \"0.4.0\" %}\n\npackage:\n  name: tensorflow-split\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/tensorflow/tensorflow/archive/refs/tags/v{{ version.replace(\".rc\", \"-rc\") }}.tar.gz\n    sha256: d7876f4bb0235cac60eb6316392a7c48676729860da1ab659fb440379ad5186d\n    patches:\n      - patches/0001-loosen-requirements.patch\n      - patches/0002-Add-additional-absl_synchronization-linkage-to-gRPC.patch\n      - patches/0003-Fix-missing-abseil-linkages.patch\n      - patches/0004-Fix-protobuf_python-for-systemlibs.patch\n      - patches/0005-Add-absl_log-systemlib.patch\n      - patches/0006-Omit-linking-to-layout_proto_cc-if-protobuf-linkage-.patch\n      - patches/0007-Fix-further-abseil-linkage.patch\n      - patches/0008-Add-constraint-to-pybind11-systemlib.patch\n      - patches/0009-Different-file-ending-for-flatbuffers-LICENSE.patch\n      - patches/0010-Use-correct-hermetic-python.patch\n      - patches/0011-Add-well_known_types_py_pb2-to-protobuf-systemlib.patch\n      - patches/0012-Add-protobuf-toolchain.patch\n      - patches/0013-fix-genproto.patch\n      - patches/0014-Remove-some-usage-of-absl-str_format-in-CUDA.patch  # [(cuda_compiler_version or \"\").startswith(\"11\")]\n      - patches/0015-Adjust-relative-path-for-libdevice.patch            # [(cuda_compiler_version or \"\").startswith(\"11\")]\n      - patches/0016-Link-to-absl_log_flags-instead-of-absl_flags.patch\n      - patches/0017-Update-ABSL-Log-Definition-for-libabsl_vlog_config_i.patch\n      - patches/0018-add-absl_string_view-target.patch\n      - patches/0019-add-absl_nullability-target.patch\n      - patches/0020-add-absl_prefetch-target.patch\n      - patches/0021-add-absl_die_if_null-target.patch\n      - patches/0022-add-absl_crc32c-targets.patch\n      - patches/0023-add-kernel_timeout_internal-target.patch\n      - patches/0024-work-around-for-warning-that-clang-falsely-treats-as.patch\n      - patches/0025-Hardcode-BUILD_PREFIX-in-build_pip_package.patch\n      - patches/0026-Only-link-to-sparse_core_layout_proto_cc-headers.patch\n      - patches/0027-Protobuf-5-compatability.patch\n      - patches/0028-Fix-ResolvePadding-to-be-consistent-in-the-size-of-t.patch\n      # https://github.com/tensorflow/tensorflow/pull/86413\n      - patches/0029-Avoid-linking-with-internal-nvrtc.patch\n      - patches/0030-remove-dependencies-to-libcuda.patch\n  - url: https://github.com/tensorflow/estimator/archive/refs/tags/v{{ estimator_version.replace(\".rc\", \"-rc\") }}.tar.gz\n    sha256: 2d7e100b1878084da34b5e23b49a0cbb5ee8a7add74b7dd189a82ada1cf85530\n    folder: tensorflow-estimator\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  # The following skip can be removed when the absl::StrFormat build issues are fixed.\n  skip: true  # [cuda_compiler_version == \"11.8\"]\n\nrequirements:\n  build:\n    - perl                                   # [linux]\n    - python 3.12.*                          # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - nsync                                  # [build_platform != target_platform]\n    - snappy                                 # [build_platform != target_platform]\n    - giflib                                 # [build_platform != target_platform]\n    - libjpeg-turbo                          # [build_platform != target_platform]\n    - icu                                    # [build_platform != target_platform]\n    - libpng                                 # [build_platform != target_platform]\n    - flatbuffers                            # [build_platform != target_platform]\n    - onednn                                 # [build_platform != target_platform]\n    - onednn-cpu-threadpool                  # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n    - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n    - bazel 6.*\n    - libgrpc\n    - libprotobuf\n    - nasm\n    - patchelf\n    - sed\n    - rsync\n    # realpath is not available from the docker image for cuda <= 10.2\n    # so we install coreutils here\n    - coreutils  # [cuda_compiler_version != \"None\"]\n  host:\n    # GPU requirements for CUDA\n    - cudnn      # [cuda_compiler_version != \"None\"]\n    - nccl       # [cuda_compiler_version != \"None\"]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    - cuda-cupti-dev    # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-cudart-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvml-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvtx-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcublas-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcusolver-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcurand-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcufft-dev      # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libcusparse-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libnvjitlink-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    # If 3.12 is changed, edit recipe/build_pkg.sh too\n    - python 3.12.*\n    # conda build requirements\n    - pip\n    - setuptools\n    - packaging\n    - zlib\n    - libpng\n    - libcurl\n    - curl         # [win]\n    - unzip        # [not win]\n    - zip          # [not win]\n    - m2-unzip     # [win]\n    - m2-zip       # [win]\n    - openjdk >=8\n    - nsync\n    # TF_SYSTEM_LIBS, see usage in\n    # https://github.com/tensorflow/tensorflow/blob/v{{ version }}/third_party/systemlibs/syslibs_configure.bzl\n    # their versions are specified in\n    # https://github.com/tensorflow/tensorflow/blob/v{{ version }}/tensorflow/workspace2.bzl\n    # but so far there have been no problems with leaving these\n    # unpinned; though some restrictions come in for packages\n    # that are also listed as a requirement for the pip_package.\n    - libabseil\n    - astor\n    - cython\n    - dill\n    - giflib\n    - libgrpc\n    - flatbuffers\n    - icu\n    - libjpeg-turbo\n    - libpng\n    - libprotobuf\n    - libprotobuf-python-headers\n    - openssl\n    - pybind11\n    - sqlite\n    - snappy\n    - zlib\n    - ml_dtypes >={{ ml_dtypes_version }},<0.5\n\noutputs:\n  - name: libtensorflow_framework\n    script: cp_libtensorflow_framework.sh\n    build:\n      skip: true  # [win]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      run_exports:\n        # tensorflow makes no ABI guarantees, need to pin to what we built with\n        - libtensorflow_framework {{ version }}\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n      # host requirements to pick up run_exports\n      host:\n        - libabseil\n        - giflib\n        - libgrpc\n        - icu\n        - libjpeg-turbo\n        - libcurl\n        - libpng\n        - libprotobuf\n        - openssl\n        - snappy\n        - sqlite\n        - zlib\n      run:\n        # avoid that people without GPUs needlessly download ~200-300MB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    test:\n      commands:\n        - test -f $PREFIX/lib/libtensorflow_framework${SHLIB_EXT}  # [cuda_compiler_version == \"None\"]\n        - test ! -f $PREFIX/lib/libtensorflow${SHLIB_EXT}  # [cuda_compiler_version == \"None\"]\n\n  # 2021/12/29: hmaarrfk\n  # as of tensorflow 2.7.0 we need the tensorflow-base package to break\n  # circular dependency when buliding tensorflow extra packages This annoying\n  # circularity is broken upstream by the fact that they have to bootstrap\n  # their builds\n  - name: tensorflow-base\n    script: build_pkg.sh  # [unix]\n    script: build_pkg.bat  # [win]\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - tensorflow-cpu          # [cuda_compiler_version == \"None\"]\n      entry_points:\n        - toco_from_protos = tensorflow.lite.toco.python.toco_from_protos:main\n        - tflite_convert = tensorflow.lite.python.tflite_convert:main\n        - toco = tensorflow.lite.python.tflite_convert:main\n        - saved_model_cli = tensorflow.python.tools.saved_model_cli:main\n        # The tensorboard package adds this entry point.\n        # - tensorboard = tensorboard.main:run_main\n        - tf_upgrade_v2 = tensorflow.tools.compatibility.tf_upgrade_v2_main:main\n        - estimator_ckpt_converter = tensorflow_estimator.python.estimator.tools.checkpoint_converter:main\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        - {{ compiler('cuda') }}              # [cuda_compiler_version != \"None\"]\n        - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n        - python                              # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n      host:\n        # GPU reuqirements\n        - cudnn                   # [cuda_compiler_version != \"None\"]\n        - nccl                    # [cuda_compiler_version != \"None\"]\n        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n        - cuda-cupti-dev    # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - cuda-cudart-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - cuda-nvml-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - cuda-nvtx-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libcublas-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libcusolver-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libcurand-dev     # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libcufft-dev      # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libcusparse-dev   # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - libnvjitlink-dev  # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        # conda build requirements\n        - python\n        - pip\n        - setuptools\n        - packaging\n        - wheel\n        # TF_SYSTEM_LIBS\n        - libabseil\n        - astor\n        - cython\n        - dill\n        - giflib\n        - libgrpc\n        - flatbuffers\n        - icu\n        - libjpeg-turbo\n        - libcurl\n        - libpng\n        - libprotobuf\n        - libprotobuf-python-headers\n        - openssl\n        - pybind11\n        - snappy\n        - sqlite\n        - zlib\n        # requirements specified by the package itself, see\n        # github.com/tensorflow/tensorflow/blob/v{{ version }}/tensorflow/tools/pip_package/setup.py\n        - absl-py >=1.0.0\n        - astunparse >=1.6.0\n        - gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2\n        - google-pasta >=0.1.1\n        - h5py >=3.11\n        - ml_dtypes >={{ ml_dtypes_version }},<0.5\n        - numpy\n        - opt_einsum >=2.3.2\n        # simplified compared to upstream due to constraints arising through libprotobuf\n        - protobuf >=5.26,<6\n        - python-flatbuffers >=24.3.25\n        - requests >=2.21.0,<3\n        - six >=1.12\n        - termcolor >=1.1.0\n        - typing_extensions >=3.6.6\n        - wrapt >=1.11.0\n        # TF-API needs to move in sync\n        - tensorboard >=2.18,<2.19\n        - keras >=3.0\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n        - {{ pin_subpackage(\"libtensorflow_cc\", exact=True) }}\n      run:\n        - python\n        - packaging\n        - absl-py >=1.0.0\n        - astunparse >=1.6.0\n        - gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2\n        - google-pasta >=0.1.1\n        - grpcio {{ libgrpc }}.*\n        - h5py >=3.11\n        - ml_dtypes >={{ ml_dtypes_version }},<0.5\n        - opt_einsum >=2.3.2\n        - protobuf >=5.26,<6\n        - python-flatbuffers >=24.3.25\n        - requests >=2.21.0,<3\n        - six >=1.12\n        - termcolor >=1.1.0\n        - typing_extensions >=3.6.6\n        - wrapt >=1.11.0\n        # TF-API needs to move in sync\n        - tensorboard >=2.18,<2.19\n        - keras >=3.0\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        - __cuda                                                  # [cuda_compiler_version != \"None\"]\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/296#issuecomment-1835781851\n        - cuda-nvcc-tools                                         # [(cuda_compiler_version or \"\").startswith(\"12\")]\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n        - {{ pin_subpackage(\"libtensorflow_cc\", exact=True) }}\n    # TODO: decide on the name of the package\n    # run_constrained:\n    #   What is the difference between these two packages?\n    #   - tensorflow-io-gcs-filesystem >=0.21.0\n    #   - tensorflow-io >=0.21.0\n    test:\n      commands:\n        - exit 0\n\n  - name: tensorflow\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      # weigh down cpu implementation and give cuda preference\n      track_features:\n        - tensorflow-cpu          # [cuda_compiler_version == \"None\"]\n    requirements:\n      host:\n        # Require python so that the CONDA_PY gets populated\n        - python\n        # Keep the cuda version here since it helps package solvers\n        # decide on the cuda variant\n        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n      run:\n        - python\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n        - {{ pin_subpackage('tensorflow-estimator', exact=True) }}\n        # avoid that people without GPUs needlessly download ~0.5-1GB\n        # This also helps mamba give preference to the CPU build\n        - __cuda  # [cuda_compiler_version != \"None\"]\n    test:\n      files:\n        - test_tensorflow.py\n      requires:\n        - pip\n      imports:\n        - tensorflow\n      commands:\n        - pip check                  # [build_platform == target_platform]\n        - cat test_tensorflow.py     # [unix]\n        - python test_tensorflow.py  # [build_platform == target_platform]\n        - tf_upgrade_v2 --help       # [build_platform == target_platform]\n        # --help exits with exit code 1\n        - test -x $PREFIX/bin/saved_model_cli  # [unix]\n        - tflite_convert --help      # [build_platform == target_platform]\n        - toco_from_protos --help    # [build_platform == target_platform]\n        - toco --help                # [build_platform == target_platform]\n        - python -c 'import tensorflow as tf; assert tf.test.is_built_with_cuda()'      # [cuda_compiler_version != \"None\"]\n        - python -c 'import tensorflow as tf; assert not tf.test.is_built_with_cuda()'  # [cuda_compiler_version == \"None\"]\n        # See https://github.com/conda-forge/tensorflow-feedstock/issues/364\n        - python -c \"import tensorflow as tf;graph = tf.function(lambda x:x).get_concrete_function(1.).graph;tf.compat.v1.train.export_meta_graph(graph=graph,graph_def=graph.as_graph_def())\"\n\n  - name: tensorflow-estimator\n    script: build_estimator.sh  # [unix]\n    script: build_estimator.bat  # [win]\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}                   # [cuda_compiler_version != \"None\"]\n        - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n        - bazel 6.*\n        - python                                   # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}       # [build_platform != target_platform]\n        - libabseil                                # [build_platform != target_platform]\n        - libgrpc                                  # [build_platform != target_platform]\n        - icu                                      # [build_platform != target_platform]\n        - {{ pin_subpackage('tensorflow-base') }}  # [build_platform != target_platform]\n      host:\n        - python\n        - pip\n        - packaging\n        - setuptools\n        - wheel\n        # This ensures that a consistent version of openssl is chosen between\n        # all packages.\n        # https://github.com/conda-forge/conda-forge.github.io/issues/1528\n        - openssl\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n        # Keep the cuda version here since it helps package solvers\n        # decide on the cuda variant\n        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n      run:\n        - python\n        - {{ pin_subpackage('tensorflow-base', exact=True) }}\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check  # [build_platform == target_platform]\n\n  - name: libtensorflow\n    script: cp_libtensorflow.sh\n    build:\n      skip: true  # [win]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      run_exports:\n        # tensorflow makes no ABI guarantees, need to pin to what we built with\n        - libtensorflow {{ version }}\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n      # host requirements to pick up run_exports\n      host:\n        - libabseil\n        - giflib\n        - libgrpc\n        - icu\n        - libjpeg-turbo\n        - libcurl\n        - libpng\n        - libprotobuf\n        - openssl\n        - snappy\n        - sqlite\n        - zlib\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n      run:\n        # avoid that people without GPUs needlessly download ~200-300MB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n    test:\n      files:\n        - test_libtensorflow.sh\n        - test_c.c\n      requires:\n        - {{ compiler('c') }}\n      commands:\n        - test -f $PREFIX/lib/libtensorflow${SHLIB_EXT}  # [cuda_compiler_version == \"None\"]\n        - ./test_libtensorflow.sh                        # [cuda_compiler_version == \"None\" and build_platform == target_platform]\n\n  - name: libtensorflow_cc\n    script: cp_libtensorflow_cc.sh\n    build:\n      skip: true  # [win]\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n      run_exports:\n        # tensorflow makes no ABI guarantees, need to pin to what we built with\n        - libtensorflow_cc {{ version }}\n    requirements:\n      # build requirements needs to pick up the compiler run_exports\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - {{ compiler('cxx') }}\n        # Keep the cuda compiler here since it helps package solvers\n        # decide on the cuda variant\n        # https://github.com/conda-forge/tensorflow-feedstock/issues/162\n        - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n        - x86_64-microarch-level  {{ microarch_level }}  # [linux and x86_64]\n        - rsync\n      # host requirements to pick up run_exports\n      host:\n        - flatbuffers\n        - giflib\n        - icu\n        - libabseil\n        - libcurl\n        - libgrpc\n        - libjpeg-turbo\n        - libpng\n        - libprotobuf\n        - openssl\n        - snappy\n        - sqlite\n        - zlib\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n      run:\n        - libml_dtypes-headers >={{ libml_dtypes_version }},<0.6\n        # avoid that people without GPUs needlessly download ~200-300MB\n        - __cuda  # [cuda_compiler_version != \"None\"]\n        - {{ pin_subpackage(\"libtensorflow_framework\", exact=True) }}\n    test:\n      files:\n        - test_libtensorflow_cc.sh\n        - test_cc.cc\n      requires:\n        - {{ compiler('cxx') }}\n      commands:\n        - test -f $PREFIX/lib/libtensorflow_cc${SHLIB_EXT}  # [not win and cuda_compiler_version == \"None\"]\n        - ./test_libtensorflow_cc.sh                        # [not win and cuda_compiler_version == \"None\" and build_platform == target_platform]\n\n  - name: tensorflow-cpu\n    build:\n      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      skip: True  # [cuda_compiler_version != \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\n  - name: tensorflow-gpu\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      skip: True  # [cuda_compiler_version == \"None\"]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\n  - name: tensorflow-sse3\n    build:\n      skip: True  # [(not x86_64) or microarch_level != 1]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\n  - name: tensorflow-avx2\n    build:\n      skip: True  # [(not x86_64) or microarch_level != 3]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\n  - name: tensorflow-avx512\n    build:\n      skip: True  # [(not x86_64) or microarch_level != 4]\n    requirements:\n      run:\n        - {{ pin_subpackage(\"tensorflow\", exact=True) }}\n    test:\n      imports:\n        - tensorflow\n\nabout:\n  home: http://tensorflow.org/\n  license: Apache-2.0\n  license_file: LICENSE\n  license_family: Apache\n  summary: TensorFlow is an end-to-end open source platform for machine learning.\n  description: |\n    TensorFlow offers multiple levels of abstraction so you can choose the\n    right one for your needs. Build and train models by using the high-level\n    Keras API, which makes getting started with TensorFlow and machine learning\n    easy.\n  dev_url: https://github.com/tensorflow/tensorflow\n  doc_url: https://www.tensorflow.org/get_started/get_started\n  doc_source_url: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src\n\nextra:\n  feedstock-name: tensorflow\n  recipe-maintainers:\n    - isuruf\n    - ngam\n    - farhantejani\n    - ghego\n    - h-vetinari\n    - hajapy\n    - jschueller\n    - njzjz\n    - waitingkuo\n    - xhochy\n    - hmaarrfk\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "absl-py",
      "astor",
      "astunparse",
      "bazel",
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cuda-cudart-dev",
      "cuda-cupti-dev",
      "cuda-nvcc-tools",
      "cuda-nvml-dev",
      "cuda-nvtx-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cudnn",
      "cxx_compiler_stub",
      "cython",
      "dill",
      "flatbuffers",
      "gast",
      "giflib",
      "google-pasta",
      "grpcio",
      "h5py",
      "icu",
      "keras",
      "libabseil",
      "libcublas-dev",
      "libcufft-dev",
      "libcurand-dev",
      "libcurl",
      "libcusolver-dev",
      "libcusparse-dev",
      "libgrpc",
      "libjpeg-turbo",
      "libml_dtypes-headers",
      "libnvjitlink-dev",
      "libpng",
      "libprotobuf",
      "libprotobuf-python-headers",
      "libtensorflow_cc",
      "libtensorflow_framework",
      "ml_dtypes",
      "nasm",
      "nccl",
      "nsync",
      "numpy",
      "openjdk",
      "openssl",
      "opt_einsum",
      "packaging",
      "patchelf",
      "perl",
      "pip",
      "protobuf",
      "pybind11",
      "python",
      "python-flatbuffers",
      "requests",
      "rsync",
      "sed",
      "setuptools",
      "six",
      "snappy",
      "sqlite",
      "tensorboard",
      "tensorflow",
      "tensorflow-base",
      "tensorflow-estimator",
      "termcolor",
      "typing_extensions",
      "unzip",
      "wheel",
      "wrapt",
      "x86_64-microarch-level",
      "zip",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "perl",
        "rsync",
        "sed",
        "x86_64-microarch-level"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "absl-py",
        "astor",
        "astunparse",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-cupti-dev",
        "cuda-nvml-dev",
        "cuda-nvtx-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cudnn",
        "cxx_compiler_stub",
        "cython",
        "dill",
        "flatbuffers",
        "gast",
        "giflib",
        "google-pasta",
        "h5py",
        "icu",
        "keras",
        "libabseil",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcurl",
        "libcusolver-dev",
        "libcusparse-dev",
        "libgrpc",
        "libjpeg-turbo",
        "libnvjitlink-dev",
        "libpng",
        "libprotobuf",
        "libprotobuf-python-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "microarch-level",
        "ml_dtypes",
        "nccl",
        "nsync",
        "numpy",
        "openjdk",
        "openssl",
        "opt_einsum",
        "packaging",
        "pip",
        "protobuf",
        "pybind11",
        "python",
        "python-flatbuffers",
        "requests",
        "setuptools",
        "six",
        "snappy",
        "sqlite",
        "tensorboard",
        "tensorflow-base",
        "termcolor",
        "typing_extensions",
        "unzip",
        "wheel",
        "wrapt",
        "zip",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "absl-py",
        "astunparse",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvcc-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "gast",
        "google-pasta",
        "grpcio",
        "h5py",
        "keras",
        "libml_dtypes-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "microarch-level",
        "ml_dtypes",
        "opt_einsum",
        "packaging",
        "protobuf",
        "python",
        "python-flatbuffers",
        "requests",
        "six",
        "tensorboard",
        "tensorflow",
        "tensorflow-base",
        "tensorflow-estimator",
        "termcolor",
        "typing_extensions",
        "wrapt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bazel 6.*",
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libgrpc",
        "libprotobuf",
        "nasm",
        "patchelf",
        "perl",
        "rsync",
        "sed",
        "x86_64-microarch-level  1",
        "x86_64-microarch-level  3"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "absl-py >=1.0.0",
        "astor",
        "astunparse >=1.6.0",
        "cuda-cudart-dev",
        "cuda-cupti-dev",
        "cuda-nvml-dev",
        "cuda-nvtx-dev",
        "cuda-version 12.6",
        "cudnn",
        "cython",
        "dill",
        "flatbuffers",
        "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
        "giflib",
        "google-pasta >=0.1.1",
        "h5py >=3.11",
        "icu",
        "keras >=3.0",
        "libabseil",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcurl",
        "libcusolver-dev",
        "libcusparse-dev",
        "libgrpc",
        "libjpeg-turbo",
        "libnvjitlink-dev",
        "libpng",
        "libprotobuf",
        "libprotobuf-python-headers",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes >=0.4.0,<0.5",
        "nccl",
        "nsync",
        "numpy",
        "openjdk >=8",
        "openssl",
        "opt_einsum >=2.3.2",
        "packaging",
        "pip",
        "protobuf >=5.26,<6",
        "pybind11",
        "python",
        "python 3.12.*",
        "python-flatbuffers >=24.3.25",
        "requests >=2.21.0,<3",
        "setuptools",
        "six >=1.12",
        "snappy",
        "sqlite",
        "tensorboard >=2.18,<2.19",
        "tensorflow-base",
        "termcolor >=1.1.0",
        "typing_extensions >=3.6.6",
        "unzip",
        "wheel",
        "wrapt >=1.11.0",
        "zip",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "absl-py >=1.0.0",
        "astunparse >=1.6.0",
        "cuda-nvcc-tools",
        "gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2",
        "google-pasta >=0.1.1",
        "grpcio 1.67.*",
        "h5py >=3.11",
        "keras >=3.0",
        "libml_dtypes-headers >=0.5.0,<0.6",
        "libtensorflow_cc",
        "libtensorflow_framework",
        "ml_dtypes >=0.4.0,<0.5",
        "opt_einsum >=2.3.2",
        "packaging",
        "protobuf >=5.26,<6",
        "python",
        "python-flatbuffers >=24.3.25",
        "requests >=2.21.0,<3",
        "six >=1.12",
        "tensorboard >=2.18,<2.19",
        "tensorflow",
        "tensorflow-base",
        "tensorflow-estimator",
        "termcolor >=1.1.0",
        "typing_extensions >=3.6.6",
        "wrapt >=1.11.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pip"
      ]
    }
  },
  "url": "https://github.com/tensorflow/tensorflow/archive/refs/tags/v2.18.0.tar.gz",
  "version": "2.18.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/tensorflow.json"
  }
}