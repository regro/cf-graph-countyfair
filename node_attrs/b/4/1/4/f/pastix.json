{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "b7a411b935e333604323f01593e1fcde4647b77a",
  "feedstock_hash_ts": 1753874172,
  "feedstock_name": "pastix",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "PaStiX (Parallel Sparse matriX package) is a scientific library that\nprovides a high performance parallel solver for very large sparse linear\nsystems based on direct methods. Numerical algorithms are implemented\nin single or double precision (real or complex) using LLt, LDLt and LU\nwith static pivoting (for non symmetric matrices having a symmetric pattern).\nThis solver also provides some low-rank compression methods to reduce the\nmemory footprint and/or the time-to-solution.\n",
      "dev_url": "https://gitlab.inria.fr/solverstack/pastix",
      "doc_url": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "home": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "license": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "library for solving sparse real and complex linear systems of equations"
    },
    "build": {
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "looooo"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "pastix-split",
      "version": "6.4.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/message.patch",
        "patches/split_python.patch"
      ],
      "sha256": "891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55",
      "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libpastix",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "PaStiX (Parallel Sparse matriX package) is a scientific library that\nprovides a high performance parallel solver for very large sparse linear\nsystems based on direct methods. Numerical algorithms are implemented\nin single or double precision (real or complex) using LLt, LDLt and LU\nwith static pivoting (for non symmetric matrices having a symmetric pattern).\nThis solver also provides some low-rank compression methods to reduce the\nmemory footprint and/or the time-to-solution.\n",
      "dev_url": "https://gitlab.inria.fr/solverstack/pastix",
      "doc_url": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "home": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "license": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "library for solving sparse real and complex linear systems of equations"
    },
    "build": {
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "looooo"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "pastix-split",
      "version": "6.4.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/message.patch",
        "patches/split_python.patch"
      ],
      "sha256": "891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55",
      "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libpastix",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "PaStiX (Parallel Sparse matriX package) is a scientific library that\nprovides a high performance parallel solver for very large sparse linear\nsystems based on direct methods. Numerical algorithms are implemented\nin single or double precision (real or complex) using LLt, LDLt and LU\nwith static pivoting (for non symmetric matrices having a symmetric pattern).\nThis solver also provides some low-rank compression methods to reduce the\nmemory footprint and/or the time-to-solution.\n",
      "dev_url": "https://gitlab.inria.fr/solverstack/pastix",
      "doc_url": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "home": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "license": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "library for solving sparse real and complex linear systems of equations"
    },
    "build": {
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "looooo"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "pastix-split",
      "version": "6.4.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/message.patch",
        "patches/split_python.patch"
      ],
      "sha256": "891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55",
      "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz"
    }
  },
  "name": "pastix-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "PaStiX (Parallel Sparse matriX package) is a scientific library that\nprovides a high performance parallel solver for very large sparse linear\nsystems based on direct methods. Numerical algorithms are implemented\nin single or double precision (real or complex) using LLt, LDLt and LU\nwith static pivoting (for non symmetric matrices having a symmetric pattern).\nThis solver also provides some low-rank compression methods to reduce the\nmemory footprint and/or the time-to-solution.\n",
      "dev_url": "https://gitlab.inria.fr/solverstack/pastix",
      "doc_url": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "home": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "license": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "library for solving sparse real and complex linear systems of equations"
    },
    "build": {
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "looooo"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "pastix-split",
      "version": "6.4.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/message.patch",
        "patches/split_python.patch"
      ],
      "sha256": "891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55",
      "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libpastix",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "PaStiX (Parallel Sparse matriX package) is a scientific library that\nprovides a high performance parallel solver for very large sparse linear\nsystems based on direct methods. Numerical algorithms are implemented\nin single or double precision (real or complex) using LLt, LDLt and LU\nwith static pivoting (for non symmetric matrices having a symmetric pattern).\nThis solver also provides some low-rank compression methods to reduce the\nmemory footprint and/or the time-to-solution.\n",
      "dev_url": "https://gitlab.inria.fr/solverstack/pastix",
      "doc_url": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "home": "https://solverstack.gitlabpages.inria.fr/pastix/",
      "license": "LGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "library for solving sparse real and complex linear systems of equations"
    },
    "build": {
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "looooo"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libpastix"
          ]
        },
        "name": "libpastix",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "libscotch",
            "libhwloc",
            "metis"
          ]
        },
        "script": "build_libpastix.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "skip": true
        },
        "name": "pastix",
        "requirements": {
          "build": [
            "cmake",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "ninja",
            "pkgconfig"
          ],
          "host": [
            "python >=3.8",
            "libpastix"
          ],
          "run": [
            "python >=3.8",
            "numpy",
            "scipy",
            "libpastix"
          ]
        },
        "script": "build_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "pastix",
            "spm"
          ],
          "requires": [
            "pip"
          ]
        }
      }
    ],
    "package": {
      "name": "pastix-split",
      "version": "6.4.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/message.patch",
        "patches/split_python.patch"
      ],
      "sha256": "891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55",
      "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libpastix",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libpastix",
      "pastix"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pastix.json"
  },
  "raw_meta_yaml": "{% set version = \"6.4.0\" %}\n\npackage:\n  name: pastix-split\n  version: {{ version }}\n\nsource:\n  url: https://files.inria.fr/pastix/releases/v6/pastix-{{ version }}.tar.gz\n  sha256: 891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55\n  patches:\n    - patches/message.patch\n    - patches/split_python.patch\n    - patches/disable_scotch_int_check.patch  # [build_platform != target_platform]\n\nbuild:\n  number: 5\n  skip: true  # [win]\n\noutputs:\n  - name: libpastix\n    script: build_libpastix.sh  # [unix]\n    script: bld_libpastix.bat   # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('libpastix', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ stdlib('c') }}                 # [unix]\n        - {{ compiler('c') }}               # [unix]\n        - {{ compiler('cxx') }}             # [unix]\n        - {{ compiler('fortran') }}         # [unix]\n        - {{ stdlib('m2w64_c') }}           # [win]\n        - {{ compiler('m2w64_c') }}         # [win]\n        - {{ compiler('m2w64_cxx') }}       # [win]\n        - {{ compiler('m2w64_fortran') }}   # [win]\n        - cmake\n        - ninja\n        - pkgconfig\n\n      host:\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - libscotch\n        - libhwloc\n        - metis\n\n    test:\n      commands:\n        - test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}              # [unix]\n        - if not exist %LIBRARY_PREFIX%\\\\pastix%SHLIB_EXT% exit 1  # [win]\n\n  - name: pastix\n    script: build_python.sh\n    build:\n      noarch: python\n      skip: true   # [not linux64]\n    requirements:\n      build:\n        - cmake\n        # We don't actually need C stuff here, but just to keep the build scripts happy\n        - {{ stdlib('c') }}                 # [unix]\n        - {{ compiler('c') }}               # [unix]\n        - {{ compiler('cxx') }}             # [unix]\n        - {{ compiler('fortran') }}         # [unix]\n        - ninja\n        - pkgconfig\n      host:\n        - python >=3.8\n        - {{ pin_subpackage('libpastix', max_pin='x.x.x') }}\n      run:\n        - python >=3.8\n        - numpy\n        - scipy\n        - {{ pin_subpackage('libpastix', max_pin='x.x.x') }}\n    test:\n      requires:\n        - pip\n      commands:\n        - pip check\n      imports:\n        - pastix\n        - spm\n\nabout:\n  home: https://solverstack.gitlabpages.inria.fr/pastix/\n  summary: 'library for solving sparse real and complex linear systems of equations'\n  license: LGPL-3.0-or-later\n  license_file: LICENSE\n  description: |\n    PaStiX (Parallel Sparse matriX package) is a scientific library that \n    provides a high performance parallel solver for very large sparse linear \n    systems based on direct methods. Numerical algorithms are implemented \n    in single or double precision (real or complex) using LLt, LDLt and LU \n    with static pivoting (for non symmetric matrices having a symmetric pattern). \n    This solver also provides some low-rank compression methods to reduce the \n    memory footprint and/or the time-to-solution.\n  doc_url: https://solverstack.gitlabpages.inria.fr/pastix/\n  dev_url: https://gitlab.inria.fr/solverstack/pastix\n\nextra:\n  recipe-maintainers:\n    - looooo\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libblas",
      "libcblas",
      "libhwloc",
      "liblapack",
      "liblapacke",
      "libpastix",
      "libscotch",
      "metis",
      "ninja",
      "numpy",
      "pkgconfig",
      "python",
      "scipy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libpastix",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "ninja",
        "pkgconfig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "libhwloc",
        "liblapack",
        "liblapacke",
        "libpastix",
        "libscotch",
        "metis",
        "python >=3.8"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libpastix",
        "numpy",
        "python >=3.8",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://files.inria.fr/pastix/releases/v6/pastix-6.4.0.tar.gz",
  "version": "6.4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pastix.json"
  }
}