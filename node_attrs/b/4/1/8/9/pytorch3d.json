{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "17a7be643589d0160e784d826218891aa581b6b4",
  "feedstock_hash_ts": 1753511429,
  "feedstock_name": "pytorch3d",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/facebookresearch/pytorch3d",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "3d Geometry for pytorch"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libc10.so",
        "*/libc10_cuda.so",
        "*/libtorch.so",
        "*/libtorch_cpu.so",
        "*/libtorch_cuda.so",
        "*/libtorch_python.so"
      ],
      "number": "9",
      "script": "PYTHON -m pip install . -vv",
      "script_env": null,
      "string": "cpu_py39h1234567_9"
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer",
        "weiji14"
      ]
    },
    "package": {
      "name": "pytorch3d",
      "version": "0.7.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "numpy",
        "pytorch",
        "pytorch =*=cuda*",
        "cudnn",
        "cuda-cccl",
        "libcusparse-dev",
        "libcusolver-dev",
        "libcublas-dev",
        "cuda-version 12.9",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "cudnn",
        "cuda-cudart",
        "torchvision",
        "fvcore",
        "iopath"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d1f51bb777d4b266cda73eebbb590d0ff86dad80ea0bbe747ced96062be68b33",
      "url": "https://github.com/facebookresearch/pytorch3d/archive/v0.7.7.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pytorch3d"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cccl",
        "cuda-version",
        "cudnn",
        "libcublas-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "numpy",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "cudnn",
        "fvcore",
        "iopath",
        "python",
        "torchvision"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/facebookresearch/pytorch3d",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "3d Geometry for pytorch"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libc10.so",
        "*/libc10_cuda.so",
        "*/libtorch.so",
        "*/libtorch_cpu.so",
        "*/libtorch_cuda.so",
        "*/libtorch_python.so",
        "*/libc10.dylib",
        "*/libc10_cuda.dylib",
        "*/libtorch.dylib",
        "*/libtorch_cpu.dylib",
        "*/libtorch_cuda.dylib",
        "*/libtorch_python.dylib"
      ],
      "number": "9",
      "script": "PYTHON -m pip install . -vv",
      "script_env": null,
      "string": "cpu_py39h1234567_9"
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer",
        "weiji14"
      ]
    },
    "package": {
      "name": "pytorch3d",
      "version": "0.7.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "numpy",
        "pytorch",
        "pytorch =*=cuda*",
        "cudnn",
        "cuda-cccl",
        "libcusparse-dev",
        "libcusolver-dev",
        "libcublas-dev",
        "cuda-version 12.9",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "cudnn",
        "cuda-cudart",
        "torchvision",
        "fvcore",
        "iopath"
      ],
      "run_constrained": [
        "pytorch =*=cuda*",
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d1f51bb777d4b266cda73eebbb590d0ff86dad80ea0bbe747ced96062be68b33",
      "url": "https://github.com/facebookresearch/pytorch3d/archive/v0.7.7.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pytorch3d"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "pytorch3d",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/facebookresearch/pytorch3d",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "3d Geometry for pytorch"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libc10.dylib",
        "*/libc10_cuda.dylib",
        "*/libtorch.dylib",
        "*/libtorch_cpu.dylib",
        "*/libtorch_cuda.dylib",
        "*/libtorch_python.dylib"
      ],
      "number": "9",
      "script": "PYTHON -m pip install . -vv",
      "script_env": null,
      "string": "cpu_py39h1234567_9"
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer",
        "weiji14"
      ]
    },
    "package": {
      "name": "pytorch3d",
      "version": "0.7.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "numpy",
        "pytorch",
        "pytorch =*=cpu*"
      ],
      "run": [
        "python",
        "torchvision",
        "fvcore",
        "iopath"
      ],
      "run_constrained": [
        "pytorch =*=cpu*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d1f51bb777d4b266cda73eebbb590d0ff86dad80ea0bbe747ced96062be68b33",
      "url": "https://github.com/facebookresearch/pytorch3d/archive/v0.7.7.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pytorch3d"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "numpy",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fvcore",
        "iopath",
        "python",
        "torchvision"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pytorch3d"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pytorch3d.json"
  },
  "raw_meta_yaml": "{% set version = \"0.7.7\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cpu\" if cuda_compiler_version in (\"None\", None) else \"cuda\" %}\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: pytorch3d\n  version: {{ version }}\n\nsource:\n  url: https://github.com/facebookresearch/pytorch3d/archive/v{{ version }}.tar.gz\n  sha256: d1f51bb777d4b266cda73eebbb590d0ff86dad80ea0bbe747ced96062be68b33\n\nbuild:\n  number: 9\n  script: {{ PYTHON }} -m pip install . -vv\n  script_env:\n    - CC=$GCC                             # [linux64 and cuda_compiler_version != 'None']\n    - NVCC_FLAGS=--compiler-bindir=${CC}  # [linux64 and cuda_compiler_version != 'None']\n    # needs to be set or builds fails because _get_cuda_arch_flags from\n    # https://github.com/pytorch/pytorch/blob/v2.0.0/torch/utils/cpp_extension.py#L1710\n    # will try to determine the arches based on the non-existent-in-CI CUDA drivers\n    - TORCH_CUDA_ARCH_LIST=5.0;6.0;7.0;7.5;8.0;8.6;9.0;10.0;12.0+PTX  # [linux64 and cuda_compiler_version != 'None']\n    - FORCE_CUDA=1                                                    # [linux64 and cuda_compiler_version != 'None']\n  skip: true  # [win]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  missing_dso_whitelist:\n    # pytorch builds put the libs in the wrong place, but hard to unbundle, see\n    # https://github.com/conda-forge/staged-recipes/pull/17082#issuecomment-1189149813\n    - '*/libc10{{ SHLIB_EXT }}'\n    - '*/libc10_cuda{{ SHLIB_EXT }}'\n    - '*/libtorch{{ SHLIB_EXT }}'\n    - '*/libtorch_cpu{{ SHLIB_EXT }}'\n    - '*/libtorch_cuda{{ SHLIB_EXT }}'\n    - '*/libtorch_python{{ SHLIB_EXT }}'\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}                 # [cuda_compiler_version != \"None\"]\n    - {{ stdlib('c') }}\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - pytorch                                # [build_platform != target_platform]\n    - pytorch =*={{ torch_proc_type }}*      # [build_platform != target_platform]\n    - libcusparse-dev                        # [build_platform != target_platform and cuda_compiler_version != \"None\"]\n    - libcusolver-dev                        # [build_platform != target_platform and cuda_compiler_version != \"None\"]\n    - libcublas-dev                          # [build_platform != target_platform and cuda_compiler_version != \"None\"]\n  host:\n    - python\n    - pip\n    - setuptools\n    - numpy\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    - cudnn                                     # [cuda_compiler_version != \"None\"]\n    - cuda-cccl                                 # [cuda_compiler_version != \"None\"]\n    - libcusparse-dev                           # [cuda_compiler_version != \"None\"]\n    - libcusolver-dev                           # [cuda_compiler_version != \"None\"]\n    - libcublas-dev                             # [cuda_compiler_version != \"None\"]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n  run:\n    - python\n    - {{ pin_compatible('cudnn') }}              # [cuda_compiler_version != \"None\"]\n    - cuda-cudart                                # [cuda_compiler_version != \"None\"]\n    - torchvision\n    - fvcore\n    - iopath\n  run_constrained:\n    # 2022/02/05 hmaarrfk\n    # While conda packaging seems to allow us to specify\n    # constraints on the same package in different lines\n    # the resulting package doesn't have the ability to\n    # be specified in multiples lines\n    # This makes it tricky to use run_exports\n    # we add the GPU constraint in the run_constrained\n    # to allow us to have \"two\" constraints on the\n    # running package\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - pytorch3d\n  # 20230707 TF: There are lots of tests that need a physical GPU; disabled on CI\n  # Locally, uncomment below to run tests\n  # source_files:\n  #   - tests\n  #   - docs\n  requires:\n    - pip\n  #   - imageio\n  #   - hydra-core\n  #   - accelerate\n  #   - matplotlib-base\n  #   - pandas\n  #   - plotly\n  #   - lpips\n  #   - sqlalchemy\n  #   - pillow\n  #   - jupyter\n  #   - pycuda  # [cuda_compiler_version != \"None\"]\n  #   - pyopengl\n  #   - visdom\n  commands:\n    - pip check\n  #   - python -m unittest discover -v -s tests -t .  # [cuda_compiler_version != \"None\"]\n\n\nabout:\n  home: https://github.com/facebookresearch/pytorch3d\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: '3d Geometry for pytorch'\n\nextra:\n  recipe-maintainers:\n    - Tobias-Fischer\n    - weiji14\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-cccl",
      "cuda-cudart",
      "cuda-version",
      "cuda_compiler_stub",
      "cudnn",
      "cxx_compiler_stub",
      "fvcore",
      "iopath",
      "libcublas-dev",
      "libcusolver-dev",
      "libcusparse-dev",
      "numpy",
      "pip",
      "python",
      "pytorch",
      "setuptools",
      "torchvision"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cccl",
        "cuda-version",
        "cuda_compiler_stub",
        "cudnn",
        "cxx_compiler_stub",
        "libcublas-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "numpy",
        "pip",
        "python",
        "pytorch",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart",
        "cuda_compiler_stub",
        "cudnn",
        "cxx_compiler_stub",
        "fvcore",
        "iopath",
        "python",
        "torchvision"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cccl",
        "cuda-version 12.9",
        "cudnn",
        "libcublas-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "numpy",
        "pip",
        "python",
        "pytorch",
        "pytorch =*=cpu*",
        "pytorch =*=cuda*",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "cudnn",
        "fvcore",
        "iopath",
        "python",
        "torchvision"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/facebookresearch/pytorch3d/archive/v0.7.7.tar.gz",
  "version": "0.7.7",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pytorch3d.json"
  }
}