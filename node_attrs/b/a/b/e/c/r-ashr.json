{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "d127216d85bd89db99890962b6add6d34fa4e29a",
  "feedstock_hash_ts": 1758115994,
  "feedstock_name": "r-ashr",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\"",
        "\"%R%\" -e \"library('ashr')\""
      ]
    }
  },
  "name": "r-ashr",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('ashr')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ashr"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ashr.json"
  },
  "raw_meta_yaml": "{% set version = \"2.2-63\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ashr\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ashr_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ashr/ashr_{{ version }}.tar.gz\n  sha256: 7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9\n\nbuild:\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-matrix                     # [build_platform != target_platform]\n    - r-rcpp >=0.10.5              # [build_platform != target_platform]\n    - r-squarem                    # [build_platform != target_platform]\n    - r-etrunct                    # [build_platform != target_platform]\n    - r-invgamma                   # [build_platform != target_platform]\n    - r-mixsqp                     # [build_platform != target_platform]\n    - r-truncnorm                  # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-matrix\n    - r-rcpp >=0.10.5\n    - r-squarem\n    - r-etrunct\n    - r-invgamma\n    - r-mixsqp\n    - r-truncnorm\n  run:\n    - r-base\n    - r-matrix\n    - r-rcpp >=0.10.5\n    - r-squarem\n    - r-etrunct\n    - r-invgamma\n    - r-mixsqp\n    - r-truncnorm\n\ntest:\n  commands:\n    - $R -e \"library('ashr')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('ashr')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/stephens999/ashr\n  license: GPL-3.0-or-later\n  summary: \"The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \\\"False discovery rates: a new deal\\\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets\n    of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse()\n    also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal).\"\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: ashr\n# Encoding: UTF-8\n# Type: Package\n# Maintainer: Peter Carbonetto <pcarbo@uchicago.edu>\n# Authors@R: c(person(\"Matthew\",\"Stephens\",role=\"aut\", email=\"mstephens@uchicago.edu\"), person(\"Peter\",\"Carbonetto\",role=c(\"aut\",\"cre\"), email=\"pcarbo@uchicago.edu\"), person(\"Chaoxing\",\"Dai\",role=\"ctb\"), person(\"David\",\"Gerard\",role=\"aut\"), person(\"Mengyin\",\"Lu\",role=\"aut\"), person(\"Lei\",\"Sun\",role=\"aut\"), person(\"Jason\",\"Willwerscheid\",role=\"aut\"), person(\"Nan\",\"Xiao\",role=\"aut\"), person(\"Mazon\",\"Zeng\",role=\"ctb\"))\n# Version: 2.2-47\n# Date: 2020-02-19\n# Title: Methods for Adaptive Shrinkage, using Empirical Bayes\n# Description: The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal).\n# Depends: R (>= 3.1.0)\n# Imports: Matrix, stats, graphics, Rcpp (>= 0.10.5), truncnorm, mixsqp, SQUAREM, etrunct, invgamma\n# Suggests: testthat, knitr, rmarkdown, ggplot2, REBayes\n# LinkingTo: Rcpp\n# License: GPL (>= 3)\n# NeedsCompilation: yes\n# LazyData: true\n# URL: https://github.com/stephens999/ashr\n# BugReports: https://github.com/stephens999/ashr/issues\n# RoxygenNote: 7.0.2\n# VignetteBuilder: knitr\n# Packaged: 2020-02-19 23:35:57 UTC; pcarbo\n# Author: Matthew Stephens [aut], Peter Carbonetto [aut, cre], Chaoxing Dai [ctb], David Gerard [aut], Mengyin Lu [aut], Lei Sun [aut], Jason Willwerscheid [aut], Nan Xiao [aut], Mazon Zeng [ctb]\n# Repository: CRAN\n# Date/Publication: 2020-02-20 05:40:06 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-etrunct",
      "r-invgamma",
      "r-matrix",
      "r-mixsqp",
      "r-rcpp",
      "r-squarem",
      "r-truncnorm",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
  ],
  "version": "2.2_63",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ashr.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/stephens999/ashr",
      "license": "GPL-3.0-or-later",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "The R package 'ashr' implements an Empirical Bayes approach for large-scale hypothesis testing and false discovery rate (FDR) estimation based on the methods proposed in M. Stephens, 2016, \"False discovery rates: a new deal\", <DOI:10.1093/biostatistics/kxw041>. These methods can be applied whenever two sets of summary statistics---estimated effects and standard errors---are available, just as 'qvalue' can be applied to previously computed p-values. Two main interfaces are provided: ash(), which is more user-friendly; and ash.workhorse(), which has more options and is geared toward advanced users. The ash() and ash.workhorse() also provides a flexible modeling interface that can accommodate a variety of likelihoods (e.g., normal, Poisson) and mixture priors (e.g., uniform, normal)."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-ashr",
      "version": "2.2_63"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ],
      "run": [
        "r-base",
        "r-matrix",
        "r-rcpp >=0.10.5",
        "r-squarem",
        "r-etrunct",
        "r-invgamma",
        "r-mixsqp",
        "r-truncnorm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7fa1957ed3cf0f1f20939b6ebf71fc04ab983ca77616f7b80ce9e9e6fad457c9",
      "url": [
        "https://cran.r-project.org/src/contrib/ashr_2.2-63.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/ashr/ashr_2.2-63.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('ashr')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-etrunct",
        "r-invgamma",
        "r-matrix",
        "r-mixsqp",
        "r-rcpp",
        "r-squarem",
        "r-truncnorm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}