{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "azure",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-glmnet",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\"",
        "\"%R%\" -e \"library('glmnet')\""
      ]
    }
  },
  "name": "r-glmnet",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('glmnet')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-glmnet"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-glmnet.json"
  },
  "raw_meta_yaml": "{% set version = \"4.1-10\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-glmnet\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/glmnet_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/glmnet/glmnet_{{ version }}.tar.gz\n  sha256: 89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c\n\nbuild:\n  # Checking windows to see if it passes. Uncomment the line if it fails.\n  # skip: true  # [win]\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}        # [build_platform != target_platform]\n    - r-foreach                        # [build_platform != target_platform]\n    - r-matrix                         # [build_platform != target_platform]\n    - r-rcpp                           # [build_platform != target_platform]\n    - r-rcppeigen                      # [build_platform != target_platform]\n    - r-survival                       # [build_platform != target_platform]\n    - r-shape                          # [build_platform != target_platform]\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ compiler('fortran') }}        # [not win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ posix }}filesystem            # [win]\n    - {{ posix }}make\n    - {{ posix }}sed                   # [win]\n    - {{ posix }}coreutils             # [win]\n    - {{ posix }}zip                   # [win]\n  host:\n    - r-base\n    - r-foreach\n    - r-matrix >=1.0_6\n    - r-rcpp\n    - r-rcppeigen\n    - r-shape\n    - r-survival\n  run:\n    - r-base\n    - r-foreach\n    - r-matrix >=1.0_6\n    - r-rcpp\n    - r-rcppeigen\n    - r-shape\n    - r-survival\n\ntest:\n  commands:\n    - $R -e \"library('glmnet')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('glmnet')\\\"\"  # [win]\n\nabout:\n  home: https://glmnet.stanford.edu\n  license: GPL-2.0-only\n  summary: Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>.\n    There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option,\n    which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "fortran_compiler_stub",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64_fortran_compiler_stub",
      "make",
      "r-base",
      "r-foreach",
      "r-matrix",
      "r-rcpp",
      "r-rcppeigen",
      "r-shape",
      "r-survival",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
  ],
  "version": "4.1_10",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-glmnet.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://glmnet.stanford.edu",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Extremely efficient procedures for fitting the entire lasso or elastic-net regularization path for linear regression, logistic and multinomial regression models, Poisson regression, Cox model,  multiple-response Gaussian, and the grouped multinomial regression; see <doi:10.18637/jss.v033.i01> and <doi:10.18637/jss.v039.i05>. There are two new and important additions. The family argument can be a GLM family object, which opens the door to any programmed family (<doi:10.18637/jss.v106.i01>). This comes with a modest computational cost, so when the built-in families suffice, they should be used instead.  The other novelty is the relax option, which refits each of the active sets in the path unpenalized. The algorithm uses cyclical coordinate descent in a path-wise fashion, as described in the papers cited."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-glmnet",
      "version": "4.1_10"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-matrix >=1.0_6",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "89a4b5844850b27e87e879a19bd20ed7f1d9f555adc94a8e88935c52677f2e9c",
      "url": [
        "https://cran.r-project.org/src/contrib/glmnet_4.1-10.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/glmnet/glmnet_4.1-10.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('glmnet')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-matrix",
        "r-rcpp",
        "r-rcppeigen",
        "r-shape",
        "r-survival"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}