{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "scitokens-cpp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "name": "scitokens-cpp",
  "osx_64_meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "SciTokens provide a token format for distributed authorization.\nThe tokens are self-describing, can be verified in a distributed\nfashion (no need to contact the issuer to determine if the token is\nvalid). This is convenient for a federated environment where several\notherwise-independent storage endpoints want to delegate trust for an\nissuer for managing a storage allocation.\n",
      "dev_url": "https://github.com/scitokens/scitokens-cpp",
      "home": "https://github.com/scitokens/scitokens-cpp",
      "license": "Apache-2.0",
      "license_file": [
        "LICENSE",
        "vendor/jwt-cpp/LICENSE"
      ],
      "summary": "A C++ implementation of the SciTokens library with a C library interface"
    },
    "build": {
      "error_overdepending": true,
      "error_overlinking": true,
      "ignore_run_exports": [
        "gtest"
      ],
      "number": "0",
      "run_exports": [
        "scitokens-cpp"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "chrisburr",
        "djw8605",
        "duncanmmacleod"
      ]
    },
    "package": {
      "name": "scitokens-cpp",
      "version": "1.1.3"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "pkg-config"
      ],
      "host": [
        "gtest",
        "libcurl",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "vendor-jwt-cpp.patch"
      ],
      "sha256": "eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f",
      "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/scitokens/scitokens.h",
        "test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "scitokens-cpp"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/scitokens-cpp.json"
  },
  "raw_meta_yaml": "{% set name = \"scitokens-cpp\" %}\n{% set version = \"1.1.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/scitokens/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: eeaeb06da74cae92bd03d6be4c407e4855db023f409c59540b3143069407be1f\n  patches:\n    # https://github.com/scitokens/scitokens-cpp/issues/61\n    - vendor-jwt-cpp.patch\n\nbuild:\n  error_overdepending: true\n  error_overlinking: true\n  ignore_run_exports:\n    # supports build-time testing, not linked\n    - gtest\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"scitokens-cpp\", max_pin=\"x\") }}\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib('c') }}\n    - cmake\n    - make  # [unix]\n    - ninja  # [not unix]\n    - pkg-config\n  host:\n    - gtest\n    - libcurl\n    - libuuid  # [linux]\n    - openssl\n    - picojson\n    - sqlite\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/scitokens/scitokens.h  # [unix]\n    - test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}  # [unix]\n\nabout:\n  home: https://github.com/scitokens/scitokens-cpp\n  dev_url: https://github.com/scitokens/scitokens-cpp\n  summary: A C++ implementation of the SciTokens library with a C library interface\n  license: Apache-2.0\n  license_file:\n    - LICENSE\n    - vendor/jwt-cpp/LICENSE\n  description: |\n    SciTokens provide a token format for distributed authorization.\n    The tokens are self-describing, can be verified in a distributed\n    fashion (no need to contact the issuer to determine if the token is\n    valid). This is convenient for a federated environment where several\n    otherwise-independent storage endpoints want to delegate trust for an\n    issuer for managing a storage allocation.\n\nextra:\n  recipe-maintainers:\n    - chrisburr\n    - djw8605\n    - duncanmmacleod\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "gtest",
      "libcurl",
      "libuuid",
      "make",
      "openssl",
      "picojson",
      "pkg-config",
      "sqlite"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gtest",
        "libcurl",
        "libuuid",
        "openssl",
        "picojson",
        "sqlite"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/scitokens/scitokens-cpp/archive/v1.1.3.tar.gz",
  "version": "1.1.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/scitokens-cpp.json"
  }
}