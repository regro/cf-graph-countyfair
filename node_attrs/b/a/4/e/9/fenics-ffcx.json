{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "noarch_platforms": [
      "linux_64",
      "win_64"
    ]
  },
  "feedstock_name": "fenics-ffcx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.10.0/",
      "home": "https://fenicsproject.org/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": {
        "file": "build-ffcx-py"
      }
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fenics-ffcx",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.10",
            "setuptools >=77.0.3",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.10.*",
            "fenics-ufl 2025.2.*"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ffcx"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test"
              ]
            },
            "requirements": {
              "run": [
                "python 3.10.*",
                "pip",
                "numba",
                "pytest",
                "sympy",
                "pygraphviz",
                "c_compiler_stub"
              ]
            },
            "script": "pytest -v -k \"not bilinear\" test"
          }
        ],
        "version": "0.10.0"
      },
      {
        "build": null,
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "__unix"
          ]
        },
        "tests": [
          {
            "package_contents": {
              "include": [
                "ufcx.h"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "test-ufcx/"
              ]
            },
            "requirements": {
              "run": [
                "pkg-config",
                "cmake",
                "make",
                "cxx_compiler_stub"
              ]
            },
            "script": {
              "file": "test-ufcx"
            }
          }
        ],
        "version": "0.10.0"
      }
    ],
    "package": {
      "name": "fenics-ffcx",
      "version": "0.10.0"
    },
    "requirements": {
      "host": [
        "python 3.10.*",
        "pip",
        "setuptools >=62",
        "wheel"
      ],
      "run": [
        "python >=3.10",
        "setuptools >=77.0.3",
        "numpy >=1.21",
        "cffi",
        "fenics-basix 0.10.*",
        "fenics-ufl 2025.2.*"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8006c97e642978c3d0373b092d8df712015f692ccbb6b4df13e62383ab2fb649",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.10.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "cffi",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "python",
        "sympy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.10.0/",
      "home": "https://fenicsproject.org/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": {
        "file": "build-ffcx-py"
      }
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fenics-ffcx",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.10",
            "setuptools >=77.0.3",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.10.*",
            "fenics-ufl 2025.2.*"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ffcx"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test"
              ]
            },
            "requirements": {
              "run": [
                "python 3.10.*",
                "pip",
                "numba",
                "pytest",
                "sympy",
                "pygraphviz",
                "c_compiler_stub"
              ]
            },
            "script": "pytest -v -k \"not bilinear\" test"
          }
        ],
        "version": "0.10.0"
      },
      {
        "build": null,
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "__unix"
          ]
        },
        "tests": [
          {
            "package_contents": {
              "include": [
                "ufcx.h"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "test-ufcx/"
              ]
            },
            "requirements": {
              "run": [
                "pkg-config",
                "cmake",
                "make",
                "cxx_compiler_stub"
              ]
            },
            "script": {
              "file": "test-ufcx"
            }
          }
        ],
        "version": "0.10.0"
      },
      {
        "build": null,
        "name": "fenics-ffcx",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.10",
            "setuptools >=77.0.3",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.10.*",
            "fenics-ufl 2025.2.*"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ffcx"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test"
              ]
            },
            "requirements": {
              "run": [
                "python 3.10.*",
                "pip",
                "numba",
                "pytest",
                "sympy",
                "pygraphviz",
                "c_compiler_stub"
              ]
            },
            "script": "pytest -v -k \"not bilinear\" test"
          }
        ],
        "version": "0.10.0"
      },
      {
        "build": null,
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "__unix"
          ]
        },
        "tests": [
          {
            "package_contents": {
              "include": [
                "ufcx.h"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "test-ufcx/"
              ]
            },
            "requirements": {
              "run": [
                "pkg-config",
                "cmake",
                "make",
                "cxx_compiler_stub"
              ]
            },
            "script": {
              "file": "test-ufcx"
            }
          }
        ],
        "version": "0.10.0"
      }
    ],
    "package": {
      "name": "fenics-ffcx",
      "version": "0.10.0"
    },
    "requirements": {
      "host": [
        "python 3.10.*",
        "pip",
        "setuptools >=62",
        "wheel"
      ],
      "run": [
        "python >=3.10",
        "setuptools >=77.0.3",
        "numpy >=1.21",
        "cffi",
        "fenics-basix 0.10.*",
        "fenics-ufl 2025.2.*"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8006c97e642978c3d0373b092d8df712015f692ccbb6b4df13e62383ab2fb649",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.10.0.tar.gz"
    }
  },
  "name": "fenics-ffcx",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fenics-ffcx",
      "fenics-ufcx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/fenics-ffcx.json"
  },
  "raw_meta_yaml": "# pins are usually updated on minor bumps:\n# basix is currently co-versioned with ffcx\nschema_version: 1\n\ncontext:\n  name: fenics-ffcx-ufcx\n  version: 0.10.0\n  major_minor: \"${{ (version | split('.'))[:2] | join('.') }}\"\n  ufl_version: \"2025.2\"\n\nrecipe:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/fenics/ffcx/archive/refs/tags/v${{ version }}.tar.gz\n  sha256: 8006c97e642978c3d0373b092d8df712015f692ccbb6b4df13e62383ab2fb649\n\nbuild:\n  number: 0\n\noutputs:\n  - package:\n      name: fenics-ufcx\n    build:\n      noarch: generic\n      script: build-ufcx\n    requirements:\n      build:\n        - cmake\n        - if: not win\n          then: make\n        - ${{ compiler(\"c\") }}\n        - ${{ stdlib(\"c\") }}\n      host: []\n      run:\n        - if: not win\n          then: __unix\n        - if: win\n          then: __win\n      ignore_run_exports:\n        from_package:\n          - ${{ compiler(\"c\") }}\n          - ${{ stdlib(\"c\") }}\n    tests:\n      - package_contents:\n          include:\n            - ufcx.h\n      - script:\n          # rattler-build bug: executes .sh on Windows with .bat\n          # for noarch: generic package\n          file: test-ufcx${{ '.bat' if win else '' }}\n        files:\n          recipe:\n            - test-ufcx/\n        requirements:\n          run:\n            - pkg-config\n            - cmake\n            - make\n            - ${{ compiler(\"cxx\") }}\n  - package:\n      name: fenics-ffcx\n    build:\n      noarch: python\n      python:\n        entry_points:\n          - ffcx = ffcx:__main__.main\n      script:\n        file: build-ffcx-py\n    requirements:\n      host:\n        - python ${{ python_min }}.*\n        - pip\n        - setuptools >=62\n        - wheel\n      run:\n        - python >=${{ python_min }}\n        - setuptools >=77.0.3\n        - numpy >=1.21\n        - cffi\n        - fenics-basix ${{ major_minor }}.*\n        - fenics-ufl ${{ ufl_version }}.*\n    tests:\n      - python:\n          imports:\n            - ffcx\n          python_version:\n            - ${{ python_min }}.*\n            - \"3.13.*\"\n      - files:\n          source:\n            - test\n        requirements:\n          run:\n            - python ${{ python_min }}.*\n            - pip\n            - numba\n            - pytest\n            - sympy\n            - pygraphviz\n            - ${{ compiler(\"c\") }}\n        script:\n          - pytest -v -k \"not bilinear\" test\n\nabout:\n  summary: The FEniCSx Form Compiler\n  description: |\n    FFCx is a new version of the FEniCS Form Compiler.\n    It is being actively developed and is compatible with DOLFINx.\n\n    FFCx is a compiler for finite element variational forms.\n    From a high-level description of the form in the Unified Form Language (UFL),\n    it generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\n    In particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\n    FFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n  license: LGPL-3.0-or-later\n  license_file: COPYING.LESSER\n  homepage: https://fenicsproject.org\n  repository: https://github.com/fenics/ffcx\n  documentation: https://docs.fenicsproject.org/ffcx/v${{ version }}/\n\nextra:\n  feedstock-name: fenics-ffcx\n  recipe-maintainers:\n    - minrk\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cffi",
      "cmake",
      "fenics-basix",
      "fenics-ufl",
      "make",
      "numpy",
      "pip",
      "python",
      "setuptools",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "cxx_compiler_stub",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "python",
        "sympy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10.*",
        "setuptools >=62",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "cffi",
        "fenics-basix 0.10.*",
        "fenics-ufl 2025.2.*",
        "numpy >=1.21",
        "python >=3.10",
        "setuptools >=77.0.3"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "python 3.10.*",
        "sympy"
      ]
    }
  },
  "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.10.0.tar.gz",
  "version": "0.10.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fenics-ffcx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.10.0/",
      "home": "https://fenicsproject.org/",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL-3.0-or-later",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": {
        "file": "build-ffcx-py"
      }
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "fenics-ffcx",
        "requirements": {
          "build": [],
          "host": [
            "python 3.10.*",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.10",
            "setuptools >=77.0.3",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.10.*",
            "fenics-ufl 2025.2.*"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "ffcx"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "test"
              ]
            },
            "requirements": {
              "run": [
                "python 3.10.*",
                "pip",
                "numba",
                "pytest",
                "sympy",
                "pygraphviz",
                "c_compiler_stub"
              ]
            },
            "script": "pytest -v -k \"not bilinear\" test"
          }
        ],
        "version": "0.10.0"
      },
      {
        "build": null,
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "host": [],
          "run": [
            "__unix"
          ]
        },
        "tests": [
          {
            "package_contents": {
              "include": [
                "ufcx.h"
              ]
            }
          },
          {
            "files": {
              "recipe": [
                "test-ufcx/"
              ]
            },
            "requirements": {
              "run": [
                "pkg-config",
                "cmake",
                "make",
                "cxx_compiler_stub"
              ]
            },
            "script": {
              "file": "test-ufcx"
            }
          }
        ],
        "version": "0.10.0"
      }
    ],
    "package": {
      "name": "fenics-ffcx",
      "version": "0.10.0"
    },
    "requirements": {
      "host": [
        "python 3.10.*",
        "pip",
        "setuptools >=62",
        "wheel"
      ],
      "run": [
        "python >=3.10",
        "setuptools >=77.0.3",
        "numpy >=1.21",
        "cffi",
        "fenics-basix 0.10.*",
        "fenics-ufl 2025.2.*"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "8006c97e642978c3d0373b092d8df712015f692ccbb6b4df13e62383ab2fb649",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.10.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "cffi",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "python",
        "sympy"
      ]
    }
  }
}