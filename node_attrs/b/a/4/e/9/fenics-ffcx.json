{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "noarch_platforms": [
      "linux_64",
      "win_64"
    ]
  },
  "feedstock_name": "fenics-ffcx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.9.0/",
      "home": "https://fenicsproject.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "run": [
            "__unix"
          ]
        },
        "script": "build-ufcx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/ufcx.h",
            "pkg-config --cflags ufcx"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.sh"
        }
      },
      {
        "build": {
          "entry_points": [
            "ffcx = ffcx:__main__.main"
          ],
          "noarch": "python"
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.9",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.9",
            "setuptools",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.9.*",
            "fenics-ufl 2024.2.*"
          ]
        },
        "script": "build-ffcx-py.sh",
        "test": {
          "commands": [
            "pytest -v test"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "numba",
            "pytest >=6",
            "sympy",
            "pygraphviz",
            "c_compiler_stub"
          ],
          "source_files": [
            "test"
          ]
        }
      }
    ],
    "package": {
      "name": "fenics-ffcx-ufcx",
      "version": "0.9.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "afa517272a3d2249f513cb711c50b77cf8368dd0b8f5ea4b759142229204a448",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.9.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "cffi",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "sympy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.9.0/",
      "home": "https://fenicsproject.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "make",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "run": [
            "__unix"
          ]
        },
        "script": "build-ufcx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/ufcx.h",
            "pkg-config --cflags ufcx"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.sh"
        }
      },
      {
        "build": {
          "entry_points": [
            "ffcx = ffcx:__main__.main"
          ],
          "noarch": "python"
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.9",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.9",
            "setuptools",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.9.*",
            "fenics-ufl 2024.2.*"
          ]
        },
        "script": "build-ffcx-py.sh",
        "test": {
          "commands": [
            "pytest -v test"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "numba",
            "pytest >=6",
            "sympy",
            "pygraphviz",
            "c_compiler_stub"
          ],
          "source_files": [
            "test"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports_from": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "run": [
            "__win"
          ]
        },
        "script": "build-ufcx.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%\\include\\ufcx.h  (exit 1)"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.bat"
        }
      },
      {
        "build": {
          "entry_points": [
            "ffcx = ffcx:__main__.main"
          ],
          "noarch": "python"
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.9",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.9",
            "setuptools",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.9.*",
            "fenics-ufl 2024.2.*"
          ]
        },
        "script": "build-ffcx-py.bat",
        "test": {
          "commands": [
            "pytest -v test"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "numba",
            "pytest >=6",
            "sympy",
            "pygraphviz",
            "c_compiler_stub"
          ],
          "source_files": [
            "test"
          ]
        }
      }
    ],
    "package": {
      "name": "fenics-ffcx-ufcx",
      "version": "0.9.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "afa517272a3d2249f513cb711c50b77cf8368dd0b8f5ea4b759142229204a448",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.9.0.tar.gz"
    }
  },
  "name": "fenics-ffcx-ufcx",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "fenics-ffcx",
      "fenics-ufcx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/fenics-ffcx.json"
  },
  "raw_meta_yaml": "{% set name = \"fenics-ffcx-ufcx\" %}\n{% set version = \"0.9.0\" %}\n\n# pins are usually updated on minor bumps:\n# basix is currently co-versioned with ffcx\n{% set major_minor = version.rsplit(\".\", 1)[0] %}\n{% set ufl_version = \"2024.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/fenics/ffcx/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: afa517272a3d2249f513cb711c50b77cf8368dd0b8f5ea4b759142229204a448\nbuild:\n  number: 0\n\noutputs:\n  - name: fenics-ufcx\n    script: build-ufcx.sh  # [not win]\n    script: build-ufcx.bat  # [win]\n    build:\n      noarch: generic\n      ignore_run_exports_from:\n        # we don't use the compiler, but cmake still needs it\n        - {{ compiler(\"c\") }}\n        - {{ stdlib(\"c\") }}\n    requirements:\n      build:\n        - cmake\n        - make  # [not win]\n        - {{ compiler(\"c\") }}\n        - {{ stdlib(\"c\") }}\n      run:\n        - __unix  # [not win]\n        - __win  # [win]\n    test:\n      script: test-ufcx.sh  # [not win]\n      script: test-ufcx.bat  # [win]\n      files:\n        - test-ufcx\n      requires:\n        - pkg-config\n        - cmake\n        - make\n        - {{ compiler(\"cxx\") }}\n      commands:\n        - test -f ${PREFIX}/include/ufcx.h  # [not win]\n        - if not exist %LIBRARY_PREFIX%\\include\\ufcx.h  (exit 1)  # [win]\n        - pkg-config --cflags ufcx  # [not win]\n  - name: fenics-ffcx\n    script: build-ffcx-py.sh  # [not win]\n    script: build-ffcx-py.bat  # [win]\n    build:\n      noarch: python\n      entry_points:\n        - ffcx = ffcx:__main__.main\n    requirements:\n      host:\n        - python >=3.9\n        - pip\n        - setuptools >=62\n        - wheel\n      run:\n        - python >=3.9\n        - setuptools\n        - numpy >=1.21\n        - cffi\n        - fenics-basix {{ major_minor }}.*\n        - fenics-ufl {{ ufl_version }}.*\n    test:\n      source_files:\n        - test\n      requires:\n        - pip\n        - numba\n        - pytest >=6\n        - sympy\n        - pygraphviz\n        - {{ compiler(\"c\") }}\n      imports:\n        - ffcx\n      commands:\n        - pytest -v test\n\nabout:\n  home: https://fenicsproject.org\n  summary: The FEniCSx Form Compiler\n  description: |\n    FFCx is a new version of the FEniCS Form Compiler.\n    It is being actively developed and is compatible with DOLFINx.\n\n    FFCx is a compiler for finite element variational forms.\n    From a high-level description of the form in the Unified Form Language (UFL),\n    it generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\n    In particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\n    FFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file: COPYING.LESSER\n  doc_url: https://docs.fenicsproject.org/ffcx/v{{ version }}/\n  dev_url: https://github.com/fenics/ffcx\n\nextra:\n  feedstock-name: fenics-ffcx\n  recipe-maintainers:\n    - minrk\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "__win",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cffi",
      "cmake",
      "fenics-basix",
      "fenics-ufl",
      "make",
      "numpy",
      "pip",
      "python",
      "setuptools",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cffi",
        "cxx_compiler_stub",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "sympy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.9",
        "setuptools >=62",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "cffi",
        "fenics-basix 0.9.*",
        "fenics-ufl 2024.2.*",
        "numpy >=1.21",
        "python >=3.9",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest >=6",
        "sympy"
      ]
    }
  },
  "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.9.0.tar.gz",
  "version": "0.9.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/fenics-ffcx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "FFCx is a new version of the FEniCS Form Compiler.\nIt is being actively developed and is compatible with DOLFINx.\n\nFFCx is a compiler for finite element variational forms.\nFrom a high-level description of the form in the Unified Form Language (UFL),\nit generates efficient low-level C code that can be used to assemble the corresponding discrete operator (tensor).\nIn particular, a bilinear form may be assembled into a matrix and a linear form may be assembled into a vector.\nFFCx may be used either from the command line (by invoking the ffcx command) or as a Python module (import ffcx).\n",
      "dev_url": "https://github.com/fenics/ffcx",
      "doc_url": "https://docs.fenicsproject.org/ffcx/v0.9.0/",
      "home": "https://fenicsproject.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": "COPYING.LESSER",
      "summary": "The FEniCSx Form Compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "fenics-ffcx",
      "recipe-maintainers": [
        "minrk"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports_from": [
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "noarch": "generic"
        },
        "name": "fenics-ufcx",
        "requirements": {
          "build": [
            "cmake",
            "c_compiler_stub",
            "c_stdlib_stub"
          ],
          "run": [
            "__win"
          ]
        },
        "script": "build-ufcx.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_PREFIX%\\include\\ufcx.h  (exit 1)"
          ],
          "files": [
            "test-ufcx"
          ],
          "requires": [
            "pkg-config",
            "cmake",
            "make",
            "cxx_compiler_stub"
          ],
          "script": "test-ufcx.bat"
        }
      },
      {
        "build": {
          "entry_points": [
            "ffcx = ffcx:__main__.main"
          ],
          "noarch": "python"
        },
        "name": "fenics-ffcx",
        "requirements": {
          "host": [
            "python >=3.9",
            "pip",
            "setuptools >=62",
            "wheel"
          ],
          "run": [
            "python >=3.9",
            "setuptools",
            "numpy >=1.21",
            "cffi",
            "fenics-basix 0.9.*",
            "fenics-ufl 2024.2.*"
          ]
        },
        "script": "build-ffcx-py.bat",
        "test": {
          "commands": [
            "pytest -v test"
          ],
          "imports": [
            "ffcx"
          ],
          "requires": [
            "pip",
            "numba",
            "pytest >=6",
            "sympy",
            "pygraphviz",
            "c_compiler_stub"
          ],
          "source_files": [
            "test"
          ]
        }
      }
    ],
    "package": {
      "name": "fenics-ffcx-ufcx",
      "version": "0.9.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "afa517272a3d2249f513cb711c50b77cf8368dd0b8f5ea4b759142229204a448",
      "url": "https://github.com/fenics/ffcx/archive/refs/tags/v0.9.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "cffi",
        "fenics-basix",
        "fenics-ufl",
        "numpy",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "numba",
        "pip",
        "pkg-config",
        "pygraphviz",
        "pytest",
        "sympy"
      ]
    }
  }
}