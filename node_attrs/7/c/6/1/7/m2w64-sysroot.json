{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "win_64": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "m2w64-sysroot",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/mingw-w64/mingw-64",
      "license": "ZPL-2.1 AND LGPL-2.1-or-later and MIT AND BSD-3-Clause-Clear",
      "license_file": [
        "COPYING",
        "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
      ],
      "summary": "A complete runtime environment for GCC & LLVM for 32 and 64 bit windows"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf"
      ]
    },
    "outputs": [
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1 AND LGPL-2.1-or-later",
          "license_file": [
            "mingw-w64-headers/ddk/readme.txt",
            "COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 headers for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include"
        ],
        "name": "mingw-w64-ucrt-x86_64-headers-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*",
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a"
        ],
        "name": "mingw-w64-ucrt-x86_64-winpthreads-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "mingw-w64-ucrt-x86_64-headers-git",
            "__unix"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "skip": true
        },
        "files": [
          "Library/bin/libwinpthread-1.dll"
        ],
        "name": "mingw-w64-ucrt-x86_64-libwinpthread-git",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "ucrt"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1",
          "license_file": "COPYING",
          "summary": "MinGW-w64 CRT for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "x86_64-w64-mingw32/sysroot/usr/lib",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib"
        ],
        "name": "mingw-w64-ucrt-x86_64-crt-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix",
            "mingw-w64-ucrt-x86_64-headers-git"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://mingw-w64.sourceforge.io/",
          "summary": "MinGW-w64 sysroot for Windows\n"
        },
        "build": {
          "noarch": "generic"
        },
        "name": "m2w64-sysroot_win-64",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix",
            "mingw-w64-ucrt-x86_64-windows-default-manifest",
            "mingw-w64-ucrt-x86_64-crt-git",
            "mingw-w64-ucrt-x86_64-headers-git",
            "mingw-w64-ucrt-x86_64-winpthreads-git"
          ]
        },
        "script": "copy.sh"
      }
    ],
    "package": {
      "name": "m2w64-sysroot",
      "version": ".r.g"
    },
    "requirements": {
      "build": [
        "gcc_impl_win-64",
        "make"
      ],
      "host": [],
      "run": []
    },
    "source": {
      "git_rev": "dc42231f0",
      "git_url": "https://github.com/mingw-w64/mingw-w64",
      "patches": [
        "0001-Allow-to-use-bessel-and-complex-functions-without-un.patch",
        "0002-heades-add-full-name-winrt.patch"
      ]
    },
    "test": {
      "commands": [
        "echo \"hello\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "gcc_impl_win-64",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "ucrt"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "mingw-w64-ucrt-x86_64-crt-git",
        "mingw-w64-ucrt-x86_64-headers-git",
        "mingw-w64-ucrt-x86_64-windows-default-manifest",
        "mingw-w64-ucrt-x86_64-winpthreads-git",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/mingw-w64/mingw-64",
      "license": "ZPL-2.1 AND LGPL-2.1-or-later and MIT AND BSD-3-Clause-Clear",
      "license_file": [
        "COPYING",
        "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
      ],
      "summary": "A complete runtime environment for GCC & LLVM for 32 and 64 bit windows"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf"
      ]
    },
    "outputs": [
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1 AND LGPL-2.1-or-later",
          "license_file": [
            "mingw-w64-headers/ddk/readme.txt",
            "COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 headers for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include"
        ],
        "name": "mingw-w64-ucrt-x86_64-headers-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*",
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a"
        ],
        "name": "mingw-w64-ucrt-x86_64-winpthreads-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "mingw-w64-ucrt-x86_64-headers-git",
            "__unix"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "skip": true
        },
        "files": [
          "Library/bin/libwinpthread-1.dll"
        ],
        "name": "mingw-w64-ucrt-x86_64-libwinpthread-git",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "ucrt"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1",
          "license_file": "COPYING",
          "summary": "MinGW-w64 CRT for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "x86_64-w64-mingw32/sysroot/usr/lib",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib"
        ],
        "name": "mingw-w64-ucrt-x86_64-crt-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix",
            "mingw-w64-ucrt-x86_64-headers-git"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://mingw-w64.sourceforge.io/",
          "summary": "MinGW-w64 sysroot for Windows\n"
        },
        "build": {
          "noarch": "generic"
        },
        "name": "m2w64-sysroot_win-64",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__unix",
            "mingw-w64-ucrt-x86_64-windows-default-manifest",
            "mingw-w64-ucrt-x86_64-crt-git",
            "mingw-w64-ucrt-x86_64-headers-git",
            "mingw-w64-ucrt-x86_64-winpthreads-git"
          ]
        },
        "script": "copy.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1 AND LGPL-2.1-or-later",
          "license_file": [
            "mingw-w64-headers/ddk/readme.txt",
            "COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 headers for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include"
        ],
        "name": "mingw-w64-ucrt-x86_64-headers-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*",
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a"
        ],
        "name": "mingw-w64-ucrt-x86_64-winpthreads-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "mingw-w64-ucrt-x86_64-headers-git",
            "__win"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": null,
        "files": [
          "Library/bin/libwinpthread-1.dll"
        ],
        "name": "mingw-w64-ucrt-x86_64-libwinpthread-git",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "ucrt"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1",
          "license_file": "COPYING",
          "summary": "MinGW-w64 CRT for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "x86_64-w64-mingw32/sysroot/usr/lib",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib"
        ],
        "name": "mingw-w64-ucrt-x86_64-crt-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__win",
            "mingw-w64-ucrt-x86_64-headers-git"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://mingw-w64.sourceforge.io/",
          "summary": "MinGW-w64 sysroot for Windows\n"
        },
        "build": {
          "noarch": "generic"
        },
        "name": "m2w64-sysroot_win-64",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "__win",
            "ucrt",
            "mingw-w64-ucrt-x86_64-windows-default-manifest",
            "mingw-w64-ucrt-x86_64-crt-git",
            "mingw-w64-ucrt-x86_64-headers-git",
            "mingw-w64-ucrt-x86_64-winpthreads-git"
          ]
        },
        "script": "copy.sh"
      }
    ],
    "package": {
      "name": "m2w64-sysroot",
      "version": ".r.g"
    },
    "requirements": {
      "build": [
        "gcc_impl_win-64",
        "make"
      ],
      "host": [],
      "run": []
    },
    "source": {
      "git_rev": "dc42231f0",
      "git_url": "https://github.com/mingw-w64/mingw-w64",
      "patches": [
        "0001-Allow-to-use-bessel-and-complex-functions-without-un.patch",
        "0002-heades-add-full-name-winrt.patch"
      ]
    },
    "test": {
      "commands": [
        "echo \"hello\""
      ]
    }
  },
  "name": "m2w64-sysroot",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "m2w64-sysroot",
      "m2w64-sysroot_win-64",
      "mingw-w64-ucrt-x86_64-crt-git",
      "mingw-w64-ucrt-x86_64-headers-git",
      "mingw-w64-ucrt-x86_64-libwinpthread-git",
      "mingw-w64-ucrt-x86_64-winpthreads-git"
    ]
  },
  "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'conda build error: TypeError(\"CondaError.__init__() missing 1 required positional argument: 'message'\")\nTraceback (most recent call last):\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 418, in yamlize\n    return yaml.load(data, Loader=StringifyNumbersLoader)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\n    return loader.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/constructor.py\", line 49, in get_single_data\n    node = self.get_single_node()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"yaml/_yaml.pyx\", line 673, in yaml._yaml.CParser.get_single_node\n  File \"yaml/_yaml.pyx\", line 687, in yaml._yaml.CParser._compose_document\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 845, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 847, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 860, in yaml._yaml.CParser._parse_next_event\nyaml.parser.ParserError: while parsing a block mapping\n  in \"<unicode string>\", line 4, column 3\ndid not find expected key\n  in \"<unicode string>\", line 5, column 36\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1001, in parse_meta_yaml_local\n    return _run(use_orig_cbc_path=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 988, in _run\n    return _parse_meta_yaml_impl(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1135, in _parse_meta_yaml_impl\n    return parse(content, cbc)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 581, in parse\n    res = yamlize(data)\n          ^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 422, in yamlize\n    raise UnableToParse(original=e)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/exceptions.py\", line 22, in __init__\n    super().__init__(*args, **kwargs)\nTypeError: CondaError.__init__() missing 1 required positional argument: 'message'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 418, in yamlize\n    return yaml.load(data, Loader=StringifyNumbersLoader)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\n    return loader.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/constructor.py\", line 49, in get_single_data\n    node = self.get_single_node()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"yaml/_yaml.pyx\", line 673, in yaml._yaml.CParser.get_single_node\n  File \"yaml/_yaml.pyx\", line 687, in yaml._yaml.CParser._compose_document\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 845, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 847, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 860, in yaml._yaml.CParser._parse_next_event\nyaml.parser.ParserError: while parsing a block mapping\n  in \"<unicode string>\", line 4, column 3\ndid not find expected key\n  in \"<unicode string>\", line 5, column 36\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1005, in parse_meta_yaml_local\n    return _run(use_orig_cbc_path=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 988, in _run\n    return _parse_meta_yaml_impl(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1135, in _parse_meta_yaml_impl\n    return parse(content, cbc)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 581, in parse\n    res = yamlize(data)\n          ^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 422, in yamlize\n    raise UnableToParse(original=e)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/exceptions.py\", line 22, in __init__\n    super().__init__(*args, **kwargs)\nTypeError: CondaError.__init__() missing 1 required positional argument: 'message'\n'\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 101, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 758, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 705, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 232, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'conda build error: TypeError(\"CondaError.__init__() missing 1 required positional argument: 'message'\")\nTraceback (most recent call last):\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 418, in yamlize\n    return yaml.load(data, Loader=StringifyNumbersLoader)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\n    return loader.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/constructor.py\", line 49, in get_single_data\n    node = self.get_single_node()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"yaml/_yaml.pyx\", line 673, in yaml._yaml.CParser.get_single_node\n  File \"yaml/_yaml.pyx\", line 687, in yaml._yaml.CParser._compose_document\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 845, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 847, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 860, in yaml._yaml.CParser._parse_next_event\nyaml.parser.ParserError: while parsing a block mapping\n  in \"<unicode string>\", line 4, column 3\ndid not find expected key\n  in \"<unicode string>\", line 5, column 36\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1001, in parse_meta_yaml_local\n    return _run(use_orig_cbc_path=True)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 988, in _run\n    return _parse_meta_yaml_impl(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1135, in _parse_meta_yaml_impl\n    return parse(content, cbc)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 581, in parse\n    res = yamlize(data)\n          ^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 422, in yamlize\n    raise UnableToParse(original=e)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/exceptions.py\", line 22, in __init__\n    super().__init__(*args, **kwargs)\nTypeError: CondaError.__init__() missing 1 required positional argument: 'message'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 418, in yamlize\n    return yaml.load(data, Loader=StringifyNumbersLoader)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\n    return loader.get_single_data()\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/yaml/constructor.py\", line 49, in get_single_data\n    node = self.get_single_node()\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"yaml/_yaml.pyx\", line 673, in yaml._yaml.CParser.get_single_node\n  File \"yaml/_yaml.pyx\", line 687, in yaml._yaml.CParser._compose_document\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 845, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 731, in yaml._yaml.CParser._compose_node\n  File \"yaml/_yaml.pyx\", line 847, in yaml._yaml.CParser._compose_mapping_node\n  File \"yaml/_yaml.pyx\", line 860, in yaml._yaml.CParser._parse_next_event\nyaml.parser.ParserError: while parsing a block mapping\n  in \"<unicode string>\", line 4, column 3\ndid not find expected key\n  in \"<unicode string>\", line 5, column 36\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1005, in parse_meta_yaml_local\n    return _run(use_orig_cbc_path=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 988, in _run\n    return _parse_meta_yaml_impl(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/autotick-bot/conda_forge_tick/utils.py\", line 1135, in _parse_meta_yaml_impl\n    return parse(content, cbc)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 581, in parse\n    res = yamlize(data)\n          ^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/metadata.py\", line 422, in yamlize\n    raise UnableToParse(original=e)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/conda/envs/cf-scripts/lib/python3.11/site-packages/conda_build/exceptions.py\", line 22, in __init__\n    super().__init__(*args, **kwargs)\nTypeError: CondaError.__init__() missing 1 required positional argument: 'message'\n'\n",
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/m2w64-sysroot.json"
  },
  "raw_meta_yaml": "{% set name = \"m2w64-sysroot\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ GIT_DESCRIBE_TAG }}.r{{ GIT_DESCRIBE_NUMBER }}.g{{ GIT_DESCRIBE_HASH }}\n\nsource:\n  git_url: https://github.com/mingw-w64/mingw-w64\n  git_rev: dc42231f0\n  patches:\n    - 0001-Allow-to-use-bessel-and-complex-functions-without-un.patch\n    - 0002-heades-add-full-name-winrt.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - gcc_impl_win-64\n    - make\n  host:\n  run:\n\ntest:\n  commands:\n    - echo \"hello\"\n\noutputs:\n  - name: mingw-w64-ucrt-x86_64-headers-git\n    script: install.sh\n    files:\n      - x86_64-w64-mingw32/sysroot/usr/include\n    build:\n      noarch: generic\n    requirements:\n      build:\n      host:\n      run:\n        - __unix   # [unix]\n        - __win    # [win]\n      run_constrained:\n        - mingw-w64-ucrt-x86_64-crt-git {{ PKG_VERSION }}.*\n        - mingw-w64-ucrt-x86_64-winpthreads-git {{ PKG_VERSION }}.*\n    about:\n      home: https://www.mingw-w64.org/\n      license: ZPL-2.1 AND LGPL-2.1-or-later\n      license_file:\n        - mingw-w64-headers/ddk/readme.txt\n        - COPYING\n        - COPYING.MinGW-w64/COPYING.MinGW-w64.txt\n      summary: |\n        MinGW-w64 headers for Windows (mingw-w64)\n\n  - name: mingw-w64-ucrt-x86_64-winpthreads-git\n    script: install.sh\n    files:\n      - x86_64-w64-mingw32/sysroot/usr/include/semaphore.h\n      - x86_64-w64-mingw32/sysroot/usr/include/sched.h\n      - x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h\n      - x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a\n      - Library/x86_64-w64-mingw32/sysroot/usr/include/semaphore.h\n      - Library/x86_64-w64-mingw32/sysroot/usr/include/sched.h\n      - Library/x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h\n      - Library/x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a\n    build:\n      noarch: generic\n    requirements:\n      build:\n      host:\n      run:\n        - {{ pin_subpackage(\"mingw-w64-ucrt-x86_64-headers-git\", exact=True) }}\n        - __unix   # [unix]\n        - __win    # [win]\n      run_constrained:\n        - mingw-w64-ucrt-x86_64-crt-git {{ PKG_VERSION }}.*\n    about:\n      home: https://www.mingw-w64.org/\n      license: MIT AND BSD-3-Clause-Clear\n      license_file:\n        - mingw-w64-libraries/winpthreads/COPYING\n        - COPYING.MinGW-w64/COPYING.MinGW-w64.txt\n      summary: |\n        MinGW-w64 winpthreads library (mingw-w64)\n\n  - name: mingw-w64-ucrt-x86_64-libwinpthread-git\n    script: install.sh\n    files:\n      - Library/bin/libwinpthread-1.dll\n    build:\n      skip: True  # [not win]\n    requirements:\n      build:\n      host:\n        - ucrt\n      run:\n        - ucrt\n    about:\n      home: https://www.mingw-w64.org/\n      license: MIT AND BSD-3-Clause-Clear\n      license_file:\n        - mingw-w64-libraries/winpthreads/COPYING\n        - COPYING.MinGW-w64/COPYING.MinGW-w64.txt\n      summary: |\n        MinGW-w64 winpthreads library (mingw-w64)\n\n  - name: mingw-w64-ucrt-x86_64-crt-git\n    script: install.sh\n    files:\n      - x86_64-w64-mingw32/sysroot/usr/include/*.c\n      - x86_64-w64-mingw32/sysroot/usr/lib\n      - Library/x86_64-w64-mingw32/sysroot/usr/include/*.c\n      - Library/x86_64-w64-mingw32/sysroot/usr/lib\n    build:\n      noarch: generic\n    requirements:\n      build:\n      host:\n      run:\n        - __unix   # [unix]\n        - __win    # [win]\n        - {{ pin_subpackage(\"mingw-w64-ucrt-x86_64-headers-git\", exact=True) }}\n      run_constrained:\n        - mingw-w64-ucrt-x86_64-winpthreads-git {{ PKG_VERSION }}.*\n    about:\n      home: https://www.mingw-w64.org/\n      license: ZPL-2.1\n      license_file: COPYING\n      summary: |\n        MinGW-w64 CRT for Windows (mingw-w64)\n\n  - name: m2w64-sysroot_win-64\n    script: copy.sh\n    build:\n      noarch: generic\n    requirements:\n      build:\n      host:\n        - ucrt     # [win]\n      run:\n        - __unix   # [unix]\n        - __win    # [win]\n        - ucrt     # [win]\n        - mingw-w64-ucrt-x86_64-windows-default-manifest\n        - {{ pin_subpackage(\"mingw-w64-ucrt-x86_64-crt-git\", exact=True) }}\n        - {{ pin_subpackage(\"mingw-w64-ucrt-x86_64-headers-git\", exact=True) }}\n        - {{ pin_subpackage(\"mingw-w64-ucrt-x86_64-winpthreads-git\", exact=True) }}\n    about:\n      home: https://mingw-w64.sourceforge.io/\n      summary: |\n        MinGW-w64 sysroot for Windows\n\nabout:\n  home: https://github.com/mingw-w64/mingw-64\n  summary: 'A complete runtime environment for GCC & LLVM for 32 and 64 bit windows'\n  license: ZPL-2.1 AND LGPL-2.1-or-later and MIT AND BSD-3-Clause-Clear\n  license_file:\n    - COPYING\n    - COPYING.MinGW-w64/COPYING.MinGW-w64.txt\n\n\nextra:\n  recipe-maintainers:\n    - isuruf\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "__win",
      "gcc_impl_win-64",
      "make",
      "mingw-w64-ucrt-x86_64-crt-git",
      "mingw-w64-ucrt-x86_64-headers-git",
      "mingw-w64-ucrt-x86_64-windows-default-manifest",
      "mingw-w64-ucrt-x86_64-winpthreads-git",
      "ucrt"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "gcc_impl_win-64",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "ctng-compilers",
        "ucrt"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "ctng-compilers",
        "mingw-w64-ucrt-x86_64-crt-git",
        "mingw-w64-ucrt-x86_64-headers-git",
        "mingw-w64-ucrt-x86_64-windows-default-manifest",
        "mingw-w64-ucrt-x86_64-winpthreads-git",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "gcc_impl_win-64",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "ucrt"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "mingw-w64-ucrt-x86_64-crt-git",
        "mingw-w64-ucrt-x86_64-headers-git",
        "mingw-w64-ucrt-x86_64-windows-default-manifest",
        "mingw-w64-ucrt-x86_64-winpthreads-git",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": null,
  "version": ".r.g",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/m2w64-sysroot.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/mingw-w64/mingw-64",
      "license": "ZPL-2.1 AND LGPL-2.1-or-later and MIT AND BSD-3-Clause-Clear",
      "license_file": [
        "COPYING",
        "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
      ],
      "summary": "A complete runtime environment for GCC & LLVM for 32 and 64 bit windows"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf"
      ]
    },
    "outputs": [
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1 AND LGPL-2.1-or-later",
          "license_file": [
            "mingw-w64-headers/ddk/readme.txt",
            "COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 headers for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include"
        ],
        "name": "mingw-w64-ucrt-x86_64-headers-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__win"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*",
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/semaphore.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/sched.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/pthread_*.h",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib/lib*pthread*.a"
        ],
        "name": "mingw-w64-ucrt-x86_64-winpthreads-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "mingw-w64-ucrt-x86_64-headers-git",
            "__win"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-crt-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "MIT AND BSD-3-Clause-Clear",
          "license_file": [
            "mingw-w64-libraries/winpthreads/COPYING",
            "COPYING.MinGW-w64/COPYING.MinGW-w64.txt"
          ],
          "summary": "MinGW-w64 winpthreads library (mingw-w64)\n"
        },
        "build": null,
        "files": [
          "Library/bin/libwinpthread-1.dll"
        ],
        "name": "mingw-w64-ucrt-x86_64-libwinpthread-git",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "ucrt"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://www.mingw-w64.org/",
          "license": "ZPL-2.1",
          "license_file": "COPYING",
          "summary": "MinGW-w64 CRT for Windows (mingw-w64)\n"
        },
        "build": {
          "noarch": "generic"
        },
        "files": [
          "x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "x86_64-w64-mingw32/sysroot/usr/lib",
          "Library/x86_64-w64-mingw32/sysroot/usr/include/*.c",
          "Library/x86_64-w64-mingw32/sysroot/usr/lib"
        ],
        "name": "mingw-w64-ucrt-x86_64-crt-git",
        "requirements": {
          "build": [],
          "host": [],
          "run": [
            "__win",
            "mingw-w64-ucrt-x86_64-headers-git"
          ],
          "run_constrained": [
            "mingw-w64-ucrt-x86_64-winpthreads-git .r.g.*"
          ]
        },
        "script": "install.sh"
      },
      {
        "about": {
          "home": "https://mingw-w64.sourceforge.io/",
          "summary": "MinGW-w64 sysroot for Windows\n"
        },
        "build": {
          "noarch": "generic"
        },
        "name": "m2w64-sysroot_win-64",
        "requirements": {
          "build": [],
          "host": [
            "ucrt"
          ],
          "run": [
            "__win",
            "ucrt",
            "mingw-w64-ucrt-x86_64-windows-default-manifest",
            "mingw-w64-ucrt-x86_64-crt-git",
            "mingw-w64-ucrt-x86_64-headers-git",
            "mingw-w64-ucrt-x86_64-winpthreads-git"
          ]
        },
        "script": "copy.sh"
      }
    ],
    "package": {
      "name": "m2w64-sysroot",
      "version": ".r.g"
    },
    "requirements": {
      "build": [
        "gcc_impl_win-64",
        "make"
      ],
      "host": [],
      "run": []
    },
    "source": {
      "git_rev": "dc42231f0",
      "git_url": "https://github.com/mingw-w64/mingw-w64",
      "patches": [
        "0001-Allow-to-use-bessel-and-complex-functions-without-un.patch",
        "0002-heades-add-full-name-winrt.patch"
      ]
    },
    "test": {
      "commands": [
        "echo \"hello\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "gcc_impl_win-64",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "ucrt"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "mingw-w64-ucrt-x86_64-crt-git",
        "mingw-w64-ucrt-x86_64-headers-git",
        "mingw-w64-ucrt-x86_64-windows-default-manifest",
        "mingw-w64-ucrt-x86_64-winpthreads-git",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}