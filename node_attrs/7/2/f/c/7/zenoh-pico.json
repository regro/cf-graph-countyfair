{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "3a5da43e75e1d18c928a729166be0f9cb5075dab",
  "feedstock_hash_ts": 1760740917,
  "feedstock_name": "zenoh-pico",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "zenoh-pico is the Eclipse zenoh implementation that targets constrained devices,\noffering a native C API. It is fully compatible with its main Rust Zenoh implementation,\nproviding a lightweight implementation of most functionalities.\n\nzenoh (pronounce /zeno/) unifies data in motion, data at rest and computations.\nIt carefully blends traditional pub/sub with geo-distributed storages, queries and\ncomputations, while retaining a level of time and space efficiency that is well\nbeyond any of the mainstream stacks.\n\nzenoh-pico supports various platforms including Unix, Zephyr, Arduino, ESP-IDF,\nMbedOS, FreeRTOS, and Raspberry Pi Pico, with transport protocols including\nUDP (unicast and multicast), TCP, Serial, WebSocket, and more.",
      "dev_url": "https://github.com/eclipse-zenoh/zenoh-pico",
      "doc_url": "https://zenoh-pico.readthedocs.io/",
      "home": "https://zenoh.io/",
      "license": "EPL-2.0 OR Apache-2.0",
      "license_family": "EPL-2.0 OR Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Eclipse zenoh for pico devices - A lightweight C implementation of the Zenoh protocol\nfor constrained devices and microcontrollers"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -DBUILD_EXAMPLES=OFF -S . -B build ${CMAKE_ARGS}",
        "cmake --build build --config Release",
        "ctest --test-dir build --output-on-failure",
        "cmake --install build --config Release"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "zenoh-pico",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/zenohpico/zenohpicoConfig.cmake",
                "lib/pkgconfig/zenohpico.pc"
              ],
              "include": [
                "zenoh-pico.h"
              ],
              "lib": [
                "libzenohpico"
              ]
            }
          }
        ],
        "version": "1.6.2"
      }
    ],
    "package": {
      "name": "zenoh-pico",
      "version": "1.6.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "3bdea4f5c5dcd10e542e07e08e8c3761d9e8d190d3006aae07b547a48eeb672d",
      "url": "https://github.com/eclipse-zenoh/zenoh-pico/archive/refs/tags/1.6.2.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "zenoh-pico is the Eclipse zenoh implementation that targets constrained devices,\noffering a native C API. It is fully compatible with its main Rust Zenoh implementation,\nproviding a lightweight implementation of most functionalities.\n\nzenoh (pronounce /zeno/) unifies data in motion, data at rest and computations.\nIt carefully blends traditional pub/sub with geo-distributed storages, queries and\ncomputations, while retaining a level of time and space efficiency that is well\nbeyond any of the mainstream stacks.\n\nzenoh-pico supports various platforms including Unix, Zephyr, Arduino, ESP-IDF,\nMbedOS, FreeRTOS, and Raspberry Pi Pico, with transport protocols including\nUDP (unicast and multicast), TCP, Serial, WebSocket, and more.",
      "dev_url": "https://github.com/eclipse-zenoh/zenoh-pico",
      "doc_url": "https://zenoh-pico.readthedocs.io/",
      "home": "https://zenoh.io/",
      "license": "EPL-2.0 OR Apache-2.0",
      "license_family": "EPL-2.0 OR Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Eclipse zenoh for pico devices - A lightweight C implementation of the Zenoh protocol\nfor constrained devices and microcontrollers"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -DBUILD_EXAMPLES=OFF -S . -B build ${CMAKE_ARGS}",
        "cmake --build build --config Release",
        "ctest --test-dir build --output-on-failure",
        "cmake --install build --config Release"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "zenoh-pico",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/zenohpico/zenohpicoConfig.cmake",
                "lib/pkgconfig/zenohpico.pc"
              ],
              "include": [
                "zenoh-pico.h"
              ],
              "lib": [
                "libzenohpico"
              ]
            }
          }
        ],
        "version": "1.6.2"
      },
      {
        "build": null,
        "name": "zenoh-pico",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/zenohpico/zenohpicoConfig.cmake",
                "lib/pkgconfig/zenohpico.pc"
              ],
              "include": [
                "zenoh-pico.h"
              ],
              "lib": [
                "libzenohpico"
              ]
            }
          }
        ],
        "version": "1.6.2"
      }
    ],
    "package": {
      "name": "zenoh-pico",
      "version": "1.6.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "3bdea4f5c5dcd10e542e07e08e8c3761d9e8d190d3006aae07b547a48eeb672d",
      "url": "https://github.com/eclipse-zenoh/zenoh-pico/archive/refs/tags/1.6.2.tar.gz"
    }
  },
  "name": "zenoh-pico",
  "osx_64_meta_yaml": {
    "about": {
      "description": "zenoh-pico is the Eclipse zenoh implementation that targets constrained devices,\noffering a native C API. It is fully compatible with its main Rust Zenoh implementation,\nproviding a lightweight implementation of most functionalities.\n\nzenoh (pronounce /zeno/) unifies data in motion, data at rest and computations.\nIt carefully blends traditional pub/sub with geo-distributed storages, queries and\ncomputations, while retaining a level of time and space efficiency that is well\nbeyond any of the mainstream stacks.\n\nzenoh-pico supports various platforms including Unix, Zephyr, Arduino, ESP-IDF,\nMbedOS, FreeRTOS, and Raspberry Pi Pico, with transport protocols including\nUDP (unicast and multicast), TCP, Serial, WebSocket, and more.",
      "dev_url": "https://github.com/eclipse-zenoh/zenoh-pico",
      "doc_url": "https://zenoh-pico.readthedocs.io/",
      "home": "https://zenoh.io/",
      "license": "EPL-2.0 OR Apache-2.0",
      "license_family": "EPL-2.0 OR Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Eclipse zenoh for pico devices - A lightweight C implementation of the Zenoh protocol\nfor constrained devices and microcontrollers"
    },
    "build": {
      "number": "0",
      "script": [
        "cmake -DBUILD_EXAMPLES=OFF -S . -B build ${CMAKE_ARGS}",
        "cmake --build build --config Release",
        "ctest --test-dir build --output-on-failure",
        "cmake --install build --config Release"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "Tobias-Fischer"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "zenoh-pico",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "make"
          ],
          "host": [],
          "run": []
        },
        "tests": [
          {
            "package_contents": {
              "files": [
                "lib/cmake/zenohpico/zenohpicoConfig.cmake",
                "lib/pkgconfig/zenohpico.pc"
              ],
              "include": [
                "zenoh-pico.h"
              ],
              "lib": [
                "libzenohpico"
              ]
            }
          }
        ],
        "version": "1.6.2"
      }
    ],
    "package": {
      "name": "zenoh-pico",
      "version": "1.6.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "3bdea4f5c5dcd10e542e07e08e8c3761d9e8d190d3006aae07b547a48eeb672d",
      "url": "https://github.com/eclipse-zenoh/zenoh-pico/archive/refs/tags/1.6.2.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "zenoh-pico"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/zenoh-pico.json"
  },
  "raw_meta_yaml": "context:\n  name: zenoh-pico\n  version: \"1.6.2\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/eclipse-zenoh/${{ name }}/archive/refs/tags/${{ version }}.tar.gz\n  sha256: 3bdea4f5c5dcd10e542e07e08e8c3761d9e8d190d3006aae07b547a48eeb672d\n\nbuild:\n  number: 0\n  skip: win\n  script:\n    - cmake -DBUILD_EXAMPLES=OFF -S . -B build ${CMAKE_ARGS}\n    - cmake --build build --config Release\n    - ctest --test-dir build --output-on-failure\n    - cmake --install build --config Release\n\nrequirements:\n  build:\n    - ${{ compiler('c') }}\n    - ${{ compiler('cxx') }}\n    - ${{ stdlib('c') }}\n    - cmake\n    - make\n\ntests:\n  - package_contents:\n      lib:\n        - libzenohpico\n      include:\n        - zenoh-pico.h\n      files:\n        - ${{ \"Library/\" if win }}lib/cmake/zenohpico/zenohpicoConfig.cmake\n        - ${{ \"Library/\" if win }}lib/pkgconfig/zenohpico.pc\n\nabout:\n  homepage: https://zenoh.io\n  repository: https://github.com/eclipse-zenoh/zenoh-pico\n  documentation: https://zenoh-pico.readthedocs.io\n  summary: |\n    Eclipse zenoh for pico devices - A lightweight C implementation of the Zenoh protocol\n    for constrained devices and microcontrollers\n  description: |\n    zenoh-pico is the Eclipse zenoh implementation that targets constrained devices,\n    offering a native C API. It is fully compatible with its main Rust Zenoh implementation,\n    providing a lightweight implementation of most functionalities.\n\n    zenoh (pronounce /zeno/) unifies data in motion, data at rest and computations.\n    It carefully blends traditional pub/sub with geo-distributed storages, queries and\n    computations, while retaining a level of time and space efficiency that is well\n    beyond any of the mainstream stacks.\n\n    zenoh-pico supports various platforms including Unix, Zephyr, Arduino, ESP-IDF,\n    MbedOS, FreeRTOS, and Raspberry Pi Pico, with transport protocols including\n    UDP (unicast and multicast), TCP, Serial, WebSocket, and more.\n  license: EPL-2.0 OR Apache-2.0\n  license_file:\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - Tobias-Fischer\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/eclipse-zenoh/zenoh-pico/archive/refs/tags/1.6.2.tar.gz",
  "version": "1.6.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/zenoh-pico.json"
  }
}