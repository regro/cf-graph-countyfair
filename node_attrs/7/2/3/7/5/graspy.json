{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "4fe8be3862fc32458a186fa25c1b7bde7bf786fc",
  "feedstock_hash_ts": 1730891961,
  "feedstock_name": "graspy",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A graph, or network, provides a mathematically intuitive\nrepresentation of data with some sort of relationship between\nitems. For example, a social network can be represented as a\ngraph by considering all participants in the social network as\nnodes, with connections representing whether each pair of\nindividuals in the network are friends with one another.\nNaively, one might apply traditional statistical techniques\nto a graph, which neglects the spatial arrangement of nodes\nwithin the network and is not utilizing all of the information\npresent in the graph. In this package, we provide utilities and\nalgorithms designed for the processing and analysis of graphs\nwith specialized graph statistical algorithms.\n",
      "dev_url": "https://github.com/neurodata/graspy",
      "doc_url": "https://graspy.neurodata.io/",
      "home": "https://graspy.neurodata.io/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Python package for graph statistical algorithms."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "bdpedigo",
        "j1c"
      ]
    },
    "package": {
      "name": "graspy",
      "version": "0.2"
    },
    "requirements": {
      "host": [
        "python >=3.5",
        "pip"
      ],
      "run": [
        "python >=3.5",
        "networkx >=2.1",
        "numpy >=1.8.1",
        "scikit-learn >=0.19.1",
        "scipy >=1.1.0",
        "seaborn >=0.9.0",
        "matplotlib-base >=3.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "00cbd96c19113355c181bd8efa07dd487bbac1ebd9a8bf14d0da1945091a51fb",
      "url": "https://github.com/neurodata/graspy/archive/v0.2.tar.gz"
    },
    "test": {
      "imports": [
        "graspy"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "networkx",
        "numpy",
        "python",
        "scikit-learn",
        "scipy",
        "seaborn"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A graph, or network, provides a mathematically intuitive\nrepresentation of data with some sort of relationship between\nitems. For example, a social network can be represented as a\ngraph by considering all participants in the social network as\nnodes, with connections representing whether each pair of\nindividuals in the network are friends with one another.\nNaively, one might apply traditional statistical techniques\nto a graph, which neglects the spatial arrangement of nodes\nwithin the network and is not utilizing all of the information\npresent in the graph. In this package, we provide utilities and\nalgorithms designed for the processing and analysis of graphs\nwith specialized graph statistical algorithms.\n",
      "dev_url": "https://github.com/neurodata/graspy",
      "doc_url": "https://graspy.neurodata.io/",
      "home": "https://graspy.neurodata.io/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Python package for graph statistical algorithms."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "bdpedigo",
        "j1c"
      ]
    },
    "package": {
      "name": "graspy",
      "version": "0.2"
    },
    "requirements": {
      "host": [
        "python >=3.5",
        "pip"
      ],
      "run": [
        "python >=3.5",
        "networkx >=2.1",
        "numpy >=1.8.1",
        "scikit-learn >=0.19.1",
        "scipy >=1.1.0",
        "seaborn >=0.9.0",
        "matplotlib-base >=3.0.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "00cbd96c19113355c181bd8efa07dd487bbac1ebd9a8bf14d0da1945091a51fb",
      "url": "https://github.com/neurodata/graspy/archive/v0.2.tar.gz"
    },
    "test": {
      "imports": [
        "graspy"
      ]
    }
  },
  "name": "graspy",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "graspy"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/graspy.json"
  },
  "raw_meta_yaml": "{% set name = \"graspy\" %}\n{% set version = \"0.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/neurodata/graspy/archive/v{{ version }}.tar.gz\n  sha256: 00cbd96c19113355c181bd8efa07dd487bbac1ebd9a8bf14d0da1945091a51fb\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . -vv\"\n\nrequirements:\n  host:\n    - python >=3.5\n    - pip\n  run:\n    - python >=3.5\n    - networkx >=2.1\n    - numpy >=1.8.1\n    - scikit-learn >=0.19.1\n    - scipy >=1.1.0\n    - seaborn >=0.9.0\n    - matplotlib-base >=3.0.0\n\ntest:\n  imports:\n    - graspy\n\nabout:\n  home: https://graspy.neurodata.io/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: 'Python package for graph statistical algorithms.'\n\n  # The remaining entries in this section are optional, but recommended.\n  description: |\n    A graph, or network, provides a mathematically intuitive\n    representation of data with some sort of relationship between\n    items. For example, a social network can be represented as a\n    graph by considering all participants in the social network as\n    nodes, with connections representing whether each pair of\n    individuals in the network are friends with one another.\n    Naively, one might apply traditional statistical techniques\n    to a graph, which neglects the spatial arrangement of nodes\n    within the network and is not utilizing all of the information\n    present in the graph. In this package, we provide utilities and\n    algorithms designed for the processing and analysis of graphs\n    with specialized graph statistical algorithms.\n  doc_url: https://graspy.neurodata.io/\n  dev_url: https://github.com/neurodata/graspy\n\nextra:\n  recipe-maintainers:\n    - bdpedigo\n    - j1c\n",
  "req": {
    "__set__": true,
    "elements": [
      "matplotlib-base",
      "networkx",
      "numpy",
      "pip",
      "python",
      "scikit-learn",
      "scipy",
      "seaborn"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base",
        "networkx",
        "numpy",
        "python",
        "scikit-learn",
        "scipy",
        "seaborn"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.5"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "matplotlib-base >=3.0.0",
        "networkx >=2.1",
        "numpy >=1.8.1",
        "python >=3.5",
        "scikit-learn >=0.19.1",
        "scipy >=1.1.0",
        "seaborn >=0.9.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/neurodata/graspy/archive/v0.2.tar.gz",
  "version": "0.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/graspy.json"
  }
}