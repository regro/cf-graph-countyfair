{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure"
    }
  },
  "feedstock_hash": "f93a08ae5c8b84b05b0f38c9288f7e39b73f1536",
  "feedstock_hash_ts": 1757982000,
  "feedstock_name": "ucc",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "UCC is a collective communication operations API and library that is\nflexible, complete, and feature-rich for current and emerging\nprogramming models and runtimes.\n",
      "home": "https://github.com/openucx/ucc",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "UCC is a collective communication operations API and library."
    },
    "build": {
      "ignore_run_exports_from": [
        "cuda_compiler_stub",
        "cuda-cudart-dev",
        "nccl"
      ],
      "missing_dso_whitelist": [
        "*libcuda.so*",
        "*libcudart.so*",
        "*libnvidia-ml.so*",
        "*libnccl.so*"
      ],
      "number": "0",
      "run_exports": [
        "ucc"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "marcinz",
        "m3vaz",
        "sandeepd-nv",
        "leofang"
      ]
    },
    "package": {
      "name": "ucc",
      "version": "1.5.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "automake",
        "autoconf !=2.72",
        "libtool",
        "make"
      ],
      "host": [
        "ucx",
        "cuda-version 12.9",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "nccl",
        "cuda-version 13.0"
      ],
      "run": [
        "ucx"
      ],
      "run_constrained": [
        "cuda-version",
        "cuda-cudart",
        "nccl"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7921424e4b6b756133497ab6fdfb8d038eea33f337d4c2dbce13f59e04d16e5b",
      "url": "https://github.com/openucx/ucc/archive/refs/tags/v1.5.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/ucc_info",
        "test -f $PREFIX/include/ucc/api/ucc_def.h",
        "test -f $PREFIX/include/ucc/api/ucc_status.h",
        "test -f $PREFIX/include/ucc/api/ucc_version.h",
        "test -f $PREFIX/include/ucc/api/ucc.h",
        "test -f $PREFIX/lib/cmake/ucc/ucc-targets.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config-version.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config.cmake",
        "test -f $PREFIX/lib/libucc.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cpu.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_self.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_ucp.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_basic.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_hier.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cpu.so.1",
        "test -f $PREFIX/bin/.ucc-post-link.sh"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libtool",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-version",
        "nccl",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "UCC is a collective communication operations API and library that is\nflexible, complete, and feature-rich for current and emerging\nprogramming models and runtimes.\n",
      "home": "https://github.com/openucx/ucc",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "UCC is a collective communication operations API and library."
    },
    "build": {
      "ignore_run_exports_from": [
        "cuda_compiler_stub",
        "cuda-cudart-dev",
        "nccl"
      ],
      "missing_dso_whitelist": [
        "*libcuda.so*",
        "*libcudart.so*",
        "*libnvidia-ml.so*",
        "*libnccl.so*"
      ],
      "number": "0",
      "run_exports": [
        "ucc"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "marcinz",
        "m3vaz",
        "sandeepd-nv",
        "leofang"
      ]
    },
    "package": {
      "name": "ucc",
      "version": "1.5.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "automake",
        "autoconf !=2.72",
        "libtool",
        "make"
      ],
      "host": [
        "ucx",
        "cuda-version 12.9",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "nccl",
        "cuda-version 13.0"
      ],
      "run": [
        "ucx"
      ],
      "run_constrained": [
        "cuda-version",
        "cuda-cudart",
        "nccl"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7921424e4b6b756133497ab6fdfb8d038eea33f337d4c2dbce13f59e04d16e5b",
      "url": "https://github.com/openucx/ucc/archive/refs/tags/v1.5.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/ucc_info",
        "test -f $PREFIX/include/ucc/api/ucc_def.h",
        "test -f $PREFIX/include/ucc/api/ucc_status.h",
        "test -f $PREFIX/include/ucc/api/ucc_version.h",
        "test -f $PREFIX/include/ucc/api/ucc.h",
        "test -f $PREFIX/lib/cmake/ucc/ucc-targets.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config-version.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config.cmake",
        "test -f $PREFIX/lib/libucc.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cpu.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_self.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_ucp.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_basic.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_hier.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cpu.so.1",
        "test -f $PREFIX/bin/.ucc-post-link.sh"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libtool",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-version",
        "nccl",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "UCC is a collective communication operations API and library that is\nflexible, complete, and feature-rich for current and emerging\nprogramming models and runtimes.\n",
      "home": "https://github.com/openucx/ucc",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "UCC is a collective communication operations API and library."
    },
    "build": {
      "ignore_run_exports_from": [
        "cuda_compiler_stub",
        "cuda-cudart-dev",
        "nccl"
      ],
      "missing_dso_whitelist": [
        "*libcuda.so*",
        "*libcudart.so*",
        "*libnvidia-ml.so*",
        "*libnccl.so*"
      ],
      "number": "0",
      "run_exports": [
        "ucc"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "marcinz",
        "m3vaz",
        "sandeepd-nv",
        "leofang"
      ]
    },
    "package": {
      "name": "ucc",
      "version": "1.5.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "automake",
        "autoconf !=2.72",
        "libtool",
        "make"
      ],
      "host": [
        "ucx",
        "cuda-version 12.9",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "nccl",
        "cuda-version 13.0"
      ],
      "run": [
        "ucx"
      ],
      "run_constrained": [
        "cuda-version",
        "cuda-cudart",
        "nccl"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7921424e4b6b756133497ab6fdfb8d038eea33f337d4c2dbce13f59e04d16e5b",
      "url": "https://github.com/openucx/ucc/archive/refs/tags/v1.5.1.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/ucc_info",
        "test -f $PREFIX/include/ucc/api/ucc_def.h",
        "test -f $PREFIX/include/ucc/api/ucc_status.h",
        "test -f $PREFIX/include/ucc/api/ucc_version.h",
        "test -f $PREFIX/include/ucc/api/ucc.h",
        "test -f $PREFIX/lib/cmake/ucc/ucc-targets.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config-version.cmake",
        "test -f $PREFIX/lib/cmake/ucc/ucc-config.cmake",
        "test -f $PREFIX/lib/libucc.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_mc_cpu.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_self.so.1",
        "test -f $PREFIX/lib/ucc/libucc_tl_ucp.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_basic.so.1",
        "test -f $PREFIX/lib/ucc/libucc_cl_hier.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cuda.so.1",
        "test -f $PREFIX/lib/ucc/libucc_ec_cpu.so.1",
        "test -f $PREFIX/bin/.ucc-post-link.sh"
      ]
    }
  },
  "name": "ucc",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ucc"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ucc.json"
  },
  "raw_meta_yaml": "{% set version = \"1.5.1\" %}\n\npackage:\n  name: ucc\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openucx/ucc/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 7921424e4b6b756133497ab6fdfb8d038eea33f337d4c2dbce13f59e04d16e5b\n\nbuild:\n  skip: true  # [(not linux) or cuda_compiler_version in (undefined, \"None\")]\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(\"ucc\") }}\n  missing_dso_whitelist:\n    - '*libcuda.so*'\n    - '*libcudart.so*'\n    - '*libnvidia-ml.so*'\n    - '*libnccl.so*'\n  ignore_run_exports_from:\n    # allow CPU-only use cases (xref: conda-forge/ucx-split-feedstock#173)\n    - {{ compiler(\"cuda\") }}\n    - cuda-cudart-dev\n    - nccl\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}\n    - automake\n    - autoconf !=2.72  # work around conda-forge/autoconf-feedstock#41\n    - libtool\n    - make\n  host:\n    - ucx\n    - cuda-version {{ cuda_compiler_version }}\n    - cuda-cudart-dev\n    - cuda-nvml-dev\n    - nccl\n  run:\n    - {{ pin_compatible(\"ucx\", max_pin=\"x.x.x\") }}\n  run_constrained:\n    - {{ pin_compatible(\"cuda-version\", min_pin=\"x\", max_pin=\"x\") }}\n    # The actual version constraint comes from cuda-version, so below we explicit list\n    # them only to codify that these are expected (but optional) dependencies when CUDA\n    # is in use, otherwise the solver gets confused (conda-forge/ucc-feedstock#19).\n    - cuda-cudart\n    - {{ pin_compatible(\"nccl\", max_pin=\"x\") }}\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/ucc_info\n    - test -f $PREFIX/include/ucc/api/ucc_def.h\n    - test -f $PREFIX/include/ucc/api/ucc_status.h\n    - test -f $PREFIX/include/ucc/api/ucc_version.h\n    - test -f $PREFIX/include/ucc/api/ucc.h\n    - test -f $PREFIX/lib/cmake/ucc/ucc-targets.cmake\n    - test -f $PREFIX/lib/cmake/ucc/ucc-config-version.cmake\n    - test -f $PREFIX/lib/cmake/ucc/ucc-config.cmake\n    - test -f $PREFIX/lib/libucc.so.1\n    - test -f $PREFIX/lib/ucc/libucc_mc_cuda.so.1\n    - test -f $PREFIX/lib/ucc/libucc_mc_cpu.so.1\n    - test -f $PREFIX/lib/ucc/libucc_tl_self.so.1\n    - test -f $PREFIX/lib/ucc/libucc_tl_ucp.so.1\n    - test -f $PREFIX/lib/ucc/libucc_cl_basic.so.1\n    - test -f $PREFIX/lib/ucc/libucc_cl_hier.so.1\n    - test -f $PREFIX/lib/ucc/libucc_ec_cuda.so.1\n    - test -f $PREFIX/lib/ucc/libucc_ec_cpu.so.1\n    - test -f $PREFIX/bin/.ucc-post-link.sh\n\n\nabout:\n  home: https://github.com/openucx/ucc\n  summary: 'UCC is a collective communication operations API and library.'\n  description: |\n    UCC is a collective communication operations API and library that is\n    flexible, complete, and feature-rich for current and emerging\n    programming models and runtimes.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - marcinz\n    - m3vaz\n    - sandeepd-nv\n    - leofang\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-cudart-dev",
      "cuda-nvml-dev",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "libtool",
      "make",
      "nccl",
      "ucx"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libtool",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "nccl",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf !=2.72",
        "automake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libtool",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvml-dev",
        "cuda-version 12.9",
        "cuda-version 13.0",
        "nccl",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/openucx/ucc/archive/refs/tags/v1.5.1.tar.gz",
  "version": "1.5.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ucc.json"
  }
}