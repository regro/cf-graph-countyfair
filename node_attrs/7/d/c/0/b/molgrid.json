{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "molgrid",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gnina/libmolgrid",
      "home": "https://gnina.github.io/libmolgrid/",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE.APACHE",
      "summary": "Comprehensive library for fast, GPU accelerated molecular gridding for deep learning workflows"
    },
    "build": {
      "number": "6"
    },
    "extra": {
      "recipe-maintainers": [
        "hadim"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      }
    ],
    "package": {
      "name": "molgrid",
      "version": "0.5.5"
    },
    "requirements": {
      "build": [
        "cuda_compiler_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "git"
      ],
      "host": [
        "cuda-version ==12.6",
        "libcublas-dev",
        "cudnn",
        "nccl",
        "python",
        "setuptools",
        "pip",
        "pytest",
        "numpy",
        "zlib",
        "openbabel >=3",
        "pyquaternion",
        "pthread-stubs",
        "eigen",
        "libboost-devel",
        "libboost-python-devel"
      ],
      "run": [
        "python",
        "numpy",
        "pyquaternion",
        "pytorch >=1.10.2",
        "openbabel >=3"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "cmake-fix.patch",
        "python-setup.patch"
      ],
      "sha256": "9d1810145f21777a66f45827f539d5e829cd1c23e251268996741dd6551a5220",
      "url": "https://github.com/gnina/libmolgrid/archive/refs/tags/v0.5.5.zip"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "cudnn",
        "eigen",
        "libboost-devel",
        "libboost-python-devel",
        "libcublas-dev",
        "nccl",
        "numpy",
        "openbabel",
        "pip",
        "pthread-stubs",
        "pyquaternion",
        "pytest",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "openbabel",
        "pyquaternion",
        "python",
        "pytorch"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gnina/libmolgrid",
      "home": "https://gnina.github.io/libmolgrid/",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE.APACHE",
      "summary": "Comprehensive library for fast, GPU accelerated molecular gridding for deep learning workflows"
    },
    "build": {
      "number": "6"
    },
    "extra": {
      "recipe-maintainers": [
        "hadim"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      },
      {
        "build": null,
        "name": "molgrid",
        "requirements": {
          "build": [
            "cuda_compiler_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja",
            "git"
          ],
          "host": [
            "cuda-version ==12.6",
            "libcublas-dev",
            "cudnn",
            "nccl",
            "python",
            "setuptools",
            "pip",
            "pytest",
            "numpy",
            "zlib",
            "openbabel >=3",
            "pyquaternion",
            "pthread-stubs",
            "eigen",
            "libboost-devel",
            "libboost-python-devel"
          ],
          "run": [
            "python",
            "numpy",
            "pyquaternion",
            "pytorch >=1.10.2",
            "openbabel >=3"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "molgrid"
              ]
            }
          }
        ]
      }
    ],
    "package": {
      "name": "molgrid",
      "version": "0.5.5"
    },
    "requirements": {
      "build": [
        "cuda_compiler_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "git"
      ],
      "host": [
        "cuda-version ==12.6",
        "libcublas-dev",
        "cudnn",
        "nccl",
        "python",
        "setuptools",
        "pip",
        "pytest",
        "numpy",
        "zlib",
        "openbabel >=3",
        "pyquaternion",
        "pthread-stubs",
        "eigen",
        "libboost-devel",
        "libboost-python-devel"
      ],
      "run": [
        "python",
        "numpy",
        "pyquaternion",
        "pytorch >=1.10.2",
        "openbabel >=3"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "cmake-fix.patch",
        "python-setup.patch"
      ],
      "sha256": "9d1810145f21777a66f45827f539d5e829cd1c23e251268996741dd6551a5220",
      "url": "https://github.com/gnina/libmolgrid/archive/refs/tags/v0.5.5.zip"
    }
  },
  "name": "molgrid",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "molgrid"
    ]
  },
  "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'Failed to render recipe YAML! No output recipes found!'\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 115, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 756, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 703, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 232, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'Failed to render recipe YAML! No output recipes found!'\n",
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/molgrid.json"
  },
  "raw_meta_yaml": "schema_version: 1\n\ncontext:\n  name: molgrid\n  version: 0.5.5\n  cuda: ${{ \"true\" if cuda_compiler_version != \"None\" else \"false\" }}\n  cuda_build_string: cuda_${{ cuda_compiler_version | version_to_buildstring }}\n  string_prefix: ${{ cuda_build_string if cuda == \"true\" else \"cpu_\" }}\n  build_number: 6\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/gnina/libmolgrid/archive/refs/tags/v${{ version }}.zip\n  sha256: 9d1810145f21777a66f45827f539d5e829cd1c23e251268996741dd6551a5220\n  patches:\n    # NOTE: fix error:\n    # `error: 'virtual std::pair<int, float> libmolgrid::CallbackIndexTyper::get_atom_type_index(OpenBabel::OBAtom*) const' was hidden [-Werror=overloaded-virtual=]`\n    - cmake-fix.patch\n    # NOTE: git is not available to set the version number during python setup\n    - python-setup.patch\n\nbuild:\n  number: ${{ build_number }}\n  skip:\n    - osx\n    - win\n    - cuda == \"true\" and match(cuda_compiler_version, \"<12\")\n    - cuda != \"true\" # NOTE: molgrid is not supported on CPU\n  string: ${{ string_prefix }}py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}\n  variant:\n    use_keys:\n      # use cuda from the variant config, e.g. to build multiple CUDA variants\n      - ${{ \"cuda\" if cuda == \"true\" }}\n    # this will down-prioritize the cuda variant versus other variants of the package\n    down_prioritize_variant: ${{ 1 if cuda == \"true\" else 0 }}\n\nrequirements:\n  build:\n    - if: build_platform != target_platform\n      then:\n        - python\n        - cross-python_${{ target_platform }}\n        - pytorch >=2.4\n        - numpy\n\n    - if: cuda == \"true\"\n      then:\n        - ${{ compiler('cuda') }}\n\n    - ${{ compiler('c') }}\n    - ${{ compiler('cxx') }}\n    - ${{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n    - git\n  host:\n    # cuda\n    - if: cuda == \"true\"\n      then:\n        - cuda-version ==${{ cuda_compiler_version }}\n        - libcublas-dev\n        - cudnn\n        - ${{ \"nccl\" if linux }}\n    # python\n    - python\n    - setuptools\n    - pip\n    - pytest\n    - numpy\n    # libraries\n    - zlib\n    - openbabel >=3\n    - pyquaternion\n    - pthread-stubs\n    - eigen\n    - libboost-devel\n    - libboost-python-devel\n  run:\n    - python\n    - numpy\n    - pyquaternion\n    - pytorch >=1.10.2\n    - openbabel >=3\n\ntests:\n  - python:\n      imports:\n        - molgrid\n  # NOTE: tests with pytest requires a GPU.\n  # So they are skipped here.\n  # - files:\n  #     source:\n  #       # NOTE: Only include a few test files since the test\n  #       # folder is large + some tests require a GPU.\n  #       - test/test_coordinateset.py\n  #       - test/test_numpy.py\n  #       - test/test_torch.py\n  #       - test/test_transform.py\n  #   requirements:\n  #     run:\n  #       - pytest\n  #   script:\n  #     - pytest -vvv test/\n\nabout:\n  license: Apache-2.0\n  license_file: LICENSE.APACHE\n  summary: Comprehensive library for fast, GPU accelerated molecular gridding for deep learning workflows\n  homepage: https://gnina.github.io/libmolgrid/\n  repository: https://github.com/gnina/libmolgrid\n\nextra:\n  recipe-maintainers:\n    - hadim\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cuda-version",
      "cuda_compiler_stub",
      "cudnn",
      "cxx_compiler_stub",
      "eigen",
      "git",
      "libboost-devel",
      "libboost-python-devel",
      "libcublas-dev",
      "nccl",
      "ninja",
      "numpy",
      "openbabel",
      "pip",
      "pthread-stubs",
      "pyquaternion",
      "pytest",
      "python",
      "pytorch",
      "setuptools",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cudnn",
        "cxx_compiler_stub",
        "eigen",
        "libboost-devel",
        "libboost-python-devel",
        "libcublas-dev",
        "nccl",
        "numpy",
        "openbabel",
        "pip",
        "pthread-stubs",
        "pyquaternion",
        "pytest",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "numpy",
        "openbabel",
        "pyquaternion",
        "python",
        "pytorch"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "git",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version ==12.6",
        "cudnn",
        "eigen",
        "libboost-devel",
        "libboost-python-devel",
        "libcublas-dev",
        "nccl",
        "numpy",
        "openbabel >=3",
        "pip",
        "pthread-stubs",
        "pyquaternion",
        "pytest",
        "python",
        "setuptools",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "openbabel >=3",
        "pyquaternion",
        "python",
        "pytorch >=1.10.2"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/gnina/libmolgrid/archive/refs/tags/v0.5.5.zip",
  "version": "0.5.5",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/molgrid.json"
  }
}