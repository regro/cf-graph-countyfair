{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "abi_migration_branches": [
        "v5"
      ],
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "gz-common",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "libuuid",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "libuuid",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "libuuid",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "libuuid",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.so",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.so",
            "test -f ${PREFIX}/lib/libgz-common6-av.so",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-av.dylib",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-av.dylib",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "dlfcn-win32",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "bld_cxx.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common6\\\\gz\\\\common.hh exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-graphics.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-graphics.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-geospatial.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-geospatial.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-av.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-av.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-io.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-io.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common6\\\\gz-common6-config.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common6\\\\gz\\\\common.hh exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-graphics.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-graphics.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-av.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-av.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common6\\\\gz-common6-config.cmake exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      },
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      },
      {
        "patches": [
          "librt_linkage.patch",
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      },
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      },
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      },
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "name": "gz-common6",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-av.dylib",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "build_cxx.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-graphics${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-geospatial${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-av${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/libgz-common6-io${SHLIB_EXT}",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "test -f ${PREFIX}/include/gz/common6/gz/common.hh",
            "test -f ${PREFIX}/lib/libgz-common6.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-graphics.dylib",
            "test -f ${PREFIX}/lib/libgz-common6-av.dylib",
            "test -f ${PREFIX}/lib/cmake/gz-common6/gz-common6-config.cmake"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "gz-common6",
      "libgz-common6"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/gz-common.json"
  },
  "raw_meta_yaml": "{% set repo_name = \"gz-common\" %}\n{% set component_name = repo_name.split('-')[1] %}\n{% set version = \"6.1.0\" %}\n{% set major_version = version.split('.')[0] %}\n{% set name = repo_name + major_version %}\n{% set component_version = component_name + major_version %}\n{% set cxx_name = \"lib\" + name %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/gazebosim/{{ repo_name }}/archive/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz\n    sha256: 74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387\n    patches:\n      - librt_linkage.patch  # [linux]\n      - macro_path_binary_relocation.patch\n\nbuild:\n  number: 0\n\noutputs:\n  - name: {{ cxx_name }}\n    script: build_cxx.sh  # [unix]\n    script: bld_cxx.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage(cxx_name, max_pin='x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - ninja\n        - cmake\n        - pkg-config\n      host:\n        - libgz-math8\n        - libgz-cmake4\n        - libgz-utils3\n        # Transitive dependency of libgz-utils3\n        - spdlog\n        - dlfcn-win32  # [win]\n        - libuuid      # [linux]\n        - freeimage\n        - tinyxml2\n        - ffmpeg\n        - libgdal\n        - assimp\n    test:\n      commands:\n        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}${SHLIB_EXT}  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics${SHLIB_EXT}  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}-geospatial${SHLIB_EXT}  # [unix]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av${SHLIB_EXT}  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}-io${SHLIB_EXT}  # [not win]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\{{ component_version }}\\\\gz\\\\{{ component_name }}.hh exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-graphics.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-graphics.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-geospatial.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-geospatial.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-av.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-av.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-io.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-io.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\{{ name }}\\\\{{ name }}-config.cmake exit 1  # [win]\n\n  - name: {{ name }}\n    build:\n      run_exports:\n        - {{ pin_subpackage(cxx_name, max_pin='x') }}\n    requirements:\n      run:\n        - {{ pin_subpackage(cxx_name, exact=True) }}\n    test:\n      commands:\n        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]\n        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-graphics.dylib  # [osx]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.so  # [linux]\n        - test -f ${PREFIX}/lib/lib{{ name }}-av.dylib  # [osx]\n        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]\n        - if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\{{ component_version }}\\\\gz\\\\{{ component_name }}.hh exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-graphics.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-graphics.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ name }}-av.lib exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ name }}-av.dll exit 1  # [win]\n        - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\{{ name }}\\\\{{ name }}-config.cmake exit 1  # [win]\n\nabout:\n  home: https://github.com/gazebosim/{{ repo_name }}\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools.\n  description: |\n    This feedstock builds several conda packages from the gz-common source code, these packages are:\n    * `{{ cxx_name }}`: Package that contains the gz-common C++ libraries.\n    * `{{ name }}`: Meta-package that depends on `{{ cxx_name }}`.\n\n    If you need to depend at build time on the C++ package, please depend on `{{ cxx_name }}` in your recipe.\n\nextra:\n  feedstock-name: {{ repo_name }}\n  recipe-maintainers:\n    - Tobias-Fischer\n    - traversaro\n",
  "req": {
    "__set__": true,
    "elements": [
      "assimp",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "dlfcn-win32",
      "ffmpeg",
      "freeimage",
      "libgdal",
      "libgz-cmake4",
      "libgz-common6",
      "libgz-math8",
      "libgz-utils3",
      "libuuid",
      "ninja",
      "pkg-config",
      "spdlog",
      "tinyxml2"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "dlfcn-win32",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "libuuid",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "dlfcn-win32",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "libuuid",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz",
  "version": "6.1.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/gz-common.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This feedstock builds several conda packages from the gz-common source code, these packages are:\n* `libgz-common6`: Package that contains the gz-common C++ libraries.\n* `gz-common6`: Meta-package that depends on `libgz-common6`.\n\nIf you need to depend at build time on the C++ package, please depend on `libgz-common6` in your recipe.\n",
      "home": "https://github.com/gazebosim/gz-common",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "An audio-visual library supports processing audio and video files, a graphics library can load a variety 3D mesh file formats into a generic in-memory representation, and the core library of Gazebo Common contains functionality that spans Base64 encoding/decoding to thread pools."
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "gz-common",
      "recipe-maintainers": [
        "Tobias-Fischer",
        "traversaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "libgz-common6",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "pkg-config"
          ],
          "host": [
            "libgz-math8",
            "libgz-cmake4",
            "libgz-utils3",
            "spdlog",
            "dlfcn-win32",
            "freeimage",
            "tinyxml2",
            "ffmpeg",
            "libgdal",
            "assimp"
          ]
        },
        "script": "bld_cxx.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common6\\\\gz\\\\common.hh exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-graphics.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-graphics.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-geospatial.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-geospatial.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-av.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-av.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-io.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-io.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common6\\\\gz-common6-config.cmake exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "libgz-common6"
          ]
        },
        "name": "gz-common6",
        "requirements": {
          "run": [
            "libgz-common6"
          ]
        },
        "test": {
          "commands": [
            "if not exist %PREFIX%\\\\Library\\\\include\\\\gz\\\\common6\\\\gz\\\\common.hh exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-graphics.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-graphics.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\gz-common6-av.lib exit 1",
            "if not exist %PREFIX%\\\\Library\\\\bin\\\\gz-common6-av.dll exit 1",
            "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\gz-common6\\\\gz-common6-config.cmake exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "gz-common6",
      "version": "6.1.0"
    },
    "schema_version": 0,
    "source": [
      {
        "patches": [
          "macro_path_binary_relocation.patch"
        ],
        "sha256": "74596a71d3b230beb372d55592df8327b5734119fddf411ba9da7ab495741387",
        "url": "https://github.com/gazebosim/gz-common/archive/gz-common6_6.1.0.tar.gz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "assimp",
        "dlfcn-win32",
        "ffmpeg",
        "freeimage",
        "libgdal",
        "libgz-cmake4",
        "libgz-math8",
        "libgz-utils3",
        "spdlog",
        "tinyxml2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libgz-common6"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}