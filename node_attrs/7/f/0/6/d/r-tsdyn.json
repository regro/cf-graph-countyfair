{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-tsdyn",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/MatthieuStigler/tsDyn",
      "home": "https://github.com/MatthieuStigler/tsDyn/wiki",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Implements nonlinear autoregressive (AR) time series models. For univariate series, a non-parametric approach is available through additive nonlinear AR. Parametric modeling and testing for regime switching dynamics is available when the transition is either direct (TAR: threshold AR) or smooth (STAR: smooth transition AR, LSTAR). For multivariate series, one can estimate a range of TVAR or threshold cointegration TVECM models with two or three regimes. Tests can be conducted for TVAR as well as for TVECM (Hansen and Seo 2002 and Seo 2006)."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "SulphurFH"
      ]
    },
    "package": {
      "name": "r-tsdyn",
      "version": "11.0.5.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e748c601827920fbaefa7c3d9f9f2fce0e91726d56bdb58dfc5180815c81c06c",
      "url": [
        "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('tsDyn')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/MatthieuStigler/tsDyn",
      "home": "https://github.com/MatthieuStigler/tsDyn/wiki",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Implements nonlinear autoregressive (AR) time series models. For univariate series, a non-parametric approach is available through additive nonlinear AR. Parametric modeling and testing for regime switching dynamics is available when the transition is either direct (TAR: threshold AR) or smooth (STAR: smooth transition AR, LSTAR). For multivariate series, one can estimate a range of TVAR or threshold cointegration TVECM models with two or three regimes. Tests can be conducted for TVAR as well as for TVECM (Hansen and Seo 2002 and Seo 2006)."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "SulphurFH"
      ]
    },
    "package": {
      "name": "r-tsdyn",
      "version": "11.0.5.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e748c601827920fbaefa7c3d9f9f2fce0e91726d56bdb58dfc5180815c81c06c",
      "url": [
        "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('tsDyn')\"",
        "\"%R%\" -e \"library('tsDyn')\""
      ]
    }
  },
  "name": "r-tsdyn",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/MatthieuStigler/tsDyn",
      "home": "https://github.com/MatthieuStigler/tsDyn/wiki",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Implements nonlinear autoregressive (AR) time series models. For univariate series, a non-parametric approach is available through additive nonlinear AR. Parametric modeling and testing for regime switching dynamics is available when the transition is either direct (TAR: threshold AR) or smooth (STAR: smooth transition AR, LSTAR). For multivariate series, one can estimate a range of TVAR or threshold cointegration TVECM models with two or three regimes. Tests can be conducted for TVAR as well as for TVECM (Hansen and Seo 2002 and Seo 2006)."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "SulphurFH"
      ]
    },
    "package": {
      "name": "r-tsdyn",
      "version": "11.0.5.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e748c601827920fbaefa7c3d9f9f2fce0e91726d56bdb58dfc5180815c81c06c",
      "url": [
        "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('tsDyn')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-tsdyn"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-tsdyn.json"
  },
  "raw_meta_yaml": "{% set version = \"11.0.5.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-tsdyn\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/tsDyn_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/tsDyn/tsDyn_{{ version }}.tar.gz\n  sha256: e748c601827920fbaefa7c3d9f9f2fce0e91726d56bdb58dfc5180815c81c06c\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}        # [not win]\n    - {{ stdlib(\"c\") }}          # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{ stdlib(\"m2w64_c\") }}    # [win]\n    - {{ posix }}filesystem      # [win]\n    - {{ posix }}make\n    - {{ posix }}sed             # [win]\n    - {{ posix }}coreutils       # [win]\n    - {{ posix }}zip             # [win]\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-foreach\n    - r-forecast\n    - r-mass\n    - r-matrix\n    - r-mgcv\n    - r-mnormt\n    - r-nnet\n    - r-tseries\n    - r-tserieschaos\n    - r-urca\n    - r-vars\n  run:\n    - r-base\n    - r-foreach\n    - r-forecast\n    - r-mass\n    - r-matrix\n    - r-mgcv\n    - r-mnormt\n    - r-nnet\n    - r-tseries\n    - r-tserieschaos\n    - r-urca\n    - r-vars\n\ntest:\n  commands:\n    - $R -e \"library('tsDyn')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('tsDyn')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/MatthieuStigler/tsDyn/wiki\n  dev_url: https://github.com/MatthieuStigler/tsDyn\n  license: GPL-2.0-or-later\n  summary: 'Implements nonlinear autoregressive (AR) time series models. For univariate series, a non-parametric approach is available through additive nonlinear AR. Parametric modeling and testing for regime switching dynamics is available when the transition is either direct (TAR: threshold AR) or smooth (STAR: smooth\n    transition AR, LSTAR). For multivariate series, one can estimate a range of TVAR or threshold cointegration TVECM models with two or three regimes. Tests can be conducted for TVAR as well as for TVECM (Hansen and Seo 2002 and Seo 2006).'\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - SulphurFH\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "make",
      "r-base",
      "r-foreach",
      "r-forecast",
      "r-mass",
      "r-matrix",
      "r-mgcv",
      "r-mnormt",
      "r-nnet",
      "r-tseries",
      "r-tserieschaos",
      "r-urca",
      "r-vars",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz"
  ],
  "version": "11.0.5.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-tsdyn.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/MatthieuStigler/tsDyn",
      "home": "https://github.com/MatthieuStigler/tsDyn/wiki",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Implements nonlinear autoregressive (AR) time series models. For univariate series, a non-parametric approach is available through additive nonlinear AR. Parametric modeling and testing for regime switching dynamics is available when the transition is either direct (TAR: threshold AR) or smooth (STAR: smooth transition AR, LSTAR). For multivariate series, one can estimate a range of TVAR or threshold cointegration TVECM models with two or three regimes. Tests can be conducted for TVAR as well as for TVECM (Hansen and Seo 2002 and Seo 2006)."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "SulphurFH"
      ]
    },
    "package": {
      "name": "r-tsdyn",
      "version": "11.0.5.2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ],
      "run": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e748c601827920fbaefa7c3d9f9f2fce0e91726d56bdb58dfc5180815c81c06c",
      "url": [
        "https://cran.r-project.org/src/contrib/tsDyn_11.0.5.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/tsDyn/tsDyn_11.0.5.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('tsDyn')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-foreach",
        "r-forecast",
        "r-mass",
        "r-matrix",
        "r-mgcv",
        "r-mnormt",
        "r-nnet",
        "r-tseries",
        "r-tserieschaos",
        "r-urca",
        "r-vars"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}