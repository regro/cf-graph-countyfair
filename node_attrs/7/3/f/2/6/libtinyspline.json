{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "libtinyspline",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves.\nThe core of the library is written in ANSI C (C89) with a C++ wrapper for an object-oriented programming model.\n",
      "dev_url": "https://github.com/msteinbeck/tinyspline/",
      "doc_url": "https://msteinbeck.github.io/tinyspline/",
      "home": "https://msteinbeck.github.io/tinyspline/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libtinyspline"
      ],
      "script": [
        "mkdir -p build",
        "cd build",
        "cmake ${CMAKE_ARGS} .. -G Ninja -DCMAKE_INSTALL_PREFIX=${PREFIX}        -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib",
        "cmake --build .",
        "ctest",
        "cmake --install . --strip"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "mantkiew"
      ]
    },
    "package": {
      "name": "libtinyspline",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "3ea31b610dd279266f26fd7ad5b5fca7a20c0bbe05c7c32430ed6aa54d57097a",
      "url": "https://github.com/msteinbeck/tinyspline/archive/refs/tags/v0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f \"${PREFIX}/include/tinyspline.h\"",
        "test -f \"${PREFIX}/lib/libtinyspline${SHLIB_EXT}\"",
        "test -f \"${PREFIX}/include/tinysplinecxx.h\"",
        "test -f \"${PREFIX}/lib/libtinysplinecxx${SHLIB_EXT}\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves.\nThe core of the library is written in ANSI C (C89) with a C++ wrapper for an object-oriented programming model.\n",
      "dev_url": "https://github.com/msteinbeck/tinyspline/",
      "doc_url": "https://msteinbeck.github.io/tinyspline/",
      "home": "https://msteinbeck.github.io/tinyspline/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libtinyspline"
      ],
      "script": [
        "mkdir -p build",
        "cd build",
        "cmake ${CMAKE_ARGS} .. -G Ninja -DCMAKE_INSTALL_PREFIX=${PREFIX}        -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib",
        "cmake --build .",
        "ctest",
        "cmake --install . --strip",
        "cmake %CMAKE_ARGS%  .. -G Ninja -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "mantkiew"
      ]
    },
    "package": {
      "name": "libtinyspline",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "3ea31b610dd279266f26fd7ad5b5fca7a20c0bbe05c7c32430ed6aa54d57097a",
      "url": "https://github.com/msteinbeck/tinyspline/archive/refs/tags/v0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f \"${PREFIX}/include/tinyspline.h\"",
        "test -f \"${PREFIX}/lib/libtinyspline${SHLIB_EXT}\"",
        "test -f \"${PREFIX}/include/tinysplinecxx.h\"",
        "test -f \"${PREFIX}/lib/libtinysplinecxx${SHLIB_EXT}\"",
        "if not exist %LIBRARY_INC%\\tinyspline.h exit 1",
        "if not exist %LIBRARY_BIN%\\tinyspline%SHLIB_EXT% exit 1",
        "if not exist %LIBRARY_INC%\\tinysplinecxx.h exit 1",
        "if not exist %LIBRARY_BIN%\\tinysplinecxx%SHLIB_EXT% exit 1"
      ]
    }
  },
  "name": "libtinyspline",
  "osx_64_meta_yaml": {
    "about": {
      "description": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves.\nThe core of the library is written in ANSI C (C89) with a C++ wrapper for an object-oriented programming model.\n",
      "dev_url": "https://github.com/msteinbeck/tinyspline/",
      "doc_url": "https://msteinbeck.github.io/tinyspline/",
      "home": "https://msteinbeck.github.io/tinyspline/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libtinyspline"
      ],
      "script": [
        "mkdir -p build",
        "cd build",
        "cmake ${CMAKE_ARGS} .. -G Ninja -DCMAKE_INSTALL_PREFIX=${PREFIX}        -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib",
        "cmake --build .",
        "ctest",
        "cmake --install . --strip"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "mantkiew"
      ]
    },
    "package": {
      "name": "libtinyspline",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "3ea31b610dd279266f26fd7ad5b5fca7a20c0bbe05c7c32430ed6aa54d57097a",
      "url": "https://github.com/msteinbeck/tinyspline/archive/refs/tags/v0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f \"${PREFIX}/include/tinyspline.h\"",
        "test -f \"${PREFIX}/lib/libtinyspline${SHLIB_EXT}\"",
        "test -f \"${PREFIX}/include/tinysplinecxx.h\"",
        "test -f \"${PREFIX}/lib/libtinysplinecxx${SHLIB_EXT}\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libtinyspline"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/libtinyspline.json"
  },
  "raw_meta_yaml": "{% set name = \"libtinyspline\" %}\n{% set version = \"0.6.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/msteinbeck/tinyspline/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 3ea31b610dd279266f26fd7ad5b5fca7a20c0bbe05c7c32430ed6aa54d57097a\n\nbuild:\n  script: \n    - mkdir -p build\n    - cd build\n    - cmake ${CMAKE_ARGS} .. -G Ninja -DCMAKE_INSTALL_PREFIX=${PREFIX}        -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib  # [unix]\n    - cmake %CMAKE_ARGS%  .. -G Ninja -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib  # [win]\n    - cmake --build .\n    - ctest\n    - cmake --install . --strip\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('libtinyspline', max_pin='x') }}\n\nrequirements:\n  build:\n    - cmake\n    - ninja\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n\ntest:\n  commands:\n    # C \n    - test -f \"${PREFIX}/include/tinyspline.h\"  # [unix]\n    - test -f \"${PREFIX}/lib/libtinyspline${SHLIB_EXT}\"  # [unix]\n    - if not exist %LIBRARY_INC%\\tinyspline.h exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\tinyspline%SHLIB_EXT% exit 1  # [win]\n    # C++\n    - test -f \"${PREFIX}/include/tinysplinecxx.h\"  # [unix]\n    - test -f \"${PREFIX}/lib/libtinysplinecxx${SHLIB_EXT}\"  # [unix]\n    - if not exist %LIBRARY_INC%\\tinysplinecxx.h exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\tinysplinecxx%SHLIB_EXT% exit 1  # [win]\n\nabout:\n  home: https://msteinbeck.github.io/tinyspline/\n  summary: 'TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves.'\n  description: |\n    TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves. \n    The core of the library is written in ANSI C (C89) with a C++ wrapper for an object-oriented programming model.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://msteinbeck.github.io/tinyspline/\n  dev_url: https://github.com/msteinbeck/tinyspline/\n\nextra:\n  recipe-maintainers:\n    - mantkiew\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/msteinbeck/tinyspline/archive/refs/tags/v0.6.0.tar.gz",
  "version": "0.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/libtinyspline.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves.\nThe core of the library is written in ANSI C (C89) with a C++ wrapper for an object-oriented programming model.\n",
      "dev_url": "https://github.com/msteinbeck/tinyspline/",
      "doc_url": "https://msteinbeck.github.io/tinyspline/",
      "home": "https://msteinbeck.github.io/tinyspline/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "TinySpline is a small, yet powerful library for interpolating, transforming, and querying arbitrary NURBS, B-Splines, and Bézier curves."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "libtinyspline"
      ],
      "script": [
        "mkdir -p build",
        "cd build",
        "cmake %CMAKE_ARGS%  .. -G Ninja -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX% -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DTINYSPLINE_BUILD_EXAMPLES=OFF -DTINYSPLINE_BUILD_DOCS=OFF -DTINYSPLINE_INSTALL_LIBRARY_DIR=lib",
        "cmake --build .",
        "ctest",
        "cmake --install . --strip"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "mantkiew"
      ]
    },
    "package": {
      "name": "libtinyspline",
      "version": "0.6.0"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "3ea31b610dd279266f26fd7ad5b5fca7a20c0bbe05c7c32430ed6aa54d57097a",
      "url": "https://github.com/msteinbeck/tinyspline/archive/refs/tags/v0.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_INC%\\tinyspline.h exit 1",
        "if not exist %LIBRARY_BIN%\\tinyspline%SHLIB_EXT% exit 1",
        "if not exist %LIBRARY_INC%\\tinysplinecxx.h exit 1",
        "if not exist %LIBRARY_BIN%\\tinysplinecxx%SHLIB_EXT% exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}