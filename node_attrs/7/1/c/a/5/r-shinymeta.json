{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "83409e168f0ded94b09344b7c01a58384ff10ddd",
  "feedstock_hash_ts": 1758045301,
  "feedstock_name": "r-shinymeta",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://rstudio.github.io/shinymeta/, https://github.com/rstudio/shinymeta",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provides tools for capturing logic in a Shiny app and exposing it as code that can be run outside of Shiny (e.g., from an R console). It also provides tools for bundling both the code and results to the end user."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-shinymeta",
      "version": "0.2.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ],
      "run": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "45e57d7d85ad834344d68d079eda9ac25ec030b4a93fc6ea93dbf754a68b044b",
      "url": [
        "https://cran.r-project.org/src/contrib/shinymeta_0.2.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/shinymeta/shinymeta_0.2.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('shinymeta')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://rstudio.github.io/shinymeta/, https://github.com/rstudio/shinymeta",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Provides tools for capturing logic in a Shiny app and exposing it as code that can be run outside of Shiny (e.g., from an R console). It also provides tools for bundling both the code and results to the end user."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-shinymeta",
      "version": "0.2.1"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ],
      "run": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "45e57d7d85ad834344d68d079eda9ac25ec030b4a93fc6ea93dbf754a68b044b",
      "url": [
        "https://cran.r-project.org/src/contrib/shinymeta_0.2.1.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/shinymeta/shinymeta_0.2.1.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('shinymeta')\""
      ]
    }
  },
  "name": "r-shinymeta",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-shinymeta"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-shinymeta.json"
  },
  "raw_meta_yaml": "{% set version = \"0.2.1\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-shinymeta\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/shinymeta_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/shinymeta/shinymeta_{{ version }}.tar.gz\n  sha256: 45e57d7d85ad834344d68d079eda9ac25ec030b4a93fc6ea93dbf754a68b044b\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-callr\n    - r-fastmap\n    - r-fs\n    - r-htmltools\n    - r-rlang\n    - r-shiny >=1.6.0\n    - r-sourcetools\n    - r-styler\n  run:\n    - r-base\n    - r-callr\n    - r-fastmap\n    - r-fs\n    - r-htmltools\n    - r-rlang\n    - r-shiny >=1.6.0\n    - r-sourcetools\n    - r-styler\n\ntest:\n  commands:\n    - $R -e \"library('shinymeta')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('shinymeta')\\\"\"  # [win]\n\nabout:\n  home: https://rstudio.github.io/shinymeta/, https://github.com/rstudio/shinymeta\n  license: GPL-3.0-only\n  summary: Provides tools for capturing logic in a Shiny app and exposing it as code that can be run outside of Shiny (e.g., from an R console). It also provides tools for bundling both the code and results to the end user.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-callr",
      "r-fastmap",
      "r-fs",
      "r-htmltools",
      "r-rlang",
      "r-shiny",
      "r-sourcetools",
      "r-styler"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-callr",
        "r-fastmap",
        "r-fs",
        "r-htmltools",
        "r-rlang",
        "r-shiny >=1.6.0",
        "r-sourcetools",
        "r-styler"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/shinymeta_0.2.1.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/shinymeta/shinymeta_0.2.1.tar.gz"
  ],
  "version": "0.2.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-shinymeta.json"
  }
}