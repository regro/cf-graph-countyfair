{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-rio",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/leeper/rio",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Streamlined data import and export by making assumptions that the user is probably willing to make: 'import()' and 'export()' determine the data structure from the file extension, reasonable defaults are used for data import and export (e.g., 'stringsAsFactors=FALSE'), web-based import is natively supported (including from SSL/HTTPS), compressed files can be read directly without explicit decompression, and fast import packages are used where appropriate. An additional convenience function, 'convert()', provides a simple method for converting between file types."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rio",
      "version": "1.2.4"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r.utils",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ],
      "run": [
        "r-base",
        "r-r.utils",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "bbc46e204fa3401e785e93b4dd55ab460d63df67b91a6e86d24aa84947dd43e2",
      "url": [
        "https://cran.r-project.org/src/contrib/rio_1.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rio/rio_1.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rio')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl",
        "r-data.table",
        "r-foreign",
        "r-haven",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl",
        "r-tibble",
        "r-writexl"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl",
        "r-data.table",
        "r-foreign",
        "r-haven",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl",
        "r-tibble",
        "r-writexl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/leeper/rio",
      "license": "GPL-2.0-only",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Streamlined data import and export by making assumptions that the user is probably willing to make: 'import()' and 'export()' determine the data structure from the file extension, reasonable defaults are used for data import and export (e.g., 'stringsAsFactors=FALSE'), web-based import is natively supported (including from SSL/HTTPS), compressed files can be read directly without explicit decompression, and fast import packages are used where appropriate. An additional convenience function, 'convert()', provides a simple method for converting between file types."
    },
    "build": {
      "noarch": "generic",
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rio",
      "version": "1.2.4"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-r.utils",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ],
      "run": [
        "r-base",
        "r-r.utils",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "bbc46e204fa3401e785e93b4dd55ab460d63df67b91a6e86d24aa84947dd43e2",
      "url": [
        "https://cran.r-project.org/src/contrib/rio_1.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rio/rio_1.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rio')\""
      ]
    }
  },
  "name": "r-rio",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-rio"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-rio.json"
  },
  "raw_meta_yaml": "{% set version = \"1.2.4\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-rio\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/rio_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rio/rio_{{ version }}.tar.gz\n  sha256: bbc46e204fa3401e785e93b4dd55ab460d63df67b91a6e86d24aa84947dd43e2\n\nbuild:\n  number: 0\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-r.utils\n    - r-curl >=0.6\n    - r-data.table >=1.11.2\n    - r-foreign\n    - r-haven >=1.1.2\n    - r-lifecycle\n    - r-nanoparquet\n    - r-readr\n    - r-readxl >=0.1.1\n    - r-tibble\n    - r-writexl\n  run:\n    - r-base\n    - r-r.utils\n    - r-curl >=0.6\n    - r-data.table >=1.11.2\n    - r-foreign\n    - r-haven >=1.1.2\n    - r-lifecycle\n    - r-nanoparquet\n    - r-readr\n    - r-readxl >=0.1.1\n    - r-tibble\n    - r-writexl\n\ntest:\n  commands:\n    - $R -e \"library('rio')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rio')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/leeper/rio\n  license: GPL-2.0-only\n  summary: \"Streamlined data import and export by making assumptions that the user is probably willing to make: 'import()' and 'export()' determine the data structure from the file extension, reasonable defaults are used for data import and export (e.g., 'stringsAsFactors=FALSE'), web-based import is natively supported (including\n    from SSL/HTTPS), compressed files can be read directly without explicit decompression, and fast import packages are used where appropriate. An additional convenience function, 'convert()', provides a simple method for converting between file types.\"\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-curl",
      "r-data.table",
      "r-foreign",
      "r-haven",
      "r-lifecycle",
      "r-nanoparquet",
      "r-r.utils",
      "r-readr",
      "r-readxl",
      "r-tibble",
      "r-writexl"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl",
        "r-data.table",
        "r-foreign",
        "r-haven",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl",
        "r-tibble",
        "r-writexl"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl",
        "r-data.table",
        "r-foreign",
        "r-haven",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl",
        "r-tibble",
        "r-writexl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-curl >=0.6",
        "r-data.table >=1.11.2",
        "r-foreign",
        "r-haven >=1.1.2",
        "r-lifecycle",
        "r-nanoparquet",
        "r-r.utils",
        "r-readr",
        "r-readxl >=0.1.1",
        "r-tibble",
        "r-writexl"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/rio_1.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rio/rio_1.2.4.tar.gz"
  ],
  "version": "1.2.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-rio.json"
  }
}