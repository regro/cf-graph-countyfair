{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "a6db0171d6691e89fd5f76b802aa69ed9b4bf363",
  "feedstock_hash_ts": 1736411661,
  "feedstock_name": "partialwrap",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "partialwrap is a Python library providing easy wrapper functions\nto use with Python’s functools.partial. Partial's ingenious\nmechanism allows to use even very complex functions with many\narguments and keyword arguments with routines that need functions in\nthe simple form func(x). This includes Python's map function,\nthe minimizers in scipy.optimize, and plenty of third-party modules\nsuch as emcee or pyeee. partialwrap allows to use any\nexternal executable as well as any Python function with arbitrary\narguments and keywords to be used with functools.partial. It also\nallows to use the executables or functions with easy parallelization\nof code with, for example, the parallel map function of the\nmultiprocessing module or via the Message Passing Interface\n(MPI).\n",
      "dev_url": "https://github.com/mcuntz/partialwrap",
      "doc_url": "https://mcuntz.github.io/partialwrap/",
      "home": "https://github.com/mcuntz/partialwrap",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A small Python library providing wrappers for external executables and Python functions to be used easily with Python’s functools.partial"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mcuntz"
      ]
    },
    "package": {
      "name": "partialwrap",
      "version": "2.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools >=42",
        "setuptools_scm >=3.5"
      ],
      "run": [
        "python >=3.9",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1246841e3ef0dd652519f0136606d978b31ba6da9b5f5036e104ac384ca5f57e",
      "url": "https://pypi.org/packages/source/p/partialwrap/partialwrap-2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "partialwrap"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "partialwrap is a Python library providing easy wrapper functions\nto use with Python’s functools.partial. Partial's ingenious\nmechanism allows to use even very complex functions with many\narguments and keyword arguments with routines that need functions in\nthe simple form func(x). This includes Python's map function,\nthe minimizers in scipy.optimize, and plenty of third-party modules\nsuch as emcee or pyeee. partialwrap allows to use any\nexternal executable as well as any Python function with arbitrary\narguments and keywords to be used with functools.partial. It also\nallows to use the executables or functions with easy parallelization\nof code with, for example, the parallel map function of the\nmultiprocessing module or via the Message Passing Interface\n(MPI).\n",
      "dev_url": "https://github.com/mcuntz/partialwrap",
      "doc_url": "https://mcuntz.github.io/partialwrap/",
      "home": "https://github.com/mcuntz/partialwrap",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A small Python library providing wrappers for external executables and Python functions to be used easily with Python’s functools.partial"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "mcuntz"
      ]
    },
    "package": {
      "name": "partialwrap",
      "version": "2.0"
    },
    "requirements": {
      "host": [
        "python 3.9",
        "pip",
        "setuptools >=42",
        "setuptools_scm >=3.5"
      ],
      "run": [
        "python >=3.9",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1246841e3ef0dd652519f0136606d978b31ba6da9b5f5036e104ac384ca5f57e",
      "url": "https://pypi.org/packages/source/p/partialwrap/partialwrap-2.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "partialwrap"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "partialwrap",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "partialwrap"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/partialwrap.json"
  },
  "raw_meta_yaml": "{% set name = \"partialwrap\" %}\n{% set version = \"2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/partialwrap-{{ version }}.tar.gz\n  sha256: 1246841e3ef0dd652519f0136606d978b31ba6da9b5f5036e104ac384ca5f57e\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python {{ python_min }}\n    - pip\n    - setuptools >=42\n    - setuptools_scm >=3.5\n  run:\n    - python >={{ python_min }}\n    - numpy\n\ntest:\n  imports:\n    - partialwrap\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/mcuntz/partialwrap\n  summary: \"A small Python library providing wrappers for external executables and Python functions to be used easily with Python’s functools.partial\"\n  dev_url: https://github.com/mcuntz/partialwrap\n  license: MIT\n  license_file: LICENSE\n  description: |\n    partialwrap is a Python library providing easy wrapper functions\n    to use with Python’s functools.partial. Partial's ingenious\n    mechanism allows to use even very complex functions with many\n    arguments and keyword arguments with routines that need functions in\n    the simple form func(x). This includes Python's map function,\n    the minimizers in scipy.optimize, and plenty of third-party modules\n    such as emcee or pyeee. partialwrap allows to use any\n    external executable as well as any Python function with arbitrary\n    arguments and keywords to be used with functools.partial. It also\n    allows to use the executables or functions with easy parallelization\n    of code with, for example, the parallel map function of the\n    multiprocessing module or via the Message Passing Interface\n    (MPI).\n  doc_url: https://mcuntz.github.io/partialwrap/\n\nextra:\n  recipe-maintainers:\n    - mcuntz\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pip",
      "python",
      "setuptools",
      "setuptools_scm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools_scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools >=42",
        "setuptools_scm >=3.5"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/partialwrap/partialwrap-2.0.tar.gz",
  "version": "2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/partialwrap.json"
  }
}