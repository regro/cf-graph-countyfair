{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-runonce",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/runonce",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Package 'runonce' helps automating the saving of long-running code to help running the same code multiple times. If you run some long-running code once, it saves the result in a file on disk. Then, if the result already exists, i.e. if the code has already been run and its output has already been saved, it just reads the result from the stored file instead of running the code again."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-runonce",
      "version": "0.2.3"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ],
      "run": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d686d9735af28b987cb8858620c5194454155dae23ebc3da376bb04613ff9512",
      "url": [
        "https://cran.r-project.org/src/contrib/runonce_0.2.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/runonce/runonce_0.2.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('runonce')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/privefl/runonce",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Package 'runonce' helps automating the saving of long-running code to help running the same code multiple times. If you run some long-running code once, it saves the result in a file on disk. Then, if the result already exists, i.e. if the code has already been run and its output has already been saved, it just reads the result from the stored file instead of running the code again."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "pettyalex"
      ]
    },
    "package": {
      "name": "r-runonce",
      "version": "0.2.3"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ],
      "run": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d686d9735af28b987cb8858620c5194454155dae23ebc3da376bb04613ff9512",
      "url": [
        "https://cran.r-project.org/src/contrib/runonce_0.2.3.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/runonce/runonce_0.2.3.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('runonce')\""
      ]
    }
  },
  "name": "r-runonce",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-runonce"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-runonce.json"
  },
  "raw_meta_yaml": "{% set version = '0.2.3' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-runonce\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/runonce_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/runonce/runonce_{{ version }}.tar.gz\n  sha256: d686d9735af28b987cb8858620c5194454155dae23ebc3da376bb04613ff9512\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-bigassertr\n    - r-urltools\n  run:\n    - r-base\n    - r-bigassertr\n    - r-urltools\n\ntest:\n  commands:\n    - $R -e \"library('runonce')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('runonce')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/privefl/runonce\n  license: GPL-3.0-only\n  summary: Package 'runonce' helps automating the saving of long-running code to help running\n    the same code multiple times. If you run some long-running code once, it saves the\n    result in a file on disk. Then, if the result already exists, i.e. if the code has\n    already been run and its output has already been saved, it just reads the result\n    from the stored file instead of running the code again.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - pettyalex\n\n# Package: runonce\n# Title: Run Once and Save Result\n# Version: 0.2.3\n# Authors@R: person(\"Florian\", \"Prive\", role = c(\"aut\", \"cre\"), email = \"florian.prive.21@gmail.com\")\n# Description: Package 'runonce' helps automating the saving of long-running code to help running the same code multiple times. If you run some long-running code once, it saves the result in a file on disk. Then, if the result already exists, i.e. if the code has already been run and its output has already been saved, it just reads the result from the stored file instead of running the code again.\n# License: GPL-3\n# Encoding: UTF-8\n# RoxygenNote: 7.1.1\n# Imports: bigassertr, urltools\n# Suggests: testthat (>= 2.1.0), covr\n# URL: https://github.com/privefl/runonce\n# BugReports: https://github.com/privefl/runonce/issues\n# NeedsCompilation: no\n# Packaged: 2021-10-02 08:22:15 UTC; au639593\n# Author: Florian Prive [aut, cre]\n# Maintainer: Florian Prive <florian.prive.21@gmail.com>\n# Repository: CRAN\n# Date/Publication: 2021-10-02 08:30:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-bigassertr",
      "r-urltools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-bigassertr",
        "r-urltools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/runonce_0.2.3.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/runonce/runonce_0.2.3.tar.gz"
  ],
  "version": "0.2.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-runonce.json"
  }
}