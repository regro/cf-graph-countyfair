{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_name": "lbfgspp",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      },
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      },
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      },
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      },
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      },
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done",
        "if not exist %LIBRARY_PREFIX%\\include\\LBFGS.h exit 1",
        "if not exist %LIBRARY_PREFIX%\\include\\LBFGSB.h exit 1"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "name": "lbfgspp",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $PREFIX/include/LBFGS.h",
        "test -f $PREFIX/include/LBFGSB.h",
        "test -d $PREFIX/include/LBFGSpp",
        "set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "lbfgspp"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lbfgspp.json"
  },
  "raw_meta_yaml": "{% set name = \"lbfgspp\" %}\n{% set version = \"0.4.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/yixuan/lbfgspp/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: 39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n  host:\n    - eigen >=3,<4\n  run:\n    - eigen >=3,<4\n\ntest:\n  source_files:\n    - examples/\n  requires:\n    - {{ compiler('cxx') }}\n  commands:\n    - test -f $PREFIX/include/LBFGS.h  # [unix]\n    - test -f $PREFIX/include/LBFGSB.h  # [unix]\n    - test -d $PREFIX/include/LBFGSpp  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\LBFGS.h exit 1  # [win]\n    - if not exist %LIBRARY_PREFIX%\\include\\LBFGSB.h exit 1  # [win]\n    - set -ex; for i in examples/*.cpp; do $CXX $CXXFLAGS -I$PREFIX/include/eigen3 -o \"$i.out\" \"$i\" && \"$i.out\"; done  # [unix and target_platform == build_platform]\n\n\nabout:\n  license: MIT\n  license_file: LICENSE.md\n  summary: |\n    A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n  home: https://lbfgspp.statr.me/\n  dev_url: https://github.com/yixuan/LBFGSpp\n\nextra:\n  recipe-maintainers:\n    - awvwgk\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "eigen",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen >=3,<4"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen >=3,<4"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  },
  "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz",
  "version": "0.4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lbfgspp.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/yixuan/LBFGSpp",
      "home": "https://lbfgspp.statr.me/",
      "license": "MIT",
      "license_file": "LICENSE.md",
      "summary": "A header-only C++ library for L-BFGS and L-BFGS-B algorithms\n"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "awvwgk"
      ]
    },
    "package": {
      "name": "lbfgspp",
      "version": "0.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "eigen >=3,<4"
      ],
      "run": [
        "eigen >=3,<4"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "39c4aaebd8b94ccdc98191d51913a31cddd618cc0869d99f07a4b6da83ca6254",
        "url": "https://github.com/yixuan/lbfgspp/archive/refs/tags/v0.4.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\include\\LBFGS.h exit 1",
        "if not exist %LIBRARY_PREFIX%\\include\\LBFGSB.h exit 1"
      ],
      "requires": [
        "cxx_compiler_stub"
      ],
      "source_files": [
        "examples/"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    }
  }
}