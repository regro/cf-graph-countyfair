{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_64": "github_actions"
    },
    "skip_render": [
      ".github/PULL_REQUEST_TEMPLATE.md"
    ],
    "upload_on_branch": "main"
  },
  "feedstock_name": "conda-forge-repodata-patches",
  "linux_64_meta_yaml": {
    "about": {
      "description": "See the [recipe/README.md](recipe/README.md) for how generate patches from static YAML files.\nThis mechanism should work for most things. If it does not work for your specific case, you\ncan write custom code in `generate_patch_json.py`.\n",
      "home": "https://github.com/conda-forge/conda-forge-repodata-patches-feedstock",
      "license": "CC-PDDC",
      "summary": "generate tweaks to index metadata, hosted separately from anaconda.org index"
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "script": [
        "pytest -vv test_patch_yaml_utils.py",
        "pytest -vv test_gen_patch_json.py",
        "python gen_patch_json.py"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/core"
      ]
    },
    "package": {
      "name": "conda-forge-repodata-patches",
      "version": "20250802.19.28.32"
    },
    "requirements": {
      "build": [
        "python 3.11.*",
        "requests",
        "tqdm",
        "license-expression",
        "packaging",
        "pyyaml",
        "pydantic !=2.9.*",
        "pytest",
        "conda-build",
        "zstandard"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -e $PREFIX/noarch/patch_instructions.json",
        "test -e $PREFIX/linux-64/patch_instructions.json",
        "test -e $PREFIX/linux-armv7l/patch_instructions.json",
        "test -e $PREFIX/linux-ppc64le/patch_instructions.json",
        "test -e $PREFIX/osx-64/patch_instructions.json",
        "test -e $PREFIX/osx-arm64/patch_instructions.json",
        "test -e $PREFIX/win-32/patch_instructions.json",
        "test -e $PREFIX/win-64/patch_instructions.json"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "conda-build",
        "license-expression",
        "packaging",
        "pydantic",
        "pytest",
        "python",
        "pyyaml",
        "requests",
        "tqdm",
        "zstandard"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "See the [recipe/README.md](recipe/README.md) for how generate patches from static YAML files.\nThis mechanism should work for most things. If it does not work for your specific case, you\ncan write custom code in `generate_patch_json.py`.\n",
      "home": "https://github.com/conda-forge/conda-forge-repodata-patches-feedstock",
      "license": "CC-PDDC",
      "summary": "generate tweaks to index metadata, hosted separately from anaconda.org index"
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "script": [
        "pytest -vv test_patch_yaml_utils.py",
        "pytest -vv test_gen_patch_json.py",
        "python gen_patch_json.py"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/core"
      ]
    },
    "package": {
      "name": "conda-forge-repodata-patches",
      "version": "20250802.19.28.32"
    },
    "requirements": {
      "build": [
        "python 3.11.*",
        "requests",
        "tqdm",
        "license-expression",
        "packaging",
        "pyyaml",
        "pydantic !=2.9.*",
        "pytest",
        "conda-build",
        "zstandard"
      ],
      "host": [],
      "run": []
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "commands": [
        "test -e $PREFIX/noarch/patch_instructions.json",
        "test -e $PREFIX/linux-64/patch_instructions.json",
        "test -e $PREFIX/linux-armv7l/patch_instructions.json",
        "test -e $PREFIX/linux-ppc64le/patch_instructions.json",
        "test -e $PREFIX/osx-64/patch_instructions.json",
        "test -e $PREFIX/osx-arm64/patch_instructions.json",
        "test -e $PREFIX/win-32/patch_instructions.json",
        "test -e $PREFIX/win-64/patch_instructions.json"
      ]
    }
  },
  "name": "conda-forge-repodata-patches",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "conda-forge-repodata-patches"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/conda-forge-repodata-patches.json"
  },
  "raw_meta_yaml": "{% set version = datetime.datetime.utcnow().strftime('%Y%m%d.%H.%M.%S') %}\n\npackage:\n  name: conda-forge-repodata-patches\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  noarch: generic\n  number: 1\n  script:\n    - pytest -vv test_patch_yaml_utils.py\n    - pytest -vv test_gen_patch_json.py\n    - python gen_patch_json.py\n\nrequirements:\n  build:\n    - python 3.11.*\n    - requests\n    - tqdm\n    - license-expression\n    - packaging\n    - pyyaml\n    - pydantic !=2.9.*\n    - pytest\n    - conda-build\n    - zstandard\n  host:\n  run:\n\ntest:\n  commands:\n    - test -e $PREFIX/noarch/patch_instructions.json\n    - test -e $PREFIX/linux-64/patch_instructions.json\n    - test -e $PREFIX/linux-armv7l/patch_instructions.json\n    - test -e $PREFIX/linux-ppc64le/patch_instructions.json\n    - test -e $PREFIX/osx-64/patch_instructions.json\n    - test -e $PREFIX/osx-arm64/patch_instructions.json\n    - test -e $PREFIX/win-32/patch_instructions.json\n    - test -e $PREFIX/win-64/patch_instructions.json\n\nabout:\n  summary: generate tweaks to index metadata, hosted separately from anaconda.org index\n  home: https://github.com/conda-forge/conda-forge-repodata-patches-feedstock\n  license: CC-PDDC\n  description: |\n    See the [recipe/README.md](recipe/README.md) for how generate patches from static YAML files.\n    This mechanism should work for most things. If it does not work for your specific case, you\n    can write custom code in `generate_patch_json.py`.\n\nextra:\n  recipe-maintainers:\n    - conda-forge/core\n",
  "req": {
    "__set__": true,
    "elements": [
      "conda-build",
      "license-expression",
      "packaging",
      "pydantic",
      "pytest",
      "python",
      "pyyaml",
      "requests",
      "tqdm",
      "zstandard"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "conda-build",
        "license-expression",
        "packaging",
        "pydantic",
        "pytest",
        "python",
        "pyyaml",
        "requests",
        "tqdm",
        "zstandard"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "time": 1568135298.5226595,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "conda-build",
        "license-expression",
        "packaging",
        "pydantic !=2.9.*",
        "pytest",
        "python 3.11.*",
        "pyyaml",
        "requests",
        "tqdm",
        "zstandard"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": null,
  "version": "20250802.19.28.32",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/conda-forge-repodata-patches.json"
  }
}