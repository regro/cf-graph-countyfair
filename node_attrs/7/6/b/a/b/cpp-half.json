{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "bb90a270ec3c255b7e2e4af5693d79e3f1809b78",
  "feedstock_hash_ts": 1730837987,
  "feedstock_name": "cpp-half",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake",
        "if exist %LIBRARY_PREFIX%\\include\\half_float\\half.hpp (exit 0) else (exit 1)",
        "if exist %LIBRARY_PREFIX%\\lib\\cmake\\halfFloatConfig.cmake (exit 0) else (exit 1)"
      ]
    }
  },
  "name": "cpp-half",
  "osx_64_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake",
        "make"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/include/half_float/half.hpp",
        "test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cpp-half"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cpp-half.json"
  },
  "raw_meta_yaml": "{% set name = \"cpp-half\" %}\n{% set version = \"2.1.0\" %}\n{% set sha256 = \"b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/davidbrochart/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - make  # [unix]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/half_float/half.hpp  # [unix]\n    - test -f ${PREFIX}/lib/cmake/halfFloat/halfFloatConfig.cmake  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\half_float\\half.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\halfFloatConfig.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: http://half.sourceforge.net\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: Half-precision floating-point library\n  description: |\n    This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\n    half-precision floating-point type along with corresponding arithmetic\n    operators, type conversions and common mathematical functions. It aims for\n    both efficiency and ease of use, trying to accurately mimic the behaviour\n    of the built-in floating-point types at the best performance possible.\n\nextra:\n  recipe-maintainers:\n    - davidbrochart\n    - SylvainCorlay\n    - JohanMabille\n",
  "req": {
    "__set__": true,
    "elements": [
      "cmake",
      "cxx_compiler_stub",
      "make"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz",
  "version": "2.1.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cpp-half.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "This is a C++ header-only library to provide an IEEE 754 conformant 16-bit\nhalf-precision floating-point type along with corresponding arithmetic\noperators, type conversions and common mathematical functions. It aims for\nboth efficiency and ease of use, trying to accurately mimic the behaviour\nof the built-in floating-point types at the best performance possible.\n",
      "home": "http://half.sourceforge.net",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Half-precision floating-point library"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "davidbrochart",
        "SylvainCorlay",
        "JohanMabille"
      ]
    },
    "package": {
      "name": "cpp-half",
      "version": "2.1.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cmake"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "cpp-half-2.1.0.tar.gz",
      "sha256": "b287a89d37a1cbf305113c152ee2ba9a58802a12233569909c4ce068d78e31b7",
      "url": "https://github.com/davidbrochart/cpp-half/archive/2.1.0.tar.gz"
    },
    "test": {
      "commands": [
        "if exist %LIBRARY_PREFIX%\\include\\half_float\\half.hpp (exit 0) else (exit 1)",
        "if exist %LIBRARY_PREFIX%\\lib\\cmake\\halfFloatConfig.cmake (exit 0) else (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}