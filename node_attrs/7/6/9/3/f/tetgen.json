{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_hash": "d25125a699b5b29096b62f7f52358ca2db966c18",
  "feedstock_hash_ts": 1730889852,
  "feedstock_name": "tetgen",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\ndomains. TetGen generates exact constrained Delaunay tetrahedralizations,\nboundary conforming Delaunay meshes, and Voronoi partitions.\n",
      "home": "http://wias-berlin.de/software/tetgen",
      "license": "AGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "nehaljwani",
        "cekees",
        "msarahan"
      ]
    },
    "package": {
      "name": "tetgen",
      "version": "1.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake >2.8",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "tetgen-1.6.0.tar.gz",
      "patches": [
        "0001-Add-cmake-install-directive-for-targets.patch"
      ],
      "sha256": "87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39",
      "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/tetgen",
        "test -f ${PREFIX}/lib/libtet.a",
        "test -f ${PREFIX}/include/tetgen.h"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\ndomains. TetGen generates exact constrained Delaunay tetrahedralizations,\nboundary conforming Delaunay meshes, and Voronoi partitions.\n",
      "home": "http://wias-berlin.de/software/tetgen",
      "license": "AGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "nehaljwani",
        "cekees",
        "msarahan"
      ]
    },
    "package": {
      "name": "tetgen",
      "version": "1.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake >2.8",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "tetgen-1.6.0.tar.gz",
      "patches": [
        "0001-Add-cmake-install-directive-for-targets.patch"
      ],
      "sha256": "87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39",
      "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/tetgen",
        "test -f ${PREFIX}/lib/libtet.a",
        "test -f ${PREFIX}/include/tetgen.h",
        "if not exist %LIBRARY_INC%\\\\tetgen.h exit 1",
        "if not exist %LIBRARY_LIB%\\\\tet.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\tetgen.exe exit 1"
      ]
    }
  },
  "name": "tetgen",
  "osx_64_meta_yaml": {
    "about": {
      "description": "TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\ndomains. TetGen generates exact constrained Delaunay tetrahedralizations,\nboundary conforming Delaunay meshes, and Voronoi partitions.\n",
      "home": "http://wias-berlin.de/software/tetgen",
      "license": "AGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "nehaljwani",
        "cekees",
        "msarahan"
      ]
    },
    "package": {
      "name": "tetgen",
      "version": "1.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake >2.8",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "tetgen-1.6.0.tar.gz",
      "patches": [
        "0001-Add-cmake-install-directive-for-targets.patch"
      ],
      "sha256": "87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39",
      "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -f ${PREFIX}/bin/tetgen",
        "test -f ${PREFIX}/lib/libtet.a",
        "test -f ${PREFIX}/include/tetgen.h"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "tetgen"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/tetgen.json"
  },
  "raw_meta_yaml": "{% set name = \"tetgen\" %}\n{% set version = \"1.6.0\" %}\n{% set sha256 = \"87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: http://wias-berlin.de/software/tetgen/1.5/src/tetgen{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - 0001-Add-cmake-install-directive-for-targets.patch\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >2.8\n    - ninja\n\ntest:\n  commands:\n    - test -f ${PREFIX}/bin/tetgen  # [unix]\n    - test -f ${PREFIX}/lib/libtet.a  # [unix]\n    - test -f ${PREFIX}/include/tetgen.h  # [unix]\n    - if not exist %LIBRARY_INC%\\\\tetgen.h exit 1  # [win]\n    - if not exist %LIBRARY_LIB%\\\\tet.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\tetgen.exe exit 1  # [win]\n\nabout:\n  home: http://wias-berlin.de/software/tetgen\n  license: AGPL-3.0-or-later\n  license_file: LICENSE\n  summary: A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator\n  description: |\n    TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\n    domains. TetGen generates exact constrained Delaunay tetrahedralizations,\n    boundary conforming Delaunay meshes, and Voronoi partitions.\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - cekees\n    - msarahan\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake >2.8",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz",
  "version": "1.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/tetgen.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "TetGen is a program to generate tetrahedral meshes of any 3D polyhedral\ndomains. TetGen generates exact constrained Delaunay tetrahedralizations,\nboundary conforming Delaunay meshes, and Voronoi partitions.\n",
      "home": "http://wias-berlin.de/software/tetgen",
      "license": "AGPL-3.0-or-later",
      "license_file": "LICENSE",
      "summary": "A Quality Tetrahedral Mesh Generator and a 3D Delaunay Triangulator"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "nehaljwani",
        "cekees",
        "msarahan"
      ]
    },
    "package": {
      "name": "tetgen",
      "version": "1.6.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake >2.8",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "tetgen-1.6.0.tar.gz",
      "patches": [
        "0001-Add-cmake-install-directive-for-targets.patch"
      ],
      "sha256": "87b5e61ebd3a471fc4f2cdd7124c2b11dd6639f4feb1f941a5d2f5110d05ce39",
      "url": "http://wias-berlin.de/software/tetgen/1.5/src/tetgen1.6.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_INC%\\\\tetgen.h exit 1",
        "if not exist %LIBRARY_LIB%\\\\tet.lib exit 1",
        "if not exist %LIBRARY_BIN%\\\\tetgen.exe exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}