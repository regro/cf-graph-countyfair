{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r_clang_activation",
  "meta_yaml": {
    "about": {
      "description": "Use clang as an alternative compiler for R packages. Add this as a\nbuild requirement using the Jinja function `compiler('r_clang')`.\n",
      "home": "https://github.com/conda-forge/r_clang_activation-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE.txt",
      "summary": "Activation scripts for using Clang as a compiler in R packages"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "r_clang_activation",
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r_clang_win-64",
      "version": "20.1"
    },
    "requirements": {
      "run": [
        "clang_win-64  20.1",
        "clangxx_win-64  20.1"
      ]
    },
    "schema_version": 0,
    "test": {
      "files": [
        "test.cpp",
        "test_cxx17.cpp"
      ],
      "requires": [
        "m2-make",
        "m2-filesystem",
        "posix",
        "r-base >=3.6",
        "r-usethis"
      ]
    }
  },
  "name": "r_clang_win-64",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r_clang_win-64"
    ]
  },
  "parsing_error": "feedstock parsing error: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'Failed to render recipe YAML! No output recipes found!'\nTraceback (most recent call last):\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/make_graph.py\", line 107, in try_load_feedstock\n    data = load_feedstock(name, attrs.data, mark_not_archived=mark_not_archived)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 756, in load_feedstock\n    return load_feedstock_containerized(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/cf-scripts/cf-scripts/cf-scripts/conda_forge_tick/feedstock_parser.py\", line 703, in load_feedstock_containerized\n    data = run_container_operation(\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/micromamba/envs/cf-scripts/lib/python3.11/site-packages/conda_forge_feedstock_ops/container_utils.py\", line 232, in run_container_operation\n    raise ContainerRuntimeError(\nconda_forge_feedstock_ops.container_utils.ContainerRuntimeError: Error running 'conda-forge-tick-container parse-feedstock --existing-feedstock-node-attrs - --log-level info --mark-not-archived' in container - error RuntimeError raised:\n'Failed to render recipe YAML! No output recipes found!'\n",
  "platforms": [
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r_clang_activation.json"
  },
  "raw_meta_yaml": "{% set version = \"20.1\" %}\n\npackage:\n  name: \"r_clang_{{ target_platform }}\"\n  version: {{ version }}\n\nbuild:\n  number: 0\n  skip: true  # [not win]\n\nrequirements:\n  run:\n    - clang_{{ target_platform }}  {{ version }}\n    - clangxx_{{ target_platform }}  {{ version }}\n\ntest:\n  requires:\n    - m2-make        # [win]\n    - m2-filesystem  # [win]\n    - posix          # [win]\n    - r-base >=3.6\n    - r-usethis\n  files:\n    - test.cpp\n    - test_cxx17.cpp\n\nabout:\n  home: https://github.com/conda-forge/r_clang_activation-feedstock\n  license: BSD-3-Clause\n  license_file: LICENSE.txt\n  summary: Activation scripts for using Clang as a compiler in R packages\n  description: |\n    Use clang as an alternative compiler for R packages. Add this as a\n    build requirement using the Jinja function `compiler('r_clang')`.\n\nextra:\n  feedstock-name: r_clang_activation\n  recipe-maintainers:\n    - conda-forge/r\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "clang_win-64",
      "clangxx_win-64"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang-win-activation",
        "ctng-compiler-activation"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang-win-activation",
        "clang_win-64",
        "clangxx_win-64",
        "ctng-compiler-activation"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2-filesystem",
        "m2-make",
        "posix",
        "r-base",
        "r-usethis"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_win-64  20.1",
        "clangxx_win-64  20.1"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2-filesystem",
        "m2-make",
        "posix",
        "r-base >=3.6",
        "r-usethis"
      ]
    }
  },
  "version": "20.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r_clang_activation.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Use clang as an alternative compiler for R packages. Add this as a\nbuild requirement using the Jinja function `compiler('r_clang')`.\n",
      "home": "https://github.com/conda-forge/r_clang_activation-feedstock",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE.txt",
      "summary": "Activation scripts for using Clang as a compiler in R packages"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "r_clang_activation",
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r_clang_win-64",
      "version": "20.1"
    },
    "requirements": {
      "run": [
        "clang_win-64  20.1",
        "clangxx_win-64  20.1"
      ]
    },
    "schema_version": 0,
    "test": {
      "files": [
        "test.cpp",
        "test_cxx17.cpp"
      ],
      "requires": [
        "m2-make",
        "m2-filesystem",
        "posix",
        "r-base >=3.6",
        "r-usethis"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_win-64",
        "clangxx_win-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2-filesystem",
        "m2-make",
        "posix",
        "r-base",
        "r-usethis"
      ]
    }
  }
}