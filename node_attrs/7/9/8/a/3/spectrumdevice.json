{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "c3dd14597d7d0cfa723ae255e6d879da1294ea50",
  "feedstock_hash_ts": 1730846702,
  "feedstock_name": "spectrumdevice",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "spectrumdevice is a high-level, object-oriented Python library for controlling Spectrum Instrumentation devices.\nIt can connect to individual digitisers or StarHubs (e.g. the NetBox). The main module spectrumdevice provides\ntwo classes SpectrumDigitiserCard and SpectrumDigitiserStarHub for controlling and receiving data from individual\ndigitisers and StarHubs respectively. Mock classes are also provided for testing software without drivers installed\nor hardware connected.The submodule spectrumdevice.settings provides Enums and Dataclasses wrapping the register values\nprovided by the Spectrum API, to be used for configuring hardware and interpreting responses received from hardware.\n",
      "dev_url": "https://github.com/KCL-BMEIS/spectrumdevice",
      "doc_url": "https://kcl-bmeis.github.io/spectrumdevice/",
      "home": "https://github.com/KCL-BMEIS/spectrumdevice",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A high-level, object-oriented Python library for controlling Spectrum Instrumentation digitisers"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "crnbaker"
      ]
    },
    "package": {
      "name": "spectrumdevice",
      "version": "1.2.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.10"
      ],
      "run": [
        "numpy >=1.26.2",
        "python >=3.10"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "7df9fad10794ad8b99afdd047e91fb62035d3d974bab589b95f94a40c3b0bf3e",
        "url": "https://pypi.io/packages/source/s/spectrumdevice/spectrumdevice-1.2.0.tar.gz"
      },
      {
        "folder": "test-data",
        "sha256": "dfb1f91ebcd6958b503969fc6eb8ff4d9f0ff37fe88526a372d473014e7e2014",
        "url": "https://github.com/KCL-BMEIS/spectrumdevice/archive/refs/tags/v1.2.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "pip check",
        "pytest"
      ],
      "imports": [
        "spectrum_gmbh",
        "spectrumdevice"
      ],
      "requires": [
        "pip",
        "pytest ==7.4.3"
      ],
      "source_files": [
        "test-data/src/tests",
        "test-data/src/example_scripts"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "spectrumdevice is a high-level, object-oriented Python library for controlling Spectrum Instrumentation devices.\nIt can connect to individual digitisers or StarHubs (e.g. the NetBox). The main module spectrumdevice provides\ntwo classes SpectrumDigitiserCard and SpectrumDigitiserStarHub for controlling and receiving data from individual\ndigitisers and StarHubs respectively. Mock classes are also provided for testing software without drivers installed\nor hardware connected.The submodule spectrumdevice.settings provides Enums and Dataclasses wrapping the register values\nprovided by the Spectrum API, to be used for configuring hardware and interpreting responses received from hardware.\n",
      "dev_url": "https://github.com/KCL-BMEIS/spectrumdevice",
      "doc_url": "https://kcl-bmeis.github.io/spectrumdevice/",
      "home": "https://github.com/KCL-BMEIS/spectrumdevice",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A high-level, object-oriented Python library for controlling Spectrum Instrumentation digitisers"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "crnbaker"
      ]
    },
    "package": {
      "name": "spectrumdevice",
      "version": "1.2.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.10"
      ],
      "run": [
        "numpy >=1.26.2",
        "python >=3.10"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "7df9fad10794ad8b99afdd047e91fb62035d3d974bab589b95f94a40c3b0bf3e",
        "url": "https://pypi.io/packages/source/s/spectrumdevice/spectrumdevice-1.2.0.tar.gz"
      },
      {
        "folder": "test-data",
        "sha256": "dfb1f91ebcd6958b503969fc6eb8ff4d9f0ff37fe88526a372d473014e7e2014",
        "url": "https://github.com/KCL-BMEIS/spectrumdevice/archive/refs/tags/v1.2.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "pip check",
        "pytest"
      ],
      "imports": [
        "spectrum_gmbh",
        "spectrumdevice"
      ],
      "requires": [
        "pip",
        "pytest ==7.4.3"
      ],
      "source_files": [
        "test-data/src/tests",
        "test-data/src/example_scripts"
      ]
    }
  },
  "name": "spectrumdevice",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "spectrumdevice"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/spectrumdevice.json"
  },
  "raw_meta_yaml": "{% set owner = \"KCL-BMEIS\" %}\n{% set name = \"spectrumdevice\" %}\n{% set version = \"1.2.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: 7df9fad10794ad8b99afdd047e91fb62035d3d974bab589b95f94a40c3b0bf3e\n\n  - url: https://github.com/{{ owner }}/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n    sha256: dfb1f91ebcd6958b503969fc6eb8ff4d9f0ff37fe88526a372d473014e7e2014\n    folder: test-data\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.10\n  run:\n    - numpy >=1.26.2\n    - python >=3.10\n\ntest:\n  imports:\n    - spectrum_gmbh\n    - spectrumdevice\n  requires:\n    - pip\n    - pytest ==7.4.3\n  source_files:\n    - test-data/src/tests\n    - test-data/src/example_scripts\n  commands:\n    - pip check\n    - pytest\n\nabout:\n  home: https://github.com/KCL-BMEIS/spectrumdevice\n  summary: A high-level, object-oriented Python library for controlling Spectrum Instrumentation digitisers\n  description: |\n    spectrumdevice is a high-level, object-oriented Python library for controlling Spectrum Instrumentation devices.\n    It can connect to individual digitisers or StarHubs (e.g. the NetBox). The main module spectrumdevice provides\n    two classes SpectrumDigitiserCard and SpectrumDigitiserStarHub for controlling and receiving data from individual\n    digitisers and StarHubs respectively. Mock classes are also provided for testing software without drivers installed\n    or hardware connected.The submodule spectrumdevice.settings provides Enums and Dataclasses wrapping the register values\n    provided by the Spectrum API, to be used for configuring hardware and interpreting responses received from hardware.\n  doc_url: https://kcl-bmeis.github.io/spectrumdevice/\n  dev_url: https://github.com/KCL-BMEIS/spectrumdevice\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - crnbaker\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.10"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy >=1.26.2",
        "python >=3.10"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest ==7.4.3"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/s/spectrumdevice/spectrumdevice-1.2.0.tar.gz",
  "version": "1.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/spectrumdevice.json"
  }
}