{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "15d6941c3da7eb185f6501a0be15f24c0a5609df",
  "feedstock_hash_ts": 1761119900,
  "feedstock_name": "polyhedral-gravity-model",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The package polyhedral_gravity provides a simple-to-use interface for evaluating the full gravity tensor of a constant-density polyhedron at arbitrary given computation points according to the geodetic convention. The computation is based on the line integral approach by Tsoulis et al., which transforms the triple integral into a summation. The implementation relies on a fast, parallelized backbone in C++ capable of evaluating the gravity at thousands of computation points in a fraction of a second. The package includes the functionality to read a polyhedral mesh from files and transform it to fulfill the preconditions of Tsoulis' formulation.\n",
      "dev_url": "https://github.com/esa/polyhedral-gravity-model",
      "doc_url": "https://esa.github.io/polyhedral-gravity-model/",
      "home": "https://github.com/esa/polyhedral-gravity-model",
      "license": "GPL-3.0-only AND AGPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "LICENSE",
        "TetGen_LICENSE"
      ],
      "summary": "Package to compute full gravity tensor of a given constant density polyhedron for arbitrary points according to the geodetic convention"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "CMAKE_GENERATOR=Ninja",
        "POLYHEDRAL_GRAVITY_PARALLELIZATION=OMP",
        "BUILD_SHARED_LIBS=ON"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "schuhmaj",
        "gomezzz",
        "darioizzo"
      ]
    },
    "package": {
      "name": "polyhedral-gravity-model",
      "version": "3.3.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "libgomp"
      ],
      "host": [
        "python",
        "spdlog",
        "xsimd >=11.0.0",
        "thrust",
        "pybind11",
        "pip",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "37e45c03472970c83a5793e49e1ee77e791f7c16e17c9f6f7c70b1dcdfac45be",
      "url": "https://github.com/esa/polyhedral-gravity-model/archive/refs/tags/v3.3.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "polyhedral_gravity"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libgomp",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "spdlog",
        "thrust",
        "xsimd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The package polyhedral_gravity provides a simple-to-use interface for evaluating the full gravity tensor of a constant-density polyhedron at arbitrary given computation points according to the geodetic convention. The computation is based on the line integral approach by Tsoulis et al., which transforms the triple integral into a summation. The implementation relies on a fast, parallelized backbone in C++ capable of evaluating the gravity at thousands of computation points in a fraction of a second. The package includes the functionality to read a polyhedral mesh from files and transform it to fulfill the preconditions of Tsoulis' formulation.\n",
      "dev_url": "https://github.com/esa/polyhedral-gravity-model",
      "doc_url": "https://esa.github.io/polyhedral-gravity-model/",
      "home": "https://github.com/esa/polyhedral-gravity-model",
      "license": "GPL-3.0-only AND AGPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "LICENSE",
        "TetGen_LICENSE"
      ],
      "summary": "Package to compute full gravity tensor of a given constant density polyhedron for arbitrary points according to the geodetic convention"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "CMAKE_GENERATOR=Ninja",
        "POLYHEDRAL_GRAVITY_PARALLELIZATION=OMP",
        "BUILD_SHARED_LIBS=ON",
        "_LIBCPP_DISABLE_AVAILABILITY=1"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "schuhmaj",
        "gomezzz",
        "darioizzo"
      ]
    },
    "package": {
      "name": "polyhedral-gravity-model",
      "version": "3.3.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja",
        "libgomp",
        "llvm-openmp"
      ],
      "host": [
        "python",
        "spdlog",
        "xsimd >=11.0.0",
        "thrust",
        "pybind11",
        "pip",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "37e45c03472970c83a5793e49e1ee77e791f7c16e17c9f6f7c70b1dcdfac45be",
      "url": "https://github.com/esa/polyhedral-gravity-model/archive/refs/tags/v3.3.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "polyhedral_gravity"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "polyhedral-gravity-model",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The package polyhedral_gravity provides a simple-to-use interface for evaluating the full gravity tensor of a constant-density polyhedron at arbitrary given computation points according to the geodetic convention. The computation is based on the line integral approach by Tsoulis et al., which transforms the triple integral into a summation. The implementation relies on a fast, parallelized backbone in C++ capable of evaluating the gravity at thousands of computation points in a fraction of a second. The package includes the functionality to read a polyhedral mesh from files and transform it to fulfill the preconditions of Tsoulis' formulation.\n",
      "dev_url": "https://github.com/esa/polyhedral-gravity-model",
      "doc_url": "https://esa.github.io/polyhedral-gravity-model/",
      "home": "https://github.com/esa/polyhedral-gravity-model",
      "license": "GPL-3.0-only AND AGPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "LICENSE",
        "TetGen_LICENSE"
      ],
      "summary": "Package to compute full gravity tensor of a given constant density polyhedron for arbitrary points according to the geodetic convention"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "CMAKE_GENERATOR=Ninja",
        "POLYHEDRAL_GRAVITY_PARALLELIZATION=OMP",
        "BUILD_SHARED_LIBS=ON",
        "_LIBCPP_DISABLE_AVAILABILITY=1"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "schuhmaj",
        "gomezzz",
        "darioizzo"
      ]
    },
    "package": {
      "name": "polyhedral-gravity-model",
      "version": "3.3.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja",
        "llvm-openmp"
      ],
      "host": [
        "python",
        "spdlog",
        "xsimd >=11.0.0",
        "thrust",
        "pybind11",
        "pip",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "37e45c03472970c83a5793e49e1ee77e791f7c16e17c9f6f7c70b1dcdfac45be",
      "url": "https://github.com/esa/polyhedral-gravity-model/archive/refs/tags/v3.3.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "polyhedral_gravity"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "spdlog",
        "thrust",
        "xsimd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "polyhedral-gravity-model"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/polyhedral-gravity-model.json"
  },
  "raw_meta_yaml": "{% set name = \"polyhedral-gravity-model\" %}\n{% set org = \"esa\" %}\n{% set version = \"3.3.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ org }}/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 37e45c03472970c83a5793e49e1ee77e791f7c16e17c9f6f7c70b1dcdfac45be\n\nbuild:\n  script_env:\n    - CMAKE_GENERATOR=Ninja\n    - POLYHEDRAL_GRAVITY_PARALLELIZATION=OMP\n    - BUILD_SHARED_LIBS=ON\n    - _LIBCPP_DISABLE_AVAILABILITY=1  # [osx]\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make  # [linux]\n    - ninja\n    - llvm-openmp  # [osx]\n    - libgomp  # [linux]\n  host:\n    - python\n    - spdlog\n    - xsimd >=11.0.0\n    - thrust\n    - pybind11\n    - pip\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - polyhedral_gravity\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/esa/polyhedral-gravity-model\n  summary: Package to compute full gravity tensor of a given constant density polyhedron for arbitrary points according to the geodetic convention\n  description: >\n    The package polyhedral_gravity provides a simple-to-use interface for evaluating the full gravity tensor of a constant-density polyhedron at arbitrary given computation points according to the geodetic convention. The computation is based on the line integral approach by Tsoulis et al., which transforms the triple integral\n    into a summation. The implementation relies on a fast, parallelized backbone in C++ capable of evaluating the gravity at thousands of computation points in a fraction of a second. The package includes the functionality to read a polyhedral mesh from files and transform it to fulfill the preconditions of Tsoulis' formulation.\n  license: GPL-3.0-only AND AGPL-3.0-or-later\n  license_family: GPL3\n  license_file:\n    - LICENSE\n    - TetGen_LICENSE\n  doc_url: https://esa.github.io/polyhedral-gravity-model/\n  dev_url: https://github.com/esa/polyhedral-gravity-model\n\nextra:\n  recipe-maintainers:\n    - schuhmaj\n    - gomezzz\n    - darioizzo\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libgomp",
      "llvm-openmp",
      "make",
      "ninja",
      "pip",
      "pybind11",
      "python",
      "setuptools",
      "spdlog",
      "thrust",
      "xsimd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "openmp",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "spdlog",
        "thrust",
        "xsimd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "openmp",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "spdlog",
        "thrust",
        "xsimd >=11.0.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/esa/polyhedral-gravity-model/archive/refs/tags/v3.3.1.tar.gz",
  "version": "3.3.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/polyhedral-gravity-model.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The package polyhedral_gravity provides a simple-to-use interface for evaluating the full gravity tensor of a constant-density polyhedron at arbitrary given computation points according to the geodetic convention. The computation is based on the line integral approach by Tsoulis et al., which transforms the triple integral into a summation. The implementation relies on a fast, parallelized backbone in C++ capable of evaluating the gravity at thousands of computation points in a fraction of a second. The package includes the functionality to read a polyhedral mesh from files and transform it to fulfill the preconditions of Tsoulis' formulation.\n",
      "dev_url": "https://github.com/esa/polyhedral-gravity-model",
      "doc_url": "https://esa.github.io/polyhedral-gravity-model/",
      "home": "https://github.com/esa/polyhedral-gravity-model",
      "license": "GPL-3.0-only AND AGPL-3.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "LICENSE",
        "TetGen_LICENSE"
      ],
      "summary": "Package to compute full gravity tensor of a given constant density polyhedron for arbitrary points according to the geodetic convention"
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "script_env": [
        "CMAKE_GENERATOR=Ninja",
        "POLYHEDRAL_GRAVITY_PARALLELIZATION=OMP",
        "BUILD_SHARED_LIBS=ON"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "schuhmaj",
        "gomezzz",
        "darioizzo"
      ]
    },
    "package": {
      "name": "polyhedral-gravity-model",
      "version": "3.3.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "spdlog",
        "xsimd >=11.0.0",
        "thrust",
        "pybind11",
        "pip",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "37e45c03472970c83a5793e49e1ee77e791f7c16e17c9f6f7c70b1dcdfac45be",
      "url": "https://github.com/esa/polyhedral-gravity-model/archive/refs/tags/v3.3.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "polyhedral_gravity"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "spdlog",
        "thrust",
        "xsimd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}