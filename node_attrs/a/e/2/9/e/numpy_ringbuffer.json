{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "numpy_ringbuffer",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Ring (aka circular) buffers backed by a numpy array, supporting:\n\n* Operations from `collections.deque`\n  * `b.append(val)`\n  * `b.appendleft(val)`\n  * `b.extend(val)`\n  * `b.extendleft(val)`\n  * `b.pop(val)`\n  * `b.popleft(val)`\n* The `collections.Sequence` protocol (unoptimized)\n* C-side unwrapping into an array with `np.array(b)`\n* Arbitrary element dtypes, including extra dimensions like `RingBuffer(N, dtype=(int, 3))`\n",
      "home": "https://github.com/eric-wieser/numpy_ringbuffer",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Ring buffer implementation for numpy"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "julienmalik"
      ]
    },
    "package": {
      "name": "numpy_ringbuffer",
      "version": "0.2.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9"
      ],
      "run": [
        "python >=3.9",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1b55e1ff473e3d8807067a3ea42b8d6957f6b6239fc0516527252280edb18fa6",
      "url": "https://pypi.org/packages/source/n/numpy_ringbuffer/numpy_ringbuffer-0.2.2.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "numpy_ringbuffer"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Ring (aka circular) buffers backed by a numpy array, supporting:\n\n* Operations from `collections.deque`\n  * `b.append(val)`\n  * `b.appendleft(val)`\n  * `b.extend(val)`\n  * `b.extendleft(val)`\n  * `b.pop(val)`\n  * `b.popleft(val)`\n* The `collections.Sequence` protocol (unoptimized)\n* C-side unwrapping into an array with `np.array(b)`\n* Arbitrary element dtypes, including extra dimensions like `RingBuffer(N, dtype=(int, 3))`\n",
      "home": "https://github.com/eric-wieser/numpy_ringbuffer",
      "license": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Ring buffer implementation for numpy"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "julienmalik"
      ]
    },
    "package": {
      "name": "numpy_ringbuffer",
      "version": "0.2.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9"
      ],
      "run": [
        "python >=3.9",
        "numpy"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "1b55e1ff473e3d8807067a3ea42b8d6957f6b6239fc0516527252280edb18fa6",
      "url": "https://pypi.org/packages/source/n/numpy_ringbuffer/numpy_ringbuffer-0.2.2.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "numpy_ringbuffer"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "numpy_ringbuffer",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "numpy_ringbuffer"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/numpy_ringbuffer.json"
  },
  "raw_meta_yaml": "{% set name = \"numpy_ringbuffer\" %}\n{% set version = \"0.2.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/numpy_ringbuffer-{{ version }}.tar.gz\n  sha256: 1b55e1ff473e3d8807067a3ea42b8d6957f6b6239fc0516527252280edb18fa6\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n  run:\n    - python >={{ python_min }}\n    - numpy\n\ntest:\n  imports:\n    - numpy_ringbuffer\n  commands:\n    - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/eric-wieser/numpy_ringbuffer\n  summary: Ring buffer implementation for numpy\n  description: |\n    Ring (aka circular) buffers backed by a numpy array, supporting:\n\n    * Operations from `collections.deque`\n      * `b.append(val)`\n      * `b.appendleft(val)`\n      * `b.extend(val)`\n      * `b.extendleft(val)`\n      * `b.pop(val)`\n      * `b.popleft(val)`\n    * The `collections.Sequence` protocol (unoptimized)\n    * C-side unwrapping into an array with `np.array(b)`\n    * Arbitrary element dtypes, including extra dimensions like `RingBuffer(N, dtype=(int, 3))`\n  license: MIT\n  license_file: LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - julienmalik\n",
  "req": {
    "__set__": true,
    "elements": [
      "numpy",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "python >=3.9"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/n/numpy_ringbuffer/numpy_ringbuffer-0.2.2.tar.gz",
  "version": "0.2.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/numpy_ringbuffer.json"
  }
}