{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "libcxx-testing",
  "meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/libcxx-testing-feedstock",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "pybind11_exception_rtti_test/README.md",
      "summary": "a test of RTTI for exception passing in C++ and pybind11"
    },
    "build": {
      "number": "2",
      "script": "echo \"works!\""
    },
    "extra": {
      "recipe-maintainers": [
        "beckermr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "libcxx-testing",
      "version": "0.20.99"
    },
    "requirements": {
      "run": [
        "python",
        "pybind11",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "clang-16",
        "make",
        "pip",
        "libboost-devel",
        "clang-17",
        "clang-18",
        "clang-19",
        "clang-20"
      ],
      "run_constrained": [
        "libcxx 20.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "files": [
        "pybind11_exception_rtti_test",
        "boost_example.cpp"
      ]
    }
  },
  "name": "libcxx-testing",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/conda-forge/libcxx-testing-feedstock",
      "license": "GPL-3.0-or-later",
      "license_family": "GPL",
      "license_file": "pybind11_exception_rtti_test/README.md",
      "summary": "a test of RTTI for exception passing in C++ and pybind11"
    },
    "build": {
      "number": "2",
      "script": "echo \"works!\""
    },
    "extra": {
      "recipe-maintainers": [
        "beckermr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "libcxx-testing",
      "version": "0.20.99"
    },
    "requirements": {
      "run": [
        "python",
        "pybind11",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "clang-16",
        "make",
        "pip",
        "libboost-devel",
        "clang-17",
        "clang-18",
        "clang-19",
        "clang-20"
      ],
      "run_constrained": [
        "libcxx 20.*"
      ]
    },
    "schema_version": 0,
    "source": {
      "path": "."
    },
    "test": {
      "files": [
        "pybind11_exception_rtti_test",
        "boost_example.cpp"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang-16",
        "clang-17",
        "clang-18",
        "clang-19",
        "clang-20",
        "cxx_compiler_stub",
        "libboost-devel",
        "make",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libcxx-testing"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/libcxx-testing.json"
  },
  "raw_meta_yaml": "# this number only needs to be increased if\n# there are substantial infrastructure changes\n{% set testing_generation = \"0\" %}\n\n{% if libcxx_major is undefined %}\n{% set libcxx_major = 99 %}\n{% endif %}\n{% if cxx_compiler_version is undefined %}\n{% set cxx_compiler_version = libcxx_major %}\n{% endif %}\n\npackage:\n  name: libcxx-testing\n  # version correspondence is: 0.{{ CLANG_MAJOR }}.{{ LIBCXX_MAJOR }}\n  version: {{ testing_generation }}.{{ cxx_compiler_version }}.{{ libcxx_major }}\n\nsource:\n  path: .\n\nbuild:\n  number: 2\n  skip: true  # [not osx]\n  script:\n    echo \"works!\"\n\nrequirements:\n  run:\n    - python\n    - pybind11\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    # pin this to a specific clang version on osx\n    - clang-{{ cxx_compiler_version }}\n    - make\n    - pip\n    - libboost-devel\n  {% if libcxx_major|int < 99 %}\n  run_constrained:\n    - libcxx {{ libcxx_major }}.*\n  {% endif %}\n\ntest:\n  files:\n    - pybind11_exception_rtti_test\n    - boost_example.cpp\n\nabout:\n  home: https://github.com/conda-forge/libcxx-testing-feedstock\n  license: GPL-3.0-or-later\n  license_family: GPL\n  license_file: pybind11_exception_rtti_test/README.md\n  summary: 'a test of RTTI for exception passing in C++ and pybind11'\n\nextra:\n  recipe-maintainers:\n    - beckermr\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "clang-16",
      "clang-17",
      "clang-18",
      "clang-19",
      "clang-20",
      "cxx_compiler_stub",
      "libboost-devel",
      "make",
      "pip",
      "pybind11",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang-16",
        "clang-17",
        "clang-18",
        "clang-19",
        "clang-20",
        "cxx_compiler_stub",
        "libboost-devel",
        "make",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clang-16",
        "clang-17",
        "clang-18",
        "clang-19",
        "clang-20",
        "cxx_compiler_stub",
        "libboost-devel",
        "make",
        "pip",
        "pybind11",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": null,
  "version": "0.20.99",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/libcxx-testing.json"
  }
}