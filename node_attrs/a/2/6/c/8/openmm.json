{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "store_build_artifacts": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "openmm",
  "linux_64_meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*",
        "*/libOpenCL.*"
      ],
      "number": "0",
      "script": [
        "env with_test_suite=true bash RECIPE_DIR/build_openmm.sh"
      ],
      "script_env": [
        "CONFIG"
      ],
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cdt_stub",
        "cmake <4",
        "make",
        "doxygen"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "ocl-icd",
        "cuda-version 12.6"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "ocl-icd",
        "ocl-icd-system"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "env with_test_suite=true bash test_openmm.sh"
      ],
      "files": [
        "test_openmm.sh"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "doxygen",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "cython",
        "lxml",
        "numpy",
        "ocl-icd",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "ocl-icd",
        "ocl-icd-system",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*",
        "*/libOpenCL.*"
      ],
      "number": "0",
      "script": [
        "env with_test_suite=true bash RECIPE_DIR/build_openmm.sh"
      ],
      "script_env": [
        "CONFIG"
      ],
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cdt_stub",
        "cmake <4",
        "make",
        "doxygen"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "ocl-icd",
        "cuda-version 12.6"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "ocl-icd",
        "ocl-icd-system"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "env with_test_suite=true bash test_openmm.sh"
      ],
      "files": [
        "test_openmm.sh"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "doxygen",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "cython",
        "lxml",
        "numpy",
        "ocl-icd",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "ocl-icd",
        "ocl-icd-system",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*",
        "*/libOpenCL.*",
        "*/nvcuda.dll"
      ],
      "number": "0",
      "script": [
        "env with_test_suite=true bash RECIPE_DIR/build_openmm.sh",
        "set with_test_suite=true &&   RECIPE_DIR\\build_openmm.bat"
      ],
      "script_env": [
        "CONFIG"
      ],
      "string": "py39h1234567_0_khronos",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cdt_stub",
        "cmake <4",
        "make",
        "doxygen",
        "conda-build",
        "jom",
        "m2-findutils",
        "m2-coreutils"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "ocl-icd",
        "cuda-version 12.6",
        "khronos-opencl-icd-loader"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "ocl-icd",
        "ocl-icd-system",
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "env with_test_suite=true bash test_openmm.sh",
        "set with_test_suite=true && .\\test_openmm.bat"
      ],
      "files": [
        "test_openmm.sh",
        "test_openmm.bat"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "name": "openmm",
  "osx_64_meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libOpenCL.*"
      ],
      "number": "0",
      "script": [
        "env with_test_suite=true bash RECIPE_DIR/build_openmm.sh"
      ],
      "script_env": [
        "CONFIG"
      ],
      "string": "py39h1234567_0_khronos",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake <4",
        "make",
        "doxygen",
        "conda-build"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "khronos-opencl-icd-loader"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "env with_test_suite=true bash test_openmm.sh"
      ],
      "files": [
        "test_openmm.sh"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "conda-build",
        "cxx_compiler_stub",
        "doxygen",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "khronos-opencl-icd-loader",
        "lxml",
        "numpy",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "numpy",
        "ocl_icd_wrapper_apple",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libOpenCL.*"
      ],
      "number": "0",
      "script": [
        "env with_test_suite=true bash RECIPE_DIR/build_openmm.sh"
      ],
      "script_env": [
        "CONFIG"
      ],
      "string": "py39h1234567_0_khronos",
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake <4",
        "make",
        "doxygen",
        "conda-build"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "khronos-opencl-icd-loader"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "khronos-opencl-icd-loader",
        "ocl_icd_wrapper_apple"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "env with_test_suite=true bash test_openmm.sh"
      ],
      "files": [
        "test_openmm.sh"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "conda-build",
        "cxx_compiler_stub",
        "doxygen",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "khronos-opencl-icd-loader",
        "lxml",
        "numpy",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "numpy",
        "ocl_icd_wrapper_apple",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "openmm"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openmm.json"
  },
  "raw_meta_yaml": "{% set name = \"openmm\" %}\n{% set version = \"8.3.1\" %}\n{% set build = 0 %}\n{% set with_test_suite = \"false\" %}\n#{% set with_test_suite = \"true\" %}  # [(osx and arm64)]\n\n{% if cuda_compiler_version in (None, \"None\", True, False) %}\n{% set cuda_major = 0 %}\n{% else %}\n{% set cuda_major = environ.get(\"cuda_compiler_version\", \"11.8\").split(\".\")[0] | int %}\n{% endif %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  git_url: https://github.com/openmm/{{ name }}.git\n  git_rev: \"6e13f13\"\n\nbuild:\n  number: {{ build }}\n  string: \"py{{ PY_VER.replace('.', '') }}h{{ PKG_HASH }}_{{ build }}_{{ opencl_impl }}\"  # [osx]\n  track_features:  # make Apple OpenCL low priority\n    - openmm_opencl_apple  # [osx and (opencl_impl == 'apple')]\n  skip: true  # [(cuda_compiler_version in (undefined, 'None') and (linux64 or win)) or ((cuda_compiler_version != '10.2') and (ppc64le))]\n  # see https://github.com/conda-forge/openmm-feedstock/pull/143#issuecomment-2429793569\n  skip: true  # [aarch64 and (cuda_compiler_version == '11.8')]\n  script_env:\n    - CONFIG\n    - CUDA_HOME  # [ppc64le]\n  missing_dso_whitelist:\n    - \"*/libcuda.*\"    # [linux]\n    - \"*/libOpenCL.*\"  # [unix]\n    - \"*/nvcuda.dll\"   # [win]\n  script:\n    - env with_test_suite={{ with_test_suite }} bash {{ RECIPE_DIR }}/build_openmm.sh   # [unix]\n    - set with_test_suite={{ with_test_suite }} &&   {{ RECIPE_DIR }}\\build_openmm.bat  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - swig                                   # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [(linux or win) and cuda_compiler_version != \"None\"]\n    - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or \"None\") != \"None\"]\n    - {{ cdt('mesa-libgl-devel') }}  # [linux]\n    - cmake <4\n    - make  # [unix]\n    - jom  # [win]\n    # needed for Python wrappers\n    - doxygen\n{% if with_test_suite == 'true' %}\n    - conda-build  # [osx]\n    - m2-findutils  # [win]\n    - m2-coreutils  # [win]\n{% endif %}\n\n  host:\n    - python\n    - swig\n    - pthread-stubs\n    - lxml\n    - numpy\n    - cython\n    - setuptools\n    # OpenCL ICD\n    - ocl-icd  # [linux]\n    - khronos-opencl-icd-loader  # [win or (osx and opencl_impl == 'khronos')]\n    - cuda-version {{ cuda_compiler_version }}  # [(cuda_compiler_version or \"None\") != \"None\"]\n    {% if cuda_major >= 12 %}\n    - libcufft-dev  # [linux or win]\n    - cuda-profiler-api  # [linux or win]\n    - cuda-nvrtc-dev  # [linux or win]\n    # No cuda-driver-dev in windows\n    - cuda-driver-dev  # [linux]\n    {% endif %}\n  run:\n    - python\n    - numpy\n    - scipy\n    # OpenCL ICD\n    - ocl-icd  # [linux]\n    - ocl-icd-system  # [linux]\n    - khronos-opencl-icd-loader  # [win or (osx and opencl_impl == 'khronos')]\n    - ocl_icd_wrapper_apple      # [osx and opencl_impl == 'khronos']\n\n  run_constrained:\n    - khronos-opencl-icd-loader  ==9999999999  # [osx and opencl_impl == 'apple']\n    - ocl_icd_wrapper_apple      ==9999999999  # [osx and opencl_impl == 'apple']\n\ntest:\n  requires:\n    - git\n    - pocl      # [linux]\n    {% if cuda_major >= 12 %}\n    # No cuda-driver-dev nor cuda-compat in windows\n    - cuda-driver-dev  # [linux]\n    - cuda-compat  # [linux]\n    {% endif %}\n{% if with_test_suite == 'true' %}\n    - pytest\n    - pytest-xdist\n{% endif %}\n  files:\n    - test_openmm.sh   # [unix]\n    - test_openmm.bat  # [win]\n  imports:\n    - openmm\n  commands:\n    - env with_test_suite={{ with_test_suite }} bash test_openmm.sh   # [unix]\n    - set with_test_suite={{ with_test_suite }} && .\\test_openmm.bat  # [win]\n\nabout:\n  home: http://openmm.org\n  license: LGPL-3.0-or-later\n  license_family: LGPL\n  license_file:\n    - docs-source/licenses/Licenses.txt\n    - docs-source/licenses/LGPL.txt\n    - docs-source/licenses/GPL.txt\n  summary: A high performance toolkit for molecular simulation.\n\n  description: |\n    OpenMM is a toolkit for molecular simulation. It can be used either as a\n    stand-alone application for running simulations, or as a library you call\n    from your own code. It provides a combination of extreme flexibility\n    (through custom forces and integrators), openness, and high performance\n    (especially on recent GPUs) that make it truly unique among simulation\n    codes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\n    platforms).\n  doc_url: http://docs.openmm.org\n  dev_url: https://github.com/openmm/openmm\n\nextra:\n  recipe-maintainers:\n    - mikemhenry\n    - jchodera\n    - jaimergp\n    - peastman\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cdt_stub",
      "cmake",
      "conda-build",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "cython",
      "doxygen",
      "jom",
      "khronos-opencl-icd-loader",
      "lxml",
      "m2-coreutils",
      "m2-findutils",
      "make",
      "numpy",
      "ocl-icd",
      "ocl-icd-system",
      "ocl_icd_wrapper_apple",
      "pthread-stubs",
      "python",
      "scipy",
      "setuptools",
      "swig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake",
        "conda-build",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "doxygen",
        "jom",
        "m2-coreutils",
        "m2-findutils",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "cython",
        "khronos-opencl-icd-loader",
        "lxml",
        "numpy",
        "ocl-icd",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "khronos-opencl-icd-loader",
        "numpy",
        "ocl-icd",
        "ocl-icd-system",
        "ocl_icd_wrapper_apple",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cdt_stub",
        "cmake <4",
        "conda-build",
        "cuda-version 12.6",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "doxygen",
        "jom",
        "m2-coreutils",
        "m2-findutils",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 12.6",
        "cython",
        "khronos-opencl-icd-loader",
        "lxml",
        "numpy",
        "ocl-icd",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "numpy",
        "ocl-icd",
        "ocl-icd-system",
        "ocl_icd_wrapper_apple",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pocl",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "url": null,
  "version": "8.3.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openmm.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "OpenMM is a toolkit for molecular simulation. It can be used either as a\nstand-alone application for running simulations, or as a library you call\nfrom your own code. It provides a combination of extreme flexibility\n(through custom forces and integrators), openness, and high performance\n(especially on recent GPUs) that make it truly unique among simulation\ncodes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL\nplatforms).\n",
      "dev_url": "https://github.com/openmm/openmm",
      "doc_url": "http://docs.openmm.org",
      "home": "http://openmm.org",
      "license": "LGPL-3.0-or-later",
      "license_family": "LGPL",
      "license_file": [
        "docs-source/licenses/Licenses.txt",
        "docs-source/licenses/LGPL.txt",
        "docs-source/licenses/GPL.txt"
      ],
      "summary": "A high performance toolkit for molecular simulation."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/nvcuda.dll"
      ],
      "number": "0",
      "script": [
        "set with_test_suite=true &&   RECIPE_DIR\\build_openmm.bat"
      ],
      "script_env": [
        "CONFIG"
      ],
      "track_features": null
    },
    "extra": {
      "recipe-maintainers": [
        "mikemhenry",
        "jchodera",
        "jaimergp",
        "peastman"
      ]
    },
    "package": {
      "name": "openmm",
      "version": "8.3.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cuda-version 12.6",
        "cmake <4",
        "jom",
        "doxygen",
        "m2-findutils",
        "m2-coreutils"
      ],
      "host": [
        "python",
        "swig",
        "pthread-stubs",
        "lxml",
        "numpy",
        "cython",
        "setuptools",
        "khronos-opencl-icd-loader",
        "cuda-version 12.6"
      ],
      "run": [
        "python",
        "numpy",
        "scipy",
        "khronos-opencl-icd-loader"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "git_rev": "6e13f13",
      "git_url": "https://github.com/openmm/openmm.git"
    },
    "test": {
      "commands": [
        "set with_test_suite=true && .\\test_openmm.bat"
      ],
      "files": [
        "test_openmm.bat"
      ],
      "imports": [
        "openmm"
      ],
      "requires": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "doxygen",
        "jom",
        "m2-coreutils",
        "m2-findutils"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "cython",
        "khronos-opencl-icd-loader",
        "lxml",
        "numpy",
        "pthread-stubs",
        "python",
        "setuptools",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "khronos-opencl-icd-loader",
        "numpy",
        "python",
        "scipy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "git",
        "pytest",
        "pytest-xdist"
      ]
    }
  }
}