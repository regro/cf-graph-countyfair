{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "e5315bfe1d9d6dc8abb9142cdf4cbba7db4cba3e",
  "feedstock_hash_ts": 1760555470,
  "feedstock_name": "einsums",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/Einsums/Einsums",
      "doc_url": "https://einsums.github.io/Einsums",
      "home": "https://github.com/Einsums/Einsums",
      "license": "MIT AND BSD-3-Clause",
      "license_family": "MIT",
      "license_file": [
        "LICENSE.txt",
        "THIRD-PARTY-LICENSES.txt"
      ],
      "license_url": "https://opensource.org/license/mit/",
      "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
    },
    "build": {
      "binary_relocation": true,
      "number": "1"
    },
    "extra": {
      "feedstock-name": "einsums",
      "recipe-maintainers": [
        "loriab",
        "jturney"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "libgomp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "ldd -v $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      }
    ],
    "package": {
      "name": "einsums-split",
      "version": "1.1.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "154eebbcac1e6469b9d4b3500c7288b67e1be7536305a4be42e2e1e868554f02",
      "url": "https://github.com/Einsums/Einsums/archive/v1.1.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "catch2",
        "cmake",
        "cxx_compiler_stub",
        "libgomp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpp-argparse",
        "cpptrace",
        "fftw",
        "fmt",
        "hdf5",
        "libblas",
        "liblapack",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cpp-argparse"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/Einsums/Einsums",
      "doc_url": "https://einsums.github.io/Einsums",
      "home": "https://github.com/Einsums/Einsums",
      "license": "MIT AND BSD-3-Clause",
      "license_family": "MIT",
      "license_file": [
        "LICENSE.txt",
        "THIRD-PARTY-LICENSES.txt"
      ],
      "license_url": "https://opensource.org/license/mit/",
      "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
    },
    "build": {
      "binary_relocation": true,
      "number": "1"
    },
    "extra": {
      "feedstock-name": "einsums",
      "recipe-maintainers": [
        "loriab",
        "jturney"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "libgomp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "ldd -v $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "llvm-openmp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "otool -L $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "llvm-openmp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "otool -L $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      }
    ],
    "package": {
      "name": "einsums-split",
      "version": "1.1.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "154eebbcac1e6469b9d4b3500c7288b67e1be7536305a4be42e2e1e868554f02",
      "url": "https://github.com/Einsums/Einsums/archive/v1.1.0.tar.gz"
    }
  },
  "name": "einsums-split",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/Einsums/Einsums",
      "doc_url": "https://einsums.github.io/Einsums",
      "home": "https://github.com/Einsums/Einsums",
      "license": "MIT AND BSD-3-Clause",
      "license_family": "MIT",
      "license_file": [
        "LICENSE.txt",
        "THIRD-PARTY-LICENSES.txt"
      ],
      "license_url": "https://opensource.org/license/mit/",
      "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
    },
    "build": {
      "binary_relocation": true,
      "number": "1"
    },
    "extra": {
      "feedstock-name": "einsums",
      "recipe-maintainers": [
        "loriab",
        "jturney"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "llvm-openmp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "otool -L $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      }
    ],
    "package": {
      "name": "einsums-split",
      "version": "1.1.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "154eebbcac1e6469b9d4b3500c7288b67e1be7536305a4be42e2e1e868554f02",
      "url": "https://github.com/Einsums/Einsums/archive/v1.1.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "catch2",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpp-argparse",
        "cpptrace",
        "fftw",
        "fmt",
        "hdf5",
        "libblas",
        "liblapack",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cpp-argparse"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/Einsums/Einsums",
      "doc_url": "https://einsums.github.io/Einsums",
      "home": "https://github.com/Einsums/Einsums",
      "license": "MIT AND BSD-3-Clause",
      "license_family": "MIT",
      "license_file": [
        "LICENSE.txt",
        "THIRD-PARTY-LICENSES.txt"
      ],
      "license_url": "https://opensource.org/license/mit/",
      "summary": "J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations"
    },
    "build": {
      "binary_relocation": true,
      "number": "1"
    },
    "extra": {
      "feedstock-name": "einsums",
      "recipe-maintainers": [
        "loriab",
        "jturney"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "einsums"
          ]
        },
        "name": "einsums",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake 3.29.*",
            "ninja",
            "llvm-openmp",
            "catch2"
          ],
          "host": [
            "hdf5",
            "libblas",
            "liblapack",
            "fftw",
            "fmt",
            "cpp-argparse",
            "spdlog >=1.15",
            "zlib",
            "cpptrace"
          ],
          "run": [
            "cpp-argparse"
          ]
        },
        "script": "build-cxx.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libEinsums$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsums.a",
            "test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT",
            "test ! -f $PREFIX/lib/libEinsumsExperimental.a",
            "test -f $PREFIX/include/Einsums/Tensor.hpp",
            "test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake",
            "test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake",
            "otool -L $PREFIX/lib/libEinsums$SHLIB_EXT"
          ]
        }
      }
    ],
    "package": {
      "name": "einsums-split",
      "version": "1.1.0"
    },
    "schema_version": 0,
    "source": {
      "sha256": "154eebbcac1e6469b9d4b3500c7288b67e1be7536305a4be42e2e1e868554f02",
      "url": "https://github.com/Einsums/Einsums/archive/v1.1.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "catch2",
        "cmake",
        "cxx_compiler_stub",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpp-argparse",
        "cpptrace",
        "fftw",
        "fmt",
        "hdf5",
        "libblas",
        "liblapack",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cpp-argparse"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "einsums"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/einsums.json"
  },
  "raw_meta_yaml": "{% set name = \"Einsums\" %}\n{% set version = \"1.1.0\" %}\n{% set sha256 = \"154eebbcac1e6469b9d4b3500c7288b67e1be7536305a4be42e2e1e868554f02\" %}\n{% set build_number = 1 %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: {{ build_number }}\n  binary_relocation: true\n  skip: true  # [win]\n\noutputs:\n  - name: einsums\n    script: build-cxx.sh\n    build:\n      run_exports:\n        - {{ pin_subpackage('einsums', max_pin='x.x') }}\n\n    requirements:\n      build:\n        - {{ stdlib(\"c\") }}\n        - {{ compiler(\"c\") }}\n        - {{ compiler(\"cxx\") }}\n        - cmake 3.29.*                           # 3.30 failing for intel mac\n        - ninja\n        - llvm-openmp                            # [osx]\n        - libgomp                                # [linux]\n        - catch2\n      host:\n        - hdf5\n        - libblas\n        - liblapack\n        - fftw\n        - fmt\n        - cpp-argparse\n        - spdlog >=1.15\n        - zlib\n        - cpptrace\n      run:\n        - cpp-argparse\n\n    test:\n      commands:\n        # Verify library\n        - test -f $PREFIX/lib/libEinsums$SHLIB_EXT                             # [unix]\n        - test ! -f $PREFIX/lib/libEinsums.a                                   # [unix]\n        - test -f $PREFIX/lib/libEinsumsExperimental$SHLIB_EXT                 # [unix]\n        - test ! -f $PREFIX/lib/libEinsumsExperimental.a                       # [unix]\n        # Verify accessories\n        - test -f $PREFIX/include/Einsums/Tensor.hpp                           # [unix]\n        - test -f $PREFIX/include/Einsums/h5cpp/H5Pall.hpp                     # [unix]\n        - test -f $PREFIX/share/cmake/Einsums/EinsumsConfig.cmake              # [unix]\n        - test -f $PREFIX/share/cmake/Einsums/EinsumsTargets.cmake             # [unix]\n        # Inspect linkage\n        - ldd -v $PREFIX/lib/libEinsums$SHLIB_EXT                              # [linux]\n        - otool -L $PREFIX/lib/libEinsums$SHLIB_EXT                            # [osx]\n\nabout:\n  home: https://github.com/Einsums/Einsums\n  dev_url: https://github.com/Einsums/Einsums\n  doc_url: https://einsums.github.io/Einsums\n  license: MIT AND BSD-3-Clause\n  license_url: https://opensource.org/license/mit/\n  license_file:\n    - LICENSE.txt\n    - THIRD-PARTY-LICENSES.txt\n  license_family: MIT\n  summary: \"J. Turney's C++ library providing compile-time contraction pattern analysis to determine optimal tensor operations\"\n\nextra:\n  feedstock-name: einsums\n  recipe-maintainers:\n    - loriab\n    - jturney\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "catch2",
      "cmake",
      "cpp-argparse",
      "cpptrace",
      "cxx_compiler_stub",
      "fftw",
      "fmt",
      "hdf5",
      "libblas",
      "libgomp",
      "liblapack",
      "llvm-openmp",
      "ninja",
      "spdlog",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "catch2",
        "cmake",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cpp-argparse",
        "cpptrace",
        "ctng-compilers",
        "cxx_compiler_stub",
        "fftw",
        "fmt",
        "hdf5",
        "libblas",
        "liblapack",
        "openmp",
        "spdlog",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cpp-argparse",
        "ctng-compilers",
        "cxx_compiler_stub",
        "openmp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "catch2",
        "cmake 3.29.*",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cpp-argparse",
        "cpptrace",
        "fftw",
        "fmt",
        "hdf5",
        "libblas",
        "liblapack",
        "spdlog >=1.15",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cpp-argparse"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/Einsums/Einsums/archive/v1.1.0.tar.gz",
  "version": "1.1.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/einsums.json"
  }
}