{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "a96211ddbe4a0d4f44e2712f46e6980c6d06fa8b",
  "feedstock_hash_ts": 1750617510,
  "feedstock_name": "aiida-fleur",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/JuDFTteam/aiida-fleur",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility"
    },
    "build": {
      "noarch": "python",
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "chrisjsewell",
        "janssenhenning"
      ]
    },
    "outputs": [
      {
        "build": {
          "entry_points": [
            "aiida-fleur = aiida_fleur.cmdline:cmd_root"
          ],
          "noarch": "python",
          "script": "python -m pip install . --no-deps --ignore-installed -vvv "
        },
        "name": "aiida-fleur",
        "requirements": {
          "host": [
            "pip",
            "python 3.9",
            "flit-core >=3.4,<4"
          ],
          "run": [
            "aiida-core.atomic_tools >=2.0.1,<3",
            "future",
            "lxml >=4.8,<5",
            "markupsafe <2.1.0",
            "masci-tools >=0.13,<1",
            "more-itertools",
            "numpy >=1.16.4,<2",
            "pyhull",
            "python >=3.9",
            "sympy"
          ],
          "run_constrained": [
            "aiida-fleur.code ==2.0.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "aiida_fleur"
          ],
          "requires": [
            "pip",
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "aiida-fleur.code",
        "requirements": {
          "host": [
            "python 3.9"
          ],
          "run": [
            "fleur >=1,<7",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "which fleur_MPI"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      }
    ],
    "package": {
      "name": "aiida-fleur.meta",
      "version": "2.0.0"
    },
    "requirements": {
      "run": [
        "aiida-fleur",
        "aiida-fleur.code"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7ca3e4f3e68254e11e27c77d519a2443781b533dd751d0a5bc39775c739cf6e2",
      "url": "https://pypi.org/packages/source/a/aiida-fleur/aiida-fleur-2.0.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiida-core.atomic_tools",
        "aiida-fleur",
        "aiida-fleur.code",
        "fleur",
        "future",
        "lxml",
        "markupsafe",
        "masci-tools",
        "more-itertools",
        "numpy",
        "pyhull",
        "python",
        "sympy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/JuDFTteam/aiida-fleur",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility"
    },
    "build": {
      "noarch": "python",
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "chrisjsewell",
        "janssenhenning"
      ]
    },
    "outputs": [
      {
        "build": {
          "entry_points": [
            "aiida-fleur = aiida_fleur.cmdline:cmd_root"
          ],
          "noarch": "python",
          "script": "python -m pip install . --no-deps --ignore-installed -vvv "
        },
        "name": "aiida-fleur",
        "requirements": {
          "host": [
            "pip",
            "python 3.9",
            "flit-core >=3.4,<4"
          ],
          "run": [
            "aiida-core.atomic_tools >=2.0.1,<3",
            "future",
            "lxml >=4.8,<5",
            "markupsafe <2.1.0",
            "masci-tools >=0.13,<1",
            "more-itertools",
            "numpy >=1.16.4,<2",
            "pyhull",
            "python >=3.9",
            "sympy"
          ],
          "run_constrained": [
            "aiida-fleur.code ==2.0.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "aiida_fleur"
          ],
          "requires": [
            "pip",
            "python 3.9"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "aiida-fleur.code",
        "requirements": {
          "host": [
            "python 3.9"
          ],
          "run": [
            "fleur >=1,<7",
            "python >=3.9"
          ]
        },
        "test": {
          "commands": [
            "which fleur_MPI"
          ],
          "requires": [
            "python 3.9"
          ]
        }
      }
    ],
    "package": {
      "name": "aiida-fleur.meta",
      "version": "2.0.0"
    },
    "requirements": {
      "run": [
        "aiida-fleur",
        "aiida-fleur.code"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7ca3e4f3e68254e11e27c77d519a2443781b533dd751d0a5bc39775c739cf6e2",
      "url": "https://pypi.org/packages/source/a/aiida-fleur/aiida-fleur-2.0.0.tar.gz"
    }
  },
  "name": "aiida-fleur.meta",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "aiida-fleur",
      "aiida-fleur.code",
      "aiida-fleur.meta"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/aiida-fleur.json"
  },
  "raw_meta_yaml": "{% set name = \"aiida-fleur\" %}\n{% set version = \"2.0.0\" %}\n{% set build = 1 %}\n{% set name_code = name + \".code\" %}\n\npackage:\n  name: {{ name }}.meta\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/aiida-fleur-{{ version }}.tar.gz\n  sha256: 7ca3e4f3e68254e11e27c77d519a2443781b533dd751d0a5bc39775c739cf6e2\n\nbuild:\n  number: {{ build }}\n  noarch: python\n\nrequirements:\n  run:\n    - {{ pin_subpackage(name, exact=True) }}\n    - {{ pin_subpackage(name_code, exact=True) }}\n\noutputs:\n  - name: {{ name }}\n    build:\n      noarch: python\n      entry_points:\n        - aiida-fleur = aiida_fleur.cmdline:cmd_root\n      script: 'python -m pip install . --no-deps --ignore-installed -vvv '\n    requirements:\n      host:\n        - pip\n        - python {{ python_min }}\n        - flit-core >=3.4,<4\n      run:\n        - aiida-core.atomic_tools >=2.0.1,<3\n        - future\n        - lxml >=4.8,<5\n        - markupsafe <2.1.0\n        - masci-tools >=0.13,<1\n        - more-itertools\n        - numpy >=1.16.4,<2\n        - pyhull\n        - python >={{ python_min }}\n        - sympy\n      run_constrained:\n        - {{ name_code }} =={{ version }}\n    test:\n      imports:\n        - aiida_fleur\n      commands:\n        - pip check\n      requires:\n        - pip\n        - python {{ python_min }}\n\n  - name: {{ name_code }}\n    build:\n      noarch: python\n    requirements:\n      host:\n        - python {{ python_min }}\n      run:\n        - fleur >=1,<7\n        - python >={{ python_min }}\n    test:\n      requires:\n        - python {{ python_min }}\n      commands:\n        - which fleur_MPI\n\nabout:\n  home: https://github.com/JuDFTteam/aiida-fleur\n  summary: Python FLEUR simulation package containing an AiiDA Plugin for running the FLEUR-code and its input generator. Plus some workflows and utility\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - chrisjsewell\n    - janssenhenning\n",
  "req": {
    "__set__": true,
    "elements": [
      "aiida-core.atomic_tools",
      "aiida-fleur",
      "aiida-fleur.code",
      "fleur",
      "flit-core",
      "future",
      "lxml",
      "markupsafe",
      "masci-tools",
      "more-itertools",
      "numpy",
      "pip",
      "pyhull",
      "python",
      "sympy"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiida-core.atomic_tools",
        "aiida-fleur",
        "aiida-fleur.code",
        "fleur",
        "future",
        "lxml",
        "markupsafe",
        "masci-tools",
        "more-itertools",
        "numpy",
        "pyhull",
        "python",
        "sympy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core >=3.4,<4",
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "aiida-core.atomic_tools >=2.0.1,<3",
        "aiida-fleur",
        "aiida-fleur.code",
        "fleur >=1,<7",
        "future",
        "lxml >=4.8,<5",
        "markupsafe <2.1.0",
        "masci-tools >=0.13,<1",
        "more-itertools",
        "numpy >=1.16.4,<2",
        "pyhull",
        "python >=3.9",
        "sympy"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/a/aiida-fleur/aiida-fleur-2.0.0.tar.gz",
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/aiida-fleur.json"
  }
}