{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "7892baea5e3d655fe900b016fc6e0e0d6128d037",
  "feedstock_hash_ts": 1730849047,
  "feedstock_name": "heavydb-ext",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides the following packages:\n  heavydb-common CUDA-enabled heavydb, cpu and cuda builds\n  pyheavydb Python connector\n  heavydbe embedding library, cpu and cuda builds\n  pyheavydbe-embedded Python extension module\n",
      "dev_url": "https://github.com/heavyai/heavydb",
      "doc_url": "https://docs.heavy.ai/",
      "home": "https://heavy.ai",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE.md",
      "summary": "The HeavyDB database"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "guilhermeleobas",
        "pearu",
        "tupui",
        "tmostak",
        "pantosik"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "thrift-cpp 0.16.*"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/doc/heavyai/LICENSE.md",
            "test -d ${PREFIX}/opt/heavyai/ThirdParty/gdal-data",
            "test -f ${PREFIX}/opt/heavyai/completion_hints.thrift",
            "test -f ${PREFIX}/opt/heavyai/heavy.thrift",
            "test -f ${PREFIX}/opt/heavyai/common.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/serialized_result_set.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/extension_functions.thrift",
            "test -f ${PREFIX}/opt/heavyai/Shared/funcannotations.h",
            "test -f ${PREFIX}/opt/heavyai/Shared/InlineNullValues.h",
            "test -f ${PREFIX}/opt/heavyai/Logger/Logger.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/heavydbTypes.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/RuntimeFunctions.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/GeosRuntime.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/ExtensionFunctions.ast",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-utility-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-jdbc-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/calcite-1.0-SNAPSHOT-jar-with-dependencies.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/startheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb_insert_sample_data",
            "test -f ${PREFIX}/opt/heavyai/bin/generate_cert"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "ncurses",
            "openldap",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp 11",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb",
            "test -f ${PREFIX}/opt/heavyai/bin/initheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavysql",
            "test -f ${PREFIX}/opt/heavyai/bin/KafkaImporter",
            "test -f ${PREFIX}/opt/heavyai/bin/StreamImporter",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "if [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Found heavysql in PATH\"\nelse\n  echo \"heavysql not found in PATH(=$PATH)\" && exit 1\nfi\nsource ${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\nif [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Unexpectedly found heavysql in PATH(=$PATH) after deactivation\"  && exit 1\nelse\n  echo \"heavysql not in PATH after deactivation\"\nfi\nsource ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\n",
            "heavysql -v",
            "which initheavy",
            "which heavydb",
            "",
            "which heavydb_insert_sample_data",
            "which startheavy"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/."
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py39h1234567_0_cpu",
          "track_features": null
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cpu",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "pyarrow =9.*=*cpu",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      },
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "thrift-cpp 0.16.*"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/doc/heavyai/LICENSE.md",
            "test -d ${PREFIX}/opt/heavyai/ThirdParty/gdal-data",
            "test -f ${PREFIX}/opt/heavyai/completion_hints.thrift",
            "test -f ${PREFIX}/opt/heavyai/heavy.thrift",
            "test -f ${PREFIX}/opt/heavyai/common.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/serialized_result_set.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/extension_functions.thrift",
            "test -f ${PREFIX}/opt/heavyai/Shared/funcannotations.h",
            "test -f ${PREFIX}/opt/heavyai/Shared/InlineNullValues.h",
            "test -f ${PREFIX}/opt/heavyai/Logger/Logger.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/heavydbTypes.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/RuntimeFunctions.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/GeosRuntime.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/ExtensionFunctions.ast",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-utility-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-jdbc-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/calcite-1.0-SNAPSHOT-jar-with-dependencies.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/startheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb_insert_sample_data",
            "test -f ${PREFIX}/opt/heavyai/bin/generate_cert"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "cudatoolkit",
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "ncurses",
            "openldap",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp 11",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cuda",
            "cudatoolkit >=11.0"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb",
            "test -f ${PREFIX}/opt/heavyai/bin/initheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavysql",
            "test -f ${PREFIX}/opt/heavyai/bin/KafkaImporter",
            "test -f ${PREFIX}/opt/heavyai/bin/StreamImporter",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "if [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Found heavysql in PATH\"\nelse\n  echo \"heavysql not found in PATH(=$PATH)\" && exit 1\nfi\nsource ${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\nif [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Unexpectedly found heavysql in PATH(=$PATH) after deactivation\"  && exit 1\nelse\n  echo \"heavysql not in PATH after deactivation\"\nfi\nsource ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\n",
            "heavysql -v",
            "which initheavy",
            "which heavydb",
            "if [ -x \"$(command -v nvidia-smi)\" ]; then\n  mkdir data && initheavy data\n  heavydb --version\n  rm -rf data\nfi\n",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/cuda_mapd_rt.fatbin",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/CudaTableFunctions.a",
            "which heavydb_insert_sample_data",
            "which startheavy"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/.",
          "skip": true
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "cudatoolkit",
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cuda",
            "cudatoolkit >=11.0"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "cudatoolkit",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py39h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cuda",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "pyarrow =9.*=*cuda",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      }
    ],
    "package": {
      "name": "heavydb-ext",
      "version": "6.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub"
      ],
      "host": [
        "openssl"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0007-Fix-Linux-build-heavydb-640.patch"
      ],
      "sha256": "089b998802456c561a48cf745ac8ca6e07c93f05a9a6f75e5483b003fb0fdf4d",
      "url": "https://github.com/heavyai/heavydb/archive/v6.4.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cgo_compiler_stub",
        "clangdev",
        "clangxx",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "llvmdev",
        "make",
        "maven",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arrow-cpp",
        "bisonpp",
        "blosc",
        "boost-cpp",
        "clangdev",
        "cython",
        "double-conversion",
        "flex",
        "flit-core",
        "fmt",
        "geos",
        "gflags",
        "glog",
        "heavydbe",
        "libarchive",
        "libclang-cpp",
        "libgdal",
        "libkml",
        "libpng",
        "librdkafka",
        "libzlib",
        "llvm",
        "llvmdev",
        "ncurses",
        "numpy",
        "openldap",
        "openssl",
        "pip",
        "pyarrow",
        "pytest",
        "python",
        "snappy",
        "tbb",
        "tbb-devel",
        "thrift-cpp",
        "xerces-c"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "arrow-cpp-proc",
        "boost-cpp",
        "bzip2",
        "gxx_linux-64",
        "heavydb-common",
        "heavydbe",
        "importlib_metadata",
        "libclang-cpp",
        "ncurses",
        "numpy",
        "openjdk",
        "packaging",
        "pyarrow",
        "python",
        "requests",
        "sqlalchemy",
        "tbb4py",
        "thrift",
        "xz",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides the following packages:\n  heavydb-common CUDA-enabled heavydb, cpu and cuda builds\n  pyheavydb Python connector\n  heavydbe embedding library, cpu and cuda builds\n  pyheavydbe-embedded Python extension module\n",
      "dev_url": "https://github.com/heavyai/heavydb",
      "doc_url": "https://docs.heavy.ai/",
      "home": "https://heavy.ai",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE.md",
      "summary": "The HeavyDB database"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "guilhermeleobas",
        "pearu",
        "tupui",
        "tmostak",
        "pantosik"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "thrift-cpp 0.16.*"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/doc/heavyai/LICENSE.md",
            "test -d ${PREFIX}/opt/heavyai/ThirdParty/gdal-data",
            "test -f ${PREFIX}/opt/heavyai/completion_hints.thrift",
            "test -f ${PREFIX}/opt/heavyai/heavy.thrift",
            "test -f ${PREFIX}/opt/heavyai/common.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/serialized_result_set.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/extension_functions.thrift",
            "test -f ${PREFIX}/opt/heavyai/Shared/funcannotations.h",
            "test -f ${PREFIX}/opt/heavyai/Shared/InlineNullValues.h",
            "test -f ${PREFIX}/opt/heavyai/Logger/Logger.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/heavydbTypes.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/RuntimeFunctions.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/GeosRuntime.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/ExtensionFunctions.ast",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-utility-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-jdbc-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/calcite-1.0-SNAPSHOT-jar-with-dependencies.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/startheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb_insert_sample_data",
            "test -f ${PREFIX}/opt/heavyai/bin/generate_cert"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "ncurses",
            "openldap",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp 11",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb",
            "test -f ${PREFIX}/opt/heavyai/bin/initheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavysql",
            "test -f ${PREFIX}/opt/heavyai/bin/KafkaImporter",
            "test -f ${PREFIX}/opt/heavyai/bin/StreamImporter",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "if [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Found heavysql in PATH\"\nelse\n  echo \"heavysql not found in PATH(=$PATH)\" && exit 1\nfi\nsource ${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\nif [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Unexpectedly found heavysql in PATH(=$PATH) after deactivation\"  && exit 1\nelse\n  echo \"heavysql not in PATH after deactivation\"\nfi\nsource ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\n",
            "heavysql -v",
            "which initheavy",
            "which heavydb",
            "",
            "which heavydb_insert_sample_data",
            "which startheavy"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/."
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py39h1234567_0_cpu",
          "track_features": null
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cpu",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "pyarrow =9.*=*cpu",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      },
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "thrift-cpp 0.16.*"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/share/doc/heavyai/LICENSE.md",
            "test -d ${PREFIX}/opt/heavyai/ThirdParty/gdal-data",
            "test -f ${PREFIX}/opt/heavyai/completion_hints.thrift",
            "test -f ${PREFIX}/opt/heavyai/heavy.thrift",
            "test -f ${PREFIX}/opt/heavyai/common.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/serialized_result_set.thrift",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/extension_functions.thrift",
            "test -f ${PREFIX}/opt/heavyai/Shared/funcannotations.h",
            "test -f ${PREFIX}/opt/heavyai/Shared/InlineNullValues.h",
            "test -f ${PREFIX}/opt/heavyai/Logger/Logger.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/heavydbTypes.h",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/RuntimeFunctions.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/GeosRuntime.bc",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/ExtensionFunctions.ast",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-utility-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/heavyai-jdbc-6.4.0.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/calcite-1.0-SNAPSHOT-jar-with-dependencies.jar",
            "test -f ${PREFIX}/opt/heavyai/bin/startheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb_insert_sample_data",
            "test -f ${PREFIX}/opt/heavyai/bin/generate_cert"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "cudatoolkit",
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "ncurses",
            "openldap",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp 11",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cuda",
            "cudatoolkit >=11.0"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/opt/heavyai/bin/heavydb",
            "test -f ${PREFIX}/opt/heavyai/bin/initheavy",
            "test -f ${PREFIX}/opt/heavyai/bin/heavysql",
            "test -f ${PREFIX}/opt/heavyai/bin/KafkaImporter",
            "test -f ${PREFIX}/opt/heavyai/bin/StreamImporter",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "if [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Found heavysql in PATH\"\nelse\n  echo \"heavysql not found in PATH(=$PATH)\" && exit 1\nfi\nsource ${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\nif [[ -x \"$(command -v heavysql)\" ]]\nthen\n  echo \"Unexpectedly found heavysql in PATH(=$PATH) after deactivation\"  && exit 1\nelse\n  echo \"heavysql not in PATH after deactivation\"\nfi\nsource ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\n",
            "heavysql -v",
            "which initheavy",
            "which heavydb",
            "if [ -x \"$(command -v nvidia-smi)\" ]; then\n  mkdir data && initheavy data\n  heavydb --version\n  rm -rf data\nfi\n",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/cuda_mapd_rt.fatbin",
            "test -f ${PREFIX}/opt/heavyai/QueryEngine/CudaTableFunctions.a",
            "which heavydb_insert_sample_data",
            "which startheavy"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/.",
          "skip": true
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "cudatoolkit",
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "boost-cpp",
            "bzip2",
            "gxx_linux-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cuda",
            "cudatoolkit >=11.0"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "cudatoolkit",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": [
            "*/libcuda.*"
          ],
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py39h1234567_0_cuda",
          "track_features": [
            "arrow-cuda"
          ]
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cuda",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cuda",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cuda",
            "pyarrow =9.*=*cuda",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      },
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libevent",
            "libgdal",
            "libpng",
            "librdkafka",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "winflexbison"
          ]
        },
        "script": "build-heavydb-common.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\share\\doc\\heavyai\\LICENSE.md exit 1",
            "if not exist %PREFIX%\\ThirdParty\\gdal-data exit 1",
            "if not exist %PREFIX%\\completion_hints.thrift exit 1",
            "if not exist %PREFIX%\\heavy.thrift exit 1",
            "if not exist %PREFIX%\\common.thrift exit 1",
            "if not exist %PREFIX%\\QueryEngine/serialized_result_set.thrift exit 1",
            "if not exist %PREFIX%\\QueryEngine/extension_functions.thrift exit 1",
            "if not exist %PREFIX%\\Shared\\funcannotations.h exit 1",
            "if not exist %PREFIX%\\Shared\\InlineNullValues.h exit 1",
            "if not exist %PREFIX%\\Logger\\Logger.h exit 1",
            "if not exist %PREFIX%\\QueryEngine\\heavydbTypes.h exit 1",
            "if not exist %PREFIX%\\QueryEngine\\RuntimeFunctions.bc exit 1",
            "if not exist %PREFIX%\\QueryEngine\\GeosRuntime.bc exit 1",
            "if not exist %PREFIX%\\QueryEngine\\ExtensionFunctions.ast exit 1",
            "if not exist %PREFIX%\\bin\\heavyai-utility-6.4.0.jar exit 1",
            "if not exist %PREFIX%\\bin\\heavyai-jdbc-6.4.0.jar exit 1",
            "if not exist %PREFIX%\\bin\\calcite-1.0-SNAPSHOT-jar-with-dependencies.jar exit 1",
            "if not exist %PREFIX%\\bin\\generate_cert exit 1"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libevent",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "winflexbison",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "libclang-cpp 11",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\bin\\heavydb.exe exit 1",
            "if not exist %PREFIX%\\bin\\initheavy.exe exit 1",
            "if not exist %PREFIX%\\bin\\heavysql.exe exit 1",
            "",
            "heavysql.exe -v"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/."
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_win-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py311h1234567_0_cpu",
          "track_features": null
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cpu",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "pyarrow =9.*=*cpu",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      }
    ],
    "package": {
      "name": "heavydb-ext",
      "version": "6.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub"
      ],
      "host": [
        "openssl"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0007-Fix-Linux-build-heavydb-640.patch",
        "0006-Fix-Windows-build-heavydb-620.patch"
      ],
      "sha256": "089b998802456c561a48cf745ac8ca6e07c93f05a9a6f75e5483b003fb0fdf4d",
      "url": "https://github.com/heavyai/heavydb/archive/v6.4.0.tar.gz"
    }
  },
  "name": "heavydb-ext",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "heavydb",
      "heavydb-common",
      "heavydbe",
      "pyheavydb",
      "pyheavydbe"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/heavydb-ext.json"
  },
  "raw_meta_yaml": "{% set version = \"6.4.0\" %}  # PEP 386\n{% set source_version = version %}\n{% set base_version = version %}\n{% set number = \"0\" %}\n{% set cuda_enabled = cuda_compiler_version is not undefined and cuda_compiler_version == '11.0' %}\n{% set build_ext_version = \"1.0.0\" %}\n{% set build_ext = \"cuda\" if cuda_enabled else \"cpu\" %}\n{% set build_string = \"h{}_{}\".format(PKG_HASH, number) %}\n{% set build_string_ext = \"{}_{}\".format(build_string, build_ext) %}\n{% set py_build_string_ext = \"py{}{}_{}\".format(CONDA_PY, build_string, build_ext) %}\n{% set py_build_string = \"py{}{}\".format(CONDA_PY, build_string) %}\n{% set install_base = \"opt/heavyai\" %}\n{% set arrow_version = \"9.*\" %}\n{% set arrow_proc_version = \"3.*\" %}\n{% set pythrift_version = \"0.16.*\" %}\n{% set thrift_version = \"0.16.*\" %}\n# heavydb 6.1.0 is not LLVM 12 ready\n{% set llvm_version = \"11\" %}\n\npackage:\n  name: heavydb-ext\n  version: {{ version }}\n\nsource:\n  url: https://github.com/heavyai/heavydb/archive/v{{ source_version }}.tar.gz\n  sha256: 089b998802456c561a48cf745ac8ca6e07c93f05a9a6f75e5483b003fb0fdf4d\n  patches:\n    - 0006-Fix-Windows-build-heavydb-620.patch  # [win]\n    - 0007-Fix-Linux-build-heavydb-640.patch  # [linux64]\n\nbuild:\n  number: {{ number }}\n  skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"11.0\")]\n\n# add global dependency section to ensure we run\n# separate builds for different openssl versions\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n  host:\n    - openssl\n\noutputs:\n\n  - name: heavydb-common\n    version: {{ version }}\n    script: build-heavydb.sh  # [linux64]\n    script: build-heavydb-common.bat  # [win]\n    build:\n      string: {{ build_string }}\n      # cpu-only heavydb-common for cuda is required only for\n      # building cuda-enabled heavydb\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"11.0\")]\n      skip: true  # [osx]\n      skip: true  # [win and cuda_compiler_version != \"None\"]\n      run_exports:\n        - {{ pin_subpackage('heavydb-common',  max_pin='x.x.x') }}\n      ignore_run_exports:\n        - arrow-cpp {{ arrow_version }}\n        - blosc\n        - double-conversion\n        - fmt\n        - geos\n        - glog\n        - libarchive\n        - libgdal\n        - libllvm{{ llvm_version }}\n        - libpng\n        - librdkafka\n        - libstdcxx-ng\n        - libthrift\n        - openssl\n    requirements:\n      build:\n        # c compiler is specified here to get run constraint pins correct, presumably...\n        - {{ compiler('c') }}\n        # go required for ThirdParty/generate_cert\n        - {{ compiler('cgo') }}\n        - {{ compiler('cxx') }}\n        - clangdev {{ llvm_version }}\n        # clang++ is used for generating the bytecodes of extension functions\n        - clangxx {{ llvm_version }}\n        - cmake\n        - llvmdev {{ llvm_version }}\n        - ninja\n        - maven\n      host:\n        # heavydb-common does not depend on build_ext, arrow-cpp\n        # (and other dependencies) is required just for the presence\n        # so that one could run cmake for generating *.bc, and other\n        # common data files.\n        - arrow-cpp ={{ arrow_version }}=*cpu\n        - bisonpp  # [unix]\n        - blosc\n        - boost-cpp\n        - clangdev {{ llvm_version }}\n        - double-conversion\n        - flex  # [unix]\n        - fmt\n        - geos\n        - glog\n        - llvmdev {{ llvm_version }}\n        - llvm {{ llvm_version }}\n        - libarchive\n        - libevent  # [win]\n        - libgdal\n        - libpng\n        - librdkafka\n        - tbb  # [win]\n        - tbb-devel  # [win]\n        - thrift-cpp {{ thrift_version }}\n        - winflexbison  # [win]\n    test:\n      commands:\n        # Test installation\n        # doc\n        - test -f ${PREFIX}/share/doc/heavyai/LICENSE.md  # [unix]\n        - if not exist %PREFIX%\\share\\doc\\heavyai\\LICENSE.md exit 1  # [win]\n        # data\n        - test -d ${PREFIX}/{{ install_base }}/ThirdParty/gdal-data  # [unix]\n        - if not exist %PREFIX%\\ThirdParty\\gdal-data exit 1  # [win]\n        # thrift\n        - test -f ${PREFIX}/{{ install_base }}/completion_hints.thrift  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/heavy.thrift  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/common.thrift  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/serialized_result_set.thrift  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/extension_functions.thrift  # [unix]\n        - if not exist %PREFIX%\\completion_hints.thrift exit 1  # [win]\n        - if not exist %PREFIX%\\heavy.thrift exit 1  # [win]\n        - if not exist %PREFIX%\\common.thrift exit 1  # [win]\n        - if not exist %PREFIX%\\QueryEngine/serialized_result_set.thrift exit 1  # [win]\n        - if not exist %PREFIX%\\QueryEngine/extension_functions.thrift exit 1  # [win]\n        # includes\n        - test -f ${PREFIX}/{{ install_base }}/Shared/funcannotations.h  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/Shared/InlineNullValues.h  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/Logger/Logger.h  # [unix]\n        - if not exist %PREFIX%\\Shared\\funcannotations.h exit 1  # [win]\n        - if not exist %PREFIX%\\Shared\\InlineNullValues.h exit 1  # [win]\n        - if not exist %PREFIX%\\Logger\\Logger.h exit 1  # [win]\n        # QE\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/heavydbTypes.h  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/RuntimeFunctions.bc  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/GeosRuntime.bc  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/ExtensionFunctions.ast  # [unix]\n        - if not exist %PREFIX%\\QueryEngine\\heavydbTypes.h exit 1  # [win]\n        - if not exist %PREFIX%\\QueryEngine\\RuntimeFunctions.bc exit 1  # [win]\n        - if not exist %PREFIX%\\QueryEngine\\GeosRuntime.bc exit 1  # [win]\n        - if not exist %PREFIX%\\QueryEngine\\ExtensionFunctions.ast exit 1  # [win]\n        # jar\n        - test -f ${PREFIX}/{{ install_base }}/bin/heavyai-utility-{{ base_version }}.jar  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/heavyai-jdbc-{{ base_version }}.jar  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/calcite-1.0-SNAPSHOT-jar-with-dependencies.jar  # [unix]\n        - if not exist %PREFIX%\\bin\\heavyai-utility-{{ base_version }}.jar exit 1  # [win]\n        - if not exist %PREFIX%\\bin\\heavyai-jdbc-{{ base_version }}.jar exit 1  # [win]\n        - if not exist %PREFIX%\\bin\\calcite-1.0-SNAPSHOT-jar-with-dependencies.jar exit 1  # [win]\n        # Unspecified\n        # startheavy and insert_sample_data are bash scripts\n        - test -f ${PREFIX}/{{ install_base }}/bin/startheavy  # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/heavydb_insert_sample_data  # [unix]\n        #\n        - test -f ${PREFIX}/{{ install_base }}/bin/generate_cert  # [unix]\n        - if not exist %PREFIX%\\bin\\generate_cert exit 1  # [win]\n\n  - name: heavydb\n    version: {{ version }}\n    script: build-heavydb.sh   # [linux64]\n    script: build-heavydb.bat  # [win]\n    build:\n      string: {{ build_string_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"11.0\")]\n      skip: true  # [osx]\n      skip: true  # [win and cuda_compiler_version != \"None\"]\n      missing_dso_whitelist:\n        - '*/libcuda.*'  # [cuda_compiler_version not in (undefined, \"None\")]\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n      ignore_run_exports:\n        - cudatoolkit    # [cuda_compiler_version not in (undefined, \"None\")]\n        - fmt\n        - gflags\n        - glog\n        - libclang-cpp\n        - libkml\n        - ncurses\n        - openldap\n        - zlib\n      run_exports:\n        - {{ pin_subpackage('heavydb',  max_pin='x.x.x') }}\n    requirements:\n      build:\n        # c compiler is specified here to get run constraint pins correct, presumably..\n        - {{ compiler('c') }}\n        - {{ compiler('cgo') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n        - clangdev {{ llvm_version }}\n        # clang++ is used for generating the bytecodes of extension functions\n        - clangxx {{ llvm_version }}\n        - cmake\n        - llvmdev {{ llvm_version }}\n        - make\n        - ninja\n        - maven\n      host:\n        - arrow-cpp ={{ arrow_version }}=*{{ build_ext }}\n        - bisonpp  # [unix]\n        - blosc\n        - boost-cpp\n        - clangdev {{ llvm_version }}\n        - double-conversion\n        - flex  # [unix]\n        - fmt\n        - gflags\n        - glog\n        - llvmdev {{ llvm_version }}\n        - llvm {{ llvm_version }}\n        - libarchive\n        - libclang-cpp {{ llvm_version }}\n        - libevent  # [win]\n        - libgdal\n        - libkml\n        - libpng\n        - librdkafka\n        - libzlib\n        - ncurses   # [unix]\n        - openldap  # [unix]\n        - openssl\n        - snappy\n        - tbb\n        - tbb-devel\n        - thrift-cpp {{ thrift_version }}\n        - winflexbison  # [win]\n        - xerces-c\n      run:\n        - arrow-cpp-proc {{ arrow_proc_version }} {{ build_ext }}\n        - boost-cpp\n        - bzip2\n        # omnscidb Load-time UDF support calls clang++\n        - gxx_{{ target_platform }}  # [not win]\n        - libclang-cpp {{ llvm_version }}\n        - ncurses  # [not win]\n        - openjdk 8.*\n        - xz\n        - zlib\n        - {{ pin_subpackage('heavydb-common',  max_pin='x.x.x') }}\n      run_constrained:\n        - arrow-cpp-proc {{ arrow_proc_version }} {{ build_ext }}\n        - cudatoolkit >=11.0  # [cuda_compiler_version not in (undefined, \"None\")]\n\n    test:\n      commands:\n        # binary\n        - test -f ${PREFIX}/{{ install_base }}/bin/heavydb         # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/initheavy       # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/heavysql        # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/KafkaImporter   # [unix]\n        - test -f ${PREFIX}/{{ install_base }}/bin/StreamImporter  # [unix]\n        - if not exist %PREFIX%\\bin\\heavydb.exe exit 1             # [win]\n        - if not exist %PREFIX%\\bin\\initheavy.exe exit 1           # [win]\n        - if not exist %PREFIX%\\bin\\heavysql.exe exit 1            # [win]\n\n        # Verify the activation scripts are in-place.\n        {% for state in [\"activate\", \"deactivate\"] %}\n        - test -f \"${PREFIX}/etc/conda/{{ state }}.d/{{ PKG_NAME }}_{{ state }}.sh\"  # [unix]\n        {% endfor %}\n        # Try using the activation scripts.\n        - |\n          if [[ -x \"$(command -v heavysql)\" ]]                                                 # [unix]\n          then                                                                                # [unix]\n            echo \"Found heavysql in PATH\"                                                     # [unix]\n          else                                                                                # [unix]\n            echo \"heavysql not found in PATH(=$PATH)\" && exit 1                               # [unix]\n          fi                                                                                  # [unix]\n          source ${PREFIX}/etc/conda/deactivate.d/{{ PKG_NAME }}_deactivate.sh                # [unix]\n          if [[ -x \"$(command -v heavysql)\" ]]                                                 # [unix]\n          then                                                                                # [unix]\n            echo \"Unexpectedly found heavysql in PATH(=$PATH) after deactivation\"  && exit 1  # [unix]\n          else                                                                                # [unix]\n            echo \"heavysql not in PATH after deactivation\"                                    # [unix]\n          fi                                                                                  # [unix]\n          source ${PREFIX}/etc/conda/activate.d/{{ PKG_NAME }}_activate.sh                    # [unix]\n        # Test installation\n        - heavysql -v              # [unix]\n        - which initheavy    # [unix]\n        - which heavydb    # [unix]\n        - heavysql.exe -v          # [win]\n        - |\n          if [ -x \"$(command -v nvidia-smi)\" ]; then  # [unix and cuda_compiler_version not in (undefined, \"None\")]\n            mkdir data && initheavy data              # [unix and cuda_compiler_version not in (undefined, \"None\")]\n            heavydb --version                         # [unix and cuda_compiler_version not in (undefined, \"None\")]\n            rm -rf data                               # [unix and cuda_compiler_version not in (undefined, \"None\")]\n          fi                                          # [unix and cuda_compiler_version not in (undefined, \"None\")]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/cuda_mapd_rt.fatbin  # [unix and cuda_compiler_version not in (undefined, \"None\")]\n        - test -f ${PREFIX}/{{ install_base }}/QueryEngine/CudaTableFunctions.a  # [unix and cuda_compiler_version not in (undefined, \"None\")]\n        # these are provided by heavydb-common package:\n        - which heavydb_insert_sample_data  # [unix]\n        - which startheavy  # [unix]\n\n    about:\n      home: https://heavy.ai\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE.md\n      summary: The HeavyDB database\n\n      description: |\n        HeavyDB is an in-memory, column store, SQL relational database\n        that was designed from the ground up to run on GPUs.\n\n        This recipe provides both CUDA enabled and CUDA disabled heavydb\n        packages.\n      doc_url: https://docs.heavy.ai/\n      dev_url: https://github.com/heavyai/heavydb\n\n  - name: pyheavydb\n    version: {{ version }}\n    build:\n      skip: true  # [cuda_compiler_version in (\"11.0\",)]\n      noarch: python\n      script: python -m pip install -vv --no-deps python/.\n      run_exports:\n        - {{ pin_subpackage('pyheavydb',  max_pin='x.x.x') }}\n      ignore_run_exports:\n        - openssl\n    requirements:\n      host:\n        - pip\n        - python\n        - flit-core\n      run:\n        - python >=3.7\n        - importlib_metadata\n        - packaging\n        - numpy >=1.16\n        - thrift {{ pythrift_version }}\n        - sqlalchemy >=1.3\n        - requests >=2.23.0\n\n    about:\n      home: https://github.com/heavyai/heavydb\n      license: Apache-2.0\n      license_family: Apache\n      license_file: ./python/LICENSE.md\n      summary: A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD).\n      description: |\n        A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n      doc_url: https://pyheavydb.readthedocs.io\n      dev_url: https://github.com/heavyai/heavydb\n\n    test:\n      imports:\n        - heavydb\n      commands:\n        - pip check\n      requires:\n        - pip\n\n  - name: heavydbe\n    version: {{ version }}\n    script: build-heavydb.sh\n    build:\n      string: {{ build_string_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"11.0\") or not linux64]\n      skip: true\n      missing_dso_whitelist:\n        - '*/libcuda.*'  # [cuda_compiler_version not in (undefined, \"None\")]\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n      ignore_run_exports:\n        - cudatoolkit    # [cuda_compiler_version not in (undefined, \"None\")]\n        - fmt\n        - glog\n        - libclang-cpp\n        - librdkafka\n        - openssl\n        - ncurses\n        - zlib\n      rpaths:\n        - lib/\n        # fixes \"not found\" in `ldd $PREFIX/lib/libDBEngine.so` output\n        - {{ install_base }}/lib\n      run_exports:\n        - {{ pin_subpackage('heavydbe',  max_pin='x.x.x') }}\n    requirements:\n      build:\n        # c compiler is specified here to get run constraint pins correct, presumably..\n        - {{ compiler('c') }}\n        - {{ compiler('cgo') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n        - clangdev {{ llvm_version }}\n        # clang++ is used for generating the bytecodes of extension functions\n        - clangxx {{ llvm_version }}\n        - cmake\n        - llvmdev {{ llvm_version }}\n        - make\n        - ninja\n        - maven\n      host:\n        - arrow-cpp ={{ arrow_version }}=*{{ build_ext }}\n        - bisonpp\n        - blosc\n        - boost-cpp\n        - clangdev {{ llvm_version }}\n        - double-conversion\n        - flex\n        - fmt\n        - glog\n        - llvmdev {{ llvm_version }}\n        - llvm {{ llvm_version }}\n        - libarchive\n        - libclang-cpp {{ llvm_version }}\n        - libgdal\n        - libpng\n        - librdkafka\n        - libzlib\n        - tbb\n        - tbb-devel\n        - thrift-cpp {{ thrift_version }}\n        - xerces-c\n      run:\n        - arrow-cpp-proc {{ arrow_proc_version }} {{ build_ext }}\n        - boost-cpp\n        - bzip2\n        # omnscidb Load-time UDF support calls clang++\n        - gxx_{{ target_platform }}\n        - {{ pin_compatible('libclang-cpp', max_pin='x.x') }}\n        - ncurses\n        - openjdk 8.*\n        - xz\n        - zlib\n        - {{ pin_subpackage('heavydb-common',  max_pin='x.x.x') }}\n      run_constrained:\n        - arrow-cpp-proc {{ arrow_proc_version }} {{ build_ext }}\n        - cudatoolkit >=11.0  # [cuda_compiler_version not in (undefined, \"None\")]\n\n    test:\n      commands:\n        # Test installation\n        - test -f ${PREFIX}/lib/libDBEngine.so\n        # Verify the activation scripts are in-place.\n        {% for state in [\"activate\", \"deactivate\"] %}\n        - test -f \"${PREFIX}/etc/conda/{{ state }}.d/{{ PKG_NAME }}_{{ state }}.sh\"\n        {% endfor %}\n        - |\n          source ${PREFIX}/etc/conda/activate.d/{{ PKG_NAME }}_activate.sh\n          test -n \"${HEAVYAI_ROOT_PATH+x}\"\n          ldd ${PREFIX}/lib/libDBEngine.so\n\n    about:\n      home: https://heavy.ai\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE.md\n      summary: The HeavyDB database\n\n      description: |\n        HeavyDB is an in-memory, column store, SQL relational database\n        that was designed from the ground up to run on GPUs.\n      doc_url: https://docs.heavy.ai/\n      dev_url: https://github.com/heavyai/heavydb\n\n  - name: pyheavydbe\n    version: {{ version }}\n    script: build-heavydb.sh\n    build:\n      string: {{ py_build_string_ext }}\n      skip: true  # [cuda_compiler_version not in (undefined, \"None\", \"11.0\") or not linux64]\n      skip: true  # temporarily skipping pyheavydbe build\n      missing_dso_whitelist:\n        - '*/libcuda.*'  # [cuda_compiler_version not in (undefined, \"None\")]\n      track_features:\n        {{ \"- arrow-cuda\" if cuda_enabled else \"\" }}\n      ignore_run_exports:\n        - arrow-cpp {{ arrow_version }}\n        - blosc\n        - cudatoolkit    # [cuda_compiler_version not in (undefined, \"None\")]\n        - double-conversion\n        - fmt\n        - glog\n        - libarchive\n        - libgdal\n        - libllvm{{ llvm_version }}\n        - libpng\n        - librdkafka\n        - libthrift {{ thrift_version }}\n        - openssl\n        - pyarrow {{ arrow_version }}\n        - python\n        - tbb\n      run_exports:\n        - {{ pin_subpackage('pyheavydbe',  max_pin='x.x.x') }}\n    requirements:\n      build:\n        # c compiler is specified here to get run constraint pins correct, presumably..\n        - {{ compiler('c') }}\n        - {{ compiler('cgo') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler(\"cuda\") }}  # [cuda_compiler_version not in (undefined, \"None\")]\n        - clangdev {{ llvm_version }}\n        # clang++ is used for generating the bytecodes of extension functions\n        - clangxx {{ llvm_version }}\n        - cmake\n        - llvmdev {{ llvm_version }}\n        - make\n        - ninja\n        - maven\n      host:\n        - arrow-cpp ={{ arrow_version }}=*{{ build_ext }}\n        - bisonpp\n        - blosc\n        - boost-cpp\n        - clangdev {{ llvm_version }}\n        - cython\n        - double-conversion\n        - flex\n        - fmt\n        - glog\n        - llvmdev {{ llvm_version }}\n        - llvm {{ llvm_version }}\n        - libarchive\n        - libgdal\n        - libpng\n        - librdkafka\n        - numpy\n        - pip\n        - pyarrow ={{ arrow_version }}=*{{ build_ext }}\n        - python\n        - pytest\n        - tbb\n        - tbb-devel\n        - thrift-cpp {{ thrift_version }}\n        - {{ pin_subpackage('heavydbe', exact=True) }}\n      run:\n        - arrow-cpp-proc {{ arrow_proc_version }} {{ build_ext }}\n        - pyarrow ={{ arrow_version }}=*{{ build_ext }}\n        - python\n        - tbb4py\n        - {{ pin_subpackage('heavydbe', exact=True) }}\n    test:\n      requires:\n        - pytest\n        - numpy\n        - pandas\n      imports:\n        - heavydbe\n      source_files:\n        - Embedded/test/test_exceptions.py\n      commands:\n        - pytest -sv Embedded/test/test_exceptions.py\n\n    about:\n      home: https://heavy.ai\n      license: Apache-2.0\n      license_family: APACHE\n      license_file: LICENSE.md\n      summary: The HeavyDB database\n\n      description: |\n        HeavyDB is an in-memory, column store, SQL relational database\n        that was designed from the ground up to run on GPUs.\n      doc_url: https://docs.heavy.ai/\n      dev_url: https://github.com/heavyai/heavydb\n\nabout:\n  home: https://heavy.ai\n  license: Apache-2.0\n  license_family: APACHE\n  license_file: LICENSE.md\n  summary: The HeavyDB database\n\n  description: |\n    HeavyDB is an in-memory, column store, SQL relational database\n    that was designed from the ground up to run on GPUs.\n\n    This recipe provides the following packages:\n      heavydb-common CUDA-enabled heavydb, cpu and cuda builds\n      pyheavydb Python connector\n      heavydbe embedding library, cpu and cuda builds\n      pyheavydbe-embedded Python extension module\n  doc_url: https://docs.heavy.ai/\n  dev_url: https://github.com/heavyai/heavydb\n\nextra:\n  recipe-maintainers:\n    - guilhermeleobas\n    - pearu\n    - tupui\n    - tmostak\n    - pantosik\n",
  "req": {
    "__set__": true,
    "elements": [
      "arrow-cpp",
      "arrow-cpp-proc",
      "bisonpp",
      "blosc",
      "boost-cpp",
      "bzip2",
      "c_compiler_stub",
      "cgo_compiler_stub",
      "clangdev",
      "clangxx",
      "cmake",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "cython",
      "double-conversion",
      "flex",
      "flit-core",
      "fmt",
      "geos",
      "gflags",
      "glog",
      "gxx_linux-64",
      "gxx_win-64",
      "heavydb-common",
      "heavydbe",
      "importlib_metadata",
      "libarchive",
      "libclang-cpp",
      "libevent",
      "libgdal",
      "libkml",
      "libpng",
      "librdkafka",
      "libzlib",
      "llvm",
      "llvmdev",
      "make",
      "maven",
      "ncurses",
      "ninja",
      "numpy",
      "openjdk",
      "openldap",
      "openssl",
      "packaging",
      "pip",
      "pyarrow",
      "pytest",
      "python",
      "requests",
      "snappy",
      "sqlalchemy",
      "tbb",
      "tbb-devel",
      "tbb4py",
      "thrift",
      "thrift-cpp",
      "winflexbison",
      "xerces-c",
      "xz",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cgo_compiler_stub",
        "clangdev",
        "clangxx",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "llvmdev",
        "make",
        "maven",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arrow-cpp",
        "bisonpp",
        "blosc",
        "boost-cpp",
        "c_compiler_stub",
        "clangdev",
        "ctng-compiler-activation",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "cython",
        "double-conversion",
        "flex",
        "flit-core",
        "fmt",
        "geos",
        "gflags",
        "glog",
        "heavydbe",
        "libarchive",
        "libclang-cpp",
        "libevent",
        "libgdal",
        "libkml",
        "libpng",
        "librdkafka",
        "libzlib",
        "llvm",
        "llvmdev",
        "ncurses",
        "numpy",
        "openldap",
        "openssl",
        "pip",
        "pyarrow",
        "pytest",
        "python",
        "snappy",
        "tbb",
        "tbb-devel",
        "thrift-cpp",
        "winflexbison",
        "xerces-c"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "arrow-cpp-proc",
        "boost-cpp",
        "bzip2",
        "c_compiler_stub",
        "ctng-compiler-activation",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "gxx_linux-64",
        "gxx_win-64",
        "heavydb-common",
        "heavydbe",
        "importlib_metadata",
        "libclang-cpp",
        "ncurses",
        "numpy",
        "openjdk",
        "packaging",
        "pyarrow",
        "python",
        "requests",
        "sqlalchemy",
        "tbb4py",
        "thrift",
        "xz",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cgo_compiler_stub",
        "clangdev 11",
        "clangxx 11",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "llvmdev 11",
        "make",
        "maven",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arrow-cpp =9.*=*cpu",
        "arrow-cpp =9.*=*cuda",
        "bisonpp",
        "blosc",
        "boost-cpp",
        "clangdev 11",
        "cython",
        "double-conversion",
        "flex",
        "flit-core",
        "fmt",
        "geos",
        "gflags",
        "glog",
        "heavydbe",
        "libarchive",
        "libclang-cpp 11",
        "libevent",
        "libgdal",
        "libkml",
        "libpng",
        "librdkafka",
        "libzlib",
        "llvm 11",
        "llvmdev 11",
        "ncurses",
        "numpy",
        "openldap",
        "openssl",
        "pip",
        "pyarrow =9.*=*cpu",
        "pyarrow =9.*=*cuda",
        "pytest",
        "python",
        "snappy",
        "tbb",
        "tbb-devel",
        "thrift-cpp 0.16.*",
        "winflexbison",
        "xerces-c"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "arrow-cpp-proc 3.* cpu",
        "arrow-cpp-proc 3.* cuda",
        "boost-cpp",
        "bzip2",
        "gxx_linux-64",
        "gxx_win-64",
        "heavydb-common",
        "heavydbe",
        "importlib_metadata",
        "libclang-cpp",
        "libclang-cpp 11",
        "ncurses",
        "numpy >=1.16",
        "openjdk 8.*",
        "packaging",
        "pyarrow =9.*=*cpu",
        "pyarrow =9.*=*cuda",
        "python",
        "python >=3.7",
        "requests >=2.23.0",
        "sqlalchemy >=1.3",
        "tbb4py",
        "thrift 0.16.*",
        "xz",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "pip",
        "pytest"
      ]
    }
  },
  "url": "https://github.com/heavyai/heavydb/archive/v6.4.0.tar.gz",
  "version": "6.4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/heavydb-ext.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides the following packages:\n  heavydb-common CUDA-enabled heavydb, cpu and cuda builds\n  pyheavydb Python connector\n  heavydbe embedding library, cpu and cuda builds\n  pyheavydbe-embedded Python extension module\n",
      "dev_url": "https://github.com/heavyai/heavydb",
      "doc_url": "https://docs.heavy.ai/",
      "home": "https://heavy.ai",
      "license": "Apache-2.0",
      "license_family": "APACHE",
      "license_file": "LICENSE.md",
      "summary": "The HeavyDB database"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "guilhermeleobas",
        "pearu",
        "tupui",
        "tmostak",
        "pantosik"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libstdcxx-ng",
            "libthrift",
            "openssl"
          ],
          "run_exports": [
            "heavydb-common"
          ],
          "string": "h1234567_0"
        },
        "name": "heavydb-common",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "fmt",
            "geos",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libevent",
            "libgdal",
            "libpng",
            "librdkafka",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "winflexbison"
          ]
        },
        "script": "build-heavydb-common.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\share\\doc\\heavyai\\LICENSE.md exit 1",
            "if not exist %PREFIX%\\ThirdParty\\gdal-data exit 1",
            "if not exist %PREFIX%\\completion_hints.thrift exit 1",
            "if not exist %PREFIX%\\heavy.thrift exit 1",
            "if not exist %PREFIX%\\common.thrift exit 1",
            "if not exist %PREFIX%\\QueryEngine/serialized_result_set.thrift exit 1",
            "if not exist %PREFIX%\\QueryEngine/extension_functions.thrift exit 1",
            "if not exist %PREFIX%\\Shared\\funcannotations.h exit 1",
            "if not exist %PREFIX%\\Shared\\InlineNullValues.h exit 1",
            "if not exist %PREFIX%\\Logger\\Logger.h exit 1",
            "if not exist %PREFIX%\\QueryEngine\\heavydbTypes.h exit 1",
            "if not exist %PREFIX%\\QueryEngine\\RuntimeFunctions.bc exit 1",
            "if not exist %PREFIX%\\QueryEngine\\GeosRuntime.bc exit 1",
            "if not exist %PREFIX%\\QueryEngine\\ExtensionFunctions.ast exit 1",
            "if not exist %PREFIX%\\bin\\heavyai-utility-6.4.0.jar exit 1",
            "if not exist %PREFIX%\\bin\\heavyai-jdbc-6.4.0.jar exit 1",
            "if not exist %PREFIX%\\bin\\calcite-1.0-SNAPSHOT-jar-with-dependencies.jar exit 1",
            "if not exist %PREFIX%\\bin\\generate_cert exit 1"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n\nThis recipe provides both CUDA enabled and CUDA disabled heavydb\npackages.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "gflags",
            "glog",
            "libclang-cpp",
            "libkml",
            "ncurses",
            "openldap",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "heavydb"
          ],
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydb",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "fmt",
            "gflags",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libevent",
            "libgdal",
            "libkml",
            "libpng",
            "librdkafka",
            "libzlib",
            "openssl",
            "snappy",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "winflexbison",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "libclang-cpp 11",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.bat",
        "test": {
          "commands": [
            "if not exist %PREFIX%\\bin\\heavydb.exe exit 1",
            "if not exist %PREFIX%\\bin\\initheavy.exe exit 1",
            "if not exist %PREFIX%\\bin\\heavysql.exe exit 1",
            "",
            "heavysql.exe -v"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "A python DB API 2 compatible client HeavyDB (formerly OmniSci and MapD).\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://pyheavydb.readthedocs.io",
          "home": "https://github.com/heavyai/heavydb",
          "license": "Apache-2.0",
          "license_family": "Apache",
          "license_file": "./python/LICENSE.md",
          "summary": "A python DB API 2 compatible client for HeavyDB (formerly OmniSci and MapD)."
        },
        "build": {
          "ignore_run_exports": [
            "openssl"
          ],
          "noarch": "python",
          "run_exports": [
            "pyheavydb"
          ],
          "script": "python -m pip install -vv --no-deps python/."
        },
        "name": "pyheavydb",
        "requirements": {
          "host": [
            "pip",
            "python",
            "flit-core"
          ],
          "run": [
            "python >=3.7",
            "importlib_metadata",
            "packaging",
            "numpy >=1.16",
            "thrift 0.16.*",
            "sqlalchemy >=1.3",
            "requests >=2.23.0"
          ]
        },
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "heavydb"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "fmt",
            "glog",
            "libclang-cpp",
            "librdkafka",
            "openssl",
            "ncurses",
            "zlib"
          ],
          "missing_dso_whitelist": null,
          "rpaths": [
            "lib/",
            "opt/heavyai/lib"
          ],
          "run_exports": [
            "heavydbe"
          ],
          "skip": true,
          "string": "h1234567_0_cpu",
          "track_features": null
        },
        "name": "heavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libclang-cpp 11",
            "libgdal",
            "libpng",
            "librdkafka",
            "libzlib",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "xerces-c"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "boost-cpp",
            "bzip2",
            "gxx_win-64",
            "libclang-cpp",
            "ncurses",
            "openjdk 8.*",
            "xz",
            "zlib",
            "heavydb-common"
          ],
          "run_constrained": [
            "arrow-cpp-proc 3.* cpu"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "test -f ${PREFIX}/lib/libDBEngine.so",
            "test -f \"${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\"",
            "test -f \"${PREFIX}/etc/conda/deactivate.d/heavydb-ext_deactivate.sh\"",
            "source ${PREFIX}/etc/conda/activate.d/heavydb-ext_activate.sh\ntest -n \"${HEAVYAI_ROOT_PATH+x}\"\nldd ${PREFIX}/lib/libDBEngine.so\n"
          ]
        },
        "version": "6.4.0"
      },
      {
        "about": {
          "description": "HeavyDB is an in-memory, column store, SQL relational database\nthat was designed from the ground up to run on GPUs.\n",
          "dev_url": "https://github.com/heavyai/heavydb",
          "doc_url": "https://docs.heavy.ai/",
          "home": "https://heavy.ai",
          "license": "Apache-2.0",
          "license_family": "APACHE",
          "license_file": "LICENSE.md",
          "summary": "The HeavyDB database"
        },
        "build": {
          "ignore_run_exports": [
            "arrow-cpp 9.*",
            "blosc",
            "double-conversion",
            "fmt",
            "glog",
            "libarchive",
            "libgdal",
            "libllvm11",
            "libpng",
            "librdkafka",
            "libthrift 0.16.*",
            "openssl",
            "pyarrow 9.*",
            "python",
            "tbb"
          ],
          "missing_dso_whitelist": null,
          "run_exports": [
            "pyheavydbe"
          ],
          "skip": true,
          "string": "py311h1234567_0_cpu",
          "track_features": null
        },
        "name": "pyheavydbe",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "cgo_compiler_stub",
            "cxx_compiler_stub",
            "clangdev 11",
            "clangxx 11",
            "cmake",
            "llvmdev 11",
            "make",
            "ninja",
            "maven"
          ],
          "host": [
            "arrow-cpp =9.*=*cpu",
            "bisonpp",
            "blosc",
            "boost-cpp",
            "clangdev 11",
            "cython",
            "double-conversion",
            "flex",
            "fmt",
            "glog",
            "llvmdev 11",
            "llvm 11",
            "libarchive",
            "libgdal",
            "libpng",
            "librdkafka",
            "numpy",
            "pip",
            "pyarrow =9.*=*cpu",
            "python",
            "pytest",
            "tbb",
            "tbb-devel",
            "thrift-cpp 0.16.*",
            "heavydbe"
          ],
          "run": [
            "arrow-cpp-proc 3.* cpu",
            "pyarrow =9.*=*cpu",
            "python",
            "tbb4py",
            "heavydbe"
          ]
        },
        "script": "build-heavydb.sh",
        "test": {
          "commands": [
            "pytest -sv Embedded/test/test_exceptions.py"
          ],
          "imports": [
            "heavydbe"
          ],
          "requires": [
            "pytest",
            "numpy",
            "pandas"
          ],
          "source_files": [
            "Embedded/test/test_exceptions.py"
          ]
        },
        "version": "6.4.0"
      }
    ],
    "package": {
      "name": "heavydb-ext",
      "version": "6.4.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub"
      ],
      "host": [
        "openssl"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0006-Fix-Windows-build-heavydb-620.patch"
      ],
      "sha256": "089b998802456c561a48cf745ac8ca6e07c93f05a9a6f75e5483b003fb0fdf4d",
      "url": "https://github.com/heavyai/heavydb/archive/v6.4.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cgo_compiler_stub",
        "clangdev",
        "clangxx",
        "cmake",
        "cxx_compiler_stub",
        "llvmdev",
        "make",
        "maven",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "arrow-cpp",
        "bisonpp",
        "blosc",
        "boost-cpp",
        "clangdev",
        "cython",
        "double-conversion",
        "flex",
        "flit-core",
        "fmt",
        "geos",
        "gflags",
        "glog",
        "heavydbe",
        "libarchive",
        "libclang-cpp",
        "libevent",
        "libgdal",
        "libkml",
        "libpng",
        "librdkafka",
        "libzlib",
        "llvm",
        "llvmdev",
        "numpy",
        "openssl",
        "pip",
        "pyarrow",
        "pytest",
        "python",
        "snappy",
        "tbb",
        "tbb-devel",
        "thrift-cpp",
        "winflexbison",
        "xerces-c"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "arrow-cpp-proc",
        "boost-cpp",
        "bzip2",
        "gxx_win-64",
        "heavydb-common",
        "heavydbe",
        "importlib_metadata",
        "libclang-cpp",
        "ncurses",
        "numpy",
        "openjdk",
        "packaging",
        "pyarrow",
        "python",
        "requests",
        "sqlalchemy",
        "tbb4py",
        "thrift",
        "xz",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pandas",
        "pip",
        "pytest"
      ]
    }
  }
}