{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "4e9f41fe6f7222143bf92c84caffbe4b9d2073ad",
  "feedstock_hash_ts": 1755695889,
  "feedstock_name": "napari_video",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/janclemenslab/napari-video",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "napari plugin for reading videos."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "jaimergp",
        "postpop"
      ]
    },
    "package": {
      "name": "napari_video",
      "version": "0.2.13"
    },
    "requirements": {
      "host": [
        "flit-core",
        "pip",
        "python 3.9"
      ],
      "run": [
        "numpy",
        "python >=3.9",
        "pyvideoreader",
        "napari-plugin-engine >=0.1.4",
        "dask-core"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0a81ea583d8562d5ed2226b323a77f7953a98aa1b2276213788352c18c16b29c",
      "url": "https://pypi.org/packages/source/n/napari_video/napari_video-0.2.13.tar.gz"
    },
    "test": {
      "commands": [
        "pip list"
      ],
      "imports": [
        "napari_video.napari_video"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dask-core",
        "napari-plugin-engine",
        "numpy",
        "python",
        "pyvideoreader"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/janclemenslab/napari-video",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "napari plugin for reading videos."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "goanpeca",
        "jaimergp",
        "postpop"
      ]
    },
    "package": {
      "name": "napari_video",
      "version": "0.2.13"
    },
    "requirements": {
      "host": [
        "flit-core",
        "pip",
        "python 3.9"
      ],
      "run": [
        "numpy",
        "python >=3.9",
        "pyvideoreader",
        "napari-plugin-engine >=0.1.4",
        "dask-core"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0a81ea583d8562d5ed2226b323a77f7953a98aa1b2276213788352c18c16b29c",
      "url": "https://pypi.org/packages/source/n/napari_video/napari_video-0.2.13.tar.gz"
    },
    "test": {
      "commands": [
        "pip list"
      ],
      "imports": [
        "napari_video.napari_video"
      ],
      "requires": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "name": "napari_video",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "napari_video"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/napari_video.json"
  },
  "raw_meta_yaml": "{% set name = \"napari_video\" %}\n{% set version = \"0.2.13\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/napari_video-{{ version }}.tar.gz\n  sha256: 0a81ea583d8562d5ed2226b323a77f7953a98aa1b2276213788352c18c16b29c\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - flit-core\n    - pip\n    - python {{ python_min }}\n  run:\n    - numpy\n    - python >={{ python_min }}\n    - pyvideoreader\n    - napari-plugin-engine >=0.1.4\n    # adding dask-core due to unused import; remove in next release!\n    - dask-core\n\ntest:\n  imports:\n    - napari_video.napari_video\n  commands:\n    - pip list\n    # - pip check\n  requires:\n    - pip\n    - python {{ python_min }}\n\nabout:\n  home: https://github.com/janclemenslab/napari-video\n  summary: napari plugin for reading videos.\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - goanpeca\n    - jaimergp\n    - postpop\n",
  "req": {
    "__set__": true,
    "elements": [
      "dask-core",
      "flit-core",
      "napari-plugin-engine",
      "numpy",
      "pip",
      "python",
      "pyvideoreader"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dask-core",
        "napari-plugin-engine",
        "numpy",
        "python",
        "pyvideoreader"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "flit-core",
        "pip",
        "python 3.9"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "dask-core",
        "napari-plugin-engine >=0.1.4",
        "numpy",
        "python >=3.9",
        "pyvideoreader"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/n/napari_video/napari_video-0.2.13.tar.gz",
  "version": "0.2.13",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/napari_video.json"
  }
}