{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-rnomni",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\"",
        "\"%R%\" -e \"library('RNOmni')\""
      ]
    }
  },
  "name": "r-rnomni",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('RNOmni')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-rnomni"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-rnomni.json"
  },
  "raw_meta_yaml": "{% set version = \"1.0.1.2\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-rnomni\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/RNOmni_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/RNOmni/RNOmni_{{ version }}.tar.gz\n  sha256: 36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa\n\nbuild:\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ compiler('fortran') }}        # [osx and arm64]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-rcpp                       # [build_platform != target_platform]\n    - r-rcpparmadillo              # [build_platform != target_platform]\n    - r-plyr                       # [build_platform != target_platform]\n  host:\n    - r-base\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-plyr\n    - libblas\n    - liblapack\n  run:\n    - r-base\n    - r-rcpp\n    - r-rcpparmadillo\n    - r-plyr\n\ntest:\n  commands:\n    - $R -e \"library('RNOmni')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('RNOmni')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=RNOmni\n  license: GPL-3.0-only\n  summary: Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess\n    skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT\n    and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>.\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# The original CRAN metadata for this package was:\n# Package: RNOmni\n# Title: Rank Normal Transformation Omnibus Test\n# Version: 1.0.0\n# Date: 2020-10-04\n# Authors@R: person(given = \"Zachary\", family = \"McCaw\", role = c(\"aut\", \"cre\"), email = \"zmccaw@alumni.harvard.edu\", comment = c(ORCID = \"0000-0002-2006-9828\"))\n# Description: Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>.\n# Depends: R (>= 3.2.2)\n# Imports: plyr, Rcpp, stats\n# LinkingTo: Rcpp, RcppArmadillo\n# License: GPL-3\n# Encoding: UTF-8\n# LazyData: true\n# RoxygenNote: 7.1.1\n# Suggests: R.rsp\n# VignetteBuilder: R.rsp\n# NeedsCompilation: yes\n# Packaged: 2020-10-05 14:37:41 UTC; zmccaw\n# Author: Zachary McCaw [aut, cre] (<https://orcid.org/0000-0002-2006-9828>)\n# Maintainer: Zachary McCaw <zmccaw@alumni.harvard.edu>\n# Repository: CRAN\n# Date/Publication: 2020-10-05 16:40:02 UTC\n# See\n# https://docs.conda.io/projects/conda-build for\n# more information about meta.yaml\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "fortran_compiler_stub",
      "libblas",
      "liblapack",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-plyr",
      "r-rcpp",
      "r-rcpparmadillo",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
  ],
  "version": "1.0.1.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-rnomni.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=RNOmni",
      "license": "GPL-3.0-only",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Inverse normal transformation (INT) based genetic association testing. These tests are recommend for continuous traits with non-normally distributed residuals. INT-based tests robustly control the type I error in settings where standard linear regression does not, as when the residual distribution exhibits excess skew or kurtosis. Moreover, INT-based tests dominate standard linear regression in terms of power. These tests may be classified into two types. In direct INT (D-INT), the phenotype is itself transformed. In indirect INT (I-INT), phenotypic residuals are transformed. The omnibus test (O-INT) adaptively combines D-INT and I-INT into a single robust and statistically powerful approach. See McCaw ZR, Lane JM, Saxena R, Redline S, Lin X. \"Operating characteristics of the rank-based inverse normal transformation for quantitative trait analysis in genome-wide association studies\" <doi:10.1111/biom.13214>."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-rnomni",
      "version": "1.0.1.2"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-plyr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "36cd206158bba16b77273938ba63fe511e16be5b04111534123b659d8acbe6aa",
      "url": [
        "https://cran.r-project.org/src/contrib/RNOmni_1.0.1.2.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/RNOmni/RNOmni_1.0.1.2.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('RNOmni')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-plyr",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}