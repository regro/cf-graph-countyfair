{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "audi",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/darioizzo/audi",
      "home": "http://darioizzo.github.io/audi/",
      "license": "GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only",
      "license_file": [
        "LICENSE",
        "COPYING.gpl3",
        "COPYING.lgpl3"
      ],
      "summary": "C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
    },
    "build": {
      "number": "8"
    },
    "extra": {
      "recipe-maintainers": [
        "darioizzo"
      ]
    },
    "package": {
      "name": "audi",
      "version": "1.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "eigen",
        "obake-devel",
        "mppp"
      ],
      "run": [
        "eigen"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
      "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/darioizzo/audi",
      "home": "http://darioizzo.github.io/audi/",
      "license": "GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only",
      "license_file": [
        "LICENSE",
        "COPYING.gpl3",
        "COPYING.lgpl3"
      ],
      "summary": "C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
    },
    "build": {
      "number": "8"
    },
    "extra": {
      "recipe-maintainers": [
        "darioizzo"
      ]
    },
    "package": {
      "name": "audi",
      "version": "1.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make",
        "clang",
        "ninja"
      ],
      "host": [
        "libboost-devel",
        "eigen",
        "obake-devel",
        "mppp"
      ],
      "run": [
        "eigen"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
      "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f"
      ]
    }
  },
  "name": "audi",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/darioizzo/audi",
      "home": "http://darioizzo.github.io/audi/",
      "license": "GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only",
      "license_file": [
        "LICENSE",
        "COPYING.gpl3",
        "COPYING.lgpl3"
      ],
      "summary": "C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
    },
    "build": {
      "number": "8"
    },
    "extra": {
      "recipe-maintainers": [
        "darioizzo"
      ]
    },
    "package": {
      "name": "audi",
      "version": "1.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "eigen",
        "obake-devel",
        "mppp"
      ],
      "run": [
        "eigen"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
      "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/darioizzo/audi",
      "home": "http://darioizzo.github.io/audi/",
      "license": "GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only",
      "license_file": [
        "LICENSE",
        "COPYING.gpl3",
        "COPYING.lgpl3"
      ],
      "summary": "C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
    },
    "build": {
      "number": "8"
    },
    "extra": {
      "recipe-maintainers": [
        "darioizzo"
      ]
    },
    "package": {
      "name": "audi",
      "version": "1.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "libboost-devel",
        "eigen",
        "obake-devel",
        "mppp"
      ],
      "run": [
        "eigen"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
      "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "audi"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/audi.json"
  },
  "raw_meta_yaml": "{% set version = \"1.9.2\" %}\n\npackage:\n  name: audi\n  version: {{ version }}\n\nsource:\n  url: https://github.com/darioizzo/audi/archive/v{{ version }}.tar.gz\n  sha256: 4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279\n\nbuild:\n  number: 8\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make       # [unix]\n    - clang      # [win]\n    - ninja      # [win]\n  host:\n    - libboost-devel\n    - eigen\n    - obake-devel\n    - mppp\n  run:\n    - eigen\n  run_constrained:\n    # obake uses abseil headers, which require 10.13\n\ntest:\n  commands:\n    - test -f\n\nabout:\n  home: http://darioizzo.github.io/audi/\n  license: GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only\n  license_file:\n    - LICENSE\n    - COPYING.gpl3\n    - COPYING.lgpl3\n  summary: 'C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)'\n  dev_url: https://github.com/darioizzo/audi\n\nextra:\n  recipe-maintainers:\n    - darioizzo\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "clang",
      "cmake",
      "cxx_compiler_stub",
      "eigen",
      "libboost-devel",
      "make",
      "mppp",
      "ninja",
      "obake-devel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz",
  "version": "1.9.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/audi.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/darioizzo/audi",
      "home": "http://darioizzo.github.io/audi/",
      "license": "GPL-2.0-only OR GPL-3.0-only OR LGPL-3.0-only",
      "license_file": [
        "LICENSE",
        "COPYING.gpl3",
        "COPYING.lgpl3"
      ],
      "summary": "C++ header only library: Algebra of Taylor truncated polynomials and a few algorithms useful for its applications (e.g. Automated differentiation, Differential Intelligence, Taylor Models, etc.)"
    },
    "build": {
      "number": "8"
    },
    "extra": {
      "recipe-maintainers": [
        "darioizzo"
      ]
    },
    "package": {
      "name": "audi",
      "version": "1.9.2"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "clang",
        "ninja"
      ],
      "host": [
        "libboost-devel",
        "eigen",
        "obake-devel",
        "mppp"
      ],
      "run": [
        "eigen"
      ],
      "run_constrained": null
    },
    "schema_version": 0,
    "source": {
      "sha256": "4888205cfc7c8ffe15485b90d151cf6f296fc65c58d3c92ba57da8ab43c17279",
      "url": "https://github.com/darioizzo/audi/archive/v1.9.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "eigen",
        "libboost-devel",
        "mppp",
        "obake-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "eigen"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}