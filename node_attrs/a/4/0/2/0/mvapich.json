{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_name": "mvapich",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.\nIt provides enhancements including optimization for different networking technologies.\n\n\nThe default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes\nto specific CPU cores to improve performance due to cache locality and reduced context switching.\nIn some environments, particularly those using the Slurm job scheduler, this may degrade performance\nor lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.\n\n\nMVAPICH supports two high-level network modules (netmods), namely UCX and OFI:\nfor the UCX netmod use `conda install conda-forge::mvapich=*=ucx*`, and\nfor the OFI netmod `conda install conda-forge::mvapich=*=ofi*`.\nAs an *experiment* it is also possible to select a particular version of LibFabric or UCX,\nfor instance 1.15.2 with `conda install conda-forge::mvapich=*=ofi_1.15.2*`.\n\nThese commands will install the MVAPICH package configured with the desired netmod.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "COPYRIGHT",
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mvapich"
      ],
      "string": "ucx_1.18.0_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.0"
    },
    "requirements": {
      "build": [
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "libhwloc",
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ],
      "run": [
        "libfabric 1.19.1",
        "rdma-core",
        "mpi 1.0.* mvapich",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74",
      "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.0.tar.gz"
    },
    "test": {
      "commands": [
        "mpiexec -n 2 $PREFIX/libexec/osu-micro-benchmarks/mpi/pt2pt/osu_latency -m 1024:1024"
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfabric",
        "libhwloc",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libfabric",
        "mpi",
        "rdma-core",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.\nIt provides enhancements including optimization for different networking technologies.\n\n\nThe default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes\nto specific CPU cores to improve performance due to cache locality and reduced context switching.\nIn some environments, particularly those using the Slurm job scheduler, this may degrade performance\nor lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.\n\n\nMVAPICH supports two high-level network modules (netmods), namely UCX and OFI:\nfor the UCX netmod use `conda install conda-forge::mvapich=*=ucx*`, and\nfor the OFI netmod `conda install conda-forge::mvapich=*=ofi*`.\nAs an *experiment* it is also possible to select a particular version of LibFabric or UCX,\nfor instance 1.15.2 with `conda install conda-forge::mvapich=*=ofi_1.15.2*`.\n\nThese commands will install the MVAPICH package configured with the desired netmod.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "COPYRIGHT",
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mvapich"
      ],
      "string": "ucx_1.18.0_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.0"
    },
    "requirements": {
      "build": [
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "libhwloc",
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ],
      "run": [
        "libfabric 1.19.1",
        "rdma-core",
        "mpi 1.0.* mvapich",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74",
      "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.0.tar.gz"
    },
    "test": {
      "commands": [
        "echo \"Skipping linux-aarch64 & linux-ppc64le tests for now\""
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfabric",
        "libhwloc",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libfabric",
        "mpi",
        "rdma-core",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.\nIt provides enhancements including optimization for different networking technologies.\n\n\nThe default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes\nto specific CPU cores to improve performance due to cache locality and reduced context switching.\nIn some environments, particularly those using the Slurm job scheduler, this may degrade performance\nor lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.\n\n\nMVAPICH supports two high-level network modules (netmods), namely UCX and OFI:\nfor the UCX netmod use `conda install conda-forge::mvapich=*=ucx*`, and\nfor the OFI netmod `conda install conda-forge::mvapich=*=ofi*`.\nAs an *experiment* it is also possible to select a particular version of LibFabric or UCX,\nfor instance 1.15.2 with `conda install conda-forge::mvapich=*=ofi_1.15.2*`.\n\nThese commands will install the MVAPICH package configured with the desired netmod.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "COPYRIGHT",
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mvapich"
      ],
      "string": "ucx_1.18.0_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.0"
    },
    "requirements": {
      "build": [
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "libhwloc",
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ],
      "run": [
        "libfabric 1.19.1",
        "rdma-core",
        "mpi 1.0.* mvapich",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74",
      "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.0.tar.gz"
    },
    "test": {
      "commands": [
        "echo \"Skipping linux-aarch64 & linux-ppc64le tests for now\""
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfabric",
        "libhwloc",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libfabric",
        "mpi",
        "rdma-core",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.\nIt provides enhancements including optimization for different networking technologies.\n\n\nThe default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes\nto specific CPU cores to improve performance due to cache locality and reduced context switching.\nIn some environments, particularly those using the Slurm job scheduler, this may degrade performance\nor lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.\n\n\nMVAPICH supports two high-level network modules (netmods), namely UCX and OFI:\nfor the UCX netmod use `conda install conda-forge::mvapich=*=ucx*`, and\nfor the OFI netmod `conda install conda-forge::mvapich=*=ofi*`.\nAs an *experiment* it is also possible to select a particular version of LibFabric or UCX,\nfor instance 1.15.2 with `conda install conda-forge::mvapich=*=ofi_1.15.2*`.\n\nThese commands will install the MVAPICH package configured with the desired netmod.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "COPYRIGHT",
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mvapich"
      ],
      "string": "ucx_1.18.0_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.0"
    },
    "requirements": {
      "build": [
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "make"
      ],
      "host": [
        "libhwloc",
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ],
      "run": [
        "libfabric 1.19.1",
        "rdma-core",
        "mpi 1.0.* mvapich",
        "libfabric 1.22.0",
        "ucx >=1.12.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74",
      "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.0.tar.gz"
    },
    "test": {
      "commands": [
        "mpiexec -n 2 $PREFIX/libexec/osu-micro-benchmarks/mpi/pt2pt/osu_latency -m 1024:1024",
        "echo \"Skipping linux-aarch64 & linux-ppc64le tests for now\""
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "name": "mvapich",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mvapich"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mvapich.json"
  },
  "raw_meta_yaml": "{% set version = \"4.0\" %}\n{% set build = 0 %}\n{% set netmod = netmod or 'default' %}\n{% set netmod_variant = netmod.split('-')[0] %}\n{% set netmod_version = netmod.split('-')[1] if '-' in netmod else '' %}\n\npackage:\n  name: mvapich\n  version: {{ version }}\n\nsource:\n  url: https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-{{ version }}.tar.gz\n  sha256: c532f7bdd5cca71f78c12e0885c492f6e276e283711806c84d0b0f80bb3e3b74\n\nbuild:\n  number: {{ build }}\n  string: {{ netmod_variant }}_{{ netmod_version|replace('-','_') }}_h{{ PKG_HASH }}_{{ build }}\n  skip: true  # [win or osx]\n  run_exports:\n    - {{ pin_subpackage('mvapich', max_pin='x.y') }}\n\nrequirements:\n  build:\n    - bison\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - {{ stdlib(\"c\") }}\n    - make\n  host:\n    - libhwloc\n    {% if netmod_variant == \"ofi\" and netmod_version %}\n    - libfabric {{ netmod_version }}\n    {% elif netmod_variant == \"ucx\" %}\n    - ucx >=1.12.0\n    {% endif %}\n  run:\n    {% if netmod_variant == \"ofi\" and netmod_version %}\n    - libfabric {{ netmod_version }}\n    {% elif netmod_variant == \"ucx\" %}\n    - ucx >=1.12.0\n    {% endif %}\n    - rdma-core\n    - mpi 1.0.* mvapich\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n\n  commands:\n{% if target_platform == \"linux-64\" %}\n    - mpiexec -n 2 $PREFIX/libexec/osu-micro-benchmarks/mpi/pt2pt/osu_latency -m 1024:1024\n{% else %}\n    - echo \"Skipping linux-aarch64 & linux-ppc64le tests for now\"\n{% endif %}\n\nabout:\n  home: https://mvapich.cse.ohio-state.edu/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYRIGHT\n  summary: MVAPICH, a high-performance MPI library by The Ohio State University.\n  description: |\n    MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard.\n    It provides enhancements including optimization for different networking technologies.\n\n    ### Important Configuration\n    The default value for `MV2_ENABLE_AFFINITY` is typically `1` (enabled). This setting binds MPI processes\n    to specific CPU cores to improve performance due to cache locality and reduced context switching.\n    In some environments, particularly those using the Slurm job scheduler, this may degrade performance\n    or lead to unexpected behavior, and hence it may be beneficial to set `MV2_ENABLE_AFFINITY=0`.\n\n    ### Selecting Netmods: OFI (external) or UCX\n    MVAPICH supports two high-level network modules (netmods), namely UCX and OFI:\n    for the UCX netmod use `conda install conda-forge::mvapich=*=ucx*`, and\n    for the OFI netmod `conda install conda-forge::mvapich=*=ofi*`. \n    As an *experiment* it is also possible to select a particular version of LibFabric or UCX, \n    for instance 1.15.2 with `conda install conda-forge::mvapich=*=ofi_1.15.2*`.\n\n    These commands will install the MVAPICH package configured with the desired netmod.\n\n    ### About the Compilers\n    Note that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\n    their equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\n    environment as dependencies.\n\nextra:\n  recipe-maintainers:\n    - j34ni\n",
  "req": {
    "__set__": true,
    "elements": [
      "bison",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "libfabric",
      "libhwloc",
      "make",
      "mpi",
      "rdma-core",
      "ucx"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libfabric",
        "libhwloc",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libfabric",
        "mpi",
        "rdma-core",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "libhwloc",
        "ucx >=1.12.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libfabric 1.19.1",
        "libfabric 1.22.0",
        "mpi 1.0.* mvapich",
        "rdma-core",
        "ucx >=1.12.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.0.tar.gz",
  "version": "4.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mvapich.json"
  }
}