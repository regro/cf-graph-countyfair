{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default"
    }
  },
  "feedstock_name": "mvapich",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard\nwith support for **both** Unified Communication X (UCX) and Open Fabric Interfaces (OFI).\n\nThe MVAPICH-SHS variant comes with the CXI provider support for Slingshot Host Systems and\nthe `_cuda` version was build with CUDA 12 support.\n\nIn case the actual *netmod* is not correctly recognized at run time, activate it using either\n`MPICH_CH4_NETMOD=ucx` or `MPICH_CH4_NETMOD=ofi`.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause AND MIT AND (BSD-2-Clause OR GPL-2.0-only)",
      "license_family": "BSD",
      "license_file": [
        "mvapich/COPYRIGHT",
        "shs-libfabric/COPYING",
        "gdrcopy/LICENSE"
      ],
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "ignore_run_exports": [
        "cuda-cudart-dev"
      ],
      "missing_dso_whitelist": [
        "$RPATH/libcuda.so.*",
        "$RPATH/libcuda.so.1",
        "libcuda.so.*",
        "libcuda.so.1"
      ],
      "number": "4",
      "run_exports": [
        "mvapich",
        "cuda-version"
      ],
      "script_env": [
        "LIBS=\"\""
      ],
      "string": "shs_cuda_h1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.1"
    },
    "requirements": {
      "build": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config",
        "cuda-nvcc 12.6.*"
      ],
      "host": [
        "cuda-cudart-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "cuda-nvvm 12.6.*",
        "cuda-nvml-dev 12.6.*",
        "cuda-version 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ],
      "run": [
        "cuda-crt-dev_linux-64 12.6.*",
        "cuda-cudart_linux-64 12.6.*",
        "cuda-cudart-dev 12.6.*",
        "cuda-driver-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi 1.0.* mvapich",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "gdrcopy",
        "sha256": "c6d5ebb7dabb89d798f27609511735595004da73af28d93ac041bb5290c4cbec",
        "url": "https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.5.1.tar.gz"
      },
      {
        "folder": "mvapich",
        "patches": [
          "fix_ucr_domain.patch",
          "fix_cuda_computeMode.patch"
        ],
        "sha256": "a36c459befd5b0d1b66e4a217250d89d9f77b903fcc4a050efddb1c475b8dcab",
        "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.1.tar.gz"
      },
      {
        "folder": "shs-libfabric",
        "patches": [
          "fix_reallocarray.patch",
          "define_map_huge_shift.patch"
        ],
        "sha256": "734aa46fc1a5c69c59514aade3e8f17037506fbb08013f4be63d669e546570b0",
        "url": "https://github.com/HewlettPackard/shs-libfabric/archive/refs/tags/v2.2.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $CONDA_PREFIX/lib/libmpi.so",
        "test -f $CONDA_PREFIX/lib/libmpifort.so",
        "test -f $CONDA_PREFIX/bin/mpicc",
        "test -f $CONDA_PREFIX/bin/mpifort",
        "test -f $CONDA_PREFIX/bin/mpiexec"
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvcc",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvcc",
        "cuda-nvml-dev",
        "cuda-nvvm",
        "cuda-version",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-crt-dev_linux-64",
        "cuda-cudart-dev",
        "cuda-cudart_linux-64",
        "cuda-driver-dev",
        "cuda-nvcc",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard\nwith support for **both** Unified Communication X (UCX) and Open Fabric Interfaces (OFI).\n\nThe MVAPICH-SHS variant comes with the CXI provider support for Slingshot Host Systems and\nthe `_cuda` version was build with CUDA 12 support.\n\nIn case the actual *netmod* is not correctly recognized at run time, activate it using either\n`MPICH_CH4_NETMOD=ucx` or `MPICH_CH4_NETMOD=ofi`.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause AND MIT AND (BSD-2-Clause OR GPL-2.0-only)",
      "license_family": "BSD",
      "license_file": [
        "mvapich/COPYRIGHT",
        "shs-libfabric/COPYING",
        "gdrcopy/LICENSE"
      ],
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "ignore_run_exports": [
        "cuda-cudart-dev"
      ],
      "missing_dso_whitelist": [
        "$RPATH/libcuda.so.*",
        "$RPATH/libcuda.so.1",
        "libcuda.so.*",
        "libcuda.so.1"
      ],
      "number": "4",
      "run_exports": [
        "mvapich",
        "cuda-version"
      ],
      "script_env": [
        "LIBS=\"\""
      ],
      "string": "shs_cuda_h1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.1"
    },
    "requirements": {
      "build": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config",
        "cuda-nvcc 12.6.*"
      ],
      "host": [
        "cuda-cudart-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "cuda-nvvm 12.6.*",
        "cuda-nvml-dev 12.6.*",
        "cuda-version 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ],
      "run": [
        "cuda-crt-dev_linux-aarch64 12.6.*",
        "cuda-cudart_linux-aarch64 12.6.*",
        "cuda-cudart-dev 12.6.*",
        "cuda-driver-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi 1.0.* mvapich",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "gdrcopy",
        "sha256": "c6d5ebb7dabb89d798f27609511735595004da73af28d93ac041bb5290c4cbec",
        "url": "https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.5.1.tar.gz"
      },
      {
        "folder": "mvapich",
        "patches": [
          "fix_ucr_domain.patch",
          "fix_cuda_computeMode.patch"
        ],
        "sha256": "a36c459befd5b0d1b66e4a217250d89d9f77b903fcc4a050efddb1c475b8dcab",
        "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.1.tar.gz"
      },
      {
        "folder": "shs-libfabric",
        "patches": [
          "fix_reallocarray.patch",
          "define_map_huge_shift.patch"
        ],
        "sha256": "734aa46fc1a5c69c59514aade3e8f17037506fbb08013f4be63d669e546570b0",
        "url": "https://github.com/HewlettPackard/shs-libfabric/archive/refs/tags/v2.2.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $CONDA_PREFIX/lib/libmpi.so",
        "test -f $CONDA_PREFIX/lib/libmpifort.so",
        "test -f $CONDA_PREFIX/bin/mpicc",
        "test -f $CONDA_PREFIX/bin/mpifort",
        "test -f $CONDA_PREFIX/bin/mpiexec"
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvcc",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvcc",
        "cuda-nvml-dev",
        "cuda-nvvm",
        "cuda-version",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-crt-dev_linux-aarch64",
        "cuda-cudart-dev",
        "cuda-cudart_linux-aarch64",
        "cuda-driver-dev",
        "cuda-nvcc",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard\nwith support for **both** Unified Communication X (UCX) and Open Fabric Interfaces (OFI).\n\nThe MVAPICH-SHS variant comes with the CXI provider support for Slingshot Host Systems and\nthe `_cuda` version was build with CUDA 12 support.\n\nIn case the actual *netmod* is not correctly recognized at run time, activate it using either\n`MPICH_CH4_NETMOD=ucx` or `MPICH_CH4_NETMOD=ofi`.\n\n\nNote that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\ntheir equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\nenvironment as dependencies.\n",
      "home": "https://mvapich.cse.ohio-state.edu/",
      "license": "BSD-3-Clause AND MIT AND (BSD-2-Clause OR GPL-2.0-only)",
      "license_family": "BSD",
      "license_file": [
        "mvapich/COPYRIGHT",
        "shs-libfabric/COPYING",
        "gdrcopy/LICENSE"
      ],
      "summary": "MVAPICH, a high-performance MPI library by The Ohio State University."
    },
    "build": {
      "ignore_run_exports": [
        "cuda-cudart-dev"
      ],
      "missing_dso_whitelist": [
        "$RPATH/libcuda.so.*",
        "$RPATH/libcuda.so.1",
        "libcuda.so.*",
        "libcuda.so.1"
      ],
      "number": "4",
      "run_exports": [
        "mvapich",
        "cuda-version"
      ],
      "script_env": [
        "LIBS=\"\""
      ],
      "string": "shs_cuda_h1234567_4"
    },
    "extra": {
      "recipe-maintainers": [
        "j34ni"
      ]
    },
    "package": {
      "name": "mvapich",
      "version": "4.1"
    },
    "requirements": {
      "build": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config",
        "cuda-nvcc 12.6.*"
      ],
      "host": [
        "cuda-cudart-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "cuda-nvvm 12.6.*",
        "cuda-nvml-dev 12.6.*",
        "cuda-version 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ],
      "run": [
        "cuda-crt-dev_linux-64 12.6.*",
        "cuda-cudart_linux-64 12.6.*",
        "cuda-cudart-dev 12.6.*",
        "cuda-driver-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi 1.0.* mvapich",
        "rdma-core",
        "shs-libcxi",
        "ucx",
        "cuda-crt-dev_linux-aarch64 12.6.*",
        "cuda-cudart_linux-aarch64 12.6.*"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "folder": "gdrcopy",
        "sha256": "c6d5ebb7dabb89d798f27609511735595004da73af28d93ac041bb5290c4cbec",
        "url": "https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.5.1.tar.gz"
      },
      {
        "folder": "mvapich",
        "patches": [
          "fix_ucr_domain.patch",
          "fix_cuda_computeMode.patch"
        ],
        "sha256": "a36c459befd5b0d1b66e4a217250d89d9f77b903fcc4a050efddb1c475b8dcab",
        "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.1.tar.gz"
      },
      {
        "folder": "shs-libfabric",
        "patches": [
          "fix_reallocarray.patch",
          "define_map_huge_shift.patch"
        ],
        "sha256": "734aa46fc1a5c69c59514aade3e8f17037506fbb08013f4be63d669e546570b0",
        "url": "https://github.com/HewlettPackard/shs-libfabric/archive/refs/tags/v2.2.0.tar.gz"
      },
      {
        "folder": "gdrcopy",
        "sha256": "c6d5ebb7dabb89d798f27609511735595004da73af28d93ac041bb5290c4cbec",
        "url": "https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.5.1.tar.gz"
      },
      {
        "folder": "mvapich",
        "patches": [
          "fix_ucr_domain.patch",
          "fix_cuda_computeMode.patch"
        ],
        "sha256": "a36c459befd5b0d1b66e4a217250d89d9f77b903fcc4a050efddb1c475b8dcab",
        "url": "https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-4.1.tar.gz"
      },
      {
        "folder": "shs-libfabric",
        "patches": [
          "fix_reallocarray.patch",
          "define_map_huge_shift.patch"
        ],
        "sha256": "734aa46fc1a5c69c59514aade3e8f17037506fbb08013f4be63d669e546570b0",
        "url": "https://github.com/HewlettPackard/shs-libfabric/archive/refs/tags/v2.2.0.tar.gz"
      }
    ],
    "test": {
      "commands": [
        "test -f $CONDA_PREFIX/lib/libmpi.so",
        "test -f $CONDA_PREFIX/lib/libmpifort.so",
        "test -f $CONDA_PREFIX/bin/mpicc",
        "test -f $CONDA_PREFIX/bin/mpifort",
        "test -f $CONDA_PREFIX/bin/mpiexec"
      ],
      "requires": [
        "c_compiler_stub"
      ]
    }
  },
  "name": "mvapich",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mvapich"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mvapich.json"
  },
  "raw_meta_yaml": "{% set mvapich_version = \"4.1\" %}\n{% set shs_libfabric_version = \"2.2.0\" %}\n{% set cuda_version = \"12.6\" %}\n{% set gdrcopy_version = \"2.5.1\" %}\n{% set build = 4 %}\n\npackage:\n  name: mvapich\n  version: {{ mvapich_version }}\n\nsource:\n  - url: https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v{{ gdrcopy_version }}.tar.gz\n    sha256: c6d5ebb7dabb89d798f27609511735595004da73af28d93ac041bb5290c4cbec\n    folder: gdrcopy\n  - url: https://mvapich.cse.ohio-state.edu/download/mvapich/mv2/mvapich-{{ mvapich_version }}.tar.gz\n    sha256: a36c459befd5b0d1b66e4a217250d89d9f77b903fcc4a050efddb1c475b8dcab\n    folder: mvapich\n    patches:\n      - fix_ucr_domain.patch\n      - fix_cuda_computeMode.patch \n  - url: https://github.com/HewlettPackard/shs-libfabric/archive/refs/tags/v{{ shs_libfabric_version }}.tar.gz\n    sha256: 734aa46fc1a5c69c59514aade3e8f17037506fbb08013f4be63d669e546570b0 \n    folder: shs-libfabric\n    patches:\n      - fix_reallocarray.patch \n      - define_map_huge_shift.patch\n\nbuild:\n  number: {{ build }}\n  string: shs_cuda_h{{ PKG_HASH }}_{{ build }}\n  skip: true  # [win or osx] \n  script_env:\n    - LIBS=\"\"\n  run_exports:\n    - {{ pin_subpackage('mvapich', max_pin='x.y') }}\n    - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }}  \n  missing_dso_whitelist:\n    - $RPATH/libcuda.so.*\n    - $RPATH/libcuda.so.1\n    - libcuda.so.*\n    - libcuda.so.1\n  ignore_run_exports:\n    - cuda-cudart-dev\n\nrequirements:\n  build:\n    - autoconf\n    - automake\n    - bison\n    - {{ compiler('c') }} \n    - {{ compiler('cxx') }} \n    - {{ compiler('fortran') }} \n    - {{ stdlib(\"c\") }}\n    - libtool\n    - make\n    - patchelf\n    - pkg-config\n    - cuda-nvcc {{ cuda_version }}.*\n  host:\n    - cuda-cudart-dev {{ cuda_version }}.*\n    - cuda-nvcc {{ cuda_version }}.*\n    - cuda-nvvm {{ cuda_version }}.*  \n    - cuda-nvml-dev {{ cuda_version }}.*\n    - cuda-version {{ cuda_version }}.*\n    - json-c\n    - libcurl\n    - libhwloc\n    - libnl\n    - rdma-core \n    - shs-cassini-headers\n    - shs-cxi-drivers\n    - shs-libcxi\n    - ucx\n  run:\n    - cuda-crt-dev_linux-64 {{ cuda_version }}.*  # [target_platform == 'linux-64']\n    - cuda-crt-dev_linux-aarch64 {{ cuda_version }}.*  # [target_platform == 'linux-aarch64']\n    - cuda-cudart_linux-64 {{ cuda_version }}.*  # [target_platform == 'linux-64']\n    - cuda-cudart_linux-aarch64 {{ cuda_version }}.*  # [target_platform == 'linux-aarch64']\n    - cuda-cudart-dev {{ cuda_version }}.*\n    - cuda-driver-dev {{ cuda_version }}.*\n    - cuda-nvcc {{ cuda_version }}.*\n    - json-c\n    - libcurl\n    - libhwloc\n    - libnl\n    - mpi 1.0.* mvapich\n    - rdma-core\n    - shs-libcxi\n    - ucx\n\ntest:\n  requires:\n    - {{ compiler('c') }}\n  commands:\n    - test -f $CONDA_PREFIX/lib/libmpi.so\n    - test -f $CONDA_PREFIX/lib/libmpifort.so\n    - test -f $CONDA_PREFIX/bin/mpicc\n    - test -f $CONDA_PREFIX/bin/mpifort\n    - test -f $CONDA_PREFIX/bin/mpiexec\n\nabout:\n  home: https://mvapich.cse.ohio-state.edu/\n  license: BSD-3-Clause AND MIT AND (BSD-2-Clause OR GPL-2.0-only)\n  license_family: BSD\n  license_file:\n    - mvapich/COPYRIGHT\n    - shs-libfabric/COPYING\n    - gdrcopy/LICENSE\n  summary: MVAPICH, a high-performance MPI library by The Ohio State University.\n  description: |\n    MVAPICH is a high-performance implementation of the MPI (Message Passing Interface) standard \n    with support for **both** Unified Communication X (UCX) and Open Fabric Interfaces (OFI).\n\n    The MVAPICH-SHS variant comes with the CXI provider support for Slingshot Host Systems and\n    the `_cuda` version was build with CUDA 12 support.\n\n    In case the actual *netmod* is not correctly recognized at run time, activate it using either\n    `MPICH_CH4_NETMOD=ucx` or `MPICH_CH4_NETMOD=ofi`.\n\n    ### About the Compilers\n    Note that the actual GNU compilers (i.e., `gcc_linux-64`, `gfortran_linux-64` and `gxx_linux-64` for `linux-64`, or\n    their equivalent for other platforms) have to be added manually since they are not automatically installed in the Conda\n    environment as dependencies.\n\nextra:\n  recipe-maintainers:\n    - j34ni\n",
  "req": {
    "__set__": true,
    "elements": [
      "autoconf",
      "automake",
      "bison",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cuda-crt-dev_linux-64",
      "cuda-crt-dev_linux-aarch64",
      "cuda-cudart-dev",
      "cuda-cudart_linux-64",
      "cuda-cudart_linux-aarch64",
      "cuda-driver-dev",
      "cuda-nvcc",
      "cuda-nvml-dev",
      "cuda-nvvm",
      "cuda-version",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "json-c",
      "libcurl",
      "libhwloc",
      "libnl",
      "libtool",
      "make",
      "mpi",
      "patchelf",
      "pkg-config",
      "rdma-core",
      "shs-cassini-headers",
      "shs-cxi-drivers",
      "shs-libcxi",
      "ucx"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvcc",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-nvcc",
        "cuda-nvml-dev",
        "cuda-nvvm",
        "cuda-version",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-crt-dev_linux-64",
        "cuda-crt-dev_linux-aarch64",
        "cuda-cudart-dev",
        "cuda-cudart_linux-64",
        "cuda-cudart_linux-aarch64",
        "cuda-driver-dev",
        "cuda-nvcc",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "autoconf",
        "automake",
        "bison",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-nvcc 12.6.*",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "make",
        "patchelf",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "cuda-nvml-dev 12.6.*",
        "cuda-nvvm 12.6.*",
        "cuda-version 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "rdma-core",
        "shs-cassini-headers",
        "shs-cxi-drivers",
        "shs-libcxi",
        "ucx"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-crt-dev_linux-64 12.6.*",
        "cuda-crt-dev_linux-aarch64 12.6.*",
        "cuda-cudart-dev 12.6.*",
        "cuda-cudart_linux-64 12.6.*",
        "cuda-cudart_linux-aarch64 12.6.*",
        "cuda-driver-dev 12.6.*",
        "cuda-nvcc 12.6.*",
        "json-c",
        "libcurl",
        "libhwloc",
        "libnl",
        "mpi 1.0.* mvapich",
        "rdma-core",
        "shs-libcxi",
        "ucx"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    }
  },
  "url": "https://github.com/NVIDIA/gdrcopy/archive/refs/tags/v2.5.1.tar.gz",
  "version": "4.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mvapich.json"
  }
}