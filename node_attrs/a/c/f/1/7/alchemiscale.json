{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "0e16a9c229e82eec275f996dde8eef9e524c7dbd",
  "feedstock_hash_ts": 1760546039,
  "feedstock_name": "alchemiscale",
  "linux_64_meta_yaml": {
    "about": {
      "description": "a high-throughput alchemical free energy execution system\nfor use with HPC, cloud, bare metal, and Folding@Home\n",
      "dev_url": "https://github.com/OpenFreeEnergy/alchemiscale",
      "doc_url": "https://docs.alchemiscale.org/",
      "home": "https://github.com/OpenFreeEnergy/alchemiscale",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "high-throughput alchemical free energy execution system"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ianmkenney",
        "dotsdl",
        "hmacdope",
        "mikemhenry"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-server",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "async-lru",
            "zstandard",
            "diskcache",
            "stratocaster",
            "neo4j-python-driver",
            "py2neo",
            "monotonic",
            "boto3",
            "fastapi",
            "uvicorn",
            "gunicorn",
            "python-jose",
            "passlib",
            "bcrypt",
            "python-multipart",
            "starlette",
            "cryptography",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_server_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_server_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-compute",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "async-lru",
            "zstandard",
            "diskcache",
            "stratocaster",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_compute_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_compute_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-client",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "rich",
            "async-lru",
            "zstandard",
            "diskcache",
            "nest-asyncio",
            "stratocaster",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_client_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_client_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      }
    ],
    "package": {
      "name": "alchemiscale",
      "version": "0.7.0"
    },
    "schema_version": 0,
    "source": {
      "git_depth": "-1",
      "git_rev": "v0.7.0",
      "git_url": "https://github.com/OpenFreeEnergy/alchemiscale.git"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "async-lru",
        "bcrypt",
        "boto3",
        "click",
        "cryptography",
        "diskcache",
        "fastapi",
        "gufe",
        "gunicorn",
        "httpx",
        "libsqlite",
        "monotonic",
        "neo4j-python-driver",
        "nest-asyncio",
        "openff-interchange",
        "passlib",
        "py2neo",
        "pydantic",
        "pydantic-settings",
        "python",
        "python-jose",
        "python-multipart",
        "requests",
        "rich",
        "starlette",
        "stratocaster",
        "uvicorn",
        "zstandard"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "a high-throughput alchemical free energy execution system\nfor use with HPC, cloud, bare metal, and Folding@Home\n",
      "dev_url": "https://github.com/OpenFreeEnergy/alchemiscale",
      "doc_url": "https://docs.alchemiscale.org/",
      "home": "https://github.com/OpenFreeEnergy/alchemiscale",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "high-throughput alchemical free energy execution system"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "ianmkenney",
        "dotsdl",
        "hmacdope",
        "mikemhenry"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-server",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "async-lru",
            "zstandard",
            "diskcache",
            "stratocaster",
            "neo4j-python-driver",
            "py2neo",
            "monotonic",
            "boto3",
            "fastapi",
            "uvicorn",
            "gunicorn",
            "python-jose",
            "passlib",
            "bcrypt",
            "python-multipart",
            "starlette",
            "cryptography",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_server_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_server_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-compute",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "async-lru",
            "zstandard",
            "diskcache",
            "stratocaster",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_compute_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_compute_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      },
      {
        "build": {
          "noarch": "python"
        },
        "name": "alchemiscale-client",
        "requirements": {
          "host": [
            "python 3.11",
            "pip",
            "setuptools",
            "setuptools-scm"
          ],
          "run": [
            "python >=3.11",
            "gufe >=1.2.0",
            "requests",
            "click",
            "httpx",
            "pydantic >2",
            "pydantic-settings",
            "rich",
            "async-lru",
            "zstandard",
            "diskcache",
            "nest-asyncio",
            "stratocaster",
            "openff-interchange >=0.3.18,!=0.4.2",
            "libsqlite <3.49"
          ]
        },
        "script": "build_package.sh",
        "test": {
          "commands": [
            "python test_client_imports.py",
            "python -c \"import alchemiscale; assert(alchemiscale.__version__ == '0.7.0')\""
          ],
          "files": [
            "test_client_imports.py"
          ],
          "imports": [
            "alchemiscale"
          ],
          "requires": [
            "python 3.11"
          ]
        }
      }
    ],
    "package": {
      "name": "alchemiscale",
      "version": "0.7.0"
    },
    "schema_version": 0,
    "source": {
      "git_depth": "-1",
      "git_rev": "v0.7.0",
      "git_url": "https://github.com/OpenFreeEnergy/alchemiscale.git"
    }
  },
  "name": "alchemiscale",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "alchemiscale-client",
      "alchemiscale-compute",
      "alchemiscale-server"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/alchemiscale.json"
  },
  "raw_meta_yaml": "{% set python_min = \"3.11\" %}\n{% set name = \"alchemiscale\" %}\n{% set version = \"0.7.0\" %}\n\npackage:\n  name: alchemiscale\n  version: {{ version }}\n\nsource:\n  git_url: https://github.com/OpenFreeEnergy/{{ name }}.git\n  git_rev: v{{ version }}\n  git_depth: -1\n\nbuild:\n  number: 0\n\noutputs:\n  - name: alchemiscale-server\n    script: build_package.sh\n    build:\n      noarch: python\n\n    requirements:\n      host:\n        - python {{ python_min }}\n        - pip\n        - setuptools\n        - setuptools-scm\n      run:\n        - python >={{ python_min }}\n        - gufe >=1.2.0\n        - requests\n        - click\n        - httpx\n        - pydantic >2\n        - pydantic-settings\n        - async-lru\n        - zstandard\n        - diskcache\n        - stratocaster\n\n        ## state store\n        - neo4j-python-driver\n        - py2neo\n        - monotonic\n\n        ## object store\n        - boto3        # aws s3\n\n        ## api(s)\n        - fastapi\n        - uvicorn\n        - gunicorn\n        - python-jose\n        - passlib\n        - bcrypt\n        - python-multipart\n        - starlette\n        - cryptography\n\n        ## temporary pins\n        - openff-interchange >=0.3.18,!=0.4.2\n        - libsqlite <3.49  # newer versions cause diskcache to fail\n\n    test:\n      requires:\n        - python {{ python_min }}\n      imports:\n        - alchemiscale\n      files:\n        - test_server_imports.py\n      commands:\n        - python test_server_imports.py\n        - python -c \"import alchemiscale; assert(alchemiscale.__version__ == '{{ version }}')\"\n\n  - name: alchemiscale-compute\n    script: build_package.sh\n    build:\n      noarch: python\n\n    requirements:\n      host:\n        - python {{ python_min }}\n        - pip\n        - setuptools\n        - setuptools-scm\n      run:\n        - python >={{ python_min }}\n        - gufe >=1.2.0\n        - requests\n        - click\n        - httpx\n        - pydantic >2\n        - pydantic-settings\n        - async-lru\n        - zstandard\n        - diskcache\n        - stratocaster\n\n        ## temporary pins\n        - openff-interchange >=0.3.18,!=0.4.2\n        - libsqlite <3.49  # newer versions cause diskcache to fail\n\n    test:\n      requires:\n        - python {{ python_min }}\n      imports:\n        - alchemiscale\n      files:\n        - test_compute_imports.py\n      commands:\n        - python test_compute_imports.py\n        - python -c \"import alchemiscale; assert(alchemiscale.__version__ == '{{ version }}')\"\n\n  - name: alchemiscale-client\n    script: build_package.sh\n    build:\n      noarch: python\n\n    requirements:\n      host:\n        - python {{ python_min }}\n        - pip\n        - setuptools\n        - setuptools-scm\n      run:\n        - python >={{ python_min }}\n        - gufe >=1.2.0\n        - requests\n        - click\n        - httpx\n        - pydantic >2\n        - pydantic-settings\n        - rich\n        - async-lru\n        - zstandard\n        - diskcache\n        - nest-asyncio\n        - stratocaster\n\n        ## temporary pins\n        - openff-interchange >=0.3.18,!=0.4.2\n        - libsqlite <3.49  # newer versions cause diskcache to fail\n\n    test:\n      requires:\n        - python {{ python_min }}\n      imports:\n        - alchemiscale\n      files:\n        - test_client_imports.py\n      commands:\n        - python test_client_imports.py\n        - python -c \"import alchemiscale; assert(alchemiscale.__version__ == '{{ version }}')\"\n\nabout:\n  home: https://github.com/OpenFreeEnergy/alchemiscale\n  summary: 'high-throughput alchemical free energy execution system'\n  description: |\n    a high-throughput alchemical free energy execution system \n    for use with HPC, cloud, bare metal, and Folding@Home \n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://docs.alchemiscale.org/\n  dev_url: https://github.com/OpenFreeEnergy/alchemiscale\n\nextra:\n  recipe-maintainers:\n    - ianmkenney\n    - dotsdl\n    - hmacdope\n    - mikemhenry\n",
  "req": {
    "__set__": true,
    "elements": [
      "async-lru",
      "bcrypt",
      "boto3",
      "click",
      "cryptography",
      "diskcache",
      "fastapi",
      "gufe",
      "gunicorn",
      "httpx",
      "libsqlite",
      "monotonic",
      "neo4j-python-driver",
      "nest-asyncio",
      "openff-interchange",
      "passlib",
      "pip",
      "py2neo",
      "pydantic",
      "pydantic-settings",
      "python",
      "python-jose",
      "python-multipart",
      "requests",
      "rich",
      "setuptools",
      "setuptools-scm",
      "starlette",
      "stratocaster",
      "uvicorn",
      "zstandard"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "async-lru",
        "bcrypt",
        "boto3",
        "click",
        "cryptography",
        "diskcache",
        "fastapi",
        "gufe",
        "gunicorn",
        "httpx",
        "libsqlite",
        "monotonic",
        "neo4j-python-driver",
        "nest-asyncio",
        "openff-interchange",
        "passlib",
        "py2neo",
        "pydantic",
        "pydantic-settings",
        "python",
        "python-jose",
        "python-multipart",
        "requests",
        "rich",
        "starlette",
        "stratocaster",
        "uvicorn",
        "zstandard"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.11",
        "setuptools",
        "setuptools-scm"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "async-lru",
        "bcrypt",
        "boto3",
        "click",
        "cryptography",
        "diskcache",
        "fastapi",
        "gufe >=1.2.0",
        "gunicorn",
        "httpx",
        "libsqlite <3.49",
        "monotonic",
        "neo4j-python-driver",
        "nest-asyncio",
        "openff-interchange >=0.3.18,!=0.4.2",
        "passlib",
        "py2neo",
        "pydantic >2",
        "pydantic-settings",
        "python >=3.11",
        "python-jose",
        "python-multipart",
        "requests",
        "rich",
        "starlette",
        "stratocaster",
        "uvicorn",
        "zstandard"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.11"
      ]
    }
  },
  "url": null,
  "version": "0.7.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/alchemiscale.json"
  }
}