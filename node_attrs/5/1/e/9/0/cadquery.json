{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "hint-all"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "conda_install_tool": "pixi",
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "8c9cf94e23b1fa09ac4dd083ea5b4232aed1d074",
  "feedstock_hash_ts": 1759772694,
  "feedstock_name": "cadquery",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "CadQuery is an intuitive, easy-to-use python library for building\nparametric 3D CAD models. It has several goals:\n- Build models with scripts that are as close as possible to how you’d\ndescribe the object to a human, using a standard, already established\nprogramming language\n- Create parametric models that can be very easily customized by end users\n- Output high quality CAD formats like STEP and AMF in addition to\ntraditional STL\n- Provide a non-proprietary, plain text model format that can be edited and\nexecuted with only a web browser",
      "doc_url": "https://cadquery.readthedocs.io/",
      "home": "https://github.com/cadquery/cadquery",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "CadQuery is a parametric scripting language for creating and traversing\nCAD models"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check"
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "adam-urbanczyk"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cadquery",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.10.*",
            "setuptools"
          ],
          "run": [
            "casadi",
            "ezdxf >=1.3.0",
            "ipython",
            "multimethod >=1.11,<2",
            "nlopt >=2.9.0,<3.0",
            "path",
            "ocp >=7.8.1,<7.9",
            "python >=3.10",
            "trame",
            "trame-vtk",
            "typish"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "cadquery"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "tests"
              ]
            },
            "requirements": {
              "run": [
                "docutils",
                "mypy",
                "path",
                "pip",
                "pytest",
                "pytest-cov",
                "python 3.10.*"
              ]
            },
            "script": [
              "pip check",
              "mypy -m cadquery",
              "coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"",
              "coverage report --show-missing --skip-covered --fail-under=90"
            ]
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cadquery",
      "version": "2.6.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10.*",
        "setuptools"
      ],
      "run": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt >=2.9.0,<3.0",
        "path",
        "ocp >=7.8.1,<7.9",
        "python >=3.10",
        "trame",
        "trame-vtk",
        "typish"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "487e1b740957ee3f3c5d1119e8d21df5aedd58ab30738a2cb9829ddb01542d04",
      "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.6.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf",
        "ipython",
        "multimethod",
        "nlopt",
        "ocp",
        "path",
        "python",
        "trame",
        "trame-vtk",
        "typish"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "CadQuery is an intuitive, easy-to-use python library for building\nparametric 3D CAD models. It has several goals:\n- Build models with scripts that are as close as possible to how you’d\ndescribe the object to a human, using a standard, already established\nprogramming language\n- Create parametric models that can be very easily customized by end users\n- Output high quality CAD formats like STEP and AMF in addition to\ntraditional STL\n- Provide a non-proprietary, plain text model format that can be edited and\nexecuted with only a web browser",
      "doc_url": "https://cadquery.readthedocs.io/",
      "home": "https://github.com/cadquery/cadquery",
      "license": "Apache-2.0",
      "license_family": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "CadQuery is a parametric scripting language for creating and traversing\nCAD models"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check"
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "adam-urbanczyk"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "cadquery",
        "requirements": {
          "build": [],
          "host": [
            "pip",
            "python 3.10.*",
            "setuptools"
          ],
          "run": [
            "casadi",
            "ezdxf >=1.3.0",
            "ipython",
            "multimethod >=1.11,<2",
            "nlopt >=2.9.0,<3.0",
            "path",
            "ocp >=7.8.1,<7.9",
            "python >=3.10",
            "trame",
            "trame-vtk",
            "typish"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "cadquery"
              ],
              "python_version": [
                "3.10.*",
                "3.13.*"
              ]
            }
          },
          {
            "files": {
              "source": [
                "tests"
              ]
            },
            "requirements": {
              "run": [
                "docutils",
                "mypy",
                "path",
                "pip",
                "pytest",
                "pytest-cov",
                "python 3.10.*"
              ]
            },
            "script": [
              "pip check",
              "mypy -m cadquery",
              "coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"",
              "coverage report --show-missing --skip-covered --fail-under=90"
            ]
          }
        ],
        "version": "2.6.0"
      }
    ],
    "package": {
      "name": "cadquery",
      "version": "2.6.0"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10.*",
        "setuptools"
      ],
      "run": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt >=2.9.0,<3.0",
        "path",
        "ocp >=7.8.1,<7.9",
        "python >=3.10",
        "trame",
        "trame-vtk",
        "typish"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "487e1b740957ee3f3c5d1119e8d21df5aedd58ab30738a2cb9829ddb01542d04",
      "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.6.0.tar.gz"
    }
  },
  "name": "cadquery",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cadquery.json"
  },
  "raw_meta_yaml": "# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json\nschema_version: 1\n\ncontext:\n  version: 2.6.0\n\npackage:\n  name: cadquery\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/CadQuery/cadquery/archive/refs/tags/v${{ version }}.tar.gz\n  sha256: 487e1b740957ee3f3c5d1119e8d21df5aedd58ab30738a2cb9829ddb01542d04\n\nbuild:\n  number: 0\n  noarch: python\n  script:\n    - ${{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check\n\nrequirements:\n  host:\n    - pip\n    - python ${{ python_min }}.*\n    - setuptools\n  run:\n    - casadi\n    - ezdxf >=1.3.0\n    - ipython\n    - multimethod >=1.11,<2\n    - nlopt >=2.9.0,<3.0\n    - path\n    - ocp >=7.8.1,<7.9\n    - python >=${{ python_min }}\n    - trame\n    - trame-vtk\n    - typish\n\ntests:\n  - python:\n      imports: cadquery\n      pip_check: true\n      python_version:\n        - ${{ python_min }}.*\n        - 3.13.*\n  - files:\n      source:\n        - tests\n    requirements:\n      run:\n        - docutils\n        - mypy\n        - path\n        - pip\n        - pytest\n        - pytest-cov\n        - python ${{ python_min }}.*\n    script:\n      - pip check\n      - mypy -m cadquery\n      - coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"\n      - coverage report --show-missing --skip-covered --fail-under=90\n\nabout:\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: |\n    CadQuery is a parametric scripting language for creating and traversing\n    CAD models\n  description: |\n    CadQuery is an intuitive, easy-to-use python library for building\n    parametric 3D CAD models. It has several goals:\n    - Build models with scripts that are as close as possible to how you’d\n    describe the object to a human, using a standard, already established\n    programming language\n    - Create parametric models that can be very easily customized by end users\n    - Output high quality CAD formats like STEP and AMF in addition to\n    traditional STL\n    - Provide a non-proprietary, plain text model format that can be edited and\n    executed with only a web browser\n  homepage: https://github.com/cadquery/cadquery\n  documentation: https://cadquery.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - adam-urbanczyk\n",
  "req": {
    "__set__": true,
    "elements": [
      "casadi",
      "ezdxf",
      "ipython",
      "multimethod",
      "nlopt",
      "ocp",
      "path",
      "pip",
      "python",
      "setuptools",
      "trame",
      "trame-vtk",
      "typish"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf",
        "ipython",
        "multimethod",
        "nlopt",
        "ocp",
        "path",
        "python",
        "trame",
        "trame-vtk",
        "typish"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10.*",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt >=2.9.0,<3.0",
        "ocp >=7.8.1,<7.9",
        "path",
        "python >=3.10",
        "trame",
        "trame-vtk",
        "typish"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python 3.10.*"
      ]
    }
  },
  "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.6.0.tar.gz",
  "version": "2.6.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cadquery.json"
  }
}