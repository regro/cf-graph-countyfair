{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "inspection": "hint-all"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "cadquery",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "CadQuery is an intuitive, easy-to-use python library for building\nparametric 3D CAD models. It has several goals:\n- Build models with scripts that are as close as possible to how you’d\n  describe the object to a human, using a standard, already established\n  programming language\n- Create parametric models that can be very easily customized by end users\n- Output high quality CAD formats like STEP and AMF in addition to\n  traditional STL\n- Provide a non-proprietary, plain text model format that can be edited and\n  executed with only a web browser\n",
      "doc_url": "https://cadquery.readthedocs.io",
      "home": "https://github.com/cadquery/cadquery",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "CadQuery is a parametric scripting language for creating and traversing\nCAD models\n"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": [
        "PYTHON -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "adam-urbanczyk"
      ]
    },
    "package": {
      "name": "cadquery",
      "version": "2.5.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools"
      ],
      "run": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt",
        "ocp 7.7.2",
        "pyparsing >=2.1.9",
        "python >=3.9",
        "typing_extensions",
        "typish",
        "vtk =*=qt*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7503a18c411bf4ed7915f7bdb72bc01eec53ebe89fac358695dfc26053e0f99f",
      "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.5.2.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "mypy -m cadquery",
        "coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"",
        "coverage report --show-missing --skip-covered --fail-under=90"
      ],
      "imports": [
        "cadquery"
      ],
      "requires": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python 3.9"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf",
        "ipython",
        "multimethod",
        "nlopt",
        "ocp",
        "pyparsing",
        "python",
        "typing_extensions",
        "typish",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "CadQuery is an intuitive, easy-to-use python library for building\nparametric 3D CAD models. It has several goals:\n- Build models with scripts that are as close as possible to how you’d\n  describe the object to a human, using a standard, already established\n  programming language\n- Create parametric models that can be very easily customized by end users\n- Output high quality CAD formats like STEP and AMF in addition to\n  traditional STL\n- Provide a non-proprietary, plain text model format that can be edited and\n  executed with only a web browser\n",
      "doc_url": "https://cadquery.readthedocs.io",
      "home": "https://github.com/cadquery/cadquery",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "CadQuery is a parametric scripting language for creating and traversing\nCAD models\n"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": [
        "PYTHON -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "bollwyvl",
        "adam-urbanczyk"
      ]
    },
    "package": {
      "name": "cadquery",
      "version": "2.5.2"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.9",
        "setuptools"
      ],
      "run": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt",
        "ocp 7.7.2",
        "pyparsing >=2.1.9",
        "python >=3.9",
        "typing_extensions",
        "typish",
        "vtk =*=qt*"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "7503a18c411bf4ed7915f7bdb72bc01eec53ebe89fac358695dfc26053e0f99f",
      "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.5.2.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "mypy -m cadquery",
        "coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"",
        "coverage report --show-missing --skip-covered --fail-under=90"
      ],
      "imports": [
        "cadquery"
      ],
      "requires": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python 3.9"
      ],
      "source_files": [
        "tests"
      ]
    }
  },
  "name": "cadquery",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cadquery"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cadquery.json"
  },
  "raw_meta_yaml": "{% set version = \"2.5.2\" %}\n\npackage:\n  name: cadquery\n  version: {{ version }}\n\nsource:\n  url: https://github.com/CadQuery/cadquery/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 7503a18c411bf4ed7915f7bdb72bc01eec53ebe89fac358695dfc26053e0f99f\n\nbuild:\n  number: 1\n  noarch: python\n  script:\n    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n    - setuptools\n  run:\n    - casadi\n    - ezdxf >=1.3.0\n    - ipython\n    - multimethod >=1.11,<2\n    - nlopt\n    - ocp 7.7.2\n    - pyparsing >=2.1.9\n    - python >={{ python_min }}\n    - typing_extensions\n    - typish\n    - vtk =*=qt*\n\ntest:\n  requires:\n    - docutils\n    - mypy\n    - path\n    - pip\n    - pytest\n    - pytest-cov\n    - python {{ python_min }}\n  source_files:\n    - tests\n  imports:\n    - cadquery\n  commands:\n    - pip check\n    - mypy -m cadquery\n    - coverage run --source=cadquery --branch -m pytest -vv --tb=long --color=yes -k \"not (constraint_validation or constraint_solver)\"\n    - coverage report --show-missing --skip-covered --fail-under=90\n\nabout:\n  home: https://github.com/cadquery/cadquery\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: |\n    CadQuery is a parametric scripting language for creating and traversing\n    CAD models\n  description: |\n    CadQuery is an intuitive, easy-to-use python library for building\n    parametric 3D CAD models. It has several goals:\n    - Build models with scripts that are as close as possible to how you’d\n      describe the object to a human, using a standard, already established\n      programming language\n    - Create parametric models that can be very easily customized by end users\n    - Output high quality CAD formats like STEP and AMF in addition to\n      traditional STL\n    - Provide a non-proprietary, plain text model format that can be edited and\n      executed with only a web browser\n  doc_url: https://cadquery.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - adam-urbanczyk\n",
  "req": {
    "__set__": true,
    "elements": [
      "casadi",
      "ezdxf",
      "ipython",
      "multimethod",
      "nlopt",
      "ocp",
      "pip",
      "pyparsing",
      "python",
      "setuptools",
      "typing_extensions",
      "typish",
      "vtk"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf",
        "ipython",
        "multimethod",
        "nlopt",
        "ocp",
        "pyparsing",
        "python",
        "typing_extensions",
        "typish",
        "vtk"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.9",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "casadi",
        "ezdxf >=1.3.0",
        "ipython",
        "multimethod >=1.11,<2",
        "nlopt",
        "ocp 7.7.2",
        "pyparsing >=2.1.9",
        "python >=3.9",
        "typing_extensions",
        "typish",
        "vtk =*=qt*"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "docutils",
        "mypy",
        "path",
        "pip",
        "pytest",
        "pytest-cov",
        "python 3.9"
      ]
    }
  },
  "url": "https://github.com/CadQuery/cadquery/archive/refs/tags/v2.5.2.tar.gz",
  "version": "2.5.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cadquery.json"
  }
}