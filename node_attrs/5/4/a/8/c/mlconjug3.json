{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "b369fbdc34fb8af66c04e643b067051529ad453d",
  "feedstock_hash_ts": 1730841356,
  "feedstock_name": "mlconjug3",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\nConjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\nThe pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\nEasily modify and retrain the models using any compatible classifiers from scikit-learn.\nUses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\nFree software: MIT license\n\nDocumentation: https://mlconjug3.readthedocs.io.\n\nSUPPORTED LANGUAGES:\n\n-   French\n-   English\n-   Spanish\n-   Italian\n-   Portuguese\n-   Romanian\n\nFEATURES:\n\n-   Command Line Interface tool.\n-   Easy to use and intuitive API.\n-   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n-   Easily train new models or add new languages.\n-   Uses caching and multiprocessing for maximum performance.\n-   Easily integrate mlconjug3 in your own projects.\n-   Extensive documentation.\n-   Powerful machine learning algorithms for accurate verb conjugation predictions.\n-   Support for multiple languages including English, Spanish, French, and German.\n-   Customizable settings to fine-tune performance and adapt to different use cases.\n-   Robust error handling and troubleshooting capabilities.\n-   Regular updates and improvements to ensure optimal performance.\n-   Community support and contributions to continuously expand the library’s capabilities.\n-   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\nUsage\n=====\n\n> **note**\n>\n> The default language is French.\n> :   When called without specifying a language, the library will try to\n>     conjugate the verb in French.\n>\nTo use MLConjug3 from the command line:\n\n    $ mlconjug3 manger\n\n    $ mlconjug3 bring -l en\n\n    $ mlconjug3 gallofar --language es\n\n    $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n    $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                       values can be 'abbrev' or 'pronoun'. The default value\n                       is 'abbrev'.\n\n    $ mlconjug3 -h Show the help menu\n",
      "dev_url": "https://github.com/SekouDiaoNlp/mlconjug3",
      "doc_url": "https://mlconjug3.readthedocs.io/en/latest/",
      "home": "https://github.com/SekouDiaoNlp/mlconjug3",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques."
    },
    "build": {
      "entry_points": [
        "mlconjug3=mlconjug3.cli:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "SekouDiaoNlp"
      ]
    },
    "package": {
      "name": "mlconjug3",
      "version": "3.11.0"
    },
    "requirements": {
      "host": [
        "pip",
        "pytest-runner",
        "python >=3.8",
        "poetry"
      ],
      "run": [
        "click >=8.1.3",
        "defusedxml",
        "joblib",
        "numpy",
        "python >=3.8",
        "scikit-learn ==1.3.0",
        "rich <13.3",
        "pyyaml",
        "tomlkit"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04a5f604b69a0f3026bc6e0460e85f90f4fcfffb9a00dc3e046898c5bfafd906",
      "url": "https://pypi.io/packages/source/m/mlconjug3/mlconjug3-3.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "mlconjug3 --help"
      ],
      "imports": [
        "mlconjug3"
      ],
      "requires": [
        "pip",
        "poetry"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click",
        "defusedxml",
        "joblib",
        "numpy",
        "python",
        "pyyaml",
        "rich",
        "scikit-learn",
        "tomlkit"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\nConjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\nThe pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\nEasily modify and retrain the models using any compatible classifiers from scikit-learn.\nUses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\nFree software: MIT license\n\nDocumentation: https://mlconjug3.readthedocs.io.\n\nSUPPORTED LANGUAGES:\n\n-   French\n-   English\n-   Spanish\n-   Italian\n-   Portuguese\n-   Romanian\n\nFEATURES:\n\n-   Command Line Interface tool.\n-   Easy to use and intuitive API.\n-   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n-   Easily train new models or add new languages.\n-   Uses caching and multiprocessing for maximum performance.\n-   Easily integrate mlconjug3 in your own projects.\n-   Extensive documentation.\n-   Powerful machine learning algorithms for accurate verb conjugation predictions.\n-   Support for multiple languages including English, Spanish, French, and German.\n-   Customizable settings to fine-tune performance and adapt to different use cases.\n-   Robust error handling and troubleshooting capabilities.\n-   Regular updates and improvements to ensure optimal performance.\n-   Community support and contributions to continuously expand the library’s capabilities.\n-   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\nUsage\n=====\n\n> **note**\n>\n> The default language is French.\n> :   When called without specifying a language, the library will try to\n>     conjugate the verb in French.\n>\nTo use MLConjug3 from the command line:\n\n    $ mlconjug3 manger\n\n    $ mlconjug3 bring -l en\n\n    $ mlconjug3 gallofar --language es\n\n    $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n    $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                       values can be 'abbrev' or 'pronoun'. The default value\n                       is 'abbrev'.\n\n    $ mlconjug3 -h Show the help menu\n",
      "dev_url": "https://github.com/SekouDiaoNlp/mlconjug3",
      "doc_url": "https://mlconjug3.readthedocs.io/en/latest/",
      "home": "https://github.com/SekouDiaoNlp/mlconjug3",
      "license": "MIT",
      "license_file": "LICENSE",
      "summary": "A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques."
    },
    "build": {
      "entry_points": [
        "mlconjug3=mlconjug3.cli:main"
      ],
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "SekouDiaoNlp"
      ]
    },
    "package": {
      "name": "mlconjug3",
      "version": "3.11.0"
    },
    "requirements": {
      "host": [
        "pip",
        "pytest-runner",
        "python >=3.8",
        "poetry"
      ],
      "run": [
        "click >=8.1.3",
        "defusedxml",
        "joblib",
        "numpy",
        "python >=3.8",
        "scikit-learn ==1.3.0",
        "rich <13.3",
        "pyyaml",
        "tomlkit"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "04a5f604b69a0f3026bc6e0460e85f90f4fcfffb9a00dc3e046898c5bfafd906",
      "url": "https://pypi.io/packages/source/m/mlconjug3/mlconjug3-3.11.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "mlconjug3 --help"
      ],
      "imports": [
        "mlconjug3"
      ],
      "requires": [
        "pip",
        "poetry"
      ]
    }
  },
  "name": "mlconjug3",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mlconjug3"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mlconjug3.json"
  },
  "raw_meta_yaml": "{% set name = \"mlconjug3\" %}\n{% set version = \"3.11.0\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/mlconjug3-{{ version }}.tar.gz\n  sha256: 04a5f604b69a0f3026bc6e0460e85f90f4fcfffb9a00dc3e046898c5bfafd906\n\nbuild:\n  number: 0\n  noarch: python\n  entry_points:\n    - mlconjug3=mlconjug3.cli:main\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - pytest-runner\n    - python >=3.8\n    - poetry\n  run:\n    - click >=8.1.3\n    - defusedxml\n    - joblib\n    - numpy\n    - python >=3.8\n    - scikit-learn ==1.3.0\n    - rich <13.3\n    - pyyaml\n    - tomlkit\n\ntest:\n  imports:\n    - mlconjug3\n  commands:\n    - pip check\n    - mlconjug3 --help\n  requires:\n    - pip\n    - poetry\n\nabout:\n  home: https://github.com/SekouDiaoNlp/mlconjug3\n  summary: A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques.\n  license: MIT\n  license_file: LICENSE\n  description: |\n    A Command Line application and Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon) using Machine Learning techniques.\n\n    Conjugate any verb in one of the supported languages, even completely new or made-up verbs, with the help of a pre-trained Machine Learning model.\n    The pre-trained models are composed of a binary feature extractor, a feature selector using Linear Support Vector Classification, and a classifier using Stochastic Gradient Descent.\n    Easily modify and retrain the models using any compatible classifiers from scikit-learn.\n    Uses Verbiste as the training data for the French model, and unsupervised learning techniques to generate the data for the English, Spanish, Italian, Portuguese and Romanian models.\n\n\n    Free software: MIT license\n\n    Documentation: https://mlconjug3.readthedocs.io.\n\n    SUPPORTED LANGUAGES:\n\n    -   French\n    -   English\n    -   Spanish\n    -   Italian\n    -   Portuguese\n    -   Romanian\n\n    FEATURES:\n\n    -   Command Line Interface tool.\n    -   Easy to use and intuitive API.\n    -   Includes pre-trained models with 99% + accuracy in predicting conjugation class of unknown verbs.\n    -   Easily train new models or add new languages.\n    -   Uses caching and multiprocessing for maximum performance.\n    -   Easily integrate mlconjug3 in your own projects.\n    -   Extensive documentation.\n    -   Powerful machine learning algorithms for accurate verb conjugation predictions.\n    -   Support for multiple languages including English, Spanish, French, and German.\n    -   Customizable settings to fine-tune performance and adapt to different use cases.\n    -   Robust error handling and troubleshooting capabilities.\n    -   Regular updates and improvements to ensure optimal performance.\n    -   Community support and contributions to continuously expand the library’s capabilities.\n    -   Integration with popular libraries such as scikit-learn and numpy for machine learning tasks.\n\n\n    Usage\n    =====\n\n    > **note**\n    >\n    > The default language is French.\n    > :   When called without specifying a language, the library will try to\n    >     conjugate the verb in French.\n    >\n    To use MLConjug3 from the command line:\n\n        $ mlconjug3 manger\n\n        $ mlconjug3 bring -l en\n\n        $ mlconjug3 gallofar --language es\n\n        $ mlconjug3 -o, --output (Path of the filename for storing the conjugation tables.)\n\n        $ mlconjug3 -s, --subject (The subject format type for the conjugated forms). The\n                           values can be 'abbrev' or 'pronoun'. The default value\n                           is 'abbrev'.\n\n        $ mlconjug3 -h Show the help menu\n  doc_url: https://mlconjug3.readthedocs.io/en/latest/\n  dev_url: https://github.com/SekouDiaoNlp/mlconjug3\n\nextra:\n  recipe-maintainers:\n    - SekouDiaoNlp\n",
  "req": {
    "__set__": true,
    "elements": [
      "click",
      "defusedxml",
      "joblib",
      "numpy",
      "pip",
      "poetry",
      "pytest-runner",
      "python",
      "pyyaml",
      "rich",
      "scikit-learn",
      "tomlkit"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "pytest-runner",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click",
        "defusedxml",
        "joblib",
        "numpy",
        "python",
        "pyyaml",
        "rich",
        "scikit-learn",
        "tomlkit"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry",
        "pytest-runner",
        "python >=3.8"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "click >=8.1.3",
        "defusedxml",
        "joblib",
        "numpy",
        "python >=3.8",
        "pyyaml",
        "rich <13.3",
        "scikit-learn ==1.3.0",
        "tomlkit"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "poetry"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/m/mlconjug3/mlconjug3-3.11.0.tar.gz",
  "version": "3.11.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mlconjug3.json"
  }
}