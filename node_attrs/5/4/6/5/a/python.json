{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "abi_migration_branches": [
        "3.9",
        "3.10",
        "3.11",
        "3.12",
        "3.13"
      ]
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "native"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "python",
  "hash_type": "md5",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang-19",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "libtool",
        "llvm-tools-19",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "ld_impl_linux-64",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "libuuid",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "_python_rc",
        "cpython",
        "ld_impl_linux-64",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-aarch64",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang-19",
        "cxx_compiler_stub",
        "ld_impl_linux-aarch64",
        "libtool",
        "llvm-tools-19",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "ld_impl_linux-aarch64",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "libuuid",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "_python_rc",
        "cpython",
        "ld_impl_linux-aarch64",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-ppc64le",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang-19",
        "cxx_compiler_stub",
        "ld_impl_linux-ppc64le",
        "libtool",
        "llvm-tools-19",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "ld_impl_linux-ppc64le",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "libuuid",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "_python_rc",
        "cpython",
        "ld_impl_linux-ppc64le",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-64",
            "binutils_impl_linux-64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-aarch64",
            "binutils_impl_linux-aarch64",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-aarch64 >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-aarch64 >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "ld_impl_linux-ppc64le",
            "binutils_impl_linux-ppc64le",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "ld_impl_linux-ppc64le >=2.36.1",
            "libuuid",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "ld_impl_linux-ppc64le >=2.36.1",
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "missing_dso_whitelist": [
            "**/MSVCR71.dll",
            "**/MSVCR80.dll",
            "**/api-ms-win-core-path-l1-1-0.dll"
          ],
          "no_link": [
            "DLLs/_ctypes.pyd"
          ],
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "clang 19.*",
            "llvm-tools 19.*"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.bat",
        "test": {
          "commands": [
            "echo on",
            "set",
            "python -V",
            "pydoc -h",
            "set \"PIP_NO_BUILD_ISOLATION=False\"",
            "set \"PIP_NO_DEPENDENCIES=True\"",
            "set \"PIP_IGNORE_INSTALLED=True\"",
            "set \"PIP_NO_INDEX=True\"",
            "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
            "set \"TEMP=%CONDA_PREFIX%/tmp\"",
            "mkdir \"%TEMP%\"",
            "python -Im ensurepip --upgrade --default-pip",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
            "if not exist %PREFIX%\\\\libs\\\\python3.lib exit 1",
            "if not exist %PREFIX%\\\\libs\\\\python314.lib exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
            "if not exist %PREFIX%\\\\include\\\\pyconfig.h exit 1",
            "pushd tests",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "popd",
            "python run_test.py",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.bat",
        "test": {
          "commands": null,
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__win"
        ],
        "script": "install_jit_activation.bat"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "missing_dso_whitelist": [
            "**/MSVCR71.dll",
            "**/MSVCR80.dll",
            "**/api-ms-win-core-path-l1-1-0.dll"
          ],
          "no_link": [
            "DLLs/_ctypes.pyd"
          ],
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "clang 19.*",
            "llvm-tools 19.*"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.bat",
        "test": {
          "commands": [
            "echo on",
            "set",
            "python -V",
            "pydoc -h",
            "set \"PIP_NO_BUILD_ISOLATION=False\"",
            "set \"PIP_NO_DEPENDENCIES=True\"",
            "set \"PIP_IGNORE_INSTALLED=True\"",
            "set \"PIP_NO_INDEX=True\"",
            "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
            "set \"TEMP=%CONDA_PREFIX%/tmp\"",
            "mkdir \"%TEMP%\"",
            "python -Im ensurepip --upgrade --default-pip",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
            "if not exist %PREFIX%\\\\libs\\\\python3t.lib exit 1",
            "if not exist %PREFIX%\\\\libs\\\\python314t.lib exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
            "if not exist %PREFIX%\\\\include\\\\pyconfig.h exit 1",
            "pushd tests",
            "pushd cmake",
            "popd",
            "python run_test.py",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.bat",
        "test": {
          "commands": null,
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__win"
        ],
        "script": "install_jit_activation.bat"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch",
        "m2-patch",
        "m2-gcc-libs"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "name": "python-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang-19",
        "cxx_compiler_stub",
        "libtool",
        "llvm-tools",
        "llvm-tools-19",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "_python_rc",
        "cpython",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314",
              "python 3.14.* *_debug_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_debug_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_debug_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t",
              "python 3.14.* *_debug_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_debug_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=yes",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_debug_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "VERABI=${VERABI}d",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "cxx_compiler_stub",
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "no_link": null,
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "make",
            "libtool",
            "pkg-config",
            "llvm-tools",
            "clang-19",
            "llvm-tools-19"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "readline",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "ncurses",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.sh",
        "test": {
          "commands": [
            "python -V",
            "python3 -V",
            "pydoc -h",
            "python3-config --help",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv/bin/python -c \"import ctypes\"",
            "python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"",
            "for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a",
            "test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a",
            "pushd tests",
            "pushd prefix-replacement",
            "bash build-and-test.sh",
            "popd",
            "pushd cmake",
            "python run_test.py",
            "test ! -f default.profraw",
            "python3.1 --version",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"",
            "TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.sh",
        "test": {
          "commands": [
            "VER=${PKG_VERSION%.*}",
            "VERABI=${VER}",
            "VERABI=${VERABI}t",
            "VERABI_NO_DBG=${VERABI}",
            "test -f ${PREFIX}/lib/libpython${VERABI}.a",
            "test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a",
            "test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a",
            "pushd tests/prefix-replacement",
            "bash build-and-test.sh",
            "popd"
          ],
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__unix"
        ],
        "script": "install_jit_activation.sh"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "patch"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang-19",
        "cxx_compiler_stub",
        "libtool",
        "llvm-tools",
        "llvm-tools-19",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "_python_rc",
        "cpython",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cpython",
      "libpython-static",
      "python",
      "python-freethreading",
      "python-gil",
      "python-jit"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/python.json"
  },
  "raw_meta_yaml": "{% set version = \"3.14.0\" %}\n{% set dev = \"rc2\" %}\n{% set dev_ = \"\" %}\n{% set ver2 = '.'.join(version.split('.')[0:2]) %}\n{% set ver2nd = ''.join(version.split('.')[0:2]) %}\n{% set ver3nd = ''.join(version.split('.')[0:3]) %}\n{% set build_number = 0 %}\n\n# this makes the linter happy\n{% set channel_targets = channel_targets or 'conda-forge main' %}\n\n# Sanitize build system env. var tweak parameters\n# (passed to the build scripts via script_env).\n{% if freethreading is not defined %}\n  {% set freethreading = \"yes\" %}\n{% endif %}\n\n{% set abi_tag = \"cp\" + ver2nd %}\n# freethreading, set using conda_build_config.yaml\n{% if freethreading == \"yes\" %}\n  {% set abi_tag = abi_tag + \"t\" %}\n{% else %}\n  {% set build_number = build_number + 100 %}\n{% endif %}\n\n{% if build_type == \"debug\" %}\n  {% set py_interp_debug = \"yes\" %}\n  {% set debug = \"_debug\" %}\n{% else %}\n  {% set py_interp_debug = \"no\" %}\n  {% set debug = \"\" %}\n{% endif %}\n\n{% if win %}\n  {% set site_packages_path = \"Lib/site-packages\" %}\n{% elif freethreading == \"yes\" %}\n  {% set site_packages_path = \"lib/python\" + ver2 + \"t/site-packages\" %}\n{% else %}\n  {% set site_packages_path = \"lib/python\" + ver2 + \"/site-packages\" %}\n{% endif %}\n\npackage:\n  name: python-split\n  version: {{ version }}{{ dev }}\n\nsource:\n  - url: https://www.python.org/ftp/python/{{ version }}/Python-{{ version }}{{ dev }}.tar.xz\n    # md5 from: https://www.python.org/downloads/release/python-{{ ver3nd }}{{ dev }}/\n    md5: ee7ae62b6ddc66eeca1591730be0f1c4\n    patches:\n      - patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch\n      - patches/0002-Win32-Do-not-download-externals.patch\n      - patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch\n      - patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch\n      - patches/0005-Unvendor-openssl.patch\n      - patches/0006-Unvendor-sqlite3.patch\n      - patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch\n      - patches/0008-Doing-d1trimfile.patch\n      # https://github.com/python/cpython/pull/23523\n      - patches/0009-cross-compile-darwin.patch\n      - patches/0010-Fix-TZPATH-on-windows.patch\n      # https://github.com/python/cpython/pull/24324\n      - patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch\n      - patches/0012-Unvendor-bzip2.patch\n      - patches/0013-Unvendor-libffi.patch\n      - patches/0014-Unvendor-tcltk.patch\n      - patches/0015-unvendor-xz.patch\n      - patches/0016-unvendor-zlib.patch\n      - patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch\n      - patches/0018-Unvendor-expat.patch\n      - patches/0019-Remove-unused-readelf.patch\n      - patches/0020-Don-t-checksharedmods-if-cross-compiling.patch\n      - patches/0021-Override-configure-LIBFFI.patch\n      - patches/0022-Unvendor-libmpdec.patch\n{% if 'conda-forge' in channel_targets %}\n      - patches/0023-Brand-conda-forge.patch\n{% endif %}\n      - patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch\n      - patches/0025-Unvendor-zstd.patch\n\nbuild:\n  number: {{ build_number }}\n\nrequirements:\n  build:\n    - patch  # [not win]\n    - m2-patch  # [win]\n    - m2-gcc-libs  # [win]\n\noutputs:\n  - name: python\n    script: build_base.sh  # [unix]\n    script: build_base.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      # Windows has issues updating python if conda is using files itself.\n      # Copy rather than link.\n      no_link:\n        - DLLs/_ctypes.pyd  # [win]\n      ignore_run_exports_from:\n        # C++ only installed so CXX is defined for distutils/sysconfig.\n        - {{ compiler('cxx') }}  # [unix]\n        # These two are just to get the headers needed for tk.h, but is unused\n        - xorg-libx11\n        - xorg-xorgproto\n      # Disabled until verified to work correctly\n      detect_binary_files_with_prefix: true\n      # detect_binary_files_with_prefix: False\n      # binary_has_prefix_files:\n      #   - lib/libpython{{ ver2 }}.*.1.0\n      #   - bin/python{{ ver2 }}  # [linux]\n      #   - lib/libpython{{ ver2 }}.a  # [linux]\n      #   - lib/libpython{{ ver2 }}.nolto.a  # [linux]\n      #   - lib/libpython3.so  # [linux]\n      #   - lib/python{{ ver2 }}/lib-dynload/_hashlib.cpython-{{ ver2nd }}-x86_64-linux-gnu.so  # [linux]\n      #   - lib/libpython3.dylib  # [osx]\n      # match python.org compiler standard\n      skip: true  # [win and int(float(vc)) < 14]\n      skip_compile_pyc:\n        - '*.py'            # [build_platform != target_platform]\n      string: {{ dev_ }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ debug }}_{{ abi_tag }}\n      python_site_packages_path: {{ site_packages_path }}\n      run_exports:\n        noarch:\n          - python\n        weak:\n          - python_abi {{ ver2 }}.* *_{{ abi_tag }}\n{% if py_interp_debug == \"yes\" %}\n          - python {{ ver2 }}.* *_debug_{{ abi_tag }}\n{% endif %}\n      track_features:\n{% if freethreading == \"yes\" %}\n        - py_freethreading\n{% endif %}\n      script_env:\n        - PY_INTERP_DEBUG={{ py_interp_debug }}\n        - PY_FREETHREADING={{ freethreading }}\n        # Putting these here means they get emitted to build_env_setup.{sh,bat} meaning we can launch IDEs\n        # after sourcing or calling that script without examine the contents of conda_build.{sh,bat} for\n        # important env. vars.\n      missing_dso_whitelist:   # [win]\n        - '**/MSVCR71.dll'  # [win]\n        - '**/MSVCR80.dll'  # [win]\n        # I have no idea why this is not in C:\\Windows\\System32\\downlevel\n        - '**/api-ms-win-core-path-l1-1-0.dll'  # [win]\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - make  # [not win]\n        - libtool  # [unix]\n        - pkg-config  # [not win]\n        # configure script looks for llvm-ar for lto\n        - llvm-tools  # [osx]\n        - ld_impl_{{ target_platform }}  # [linux]\n        - binutils_impl_{{ target_platform }}  # [linux]\n        - clang-19         # [not win]\n        - llvm-tools-19    # [not win]\n        - clang 19.*       # [win]\n        - llvm-tools 19.*  # [win]\n        - bzip2          # [build_platform != target_platform]\n        - libsqlite      # [build_platform != target_platform]\n        - liblzma-devel  # [build_platform != target_platform]\n        - zlib           # [build_platform != target_platform]\n        - zstd           # [build_platform != target_platform]\n        - openssl        # [build_platform != target_platform]\n        - readline       # [not win and build_platform != target_platform]\n        - tk             # [build_platform != target_platform]\n        - ncurses        # [unix and build_platform != target_platform]\n        - libffi         # [build_platform != target_platform]\n        - libuuid        # [linux and build_platform != target_platform]\n        - libxcrypt      # [linux and build_platform != target_platform]\n        - expat          # [build_platform != target_platform]\n      host:\n        - bzip2\n        - libsqlite\n        - liblzma-devel\n        - zlib\n        - zstd\n        - openssl\n        - readline  # [not win]\n        - tk\n        # These two are just to get the headers needed for tk.h, but is unused\n        - xorg-libx11\n        - xorg-xorgproto\n        - ncurses  # [unix]\n        - libffi\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n        - libuuid  # [linux]\n        - libmpdec-devel\n        - expat\n      run:\n        - ld_impl_{{ target_platform }} >=2.36.1  # [linux]\n        - tzdata\n{% if dev != '' %}\n        - _python_rc\n{% endif %}\n        - python_abi {{ ver2 }}.* *_{{ abi_tag }}\n    test:\n      downstreams:\n        - cython\n        - setuptools\n      requires:\n        - ripgrep\n        - cmake\n        - ninja\n        - {{ stdlib('c') }}\n        - {{ compiler('c') }}\n        # Tried to use enable_language(C) to avoid needing this. It does not work.\n        - {{ compiler('cxx') }}\n      files:\n        - tests/cmake/*\n        - tests/cython/*\n        - tests/prefix-replacement/*\n        - run_test.py\n      commands:\n        - echo on  # [win]\n        - set  # [win]\n        - python -V\n        - python3 -V            # [not win]\n        - pydoc -h\n        - python3-config --help  # [not win]\n        - set \"PIP_NO_BUILD_ISOLATION=False\"  # [win]\n        - set \"PIP_NO_DEPENDENCIES=True\"  # [win]\n        - set \"PIP_IGNORE_INSTALLED=True\"  # [win]\n        - set \"PIP_NO_INDEX=True\"  # [win]\n        - set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"  # [win]\n        - set \"TEMP=%CONDA_PREFIX%/tmp\"  # [win]\n        - mkdir \"%TEMP%\"  # [win]\n        - python -Im ensurepip --upgrade --default-pip  # [win]\n        # tzdata/zoneinfo test that will need the tzdata package to pass\n        - python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"\n        - python -m venv test-venv\n        - test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"  # [win]\n        - test-venv/bin/python -c \"import ctypes\"            # [unix]\n        - python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"  # [not win]\n        - _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_linux_gnu python -c \"import sysconfig; print(sysconfig.get_config_var('CC'))\"   # [linux64]\n        # check for unreplaced @ symbols in sysconfig files, excluding e.g. '\"$@\".lto'\n        - for f in ${CONDA_PREFIX}/lib/python*/_sysconfig*.py; do echo \"Checking $f:\"; if [[ `rg @[^@]*@ $f` ]]; then echo \"FAILED ON $f\"; cat $f; exit 1; fi; done  # [linux64 or osx]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.a  # [unix]\n        - test ! -f ${PREFIX}/lib/libpython${PKG_VERSION%.*}.nolto.a  # [unix]\n        {% if freethreading == \"yes\" %}\n        - if not exist %PREFIX%\\\\libs\\\\python3t.lib exit 1                # [win]\n        - if not exist %PREFIX%\\\\libs\\\\python{{ ver2nd }}t.lib exit 1     # [win]\n        {% else %}\n        - if not exist %PREFIX%\\\\libs\\\\python3.lib exit 1                 # [win]\n        - if not exist %PREFIX%\\\\libs\\\\python{{ ver2nd }}.lib exit 1      # [win]\n        {% endif %}\n        # https://github.com/conda-forge/python-feedstock/issues/384\n        - if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1  # [win]\n        - if exist %PREFIX%\\\\Scripts\\\\idle exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1  # [win]\n        - if not exist %PREFIX%\\\\include\\\\pyconfig.h exit 1  # [win]\n        - pushd tests\n        - pushd prefix-replacement    # [unix]\n        - bash build-and-test.sh      # [unix]\n        - popd    # [unix]\n        - pushd cmake\n{% if freethreading == \"no\" %}\n        # TODO: use the new FindPython3 which supports freethreading\n        - cmake -GNinja -DPY_VER={{ version }} --debug-find --trace --debug-output --debug-trycompile .\n{% endif %}\n        - popd\n        - popd\n        - python run_test.py\n        - test ! -f default.profraw   # [osx]\n        - python3.1 --version  # [unix]\n        # Test for segfault on osx-64 with libffi=3.4, see https://bugs.python.org/issue44556\n        - python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\"\n        # Test for wide character supported via ncursesw\n        - TERM=xterm >/dev/null python -c \"import curses; scr = curses.initscr(); curses.unget_wch('x'); assert 'x' ==  scr.get_wch()\"  # [unix]\n\n  - name: libpython-static\n    script: build_static.sh  # [unix]\n    script: build_static.bat  # [win]\n    build:\n      number: {{ build_number }}\n      activate_in_script: true\n      ignore_run_exports:\n        - python_abi\n      script_env:\n        - PY_INTERP_DEBUG={{ py_interp_debug }}\n        - PY_FREETHREADING={{ freethreading }}\n      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}{{ debug }}_{{ abi_tag }}\n    requirements:\n      build:\n        - {{ compiler('c') }}\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n      host:\n        - {{ pin_subpackage('python', exact=True) }}\n      run:\n        - {{ pin_subpackage('python', exact=True) }}\n    test:\n      files:\n        - tests/prefix-replacement/*\n      requires:\n        - {{ stdlib('c') }}\n        - {{ compiler('c') }}\n      commands:\n        - VER=${PKG_VERSION%.*}    # [not win]\n        - VERABI=${VER}            # [not win]\n{% if freethreading == \"yes\" %}\n        - VERABI=${VERABI}t        # [not win]\n{% endif %}\n        - VERABI_NO_DBG=${VERABI}  # [not win]\n{% if py_interp_debug == \"yes\" %}\n        - VERABI=${VERABI}d        # [not win]\n{% endif %}\n        - test -f ${PREFIX}/lib/libpython${VERABI}.a  # [unix]\n        - test -f ${PREFIX}/lib/libpython${VERABI_NO_DBG}.nolto.a  # [unix]\n        - test -f ${PREFIX}/lib/python${VERABI_NO_DBG}/config-${VERABI}-darwin/libpython${VERABI}.a  # [osx]\n        - pushd tests/prefix-replacement    # [unix]\n        - bash build-and-test.sh      # [unix]\n        - popd    # [unix]\n\n  - name: cpython\n    build:\n      noarch: generic\n    requirements:\n      - python {{ version }}{{ dev }}\n      - python_abi * *_{{ abi_tag }}\n\n  - name: python-freethreading\n    build:\n      noarch: generic\n{% if freethreading != \"yes\" %}\n      skip: true\n{% endif %}\n    requirements:\n      - cpython {{ version }}{{ dev }}\n      - python_abi * *_{{ abi_tag }}\n\n  - name: python-gil\n    build:\n      noarch: generic\n{% if freethreading == \"yes\" %}\n      skip: true\n{% endif %}\n    requirements:\n      - cpython {{ version }}{{ dev }}\n      - python_abi * *_{{ abi_tag }}\n\n  - name: python-jit\n    script: install_jit_activation.sh  # [not win]\n    script: install_jit_activation.bat  # [win]\n    build:\n      noarch: generic\n    requirements:\n      - cpython {{ version }}{{ dev }}\n      - __unix   # [unix]\n      - __win    # [win]\n\nabout:\n  home: https://www.python.org/\n  license: Python-2.0\n  license_file: LICENSE\n  summary: General purpose programming language\n  description: |\n    Python is a widely used high-level, general-purpose, interpreted, dynamic\n    programming language. Its design philosophy emphasizes code\n    readability, and its syntax allows programmers to express concepts in\n    fewer lines of code than would be possible in languages such as C++ or\n    Java. The language provides constructs intended to enable clear programs\n    on both a small and large scale.\n\n    We provide some meta packages for convenience.\n    To get a CPython flavour, use:\n\n        conda install cpython\n\n    To get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n        conda install python-freethreading\n\n    To get the default build (i.e. with the GIL):\n\n        conda install python-gil\n\n    To enable the use of the experimental JIT compiler in CPython:\n\n        conda install python-jit\n\n    or set the environment variable PYTHON_JIT=1. Note that the JIT support\n    is available for x86_64 builds only.\n\n  doc_url: https://www.python.org/doc/versions/\n  doc_source_url: https://github.com/python/pythondotorg/blob/master/docs/source/index.rst\n  dev_url: https://docs.python.org/devguide/\n\nextra:\n  feedstock-name: python\n  recipe-maintainers:\n    - chrisburr\n    - isuruf\n    - jakirkham\n    - mbargull\n    - msarahan\n    - pelson\n    - ocefpaf\n    - scopatz\n    - katietz\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "__win",
      "_python_rc",
      "binutils_impl_linux-64",
      "binutils_impl_linux-aarch64",
      "binutils_impl_linux-ppc64le",
      "bzip2",
      "c_compiler_stub",
      "c_stdlib_stub",
      "clang",
      "clang-19",
      "cpython",
      "cxx_compiler_stub",
      "expat",
      "ld_impl_linux-64",
      "ld_impl_linux-aarch64",
      "ld_impl_linux-ppc64le",
      "libffi",
      "liblzma-devel",
      "libmpdec-devel",
      "libsqlite",
      "libtool",
      "libuuid",
      "llvm-tools",
      "llvm-tools-19",
      "m2-gcc-libs",
      "m2-patch",
      "make",
      "ncurses",
      "openssl",
      "patch",
      "pkg-config",
      "python",
      "python_abi",
      "readline",
      "tk",
      "tzdata",
      "xorg-libx11",
      "xorg-xorgproto",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang",
        "clang-19",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "libtool",
        "llvm-tools",
        "llvm-tools-19",
        "m2-gcc-libs",
        "m2-patch",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "expat",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "libuuid",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "_python_rc",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cpython",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "binutils_impl_linux-64",
        "binutils_impl_linux-aarch64",
        "binutils_impl_linux-ppc64le",
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang 19.*",
        "clang-19",
        "cxx_compiler_stub",
        "ld_impl_linux-64",
        "ld_impl_linux-aarch64",
        "ld_impl_linux-ppc64le",
        "libtool",
        "llvm-tools",
        "llvm-tools 19.*",
        "llvm-tools-19",
        "m2-gcc-libs",
        "m2-patch",
        "make",
        "patch",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "ld_impl_linux-64 >=2.36.1",
        "ld_impl_linux-aarch64 >=2.36.1",
        "ld_impl_linux-ppc64le >=2.36.1",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "libuuid",
        "ncurses",
        "openssl",
        "python",
        "readline",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "__win",
        "_python_rc",
        "cpython 3.14.0rc2",
        "ld_impl_linux-64 >=2.36.1",
        "ld_impl_linux-aarch64 >=2.36.1",
        "ld_impl_linux-ppc64le >=2.36.1",
        "python",
        "python 3.14.0rc2",
        "python_abi * *_cp314",
        "python_abi * *_cp314t",
        "python_abi 3.14.* *_cp314",
        "python_abi 3.14.* *_cp314t",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  },
  "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz",
  "version": "3.14.0rc2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/python.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Python is a widely used high-level, general-purpose, interpreted, dynamic\nprogramming language. Its design philosophy emphasizes code\nreadability, and its syntax allows programmers to express concepts in\nfewer lines of code than would be possible in languages such as C++ or\nJava. The language provides constructs intended to enable clear programs\non both a small and large scale.\n\nWe provide some meta packages for convenience.\nTo get a CPython flavour, use:\n\n    conda install cpython\n\nTo get the freethreading build (i.e. without the Global Interpreter Lock - GIL):\n\n    conda install python-freethreading\n\nTo get the default build (i.e. with the GIL):\n\n    conda install python-gil\n\nTo enable the use of the experimental JIT compiler in CPython:\n\n    conda install python-jit\n\nor set the environment variable PYTHON_JIT=1. Note that the JIT support\nis available for x86_64 builds only.\n",
      "dev_url": "https://docs.python.org/devguide/",
      "doc_source_url": "https://github.com/python/pythondotorg/blob/master/docs/source/index.rst",
      "doc_url": "https://www.python.org/doc/versions/",
      "home": "https://www.python.org/",
      "license": "Python-2.0",
      "license_file": "LICENSE",
      "summary": "General purpose programming language"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "feedstock-name": "python",
      "recipe-maintainers": [
        "chrisburr",
        "isuruf",
        "jakirkham",
        "mbargull",
        "msarahan",
        "pelson",
        "ocefpaf",
        "scopatz",
        "katietz",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "missing_dso_whitelist": [
            "**/MSVCR71.dll",
            "**/MSVCR80.dll",
            "**/api-ms-win-core-path-l1-1-0.dll"
          ],
          "no_link": [
            "DLLs/_ctypes.pyd"
          ],
          "number": "100",
          "python_site_packages_path": "lib/python3.14/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_100_cp314",
          "track_features": null
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "clang 19.*",
            "llvm-tools 19.*"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314"
          ]
        },
        "script": "build_base.bat",
        "test": {
          "commands": [
            "echo on",
            "set",
            "python -V",
            "pydoc -h",
            "set \"PIP_NO_BUILD_ISOLATION=False\"",
            "set \"PIP_NO_DEPENDENCIES=True\"",
            "set \"PIP_IGNORE_INSTALLED=True\"",
            "set \"PIP_NO_INDEX=True\"",
            "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
            "set \"TEMP=%CONDA_PREFIX%/tmp\"",
            "mkdir \"%TEMP%\"",
            "python -Im ensurepip --upgrade --default-pip",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
            "if not exist %PREFIX%\\\\libs\\\\python3.lib exit 1",
            "if not exist %PREFIX%\\\\libs\\\\python314.lib exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
            "if not exist %PREFIX%\\\\include\\\\pyconfig.h exit 1",
            "pushd tests",
            "pushd cmake",
            "cmake -GNinja -DPY_VER=3.14.0 --debug-find --trace --debug-output --debug-trycompile .",
            "popd",
            "python run_test.py",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "100",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=no"
          ],
          "string": "h1234567_100_cp314"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.bat",
        "test": {
          "commands": null,
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__win"
        ],
        "script": "install_jit_activation.bat"
      },
      {
        "build": {
          "activate_in_script": true,
          "detect_binary_files_with_prefix": true,
          "ignore_run_exports_from": [
            "xorg-libx11",
            "xorg-xorgproto"
          ],
          "missing_dso_whitelist": [
            "**/MSVCR71.dll",
            "**/MSVCR80.dll",
            "**/api-ms-win-core-path-l1-1-0.dll"
          ],
          "no_link": [
            "DLLs/_ctypes.pyd"
          ],
          "number": "0",
          "python_site_packages_path": "lib/python3.14t/site-packages",
          "run_exports": {
            "noarch": [
              "python"
            ],
            "weak": [
              "python_abi 3.14.* *_cp314t"
            ]
          },
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "skip_compile_pyc": null,
          "string": "h1234567_0_cp314t",
          "track_features": [
            "py_freethreading"
          ]
        },
        "name": "python",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "clang 19.*",
            "llvm-tools 19.*"
          ],
          "host": [
            "bzip2",
            "libsqlite",
            "liblzma-devel",
            "zlib",
            "zstd",
            "openssl",
            "tk",
            "xorg-libx11",
            "xorg-xorgproto",
            "libffi",
            "libmpdec-devel",
            "expat"
          ],
          "run": [
            "tzdata",
            "_python_rc",
            "python_abi 3.14.* *_cp314t"
          ]
        },
        "script": "build_base.bat",
        "test": {
          "commands": [
            "echo on",
            "set",
            "python -V",
            "pydoc -h",
            "set \"PIP_NO_BUILD_ISOLATION=False\"",
            "set \"PIP_NO_DEPENDENCIES=True\"",
            "set \"PIP_IGNORE_INSTALLED=True\"",
            "set \"PIP_NO_INDEX=True\"",
            "set \"PIP_CACHE_DIR=%CONDA_PREFIX%/pip_cache\"",
            "set \"TEMP=%CONDA_PREFIX%/tmp\"",
            "mkdir \"%TEMP%\"",
            "python -Im ensurepip --upgrade --default-pip",
            "python -c \"from zoneinfo import ZoneInfo; from datetime import datetime; dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo('America/Los_Angeles')); print(dt.tzname())\"",
            "python -m venv test-venv",
            "test-venv\\\\Scripts\\\\python.exe -c \"import ctypes\"",
            "if not exist %PREFIX%\\\\libs\\\\python3t.lib exit 1",
            "if not exist %PREFIX%\\\\libs\\\\python314t.lib exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\pydoc exit 1",
            "if exist %PREFIX%\\\\Scripts\\\\idle exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle-script.py exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\idle.exe exit 1",
            "if not exist %PREFIX%\\\\Scripts\\\\pydoc.exe exit 1",
            "if not exist %PREFIX%\\\\include\\\\pyconfig.h exit 1",
            "pushd tests",
            "pushd cmake",
            "popd",
            "python run_test.py",
            "python -c \"from ctypes import CFUNCTYPE; CFUNCTYPE(None)(id)\""
          ],
          "downstreams": [
            "cython",
            "setuptools"
          ],
          "files": [
            "tests/cmake/*",
            "tests/cython/*",
            "tests/prefix-replacement/*",
            "run_test.py"
          ],
          "requires": [
            "ripgrep",
            "cmake",
            "ninja",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "activate_in_script": true,
          "ignore_run_exports": [
            "python_abi"
          ],
          "number": "0",
          "script_env": [
            "PY_INTERP_DEBUG=no",
            "PY_FREETHREADING=yes"
          ],
          "string": "h1234567_0_cp314t"
        },
        "name": "libpython-static",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "cxx_compiler_stub"
          ],
          "host": [
            "python"
          ],
          "run": [
            "python"
          ]
        },
        "script": "build_static.bat",
        "test": {
          "commands": null,
          "files": [
            "tests/prefix-replacement/*"
          ],
          "requires": [
            "c_stdlib_stub",
            "c_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "cpython",
        "requirements": [
          "python 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-freethreading",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic",
          "skip": true
        },
        "name": "python-gil",
        "requirements": [
          "cpython 3.14.0rc2",
          "python_abi * *_cp314t"
        ]
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "python-jit",
        "requirements": [
          "cpython 3.14.0rc2",
          "__win"
        ],
        "script": "install_jit_activation.bat"
      }
    ],
    "package": {
      "name": "python-split",
      "version": "3.14.0rc2"
    },
    "requirements": {
      "build": [
        "m2-patch",
        "m2-gcc-libs"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      },
      {
        "md5": "ee7ae62b6ddc66eeca1591730be0f1c4",
        "patches": [
          "patches/0001-Win32-Change-FD_SETSIZE-from-512-to-2048.patch",
          "patches/0002-Win32-Do-not-download-externals.patch",
          "patches/0003-Fix-find_library-so-that-it-looks-in-sys.prefix-lib-.patch",
          "patches/0004-Disable-registry-lookup-unless-CONDA_PY_ALLOW_REG_PA.patch",
          "patches/0005-Unvendor-openssl.patch",
          "patches/0006-Unvendor-sqlite3.patch",
          "patches/0007-Add-CondaEcosystemModifyDllSearchPath.patch",
          "patches/0008-Doing-d1trimfile.patch",
          "patches/0009-cross-compile-darwin.patch",
          "patches/0010-Fix-TZPATH-on-windows.patch",
          "patches/0011-Make-dyld-search-work-with-SYSTEM_VERSION_COMPAT-1.patch",
          "patches/0012-Unvendor-bzip2.patch",
          "patches/0013-Unvendor-libffi.patch",
          "patches/0014-Unvendor-tcltk.patch",
          "patches/0015-unvendor-xz.patch",
          "patches/0016-unvendor-zlib.patch",
          "patches/0017-Do-not-pass-g-to-GCC-when-not-Py_DEBUG.patch",
          "patches/0018-Unvendor-expat.patch",
          "patches/0019-Remove-unused-readelf.patch",
          "patches/0020-Don-t-checksharedmods-if-cross-compiling.patch",
          "patches/0021-Override-configure-LIBFFI.patch",
          "patches/0022-Unvendor-libmpdec.patch",
          "patches/0023-Brand-conda-forge.patch",
          "patches/0024-Do-not-define-pid_t-as-it-might-conflict-with-the-ac.patch",
          "patches/0025-Unvendor-zstd.patch"
        ],
        "url": "https://www.python.org/ftp/python/3.14.0/Python-3.14.0rc2.tar.xz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "clang",
        "cxx_compiler_stub",
        "llvm-tools",
        "m2-gcc-libs",
        "m2-patch"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "bzip2",
        "expat",
        "libffi",
        "liblzma-devel",
        "libmpdec-devel",
        "libsqlite",
        "openssl",
        "python",
        "tk",
        "xorg-libx11",
        "xorg-xorgproto",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__win",
        "_python_rc",
        "cpython",
        "python",
        "python_abi",
        "tzdata"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "ripgrep"
      ]
    }
  }
}