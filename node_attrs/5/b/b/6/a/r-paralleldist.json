{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-paralleldist",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('parallelDist')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('parallelDist')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('parallelDist')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('parallelDist')\"",
        "\"%R%\" -e \"library('parallelDist')\""
      ]
    }
  },
  "name": "r-paralleldist",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('parallelDist')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-paralleldist"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-paralleldist.json"
  },
  "raw_meta_yaml": "{% set version = \"0.2.7\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-paralleldist\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/parallelDist_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/parallelDist/parallelDist_{{ version }}.tar.gz\n  sha256: b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f\n\nbuild:\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-rcpp                       # [build_platform != target_platform]\n    - r-rcpparmadillo              # [build_platform != target_platform]\n    - r-rcppparallel               # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-rcpp >=0.12.6\n    - r-rcpparmadillo\n    - r-rcppparallel >=4.3.20\n    - libblas\n    - liblapack\n  run:\n    - r-base\n    - r-rcpp >=0.12.6\n    - r-rcpparmadillo\n    - r-rcppparallel >=4.3.20\n\ntest:\n  commands:\n    - $R -e \"library('parallelDist')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('parallelDist')\\\"\"  # [win]\n\nabout:\n  home: https://www.alexandereckert.com/R\n  dev_url: https://github.com/alexeckert/parallelDist\n  license: GPL-2.0-or-later\n  summary: A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written\n    in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help\n    of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation\n    stays flexible enough to support different DTW step patterns and normalization methods.\n  license_family: GPL2\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - alexeckert\n    - zdk123\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "libblas",
      "liblapack",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "r-rcpparmadillo",
      "r-rcppparallel",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
  ],
  "version": "0.2.7",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-paralleldist.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/alexeckert/parallelDist",
      "home": "https://www.alexandereckert.com/R",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "A fast parallelized alternative to R's native 'dist' function to calculate distance matrices for continuous, binary, and multi-dimensional input matrices, which supports a broad variety of 41 predefined distance functions from the 'stats', 'proxy' and 'dtw' R packages, as well as user- defined functions written in C++. For ease of use, the 'parDist' function extends the signature of the 'dist' function and uses the same parameter naming conventions as distance methods of existing R packages. The package is mainly implemented in C++ and leverages the 'RcppParallel' package to parallelize the distance computations with the help of the 'TinyThread' library. Furthermore, the 'Armadillo' linear algebra library is used for optimized matrix operations during distance calculations. The curiously recurring template pattern (CRTP) technique is applied to avoid virtual functions, which improves the Dynamic Time Warping calculations while the implementation stays flexible enough to support different DTW step patterns and normalization methods."
    },
    "build": {
      "number": "0",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "alexeckert",
        "zdk123"
      ]
    },
    "package": {
      "name": "r-paralleldist",
      "version": "0.2.7"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20",
        "libblas",
        "liblapack"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.6",
        "r-rcpparmadillo",
        "r-rcppparallel >=4.3.20"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b38bb8f4bbad025686a1b8d9fde4aa439f8012d39aab1048adc95ae27485196f",
      "url": [
        "https://cran.r-project.org/src/contrib/parallelDist_0.2.7.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/parallelDist/parallelDist_0.2.7.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('parallelDist')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "liblapack",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo",
        "r-rcppparallel"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}