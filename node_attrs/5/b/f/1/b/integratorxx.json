{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "integratorxx",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "ldd -v $PREFIX/lib/libintegratorxx$SHLIB_EXT"
      ],
      "requires": null
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "ldd -v $PREFIX/lib/libintegratorxx$SHLIB_EXT"
      ],
      "requires": null
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "ldd -v $PREFIX/lib/libintegratorxx$SHLIB_EXT"
      ],
      "requires": null
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "ldd -v $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "otool -L $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\integratorxx.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\integratorxx\\\\quadrature.hpp exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXTargets.cmake exit 1",
        "objdump.exe -p %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll | findstr /i \"dll\""
      ],
      "requires": [
        "m2w64-binutils"
      ]
    }
  },
  "name": "integratorxx",
  "osx_64_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "otool -L $PREFIX/lib/libintegratorxx$SHLIB_EXT"
      ],
      "requires": null
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT",
        "test ! -f $PREFIX/lib/libintegratorxx.a",
        "test -f $PREFIX/include/integratorxx/quadrature.hpp",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake",
        "test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake",
        "otool -L $PREFIX/lib/libintegratorxx$SHLIB_EXT"
      ],
      "requires": null
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "integratorxx"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/integratorxx.json"
  },
  "raw_meta_yaml": "{% set name = \"IntegratorXX\" %}\n{% set version = \"0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # no tags on repo yet, but this is the master HEAD in stable use\n  url: https://github.com/wavefunction91/{{ name }}/archive/cf2917c.tar.gz\n  patches:\n    - 0001-windows-adaptations.patch\n  sha256: 7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('integratorxx', max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - catch2                                                                         # for testing\ntest:\n  requires:\n    - m2w64-binutils                                                       # [win]   # provides objdump.exe\n  commands:\n    # Verify library\n    - test -f $PREFIX/lib/libintegratorxx$SHLIB_EXT                        # [unix]\n    - test ! -f $PREFIX/lib/libintegratorxx.a                              # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\integratorxx.lib exit 1         # [win]   # ms import lib\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll exit 1         # [win]   # ms dyn lib\n    # Verify accessories\n    - test -f $PREFIX/include/integratorxx/quadrature.hpp                  # [unix]\n    - test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXConfig.cmake      # [unix]\n    - test -f $PREFIX/lib/cmake/IntegratorXX/IntegratorXXTargets.cmake     # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\integratorxx\\\\quadrature.hpp exit 1                # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXConfig.cmake exit 1   # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXTargets.cmake exit 1  # [win]\n    # Inspect linkage\n    - ldd -v $PREFIX/lib/libintegratorxx$SHLIB_EXT                                # [linux]\n    - otool -L $PREFIX/lib/libintegratorxx$SHLIB_EXT                              # [osx]\n    - objdump.exe -p %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll | findstr /i \"dll\"  # [win]\n    # Actually test (skip, as done through ctest in build phase)\n\nabout:\n  home: https://github.com/wavefunction91/IntegratorXX\n  dev_url: https://github.com/wavefunction91/IntegratorXX\n  # doc_url:\n  license: BSD-3-Clause\n  license_url: https://opensource.org/licenses/BSD-3-Clause\n  license_file: LICENSE.txt\n  license_family: BSD\n  summary: \"D. Williams-Young's reuseable density functional theory (DFT) grid library\"\n  description: |\n    IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\n    chemistry calculations. Among the most important applications of these grids is the evaluation\n    of exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\n    functional theory calculations. IntegratorXX provides a uniform interface for the generation of\n    primitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n\nextra:\n  recipe-maintainers:\n    - loriab\n    # - wavefunction91\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "catch2",
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "catch2",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2w64-binutils"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2w64-binutils"
      ]
    }
  },
  "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz",
  "version": "0.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/integratorxx.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "IntegratorXX is a modern C++ library for the generation of atomic and molecular grids for quantum\nchemistry calculations. Among the most important applications of these grids is the evaluation\nof exchange--correlation (XC) related quantities (energies, potentials, etc) required for density\nfunctional theory calculations. IntegratorXX provides a uniform interface for the generation of\nprimitive, radial and solid angle quadratures, as well as their combination into spherical grids.\n",
      "dev_url": "https://github.com/wavefunction91/IntegratorXX",
      "home": "https://github.com/wavefunction91/IntegratorXX",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "license_url": "https://opensource.org/licenses/BSD-3-Clause",
      "summary": "D. Williams-Young's reuseable density functional theory (DFT) grid library"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "integratorxx"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "loriab"
      ]
    },
    "package": {
      "name": "integratorxx",
      "version": "0.1"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "catch2"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "0001-windows-adaptations.patch"
      ],
      "sha256": "7b16cee93458e528dea190b17b5f6ebf25024ccc28a8c66fceae603a345f6713",
      "url": "https://github.com/wavefunction91/IntegratorXX/archive/cf2917c.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\integratorxx.lib exit 1",
        "if not exist %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\integratorxx\\\\quadrature.hpp exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\lib\\\\cmake\\\\IntegratorXX\\\\IntegratorXXTargets.cmake exit 1",
        "objdump.exe -p %PREFIX%\\\\Library\\\\bin\\\\integratorxx.dll | findstr /i \"dll\""
      ],
      "requires": [
        "m2w64-binutils"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catch2"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": [
        "m2w64-binutils"
      ]
    }
  }
}