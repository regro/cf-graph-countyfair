{
  "archived": true,
  "branch": "master",
  "conda-forge.yml": {},
  "feedstock_name": "ros-roslz4",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "A Python and C++ implementation of the LZ4 streaming format. Large data\nstreams are split into blocks which are compressed using the very fast LZ4\ncompression algorithm.\n",
      "home": "https://wiki.ros.org",
      "license": "BSD-3-Clause",
      "license_file": "include/roslz4/lz4s.h",
      "summary": "A Python and C++ implementation of the LZ4 streaming format.\n"
    },
    "build": {
      "number": "2",
      "run_exports": [
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp"
      ]
    },
    "package": {
      "name": "ros-roslz4",
      "version": "1.14.10.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake"
      ],
      "host": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin"
      ],
      "run": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c"
      ]
    },
    "source": {
      "fn": "ros-roslz4-1.14.10-1.tar.gz",
      "sha256": "018ed275a26779866834319ccc54904d16c510a4080d69f0160b6d036e0caed7",
      "url": "https://github.com/ros-gbp/ros_comm-release/archive/release/melodic/roslz4/1.14.10-1.tar.gz"
    },
    "test": {
      "commands": [
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\""
      ],
      "imports": [
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4"
      ],
      "requires": [
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catkin_pkg",
        "lz4-c",
        "python",
        "ros-catkin",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "lz4-c",
        "python",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "rospkg"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "A Python and C++ implementation of the LZ4 streaming format. Large data\nstreams are split into blocks which are compressed using the very fast LZ4\ncompression algorithm.\n",
      "home": "https://wiki.ros.org",
      "license": "BSD-3-Clause",
      "license_file": "include/roslz4/lz4s.h",
      "summary": "A Python and C++ implementation of the LZ4 streaming format.\n"
    },
    "build": {
      "number": "2",
      "run_exports": [
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp"
      ]
    },
    "package": {
      "name": "ros-roslz4",
      "version": "1.14.10.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake"
      ],
      "host": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin"
      ],
      "run": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c"
      ]
    },
    "source": {
      "fn": "ros-roslz4-1.14.10-1.tar.gz",
      "sha256": "018ed275a26779866834319ccc54904d16c510a4080d69f0160b6d036e0caed7",
      "url": "https://github.com/ros-gbp/ros_comm-release/archive/release/melodic/roslz4/1.14.10-1.tar.gz"
    },
    "test": {
      "commands": [
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\""
      ],
      "imports": [
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4"
      ],
      "requires": [
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg"
      ]
    }
  },
  "name": "ros-roslz4",
  "osx_64_meta_yaml": {
    "about": {
      "description": "A Python and C++ implementation of the LZ4 streaming format. Large data\nstreams are split into blocks which are compressed using the very fast LZ4\ncompression algorithm.\n",
      "home": "https://wiki.ros.org",
      "license": "BSD-3-Clause",
      "license_file": "include/roslz4/lz4s.h",
      "summary": "A Python and C++ implementation of the LZ4 streaming format.\n"
    },
    "build": {
      "number": "2",
      "run_exports": [
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4",
        "ros-roslz4"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp",
        "wolfv",
        "lesteve",
        "seanyen",
        "anthchirp"
      ]
    },
    "package": {
      "name": "ros-roslz4",
      "version": "1.14.10.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "c_compiler_stub",
        "cmake"
      ],
      "host": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "catkin_pkg",
        "python",
        "lz4-c",
        "ros-catkin"
      ],
      "run": [
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c",
        "ros-conda-mutex * melodic",
        "ros-conda-base",
        "ros-cpp-common",
        "python",
        "lz4-c"
      ]
    },
    "source": {
      "fn": "ros-roslz4-1.14.10-1.tar.gz",
      "sha256": "018ed275a26779866834319ccc54904d16c510a4080d69f0160b6d036e0caed7",
      "url": "https://github.com/ros-gbp/ros_comm-release/archive/release/melodic/roslz4/1.14.10-1.tar.gz"
    },
    "test": {
      "commands": [
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"",
        "export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\""
      ],
      "imports": [
        "roslz4",
        "roslz4",
        "roslz4",
        "roslz4"
      ],
      "requires": [
        "rospkg",
        "rospkg",
        "rospkg",
        "rospkg"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catkin_pkg",
        "lz4-c",
        "python",
        "ros-catkin",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "lz4-c",
        "python",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "rospkg"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ros-roslz4"
    ]
  },
  "parsing_error": "make_graph: missing parsing_error key",
  "pr_info": {
    "__lazy_json__": "pr_info/ros-roslz4.json"
  },
  "raw_meta_yaml": "{% set name = \"ros-roslz4\" %}\n{% set version = \"1.14.10-1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version | replace(\"-\",\".\") }}\n\nsource:\n  url: https://github.com/ros-gbp/ros_comm-release/archive/release/melodic/roslz4/{{ version }}.tar.gz\n  fn: ros-roslz4-{{ version }}.tar.gz\n  sha256: 018ed275a26779866834319ccc54904d16c510a4080d69f0160b6d036e0caed7\n\nbuild:\n  number: 2\n  skip: true  # [win]\n  run_exports:\n    - {{ pin_subpackage('ros-roslz4') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - cmake\n  host:\n    - ros-conda-mutex * melodic\n    - ros-conda-base\n    - ros-cpp-common\n    - catkin_pkg\n    - python\n    - lz4-c\n    - ros-catkin\n  run:\n    - ros-conda-mutex * melodic\n    - ros-conda-base\n    - ros-cpp-common\n    - python\n    - lz4-c\n\ntest:\n  requires:\n    - rospkg\n  commands:\n    - export ROS_ROOT=$PREFIX && python -c \"import rospkg;s = rospkg.RosPack();ret = s.get_path('roslz4');print(ret)\"\n  imports:\n    - roslz4\n\nabout:\n  home: https://wiki.ros.org\n  summary: |\n    A Python and C++ implementation of the LZ4 streaming format.\n  description: |\n    A Python and C++ implementation of the LZ4 streaming format. Large data\n    streams are split into blocks which are compressed using the very fast LZ4\n    compression algorithm.\n  license: BSD-3-Clause\n  license_file: include/roslz4/lz4s.h\n\nextra:\n  recipe-maintainers:\n    - wolfv\n    - lesteve\n    - seanyen\n    - anthchirp\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "catkin_pkg",
      "cmake",
      "cxx_compiler_stub",
      "lz4-c",
      "python",
      "ros-catkin",
      "ros-conda-base",
      "ros-conda-mutex",
      "ros-cpp-common"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "catkin_pkg",
        "cxx_compiler_stub",
        "lz4-c",
        "python",
        "ros-catkin",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "lz4-c",
        "python",
        "ros-conda-base",
        "ros-conda-mutex",
        "ros-cpp-common"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "rospkg"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "catkin_pkg",
        "lz4-c",
        "python",
        "ros-catkin",
        "ros-conda-base",
        "ros-conda-mutex * melodic",
        "ros-cpp-common"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "lz4-c",
        "python",
        "ros-conda-base",
        "ros-conda-mutex * melodic",
        "ros-cpp-common"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "rospkg"
      ]
    }
  },
  "url": "https://github.com/ros-gbp/ros_comm-release/archive/release/melodic/roslz4/1.14.10-1.tar.gz",
  "version": "1.14.10.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ros-roslz4.json"
  }
}