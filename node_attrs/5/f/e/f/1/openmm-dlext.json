{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "store_build_artifacts": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "630463457a2a4bdef5767456b23cbf98d8042c0d",
  "feedstock_hash_ts": 1730849167,
  "feedstock_name": "openmm-dlext",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The plugin is intended to provide a OpenMM::Force derived class that does no direct computation,\nbut instead uses DLPack wrappers around CPU or GPU OpenMM::Platform data for an initialized\ninstance of OpenMM::Contex, and a callback interface to perform computations on such data\noutside the plugin.\n",
      "dev_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "doc_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "home": "https://github.com/SSAGESLabs/openmm-dlext",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "Plugin for OpenMM providing simulation data wrappers as DLPack data structures"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*",
        "*/libOpenCL.*"
      ],
      "number": "8",
      "rpaths": [
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "pabloferz",
        "nrouizem"
      ]
    },
    "package": {
      "name": "openmm-dlext",
      "version": "0.2.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig",
        "openmm",
        "dlpack >=0.5",
        "pybind11"
      ],
      "run": [
        "python",
        "openmm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9535e2ffe8336cbe4e403c6066f0539265bc8dd5e0f2827ff4cc955190aca49e",
      "url": "https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v0.2.1.tar.gz"
    },
    "test": {
      "imports": null,
      "requires": null
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "dlpack",
        "openmm",
        "pip",
        "pybind11",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The plugin is intended to provide a OpenMM::Force derived class that does no direct computation,\nbut instead uses DLPack wrappers around CPU or GPU OpenMM::Platform data for an initialized\ninstance of OpenMM::Contex, and a callback interface to perform computations on such data\noutside the plugin.\n",
      "dev_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "doc_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "home": "https://github.com/SSAGESLabs/openmm-dlext",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "Plugin for OpenMM providing simulation data wrappers as DLPack data structures"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libcuda.*",
        "*/libOpenCL.*"
      ],
      "number": "8",
      "rpaths": [
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "pabloferz",
        "nrouizem"
      ]
    },
    "package": {
      "name": "openmm-dlext",
      "version": "0.2.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig",
        "openmm",
        "dlpack >=0.5",
        "pybind11"
      ],
      "run": [
        "python",
        "openmm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9535e2ffe8336cbe4e403c6066f0539265bc8dd5e0f2827ff4cc955190aca49e",
      "url": "https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v0.2.1.tar.gz"
    },
    "test": {
      "imports": [
        "openmm_dlext"
      ],
      "requires": null
    }
  },
  "name": "openmm-dlext",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The plugin is intended to provide a OpenMM::Force derived class that does no direct computation,\nbut instead uses DLPack wrappers around CPU or GPU OpenMM::Platform data for an initialized\ninstance of OpenMM::Contex, and a callback interface to perform computations on such data\noutside the plugin.\n",
      "dev_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "doc_url": "https://github.com/SSAGESLabs/openmm-dlext",
      "home": "https://github.com/SSAGESLabs/openmm-dlext",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.md",
      "summary": "Plugin for OpenMM providing simulation data wrappers as DLPack data structures"
    },
    "build": {
      "missing_dso_whitelist": [
        "*/libOpenCL.*"
      ],
      "number": "8",
      "rpaths": [
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "pabloferz",
        "nrouizem"
      ]
    },
    "package": {
      "name": "openmm-dlext",
      "version": "0.2.1"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "make"
      ],
      "host": [
        "python",
        "pip",
        "swig",
        "openmm",
        "dlpack >=0.5",
        "pybind11"
      ],
      "run": [
        "python",
        "openmm"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "9535e2ffe8336cbe4e403c6066f0539265bc8dd5e0f2827ff4cc955190aca49e",
      "url": "https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v0.2.1.tar.gz"
    },
    "test": {
      "imports": [
        "openmm_dlext"
      ],
      "requires": null
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "dlpack",
        "openmm",
        "pip",
        "pybind11",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "openmm-dlext"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openmm-dlext.json"
  },
  "raw_meta_yaml": "{% set name = \"openmm-dlext\" %}\n{% set version = \"0.2.1\" %}\n{% set cuda_major = (cuda_compiler_version | default(\"0.0\", true)).split(\".\")[0] | int %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 9535e2ffe8336cbe4e403c6066f0539265bc8dd5e0f2827ff4cc955190aca49e\n\nbuild:\n  number: 8\n  skip: true  # [python_impl == \"pypy\"]\n  skip: true  # [(win) or (cuda_compiler_version in (undefined, 'None') and linux) or ((cuda_compiler_version != '10.2') and (ppc64le))]\n  missing_dso_whitelist:\n    - \"*/libcuda.*\"    # [linux]\n    - \"*/libOpenCL.*\"  # [unix]\n  rpaths:\n    - lib/\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - swig                                   # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n    - dlpack                                 # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [linux and cuda_compiler_version != \"None\"]\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n    - swig\n    - openmm\n    - dlpack >=0.5\n    - pybind11\n    {% if linux and cuda_major >= 12 %}\n    - cuda-version {{ cuda_compiler_version }}\n    - cuda-profiler-api\n    - cuda-driver-dev\n    {% endif %}\n  run:\n    - python\n    - {{ pin_compatible('openmm', max_pin='x.x') }}\n  \ntest:\n  requires:\n    {% if linux and cuda_major >= 12 %}\n    - cuda-driver-dev\n    - cuda-compat\n    {% endif %}\n  imports:\n    - openmm_dlext  # [cuda_compiler_version == \"None\"]\n\nabout:\n  home: https://github.com/SSAGESLabs/openmm-dlext\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.md\n  summary: Plugin for OpenMM providing simulation data wrappers as DLPack data structures\n  description: |\n    The plugin is intended to provide a OpenMM::Force derived class that does no direct computation,\n    but instead uses DLPack wrappers around CPU or GPU OpenMM::Platform data for an initialized\n    instance of OpenMM::Contex, and a callback interface to perform computations on such data\n    outside the plugin.\n  doc_url: https://github.com/SSAGESLabs/openmm-dlext\n  dev_url: https://github.com/SSAGESLabs/openmm-dlext\n\nextra:\n  recipe-maintainers:\n    - pabloferz\n    - nrouizem\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cmake",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "dlpack",
      "make",
      "openmm",
      "pip",
      "pybind11",
      "python",
      "swig"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "dlpack",
        "openmm",
        "pip",
        "pybind11",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "dlpack >=0.5",
        "openmm",
        "pip",
        "pybind11",
        "python",
        "swig"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "openmm",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/SSAGESLabs/openmm-dlext/archive/refs/tags/v0.2.1.tar.gz",
  "version": "0.2.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openmm-dlext.json"
  }
}