{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "lief",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "setuptools <=70.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.bat",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.bat",
        "test": {
          "commands": [
            "echo on",
            "pushd tests",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "popd",
            "pushd macho",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      },
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      },
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      },
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      },
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      },
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "name": "lief",
  "osx_64_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.sh",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "pkg-config",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.sh",
        "test": {
          "commands": [
            "set -x",
            "pushd tests",
            "PATH=\".:${PATH}\"",
            "findstr() { grep \"${@}\"; }",
            "call() { true; }",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "test-lief-self || exit 1",
            "popd",
            "pushd macho",
            "test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "pkg-config",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "liblief",
      "py-lief"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lief.json"
  },
  "raw_meta_yaml": "{% set version = \"0.16.6\" %}\n\npackage:\n  name: lief\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/lief-project/LIEF/archive/{{ version }}.tar.gz\n    sha256: 20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - ccache\n    - {{ stdlib('c') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - pkg-config            # [not win]\n    - cmake\n    - ninja\n  host:\n    - nlohmann_json\n    - mbedtls\n\noutputs:\n  - name: py-lief\n    script: install-py-lief.sh  # [unix]\n    script: install-py-lief.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('py-lief', max_pin='x.x') }}\n      ignore_run_exports:\n        - python\n    requirements:\n      build:\n        - ccache\n        - {{ stdlib('c') }}\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pkg-config            # [not win]\n        - cmake\n        - ninja\n        - python                                 # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n        - pydantic >=2.4.2                       # [build_platform != target_platform]\n        - pydantic-core >=2.10.1                 # [build_platform != target_platform]\n        - scikit-build-core >=0.6.0              # [build_platform != target_platform]\n        - setuptools >=68.2.2                    # [build_platform != target_platform]\n        - tomli >=2.0.1                          # [build_platform != target_platform]\n      host:\n        - nlohmann_json\n        # Dynamically linked to libLIEF for now; see comment in patch section.\n        - {{ pin_subpackage('liblief', exact=True) }}\n        - python\n        - pip\n        # Upstream pins build dependencies exactly; we are a bit more lenient\n        # here to avoid potential solvability issues.\n        - pydantic >=2.4.2\n        - pydantic-core >=2.10.1\n        - scikit-build-core >=0.6.0\n        - setuptools >=68.2.2\n        # Required for msvc.msvc14_get_vc_env\n        - setuptools <=70.2  # [win]\n        - tomli >=2.0.1\n      run:\n        - {{ pin_subpackage('liblief', exact=True) }}\n        - python\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n      imports:\n        - lief\n      commands:\n        # Test general functionality by introspecting inter-subpackage linkage.\n        - python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\"\n\n  - name: liblief\n    script: install-liblief.sh  # [unix]\n    script: install-liblief.bat  # [win]\n    build:\n      run_exports:\n        - {{ pin_subpackage('liblief', max_pin='x.x') }}\n    requirements:\n      build:\n        - ccache\n        - {{ stdlib('c') }}\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - pkg-config            # [not win]\n        - cmake\n        - ninja\n      host:\n        - nlohmann_json\n        - mbedtls\n    test:\n      files:\n        - tests\n      commands:\n        - set -x   # [not win]\n        - echo on  # [win]\n        - pushd tests\n        # Aid uniform tests below: Put current dir bluntly on PATH; alias \"findstr\"->\"grep\", \"call;\"->\"true\".\n        - PATH=\".:${PATH}\"            # [not win]\n        - findstr() { grep \"${@}\"; }  # [not win]\n        - call() { true; }            # [not win]\n\n        - pushd self\n        - cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1\n        - ninja || exit 1\n        # FIXME: Actual test disabled on Windows for now; LIEF::Parser::parse does not finish on Windows.\n        - test-lief-self || exit 1  # [not win]\n        - popd\n\n        - pushd macho\n        - cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1\n        - ninja || exit 1\n        # This MachO object has no DynamicSymbolCommand, testing for bug fixed in PR:\n        # https://github.com/lief-project/LIEF/pull/262\n        # FIXME: Actual test disabled on Windows for now; LIEF::MachO::Parser::parse does not finish on Windows.\n        - test-lief-macho macOS-libpython2.7.a-getbuildinfo.o > output.txt || exit 1  # [not win]\n        - findstr has_dynamic_symbol_command output.txt && exit 1 || call;\n        - popd\n\n        - popd\n      requires:\n        - {{ compiler('c') }}\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n\nabout:\n  home: https://lief.quarkslab.com/\n  license: Apache-2.0\n  license_file: LICENSE\n  license_family: Apache\n  summary: A cross platform library to parse, modify and abstract ELF, PE and MachO formats.\n  description: |\n    It turns out that many projects need to parse executable formats and they usually re-implement\n    their own parser. Moreover these parsers are usually bound to one language.\n    LIEF attempts to fill this void.\n  dev_url: https://github.com/lief-project/LIEF\n  doc_url: https://lief.quarkslab.com/doc/stable/index.html\n  doc_source_url: https://github.com/lief-project/LIEF/tree/master/doc\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - mbargull\n    - msarahan\n    - xhochy\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "ccache",
      "cmake",
      "cxx_compiler_stub",
      "liblief",
      "mbedtls",
      "ninja",
      "nlohmann_json",
      "pip",
      "pkg-config",
      "pydantic",
      "pydantic-core",
      "python",
      "scikit-build-core",
      "setuptools",
      "tomli"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic >=2.4.2",
        "pydantic-core >=2.10.1",
        "python",
        "scikit-build-core >=0.6.0",
        "setuptools <=70.2",
        "setuptools >=68.2.2",
        "tomli >=2.0.1"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz",
  "version": "0.16.6",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lief.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "It turns out that many projects need to parse executable formats and they usually re-implement\ntheir own parser. Moreover these parsers are usually bound to one language.\nLIEF attempts to fill this void.\n",
      "dev_url": "https://github.com/lief-project/LIEF",
      "doc_source_url": "https://github.com/lief-project/LIEF/tree/master/doc",
      "doc_url": "https://lief.quarkslab.com/doc/stable/index.html",
      "home": "https://lief.quarkslab.com/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE",
      "summary": "A cross platform library to parse, modify and abstract ELF, PE and MachO formats."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "mbargull",
        "msarahan",
        "xhochy",
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": {
          "ignore_run_exports": [
            "python"
          ],
          "run_exports": [
            "py-lief"
          ]
        },
        "name": "py-lief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "liblief",
            "python",
            "pip",
            "pydantic >=2.4.2",
            "pydantic-core >=2.10.1",
            "scikit-build-core >=0.6.0",
            "setuptools >=68.2.2",
            "setuptools <=70.2",
            "tomli >=2.0.1"
          ],
          "run": [
            "liblief",
            "python"
          ]
        },
        "script": "install-py-lief.bat",
        "test": {
          "commands": [
            "python -c \"import ctypes.util, lief; missing = {name for name in {s.name for s in lief.parse(lief._lief.__file__).imported_functions} - {s.name for s in lief.parse(ctypes.util.find_library('LIEF')).exported_functions} if '4LIEF' in name}; assert not missing, missing\""
          ],
          "imports": [
            "lief"
          ],
          "requires": [
            "cxx_compiler_stub"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "liblief"
          ]
        },
        "name": "liblief",
        "requirements": {
          "build": [
            "ccache",
            "c_stdlib_stub",
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ],
          "host": [
            "nlohmann_json",
            "mbedtls"
          ]
        },
        "script": "install-liblief.bat",
        "test": {
          "commands": [
            "echo on",
            "pushd tests",
            "pushd self",
            "cmake -G \"Ninja\" -DCMAKE_BUILD_TYPE=Debug . || exit 1",
            "ninja || exit 1",
            "popd",
            "pushd macho",
            "findstr has_dynamic_symbol_command output.txt && exit 1 || call;"
          ],
          "files": [
            "tests"
          ],
          "requires": [
            "c_compiler_stub",
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "lief",
      "version": "0.16.6"
    },
    "requirements": {
      "build": [
        "ccache",
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "nlohmann_json",
        "mbedtls"
      ]
    },
    "schema_version": 0,
    "source": [
      {
        "sha256": "20bae0130c98d6b29a8a7853f6a0f270398b277f12c3673164b08563cbd18e0c",
        "url": "https://github.com/lief-project/LIEF/archive/0.16.6.tar.gz"
      }
    ]
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ccache",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "liblief",
        "mbedtls",
        "nlohmann_json",
        "pip",
        "pydantic",
        "pydantic-core",
        "python",
        "scikit-build-core",
        "setuptools",
        "tomli"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "liblief",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  }
}