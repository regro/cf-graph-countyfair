{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "testscenarios",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "testscenarios provides clean dependency injection for python unittest\nstyle tests. This can be used for interface testing (testing many\nimplementations via a single test suite) or for classic dependency\ninjection (provide tests with dependencies externally to the test code\nitself, allowing easy testing in different situations).",
      "dev_url": "https://github.com/testing-cabal/testscenarios",
      "home": "https://github.com/testing-cabal/testscenarios",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "BSD",
      "summary": "Testscenarios, a pyunit extension for dependency injection"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "MementoRC"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "testscenarios",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "pbr >=0.11",
            "pip",
            "setuptools"
          ],
          "run": [
            "pbr >=0.11",
            "python >=3.9",
            "testtools"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "testscenarios",
                "testscenarios.scenarios",
                "testscenarios.testcase",
                "testscenarios.tests"
              ],
              "python_version": "3.9.*"
            }
          },
          {
            "files": {
              "source": [
                "README",
                "doc/"
              ]
            },
            "requirements": {
              "run": [
                "python >=3.9"
              ]
            },
            "script": [
              "mkdir -p ${PREFIX}/__hack__",
              "cp -r doc/ README ${PREFIX}/__hack__",
              "python -m testtools.run testscenarios.test_suite"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "testscenarios",
      "version": "0.5.0"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "pbr >=0.11",
        "pip",
        "setuptools"
      ],
      "run": [
        "pbr >=0.11",
        "python >=3.9",
        "testtools"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "remove-fix-tests.patch"
      ],
      "sha256": "c257cb6b90ea7e6f8fef3158121d430543412c9a87df30b5dde6ec8b9b57a2b6",
      "url": "https://pypi.org/packages/source/t/testscenarios/testscenarios-0.5.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pbr",
        "python",
        "testtools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "testscenarios provides clean dependency injection for python unittest\nstyle tests. This can be used for interface testing (testing many\nimplementations via a single test suite) or for classic dependency\ninjection (provide tests with dependencies externally to the test code\nitself, allowing easy testing in different situations).",
      "dev_url": "https://github.com/testing-cabal/testscenarios",
      "home": "https://github.com/testing-cabal/testscenarios",
      "license": "BSD-3-Clause",
      "license_family": "BSD-3-Clause",
      "license_file": "BSD",
      "summary": "Testscenarios, a pyunit extension for dependency injection"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "MementoRC"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "testscenarios",
        "requirements": {
          "build": [],
          "host": [
            "python 3.9.*",
            "pbr >=0.11",
            "pip",
            "setuptools"
          ],
          "run": [
            "pbr >=0.11",
            "python >=3.9",
            "testtools"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "testscenarios",
                "testscenarios.scenarios",
                "testscenarios.testcase",
                "testscenarios.tests"
              ],
              "python_version": "3.9.*"
            }
          },
          {
            "files": {
              "source": [
                "README",
                "doc/"
              ]
            },
            "requirements": {
              "run": [
                "python >=3.9"
              ]
            },
            "script": [
              "mkdir -p ${PREFIX}/__hack__",
              "cp -r doc/ README ${PREFIX}/__hack__",
              "python -m testtools.run testscenarios.test_suite"
            ]
          }
        ]
      }
    ],
    "package": {
      "name": "testscenarios",
      "version": "0.5.0"
    },
    "requirements": {
      "host": [
        "python 3.9.*",
        "pbr >=0.11",
        "pip",
        "setuptools"
      ],
      "run": [
        "pbr >=0.11",
        "python >=3.9",
        "testtools"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "remove-fix-tests.patch"
      ],
      "sha256": "c257cb6b90ea7e6f8fef3158121d430543412c9a87df30b5dde6ec8b9b57a2b6",
      "url": "https://pypi.org/packages/source/t/testscenarios/testscenarios-0.5.0.tar.gz"
    }
  },
  "name": "testscenarios",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "testscenarios"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/testscenarios.json"
  },
  "raw_meta_yaml": "context:\n  name: testscenarios\n  version: \"0.5.0\"\n\npackage:\n  name: ${{ name|lower }}\n  version: ${{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/t/testscenarios/testscenarios-${{ version }}.tar.gz\n  sha256: c257cb6b90ea7e6f8fef3158121d430543412c9a87df30b5dde6ec8b9b57a2b6\n  patches:\n    - remove-fix-tests.patch\n\nbuild:\n  noarch: python\n  script: python -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python ${{ python_min }}.*\n    - pbr >=0.11\n    - pip\n    - setuptools\n  run:\n    - pbr >=0.11\n    - python >=${{ python_min }}\n    - testtools\n\ntests:\n  - python:\n      imports:\n        - testscenarios\n        - testscenarios.scenarios\n        - testscenarios.testcase\n        - testscenarios.tests\n      pip_check: true\n      python_version: ${{ python_min }}.*\n  - script:\n      - if: unix\n        then:\n          - mkdir -p ${PREFIX}/__hack__\n          - cp -r doc/ README ${PREFIX}/__hack__\n          - python -m testtools.run testscenarios.test_suite\n        else:\n          - echo \"Skip hacky test\"\n          # - mkdir -p %PREFIX%\\__hack__\n          # - cp -r doc README %PREFIX%\\__hack__\n          # - python -m testtools.run testscenarios.test_suite\n    requirements:\n      run:\n        - python >=${{ python_min }}\n    files:\n      source:\n        - README\n        - doc/\n\n\n\nabout:\n  homepage: https://github.com/testing-cabal/testscenarios\n  summary: 'Testscenarios, a pyunit extension for dependency injection'\n  description: |\n    testscenarios provides clean dependency injection for python unittest\n    style tests. This can be used for interface testing (testing many\n    implementations via a single test suite) or for classic dependency\n    injection (provide tests with dependencies externally to the test code\n    itself, allowing easy testing in different situations).\n  license: BSD-3-Clause\n  license_file: BSD\n  repository: https://github.com/testing-cabal/testscenarios\n\nextra:\n  recipe-maintainers:\n    - MementoRC\n",
  "req": {
    "__set__": true,
    "elements": [
      "pbr",
      "pip",
      "python",
      "setuptools",
      "testtools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pbr",
        "python",
        "testtools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pbr >=0.11",
        "pip",
        "python 3.9.*",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pbr >=0.11",
        "python >=3.9",
        "testtools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.9"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/t/testscenarios/testscenarios-0.5.0.tar.gz",
  "version": "0.5.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/testscenarios.json"
  }
}