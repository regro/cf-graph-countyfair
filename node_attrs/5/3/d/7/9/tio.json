{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "d0c18a5489697b1c989c5ff34ce1e36362f48f80",
  "feedstock_hash_ts": 1749067537,
  "feedstock_name": "tio",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "tio is a simple TTY terminal I/O application which features a straightforward\ncommand-line interface to easily connect to TTY devices for basic input/output.",
      "dev_url": "https://github.com/tio/tio",
      "home": "https://tio.github.io/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL-2.0-or-later",
      "license_file": "LICENSE",
      "summary": "Simple TTY terminal I/O application"
    },
    "build": {
      "number": "0",
      "script": "meson setup build -Dbashcompletiondir=$PREFIX/share/bash-completion/completions $MESON_ARGS\nmeson compile -C build --verbose\nmeson install -C build\n"
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "tio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "meson",
            "ninja",
            "pkg-config"
          ],
          "host": [
            "glib",
            "lua"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "tio --version\n# Test that tio emits the correct error output when run with an argument that is not a tty\n# Use `script` to run tio with its stdio attached to a PTY, otherwise it will complain about that instead\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null || test $? -eq 1\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" || test $? -eq 1\nfi\n# Check that the output contains the expected error message\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null 2>&1 | grep \"Error: Not a tty device\"\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" 2>&1 | grep \"Error: Not a tty device\"\nfi\n"
          }
        ],
        "version": "3.9"
      }
    ],
    "package": {
      "name": "tio",
      "version": "3.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "glib",
        "lua"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "06fe0c22e3e75274643c017928fbc85e86589bc1acd515d92f98eecd4bbab11b",
      "url": "https://github.com/tio/tio/releases/download/v3.9/tio-3.9.tar.xz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "glib",
        "lua"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "tio is a simple TTY terminal I/O application which features a straightforward\ncommand-line interface to easily connect to TTY devices for basic input/output.",
      "dev_url": "https://github.com/tio/tio",
      "home": "https://tio.github.io/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL-2.0-or-later",
      "license_file": "LICENSE",
      "summary": "Simple TTY terminal I/O application"
    },
    "build": {
      "number": "0",
      "script": "meson setup build -Dbashcompletiondir=$PREFIX/share/bash-completion/completions $MESON_ARGS\nmeson compile -C build --verbose\nmeson install -C build\n"
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "tio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "meson",
            "ninja",
            "pkg-config"
          ],
          "host": [
            "glib",
            "lua"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "tio --version\n# Test that tio emits the correct error output when run with an argument that is not a tty\n# Use `script` to run tio with its stdio attached to a PTY, otherwise it will complain about that instead\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null || test $? -eq 1\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" || test $? -eq 1\nfi\n# Check that the output contains the expected error message\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null 2>&1 | grep \"Error: Not a tty device\"\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" 2>&1 | grep \"Error: Not a tty device\"\nfi\n"
          }
        ],
        "version": "3.9"
      },
      {
        "build": null,
        "name": "tio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "meson",
            "ninja",
            "pkg-config"
          ],
          "host": [
            "glib",
            "lua"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "tio --version\n# Test that tio emits the correct error output when run with an argument that is not a tty\n# Use `script` to run tio with its stdio attached to a PTY, otherwise it will complain about that instead\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null || test $? -eq 1\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" || test $? -eq 1\nfi\n# Check that the output contains the expected error message\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null 2>&1 | grep \"Error: Not a tty device\"\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" 2>&1 | grep \"Error: Not a tty device\"\nfi\n"
          }
        ],
        "version": "3.9"
      }
    ],
    "package": {
      "name": "tio",
      "version": "3.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "glib",
        "lua"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "06fe0c22e3e75274643c017928fbc85e86589bc1acd515d92f98eecd4bbab11b",
      "url": "https://github.com/tio/tio/releases/download/v3.9/tio-3.9.tar.xz"
    }
  },
  "name": "tio",
  "osx_64_meta_yaml": {
    "about": {
      "description": "tio is a simple TTY terminal I/O application which features a straightforward\ncommand-line interface to easily connect to TTY devices for basic input/output.",
      "dev_url": "https://github.com/tio/tio",
      "home": "https://tio.github.io/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL-2.0-or-later",
      "license_file": "LICENSE",
      "summary": "Simple TTY terminal I/O application"
    },
    "build": {
      "number": "0",
      "script": "meson setup build -Dbashcompletiondir=$PREFIX/share/bash-completion/completions $MESON_ARGS\nmeson compile -C build --verbose\nmeson install -C build\n"
    },
    "extra": {
      "recipe-maintainers": [
        "wolfv"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "tio",
        "requirements": {
          "build": [
            "c_compiler_stub",
            "c_stdlib_stub",
            "meson",
            "ninja",
            "pkg-config"
          ],
          "host": [
            "glib",
            "lua"
          ],
          "run": []
        },
        "tests": [
          {
            "script": "tio --version\n# Test that tio emits the correct error output when run with an argument that is not a tty\n# Use `script` to run tio with its stdio attached to a PTY, otherwise it will complain about that instead\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null || test $? -eq 1\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" || test $? -eq 1\nfi\n# Check that the output contains the expected error message\nif [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n  script -q /dev/null $PREFIX/bin/tio /dev/null 2>&1 | grep \"Error: Not a tty device\"\nelse\n  script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" 2>&1 | grep \"Error: Not a tty device\"\nfi\n"
          }
        ],
        "version": "3.9"
      }
    ],
    "package": {
      "name": "tio",
      "version": "3.9"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ],
      "host": [
        "glib",
        "lua"
      ]
    },
    "schema_version": 1,
    "source": {
      "sha256": "06fe0c22e3e75274643c017928fbc85e86589bc1acd515d92f98eecd4bbab11b",
      "url": "https://github.com/tio/tio/releases/download/v3.9/tio-3.9.tar.xz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "glib",
        "lua"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "tio"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/tio.json"
  },
  "raw_meta_yaml": "context:\n  version: \"3.9\"\n\npackage:\n  name: tio\n  version: ${{ version }}\n\nsource:\n  url: https://github.com/tio/tio/releases/download/v${{ version }}/tio-${{ version }}.tar.xz\n  sha256: 06fe0c22e3e75274643c017928fbc85e86589bc1acd515d92f98eecd4bbab11b\n\nbuild:\n  number: 0\n  script: |\n    meson setup build -Dbashcompletiondir=$PREFIX/share/bash-completion/completions $MESON_ARGS\n    meson compile -C build --verbose\n    meson install -C build\n  skip: win\n\nrequirements:\n  build:\n    - ${{ compiler('c') }}\n    - ${{ stdlib('c') }}\n    - meson\n    - ninja\n    - pkg-config\n  host:\n    - glib\n    - lua\n\ntests:\n  - script: |\n      tio --version\n      # Test that tio emits the correct error output when run with an argument that is not a tty\n      # Use `script` to run tio with its stdio attached to a PTY, otherwise it will complain about that instead\n      if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n        script -q /dev/null $PREFIX/bin/tio /dev/null || test $? -eq 1\n      else\n        script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" || test $? -eq 1\n      fi\n      # Check that the output contains the expected error message\n      if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n        script -q /dev/null $PREFIX/bin/tio /dev/null 2>&1 | grep \"Error: Not a tty device\"\n      else\n        script -q /dev/null -e -c \"$PREFIX/bin/tio /dev/null\" 2>&1 | grep \"Error: Not a tty device\"\n      fi\n\nabout:\n  homepage: https://tio.github.io\n  license: GPL-2.0-or-later\n  license_file: LICENSE\n  summary: Simple TTY terminal I/O application\n  description: |\n    tio is a simple TTY terminal I/O application which features a straightforward\n    command-line interface to easily connect to TTY devices for basic input/output.\n  repository: https://github.com/tio/tio\n\nextra:\n  recipe-maintainers:\n    - wolfv\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "glib",
      "lua",
      "meson",
      "ninja",
      "pkg-config"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "glib",
        "lua"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "meson",
        "ninja",
        "pkg-config"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "glib",
        "lua"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/tio/tio/releases/download/v3.9/tio-3.9.tar.xz",
  "version": "3.9",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/tio.json"
  }
}