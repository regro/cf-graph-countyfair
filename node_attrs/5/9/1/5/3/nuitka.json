{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "nuitka",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "patchelf",
        "ccache",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ccache",
        "libpython-static",
        "ordered-set",
        "patchelf",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "patchelf",
        "ccache",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ccache",
        "libpython-static",
        "ordered-set",
        "patchelf",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "patchelf",
        "ccache",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ccache",
        "libpython-static",
        "ordered-set",
        "patchelf",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "patchelf",
        "ccache",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "name": "nuitka",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "libpython-static",
        "ordered-set",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "libpython-static",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "libpython-static",
        "c-compiler",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "libpython-static",
        "ordered-set",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "nuitka"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/nuitka.json"
  },
  "raw_meta_yaml": "{% set name = \"Nuitka\" %}\n{% set version = \"2.7.14\" %}\n{% set sha256 = \"88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  entry_points:\n    - nuitka = nuitka.__main__:main\n    - nuitka-run = nuitka.__main__:main\n  skip: true  # [python_impl == 'pypy']\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - python\n    - libpython-static  # [not win and not py==37]\n    - setuptools\n    - pip\n  run:\n    - python\n    - libpython-static  # [not win and not py==37]\n    - c-compiler\n    - patchelf  # [linux]\n    - ccache  # [linux]\n    - ordered-set  # [py>=37]\n    # We don't add any most dependencies here since Nuitka vendors all its dependencies\n\ntest:\n  imports:\n    - nuitka\n    - nuitka.build\n    - nuitka.containers\n    - nuitka.finalizations\n    - nuitka.freezer\n    - nuitka.importing\n    - nuitka.nodes\n    - nuitka.optimizations\n    - nuitka.plugins\n    - nuitka.specs\n    - nuitka.tools\n    - nuitka.tree\n    - nuitka.utils\n\n  commands:\n    - nuitka --help\n    # Seems to need at least 1.0.6 to work\n    # - touch Empty.py\n    # - nuitka --show-scons --run Empty.py\n\n\nabout:\n  home: https://nuitka.net\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.txt\n  summary: Python compiler with full language support and CPython compatibility\n  description: |\n    Nuitka is the Python compiler. It is a seamless replacement or extension\n    to the Python interpreter and compiles every construct that CPython 2.6,\n    2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then \n    executes uncompiled code, and compiled code together in an extremely \n    compatible manner.\n\n    You can use all Python library modules or and all extension modules freely.\n    It translates the Python into a C level program that then uses \"libpython\"\n    to execute in the same way as CPython does. All optimization is aimed at\n    avoiding overhead, where it's unnecessary. None is aimed at removing\n    compatibility, although slight improvements will occassionally be done,\n    where not every bug of standard Python is emulated, e.g. more complete\n    error messages are given, but there is a full compatibility mode to\n    disable even that.\n  doc_url: https://nuitka.net/user-documentation/\n  dev_url: https://github.com/Nuitka/Nuitka\n\nextra:\n  recipe-maintainers:\n    - kayhayen\n",
  "req": {
    "__set__": true,
    "elements": [
      "c-compiler",
      "ccache",
      "libpython-static",
      "ordered-set",
      "patchelf",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ccache",
        "libpython-static",
        "ordered-set",
        "patchelf",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "libpython-static",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ccache",
        "libpython-static",
        "ordered-set",
        "patchelf",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz",
  "version": "2.7.14",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/nuitka.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Nuitka is the Python compiler. It is a seamless replacement or extension\nto the Python interpreter and compiles every construct that CPython 2.6,\n2.7, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13 have. It then\nexecutes uncompiled code, and compiled code together in an extremely\ncompatible manner.\n\nYou can use all Python library modules or and all extension modules freely.\nIt translates the Python into a C level program that then uses \"libpython\"\nto execute in the same way as CPython does. All optimization is aimed at\navoiding overhead, where it's unnecessary. None is aimed at removing\ncompatibility, although slight improvements will occassionally be done,\nwhere not every bug of standard Python is emulated, e.g. more complete\nerror messages are given, but there is a full compatibility mode to\ndisable even that.\n",
      "dev_url": "https://github.com/Nuitka/Nuitka",
      "doc_url": "https://nuitka.net/user-documentation/",
      "home": "https://nuitka.net",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Python compiler with full language support and CPython compatibility"
    },
    "build": {
      "entry_points": [
        "nuitka = nuitka.__main__:main",
        "nuitka-run = nuitka.__main__:main"
      ],
      "number": "0",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "kayhayen"
      ]
    },
    "package": {
      "name": "nuitka",
      "version": "2.7.14"
    },
    "requirements": {
      "build": [],
      "host": [
        "python",
        "setuptools",
        "pip"
      ],
      "run": [
        "python",
        "c-compiler",
        "ordered-set"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "Nuitka-2.7.14.tar.gz",
      "sha256": "88233ed175d6d2abb2e1d5fa3c2e28b2fac604764ddc319c614325ff87c77117",
      "url": "https://pypi.org/packages/source/N/Nuitka/Nuitka-2.7.14.tar.gz"
    },
    "test": {
      "commands": [
        "nuitka --help"
      ],
      "imports": [
        "nuitka",
        "nuitka.build",
        "nuitka.containers",
        "nuitka.finalizations",
        "nuitka.freezer",
        "nuitka.importing",
        "nuitka.nodes",
        "nuitka.optimizations",
        "nuitka.plugins",
        "nuitka.specs",
        "nuitka.tools",
        "nuitka.tree",
        "nuitka.utils"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c-compiler",
        "ordered-set",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}