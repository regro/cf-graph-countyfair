{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_linux": {
        "swapfile_size": "10GiB"
      }
    },
    "build_platform": {
      "linux_aarch64": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_build_tool": "rattler-build",
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "f06e9aa4c5fa7a7af48ae6f413c7627479cb4a17",
  "feedstock_hash_ts": 1761150151,
  "feedstock_name": "triton",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
      "dev_url": "https://github.com/triton-lang/triton",
      "doc_url": "https://triton-lang.org/",
      "home": "https://github.com/triton-lang/triton",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Development repository for the Triton language and compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "mgorny"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [],
        "version": "3.5.0"
      }
    ],
    "package": {
      "name": "triton",
      "version": "3.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "cmake",
        "sed"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "zlib",
        "zstd",
        "nlohmann_json",
        "cuda-cupti-dev",
        "cuda-version 12.9.*"
      ],
      "run": [
        "python",
        "setuptools",
        "cuda-nvcc-tools",
        "cuda-cuobjdump",
        "cuda-cudart",
        "cuda-cupti"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
        "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
        "patches/0004-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
        "patches/0005-fixes-definition-of-PY_SSIZE_T_CLEAN-macro.patch",
        "patches/0006-PROTON-Conditionally-include-Proton-tests-8237.patch"
      ],
      "sha256": "a812f387de09277623ccd58af477f2ae9fc6e028ccfadf4b13919af441b59928",
      "url": "https://github.com/triton-lang/triton/releases/download/v3.5.0/triton-3.5.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cupti-dev",
        "cuda-version",
        "nlohmann_json",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "cuda-cuobjdump",
        "cuda-cupti",
        "cuda-nvcc-tools",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
      "dev_url": "https://github.com/triton-lang/triton",
      "doc_url": "https://triton-lang.org/",
      "home": "https://github.com/triton-lang/triton",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Development repository for the Triton language and compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "mgorny"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [],
        "version": "3.5.0"
      }
    ],
    "package": {
      "name": "triton",
      "version": "3.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "cmake",
        "sed"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "zlib",
        "zstd",
        "nlohmann_json",
        "cuda-cupti-dev",
        "cuda-version 12.9.*"
      ],
      "run": [
        "python",
        "setuptools",
        "cuda-nvcc-tools",
        "cuda-cuobjdump",
        "cuda-cudart",
        "cuda-cupti"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
        "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
        "patches/0004-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
        "patches/0005-fixes-definition-of-PY_SSIZE_T_CLEAN-macro.patch",
        "patches/0006-PROTON-Conditionally-include-Proton-tests-8237.patch"
      ],
      "sha256": "a812f387de09277623ccd58af477f2ae9fc6e028ccfadf4b13919af441b59928",
      "url": "https://github.com/triton-lang/triton/releases/download/v3.5.0/triton-3.5.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cupti-dev",
        "cuda-version",
        "nlohmann_json",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "cuda-cuobjdump",
        "cuda-cupti",
        "cuda-nvcc-tools",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\nThe aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.",
      "dev_url": "https://github.com/triton-lang/triton",
      "doc_url": "https://triton-lang.org/",
      "home": "https://github.com/triton-lang/triton",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Development repository for the Triton language and compiler"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "h-vetinari",
        "mgorny"
      ]
    },
    "outputs": [
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [
          {
            "python": {
              "imports": [
                "triton",
                "triton._C.libtriton"
              ]
            }
          },
          {
            "files": {
              "source": [
                "python/test/"
              ]
            },
            "requirements": {
              "run": [
                "pip",
                "pytest",
                "scipy",
                "pytorch * cpu*"
              ]
            },
            "script": "TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm"
          }
        ],
        "version": "3.5.0"
      },
      {
        "build": null,
        "name": "triton",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "cuda_compiler_stub",
            "c_stdlib_stub",
            "ninja",
            "cmake",
            "sed"
          ],
          "host": [
            "python",
            "pybind11",
            "pip",
            "setuptools",
            "zlib",
            "zstd",
            "nlohmann_json",
            "cuda-cupti-dev",
            "cuda-version 12.9.*"
          ],
          "run": [
            "python",
            "setuptools",
            "cuda-nvcc-tools",
            "cuda-cuobjdump",
            "cuda-cudart",
            "cuda-cupti"
          ]
        },
        "tests": [],
        "version": "3.5.0"
      }
    ],
    "package": {
      "name": "triton",
      "version": "3.5.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub",
        "ninja",
        "cmake",
        "sed"
      ],
      "host": [
        "python",
        "pybind11",
        "pip",
        "setuptools",
        "zlib",
        "zstd",
        "nlohmann_json",
        "cuda-cupti-dev",
        "cuda-version 12.9.*"
      ],
      "run": [
        "python",
        "setuptools",
        "cuda-nvcc-tools",
        "cuda-cuobjdump",
        "cuda-cudart",
        "cuda-cupti"
      ]
    },
    "schema_version": 1,
    "source": {
      "patches": [
        "patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch",
        "patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch",
        "patches/0004-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch",
        "patches/0005-fixes-definition-of-PY_SSIZE_T_CLEAN-macro.patch",
        "patches/0006-PROTON-Conditionally-include-Proton-tests-8237.patch"
      ],
      "sha256": "a812f387de09277623ccd58af477f2ae9fc6e028ccfadf4b13919af441b59928",
      "url": "https://github.com/triton-lang/triton/releases/download/v3.5.0/triton-3.5.0.tar.gz"
    }
  },
  "name": "triton",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "triton"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/triton.json"
  },
  "raw_meta_yaml": "context:\n  version: \"3.5.0\"\n  # cmake/llvm-hash.txt\n  llvm_commit: 7d5de3033187c8a3bb4d2e322f5462cdaf49808f\n  build_number: 0\n\npackage:\n  name: triton\n  version: ${{ version }}\n\nsource:\n  - url: https://github.com/triton-lang/triton/releases/download/v${{ version }}/triton-${{ version }}.tar.gz\n    sha256: a812f387de09277623ccd58af477f2ae9fc6e028ccfadf4b13919af441b59928\n    patches:\n      - patches/0001-Remove-Werror-that-cause-false-positive-build-failur.patch\n      # uncomment if we decide to link dynamically again\n      # - patches/0002-Do-not-link-directly-to-LLVM-static-libraries.patch\n      - patches/0003-Use-system-PATH-to-find-tools-in-CONDA_PREFIX.patch\n      # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/317#issuecomment-2585460619\n      - patches/0004-Add-conda-forge-include-dirs-to-list-of-include-dirs.patch\n      # backport (relevant parts of) https://github.com/triton-lang/triton/pull/6928\n      - patches/0005-fixes-definition-of-PY_SSIZE_T_CLEAN-macro.patch\n      # backport https://github.com/triton-lang/triton/pull/8237\n      - patches/0006-PROTON-Conditionally-include-Proton-tests-8237.patch\n  - url: https://github.com/llvm/llvm-project/archive/${{ llvm_commit }}.tar.gz\n    sha256: 917b162698967d9fb8e3aadec09d362282cf03cc254ce4c167e265437ae1507c\n    target_directory: llvm-project\n\nbuild:\n  number: ${{ build_number }}\n  string: cuda${{ cuda_compiler_version | version_to_buildstring }}py${{ python | version_to_buildstring }}h${{ hash }}_${{ build_number }}\n  # TODO: CPU-only support still under development\n  # No success enabling Windows build as of 3.1.0:\n  # https://github.com/conda-forge/triton-feedstock/pull/29#issuecomment-2564371725\n  skip: win or cuda_compiler_version in (\"None\", \"11.8\")\n\nrequirements:\n  build:\n    - ${{ compiler('cxx') }}\n    - ${{ compiler('cuda') }}\n    - ${{ stdlib('c') }}\n    - ninja\n    - cmake\n    - if: win\n      then: m2-sed\n      else: sed\n    - if: build_platform != target_platform\n      then:\n        - python\n        - cross-python_${{ target_platform }}\n  host:\n    - python\n    - pybind11\n    - pip\n    - setuptools\n    - zlib\n    - zstd  # for llvm\n    - nlohmann_json\n    - cuda-cupti-dev\n    - cuda-version ${{ cuda_compiler_version }}.*\n  run:\n    - python\n    - setuptools\n    - cuda-nvcc-tools\n    - cuda-cuobjdump\n    - cuda-cudart\n    - cuda-cupti\n\ntests:\n  # tests skipped on py3.14 until pytorch is rebuilt\n  - if: build_platform == target_platform and match(python, '<3.14')\n    then:\n      - python:\n          imports:\n            - triton\n            - triton._C.libtriton\n          pip_check: true\n      - files:\n          source:\n            - python/test/\n        requirements:\n          run:\n            - pip\n            - pytest\n            - scipy\n            # use cpu* variant to avoid the pin on specific triton version\n            # (also we're doing non-GPU testing)\n            - pytorch * cpu*\n        script:\n          # test suite essentially depends on availability of a physical GPU,\n          # see https://github.com/triton-lang/triton/issues/466;\n          # run a test that does not require a GPU but checks\n          # if triton.compile() works\n          - TRITON_INTERPRET=1 pytest -v python/test/unit/tools/test_aot.py::test_ttgir_to_asm\n\nabout:\n  license: MIT\n  license_file: LICENSE\n  summary: Development repository for the Triton language and compiler\n  description: |\n    This is the development repository of Triton, a language and compiler for writing highly efficient custom Deep-Learning primitives.\n    The aim of Triton is to provide an open-source environment to write fast code at higher productivity than CUDA, but also with higher flexibility than other existing DSLs.\n  homepage: https://github.com/triton-lang/triton\n  repository: https://github.com/triton-lang/triton\n  documentation: https://triton-lang.org/\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n    - mgorny\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cuda-cudart",
      "cuda-cuobjdump",
      "cuda-cupti",
      "cuda-cupti-dev",
      "cuda-nvcc-tools",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "ninja",
      "nlohmann_json",
      "pip",
      "pybind11",
      "python",
      "sed",
      "setuptools",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cupti-dev",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "nlohmann_json",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart",
        "cuda-cuobjdump",
        "cuda-cupti",
        "cuda-nvcc-tools",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "pytorch",
        "scipy"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "ninja",
        "sed"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cupti-dev",
        "cuda-version 12.9.*",
        "nlohmann_json",
        "pip",
        "pybind11",
        "python",
        "setuptools",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cuda-cudart",
        "cuda-cuobjdump",
        "cuda-cupti",
        "cuda-nvcc-tools",
        "python",
        "setuptools"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "pytorch * cpu*",
        "scipy"
      ]
    }
  },
  "url": "https://github.com/triton-lang/triton/releases/download/v3.5.0/triton-3.5.0.tar.gz",
  "version": "3.5.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/triton.json"
  }
}