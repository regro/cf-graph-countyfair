{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "free_disk_space": true,
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\bld\\",
          "MINIFORGE_HOME": "C:\\Miniforge"
        }
      }
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "kaldi",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-driver-dev",
            "cuda-nvrtc-dev",
            "cuda-nvtx-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/lib/libkaldi-cudafeat.so",
            "test ! -f $PREFIX/lib/libkaldi-cudafeat.a",
            "test -f $PREFIX/lib/libkaldi-cudadecoder.so",
            "test ! -f $PREFIX/lib/libkaldi-cudadecoder.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudafeat/lane-desc.h || (echo \"cudafeat/lane-desc.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudadecoder/cuda-fst.h || (echo \"cudadecoder/cuda-fst.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-profiler-api",
        "cuda-version",
        "icu",
        "libblas",
        "libcblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "liblapack",
        "liblapacke",
        "magma",
        "nomkl",
        "openfst",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "magma",
        "openfst"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-driver-dev",
            "cuda-nvrtc-dev",
            "cuda-nvtx-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/lib/libkaldi-cudafeat.so",
            "test ! -f $PREFIX/lib/libkaldi-cudafeat.a",
            "test -f $PREFIX/lib/libkaldi-cudadecoder.so",
            "test ! -f $PREFIX/lib/libkaldi-cudadecoder.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudafeat/lane-desc.h || (echo \"cudafeat/lane-desc.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudadecoder/cuda-fst.h || (echo \"cudadecoder/cuda-fst.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-profiler-api",
        "cuda-version",
        "icu",
        "libblas",
        "libcblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "liblapack",
        "liblapacke",
        "magma",
        "nomkl",
        "openfst",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "magma",
        "openfst"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "icu",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "nomkl",
        "openfst",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "openfst"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-driver-dev",
            "cuda-nvrtc-dev",
            "cuda-nvtx-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/lib/libkaldi-cudafeat.so",
            "test ! -f $PREFIX/lib/libkaldi-cudafeat.a",
            "test -f $PREFIX/lib/libkaldi-cudadecoder.so",
            "test ! -f $PREFIX/lib/libkaldi-cudadecoder.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudafeat/lane-desc.h || (echo \"cudafeat/lane-desc.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudadecoder/cuda-fst.h || (echo \"cudadecoder/cuda-fst.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-driver-dev",
            "cuda-nvrtc-dev",
            "cuda-nvtx-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/lib/libkaldi-cudafeat.so",
            "test ! -f $PREFIX/lib/libkaldi-cudafeat.a",
            "test -f $PREFIX/lib/libkaldi-cudadecoder.so",
            "test ! -f $PREFIX/lib/libkaldi-cudadecoder.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudafeat/lane-desc.h || (echo \"cudafeat/lane-desc.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudadecoder/cuda-fst.h || (echo \"cudadecoder/cuda-fst.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.so",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.so",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.so",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.so",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.so",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.so",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.so",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.so",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.so",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.so",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.so",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.so",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.so",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.so",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.so",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.so",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.so",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.so",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.so",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.so",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.dylib",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.dylib",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.dylib",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.dylib",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.dylib",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.dylib",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.dylib",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.dylib",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.dylib",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.dylib",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.dylib",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.dylib",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.dylib",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.dylib",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.dylib",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.dylib",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.dylib",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.dylib",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "m2-patch"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-nvrtc-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "nvtx-c",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "pthreads-win32",
            "zlib",
            "openfst ==1.8.4",
            "dlfcn-win32"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4",
            "ucrt"
          ]
        },
        "script": "build_kaldi.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-base.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-matrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudamatrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-util.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-feat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-tree.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-gmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-transform.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-fstext.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-hmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-decoder.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet3.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-rnnlm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-chain.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-ivector.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-kws.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudafeat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudafeat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudadecoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudadecoder.lib exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudafeat\\lane-desc.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudadecoder\\cuda-fst.h exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "m2-patch"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "pthreads-win32",
            "zlib",
            "openfst ==1.8.4",
            "dlfcn-win32"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4",
            "ucrt"
          ]
        },
        "script": "build_kaldi.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-base.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-matrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudamatrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-util.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-feat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-tree.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-gmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-transform.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-fstext.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-hmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-decoder.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet3.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-rnnlm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-chain.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-ivector.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-kws.lib exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "name": "kaldi-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.dylib",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.dylib",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.dylib",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.dylib",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.dylib",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.dylib",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.dylib",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.dylib",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.dylib",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "icu",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "nomkl",
        "openfst",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "openfst"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "libtool",
            "automake"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "zlib",
            "openfst ==1.8.4"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4"
          ]
        },
        "script": "build_kaldi.sh",
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libkaldi-base.dylib",
            "test ! -f $PREFIX/lib/libkaldi-base.a",
            "test -f $PREFIX/lib/libkaldi-matrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-matrix.a",
            "test -f $PREFIX/lib/libkaldi-cudamatrix.dylib",
            "test ! -f $PREFIX/lib/libkaldi-cudamatrix.a",
            "test -f $PREFIX/lib/libkaldi-util.dylib",
            "test ! -f $PREFIX/lib/libkaldi-util.a",
            "test -f $PREFIX/lib/libkaldi-feat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-feat.a",
            "test -f $PREFIX/lib/libkaldi-tree.dylib",
            "test ! -f $PREFIX/lib/libkaldi-tree.a",
            "test -f $PREFIX/lib/libkaldi-gmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-gmm.a",
            "test -f $PREFIX/lib/libkaldi-transform.dylib",
            "test ! -f $PREFIX/lib/libkaldi-transform.a",
            "test -f $PREFIX/lib/libkaldi-fstext.dylib",
            "test ! -f $PREFIX/lib/libkaldi-fstext.a",
            "test -f $PREFIX/lib/libkaldi-hmm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-hmm.a",
            "test -f $PREFIX/lib/libkaldi-lm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lm.a",
            "test -f $PREFIX/lib/libkaldi-decoder.dylib",
            "test ! -f $PREFIX/lib/libkaldi-decoder.a",
            "test -f $PREFIX/lib/libkaldi-lat.dylib",
            "test ! -f $PREFIX/lib/libkaldi-lat.a",
            "test -f $PREFIX/lib/libkaldi-nnet.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet.a",
            "test -f $PREFIX/lib/libkaldi-nnet2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet2.a",
            "test -f $PREFIX/lib/libkaldi-nnet3.dylib",
            "test ! -f $PREFIX/lib/libkaldi-nnet3.a",
            "test -f $PREFIX/lib/libkaldi-rnnlm.dylib",
            "test ! -f $PREFIX/lib/libkaldi-rnnlm.a",
            "test -f $PREFIX/lib/libkaldi-chain.dylib",
            "test ! -f $PREFIX/lib/libkaldi-chain.a",
            "test -f $PREFIX/lib/libkaldi-ivector.dylib",
            "test ! -f $PREFIX/lib/libkaldi-ivector.a",
            "test -f $PREFIX/lib/libkaldi-online.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online.a",
            "test -f $PREFIX/lib/libkaldi-online2.dylib",
            "test ! -f $PREFIX/lib/libkaldi-online2.a",
            "test -f $PREFIX/lib/libkaldi-kws.dylib",
            "test ! -f $PREFIX/lib/libkaldi-kws.a",
            "test -f $PREFIX/include/kaldi/base/io-funcs.h || (echo \"base/io-funcs.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/matrix/cblas-wrappers.h || (echo \"matrix/cblas-wrappers.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/cudamatrix/cu-array.h || (echo \"cudamatrix/cu-array.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/util/basic-filebuf.h || (echo \"util/basic-filebuf.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/feat/feature-common.h || (echo \"feat/feature-common.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/tree/build-tree.h || (echo \"tree/build-tree.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/gmm/am-diag-gmm.h || (echo \"gmm/am-diag-gmm.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/transform/cmvn.h || (echo \"transform/cmvn.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/fstext/context-fst.h || (echo \"fstext/context-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/hmm/hmm-utils.h || (echo \"hmm/hmm-utils.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lm/arpa-file-parser.h || (echo \"lm/arpa-file-parser.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/decoder/grammar-fst.h || (echo \"decoder/grammar-fst.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/lat/arctic-weight.h || (echo \"lat/arctic-weight.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet/nnet-activation.h || (echo \"nnet/nnet-activation.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet2/am-nnet.h || (echo \"nnet2/am-nnet.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/nnet3/attention.h || (echo \"nnet3/attention.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/rnnlm/sampler.h || (echo \"rnnlm/sampler.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/chain/chain-datastruct.h || (echo \"chain/chain-datastruct.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/ivector/plda.h || (echo \"ivector/plda.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online/online-decodable.h || (echo \"online/online-decodable.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/online2/online-endpoint.h || (echo \"online2/online-endpoint.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/kws/kaldi-kws.h || (echo \"kws/kaldi-kws.h not found\" && exit 1)",
            "test -f $PREFIX/include/kaldi/itf/options-itf.h || (echo \"itf/options-itf.h not found\" && exit 1)"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "icu",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "nomkl",
        "openfst",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "openfst"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "kaldi"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/kaldi.json"
  },
  "raw_meta_yaml": "{% set version = \"5.5.1172\" %}\n# minor/major is https://github.com/kaldi-asr/kaldi/blob/master/src/.version;\n# patch version is the number of commits since then, see\n# https://github.com/kaldi-asr/kaldi/blob/master/cmake/VersionHelper.cmake\n{% set commit = \"f4007661023b98b8081fd875029f0dee62242fd1\" %}\n{% set cuda_compiler_version = \"None\" if cuda_compiler_version is undefined else cuda_compiler_version %}\n{% set kaldi_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\n{% set kaldi_libraries = [\n    \"base\", \"matrix\", \"cudamatrix\", \"util\", \"feat\", \"tree\", \"gmm\", \"transform\",\n    \"fstext\", \"hmm\", \"lm\", \"decoder\", \"lat\", \"nnet\", \"nnet2\", \"nnet3\",\n    \"rnnlm\", \"chain\", \"ivector\", \"online\", \"online2\", \"kws\"\n] + (cuda_compiler_version is defined and cuda_compiler_version != \"None\") * [\n    \"cudafeat\", \"cudadecoder\"\n]%}\n# This list should be substantially longer, but upstream just globs\n# all *.h files. These are just stand-ins (one header per folder),\n# but relevant headers can be added as needed/desired.\n{% set kaldi_headers = [\n    \"base/io-funcs.h\", \"matrix/cblas-wrappers.h\", \"cudamatrix/cu-array.h\",\n    \"util/basic-filebuf.h\", \"feat/feature-common.h\", \"tree/build-tree.h\",\n    \"gmm/am-diag-gmm.h\", \"transform/cmvn.h\",\n    \"fstext/context-fst.h\", \"hmm/hmm-utils.h\", \"lm/arpa-file-parser.h\",\n    \"decoder/grammar-fst.h\", \"lat/arctic-weight.h\", \"nnet/nnet-activation.h\",\n    \"nnet2/am-nnet.h\", \"nnet3/attention.h\", \"rnnlm/sampler.h\",\n    \"chain/chain-datastruct.h\", \"ivector/plda.h\", \"online/online-decodable.h\",\n    \"online2/online-endpoint.h\", \"kws/kaldi-kws.h\", \"itf/options-itf.h\"\n] + (cuda_compiler_version is defined and cuda_compiler_version != \"None\") * [\n    \"cudafeat/lane-desc.h\", \"cudadecoder/cuda-fst.h\"\n] %}\n\npackage:\n  name: kaldi-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/kaldi-asr/kaldi/archive/{{ commit }}.tar.gz\n  sha256: 139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304\n  patches:\n    - patches/0001-Shared-libraries-on-windows.patch\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n\noutputs:\n  - name: kaldi\n    build:\n      string: cuda{{ cuda_compiler_version | replace('.', '') }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                # [cuda_compiler_version == \"None\"]\n      run_exports:\n        - {{ pin_subpackage('kaldi', max_pin='x.x.x') }}\n    script: build_kaldi.sh   # [not win]\n    script: build_kaldi.bat  # [win]\n    requirements:\n      build:\n        - {{ stdlib('c') }}\n        - {{ compiler('cxx') }}\n        - {{ compiler(\"fortran\") }}\n        - {{ compiler('cuda') }}     # [cuda_compiler_version != \"None\"]\n        - cmake\n        - ninja\n        - m2-patch  # [win]\n        - libtool   # [not win]\n        - automake  # [not win]\n      host:\n        {% if cuda_compiler_version != \"None\" %}\n        - cuda-version {{ cuda_compiler_version }}\n        - cuda-cudart-dev\n        - cuda-driver-dev           # [linux]\n        - cuda-nvrtc-dev\n        - cuda-nvtx-dev             # [linux]\n        - cuda-profiler-api\n        - libcublas-dev\n        - libcufft-dev\n        - libcusolver-dev\n        - libcusparse-dev\n        - libcurand-dev\n        # for nvToolsExt.h\n        - nvtx-c                    # [win]\n        {% endif %}\n        - icu\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - magma                     # [cuda_compiler_version != \"None\"]\n        - nomkl\n        - pthreads-win32            # [win]\n        - zlib\n        - openfst ==1.8.4\n        - dlfcn-win32               # [win]\n      run:\n        - libblas\n        - libcblas\n        - liblapack\n        - liblapacke\n        - magma                     # [cuda_compiler_version != \"None\"]\n        - openfst ==1.8.4\n        - ucrt                      # [win]\n    test:\n      # will also run run_test.py (checking the binaries)\n      commands:\n        # libraries:\n        {% for each_lib in kaldi_libraries %}\n            # shared\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.so               # [linux]\n            - test -f $PREFIX/lib/libkaldi-{{ each_lib }}.dylib            # [osx]\n            - if not exist %LIBRARY_BIN%\\kaldi-{{ each_lib }}.dll exit 1   # [win]\n            - if not exist %LIBRARY_LIB%\\kaldi-{{ each_lib }}.lib exit 1   # [win]\n\n            # absence of static libraries\n            - test ! -f $PREFIX/lib/libkaldi-{{ each_lib }}.a              # [not win]\n        {% endfor %}\n\n        # headers:\n        {% for each_header in kaldi_headers %}\n            - test -f $PREFIX/include/kaldi/{{ each_header }} || (echo \"{{ each_header }} not found\" && exit 1)  # [unix]\n            - if not exist %LIBRARY_INC%\\kaldi\\{{ \"\\\\\".join(each_header.split(\"/\")) }} exit 1                    # [win]\n        {% endfor %}\n\nabout:\n  home: http://kaldi-asr.org/\n  license: Apache-2.0\n  license_file: COPYING\n  summary: 'Kaldi is a toolkit for speech recognition written in C++.'\n  description: |\n    Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n  doc_url: http://kaldi-asr.org/doc\n  dev_url: https://github.com/kaldi-asr/kaldi\n\nextra:\n  recipe-maintainers:\n    - mmcauliffe\n    - mcernak\n    - h-vetinari\n  feedstock-name: kaldi\n",
  "req": {
    "__set__": true,
    "elements": [
      "automake",
      "c_stdlib_stub",
      "cmake",
      "cuda-cudart-dev",
      "cuda-driver-dev",
      "cuda-nvrtc-dev",
      "cuda-nvtx-dev",
      "cuda-profiler-api",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "dlfcn-win32",
      "fortran_compiler_stub",
      "icu",
      "libblas",
      "libcblas",
      "libcublas-dev",
      "libcufft-dev",
      "libcurand-dev",
      "libcusolver-dev",
      "libcusparse-dev",
      "liblapack",
      "liblapacke",
      "libtool",
      "m2-patch",
      "magma",
      "ninja",
      "nomkl",
      "nvtx-c",
      "openfst",
      "pthreads-win32",
      "ucrt",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "m2-patch",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-profiler-api",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "dlfcn-win32",
        "fortran_compiler_stub",
        "icu",
        "libblas",
        "libcblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "liblapack",
        "liblapacke",
        "magma",
        "nomkl",
        "nvtx-c",
        "openfst",
        "pthreads-win32",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "magma",
        "openfst",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "automake",
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libtool",
        "m2-patch",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-driver-dev",
        "cuda-nvrtc-dev",
        "cuda-nvtx-dev",
        "cuda-profiler-api",
        "cuda-version 12.9",
        "dlfcn-win32",
        "icu",
        "libblas",
        "libcblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "liblapack",
        "liblapacke",
        "magma",
        "nomkl",
        "nvtx-c",
        "openfst ==1.8.4",
        "pthreads-win32",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "magma",
        "openfst ==1.8.4",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz",
  "version": "5.5.1172",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/kaldi.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Kaldi is intended for use by speech recognition researchers. It is a framework rather than a library.\n",
      "dev_url": "https://github.com/kaldi-asr/kaldi",
      "doc_url": "http://kaldi-asr.org/doc",
      "home": "http://kaldi-asr.org/",
      "license": "Apache-2.0",
      "license_file": "COPYING",
      "summary": "Kaldi is a toolkit for speech recognition written in C++."
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "feedstock-name": "kaldi",
      "recipe-maintainers": [
        "mmcauliffe",
        "mcernak",
        "h-vetinari"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cuda129h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cuda_compiler_stub",
            "cmake",
            "ninja",
            "m2-patch"
          ],
          "host": [
            "cuda-version 12.9",
            "cuda-cudart-dev",
            "cuda-nvrtc-dev",
            "cuda-profiler-api",
            "libcublas-dev",
            "libcufft-dev",
            "libcusolver-dev",
            "libcusparse-dev",
            "libcurand-dev",
            "nvtx-c",
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "nomkl",
            "pthreads-win32",
            "zlib",
            "openfst ==1.8.4",
            "dlfcn-win32"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "magma",
            "openfst ==1.8.4",
            "ucrt"
          ]
        },
        "script": "build_kaldi.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-base.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-matrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudamatrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-util.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-feat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-tree.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-gmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-transform.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-fstext.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-hmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-decoder.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet3.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-rnnlm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-chain.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-ivector.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-kws.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudafeat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudafeat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudadecoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudadecoder.lib exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudafeat\\lane-desc.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudadecoder\\cuda-fst.h exit 1"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "kaldi"
          ],
          "string": "cpu_h1234567_1"
        },
        "name": "kaldi",
        "requirements": {
          "build": [
            "c_stdlib_stub",
            "cxx_compiler_stub",
            "fortran_compiler_stub",
            "cmake",
            "ninja",
            "m2-patch"
          ],
          "host": [
            "icu",
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "nomkl",
            "pthreads-win32",
            "zlib",
            "openfst ==1.8.4",
            "dlfcn-win32"
          ],
          "run": [
            "libblas",
            "libcblas",
            "liblapack",
            "liblapacke",
            "openfst ==1.8.4",
            "ucrt"
          ]
        },
        "script": "build_kaldi.bat",
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\kaldi-base.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-base.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-matrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-matrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-cudamatrix.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-cudamatrix.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-util.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-util.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-feat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-feat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-tree.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-tree.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-gmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-gmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-transform.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-transform.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-fstext.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-fstext.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-hmm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-hmm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-decoder.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-decoder.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-lat.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-lat.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-nnet3.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-nnet3.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-rnnlm.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-rnnlm.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-chain.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-chain.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-ivector.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-ivector.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-online2.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-online2.lib exit 1",
            "if not exist %LIBRARY_BIN%\\kaldi-kws.dll exit 1",
            "if not exist %LIBRARY_LIB%\\kaldi-kws.lib exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\base\\io-funcs.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\matrix\\cblas-wrappers.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\cudamatrix\\cu-array.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\util\\basic-filebuf.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\feat\\feature-common.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\tree\\build-tree.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\gmm\\am-diag-gmm.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\transform\\cmvn.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\fstext\\context-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\hmm\\hmm-utils.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lm\\arpa-file-parser.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\decoder\\grammar-fst.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\lat\\arctic-weight.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet\\nnet-activation.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet2\\am-nnet.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\nnet3\\attention.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\rnnlm\\sampler.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\chain\\chain-datastruct.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\ivector\\plda.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online\\online-decodable.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\online2\\online-endpoint.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\kws\\kaldi-kws.h exit 1",
            "if not exist %LIBRARY_INC%\\kaldi\\itf\\options-itf.h exit 1"
          ]
        }
      }
    ],
    "package": {
      "name": "kaldi-split",
      "version": "5.5.1172"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Shared-libraries-on-windows.patch"
      ],
      "sha256": "139de58f1abbf727fee65e709a8fcc6d8714d5e5596a7eb15491faef1ac73304",
      "url": "https://github.com/kaldi-asr/kaldi/archive/f4007661023b98b8081fd875029f0dee62242fd1.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "m2-patch",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-cudart-dev",
        "cuda-nvrtc-dev",
        "cuda-profiler-api",
        "cuda-version",
        "dlfcn-win32",
        "icu",
        "libblas",
        "libcblas",
        "libcublas-dev",
        "libcufft-dev",
        "libcurand-dev",
        "libcusolver-dev",
        "libcusparse-dev",
        "liblapack",
        "liblapacke",
        "magma",
        "nomkl",
        "nvtx-c",
        "openfst",
        "pthreads-win32",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "libcblas",
        "liblapack",
        "liblapacke",
        "magma",
        "openfst",
        "ucrt"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}