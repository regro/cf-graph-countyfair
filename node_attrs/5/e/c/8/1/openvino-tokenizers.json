{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "pool": {
          "vmImage": "windows-2019"
        }
      },
      "store_build_artifacts": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "channel_priority": "strict",
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "os_version": {
      "linux_64": "cos7"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "19c95241baf14d02a3a41aadbff6c19092eb648f",
  "feedstock_hash_ts": 1742214120,
  "feedstock_name": "openvino-tokenizers",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\\\openvino_tokenizers%SHLIB_EXT% exit 1",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            ".\\\\build\\\\hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "name": "openvino-tokenizers-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            "./build/hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "make",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "libopenvino-tokenizers",
      "openvino-tokenizers"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openvino-tokenizers.json"
  },
  "raw_meta_yaml": "{% set name = \"openvino-tokenizers\" %}\n{% set version = \"2025.0.0\" %}\n\n# Libraries on Windows are expected to be installed into LIBRARY_PREFIX.\n# See https://docs.conda.io/projects/conda-build/en/latest/user-guide/environment-variables.html.\n# On non-Windows CMAKE_ARGS already contains CMAKE_INSTALL_PREFIX.\n{% if win %}\n    {% set cmake_args = \"%CMAKE_ARGS% -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX%\" %}\n{% else %}\n    {% set cmake_args = \"$CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON\" %}\n    {% if target_platform != build_platform %}\n        {% set cmake_args = cmake_args + \" -DProtobuf_PROTOC_EXECUTABLE=$BUILD_PREFIX/bin/protoc\" %}\n    {% endif %}\n    {% if target_platform == \"osx-64\" %}\n        {% set cmake_args = cmake_args + \" -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY\" %}\n    {% endif %}\n{% endif %}\n{% set cmake_args = cmake_args + \" -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib\" %}\n\npackage:\n  name: {{ name|lower }}-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/{{ version }}.0.tar.gz\n  sha256: 61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173\n  patches:\n    - 001-system-protobuf-abseil.patch\n\nbuild:\n  number: 2\n\noutputs:\n  - name: libopenvino-tokenizers\n    version: {{ version }}\n    about:\n      summary: OpenVINO Tokenizers C++ library\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n    build:\n      script:\n        - cmake {{ cmake_args }} -S . -B build\n        - cmake --build build --parallel --config Release --verbose\n        - cmake --install build --config Release\n      ignore_run_exports_from:\n        - libopenvino-dev\n      run_exports:\n        - {{ pin_subpackage('libopenvino-tokenizers', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n        - cmake\n        - libprotobuf\n      host:\n        - libopenvino-dev ={{ version }}\n        - libprotobuf\n        - libabseil\n        - tbb-devel\n      run:\n        - {{ pin_compatible('libopenvino', max_pin='x.x.x') }}\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - cmake\n        - libopenvino-dev ={{ version }}\n        - ninja\n      files:\n        - samples/\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tokenizers${SHLIB_EXT}  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tokenizers%SHLIB_EXT% exit 1  # [win]\n\n        - cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja\n        - cmake --build build --parallel\n        - ./build/hello_tokenizers  # [unix]\n        - .\\\\build\\\\hello_tokenizers  # [win]\n\n  - name: openvino-tokenizers\n    version: {{ version }}\n    script: install_python.sh\n    about:\n      summary: OpenVINO Tokenizers\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n    build:\n      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}\n      entry_points:\n        - convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer\n    requirements:\n      build:\n        - python                              # [build_platform != target_platform]\n        - cross-python_{{ target_platform }}  # [build_platform != target_platform]\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - {{ stdlib(\"c\") }}\n        - make  # [unix]\n        - cmake\n      host:\n        - pip\n        - python\n        - py-build-cmake\n        - libopenvino-python ={{ version }} # dummy dependency, because pyproject.toml contains 'openvino' dependency\n      run:\n        - {{ pin_subpackage('libopenvino-tokenizers', exact=True) }}\n        - {{ pin_compatible('libopenvino-python', max_pin='x.x.x') }}\n    test:\n      imports:\n        - openvino_tokenizers\n      requires:\n        - pip\n      commands:\n        - pip check\n\nabout:\n  home: https://github.com/openvinotoolkit/openvino_tokenizers\n  summary: 'OpenVINO Tokenizers'\n  description: |\n    OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\n    them as OpenVINO IRs.\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - third-party-programs.txt\n  doc_url: https://github.com/openvinotoolkit/openvino_tokenizers\n  dev_url: https://github.com/openvinotoolkit/openvino_tokenizers\n\nextra:\n  feedstock-name: openvino-tokenizers\n  recipe-maintainers:\n    - ilya-lavrenov\n    - mryzhov\n    - apaniukov\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libabseil",
      "libopenvino",
      "libopenvino-dev",
      "libopenvino-python",
      "libopenvino-tokenizers",
      "libprotobuf",
      "make",
      "pip",
      "py-build-cmake",
      "python",
      "tbb-devel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev =2025.0.0",
        "libopenvino-python =2025.0.0",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev =2025.0.0",
        "ninja",
        "pip"
      ]
    }
  },
  "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz",
  "version": "2025.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openvino-tokenizers.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "OpenVINO tokenizers module allows to convert tokenizers from Hugging Face library and execute\nthem as OpenVINO IRs.\n",
      "dev_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "doc_url": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "home": "https://github.com/openvinotoolkit/openvino_tokenizers",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": [
        "LICENSE",
        "third-party-programs.txt"
      ],
      "summary": "OpenVINO Tokenizers"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "feedstock-name": "openvino-tokenizers",
      "recipe-maintainers": [
        "ilya-lavrenov",
        "mryzhov",
        "apaniukov"
      ]
    },
    "outputs": [
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers C++ library"
        },
        "build": {
          "ignore_run_exports_from": [
            "libopenvino-dev"
          ],
          "run_exports": [
            "libopenvino-tokenizers"
          ],
          "script": [
            "cmake $CMAKE_ARGS -DCMAKE_SKIP_INSTALL_RPATH=ON -DOPENVINO_TOKENIZERS_INSTALL_BINDIR=bin -DOPENVINO_TOKENIZERS_INSTALL_LIBDIR=lib -S . -B build",
            "cmake --build build --parallel --config Release --verbose",
            "cmake --install build --config Release"
          ]
        },
        "name": "libopenvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "libprotobuf"
          ],
          "host": [
            "libopenvino-dev =2025.0.0",
            "libprotobuf",
            "libabseil",
            "tbb-devel"
          ],
          "run": [
            "libopenvino"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_BIN%\\\\openvino_tokenizers%SHLIB_EXT% exit 1",
            "cmake -S samples -B build -DCMAKE_CXX_FLAGS=-D_LIBCPP_DISABLE_AVAILABILITY -DCMAKE_BUILD_TYPE=Release -G Ninja",
            "cmake --build build --parallel",
            ".\\\\build\\\\hello_tokenizers"
          ],
          "files": [
            "samples/"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "libopenvino-dev =2025.0.0",
            "ninja"
          ]
        },
        "version": "2025.0.0"
      },
      {
        "about": {
          "license_file": [
            "LICENSE",
            "third-party-programs.txt"
          ],
          "summary": "OpenVINO Tokenizers"
        },
        "build": {
          "entry_points": [
            "convert_tokenizer = openvino_tokenizers.cli:convert_hf_tokenizer"
          ],
          "string": "py39h1234567_2"
        },
        "name": "openvino-tokenizers",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_compiler_stub",
            "c_stdlib_stub",
            "cmake"
          ],
          "host": [
            "pip",
            "python",
            "py-build-cmake",
            "libopenvino-python =2025.0.0"
          ],
          "run": [
            "libopenvino-tokenizers",
            "libopenvino-python"
          ]
        },
        "script": "install_python.sh",
        "test": {
          "commands": [
            "pip check"
          ],
          "imports": [
            "openvino_tokenizers"
          ],
          "requires": [
            "pip"
          ]
        },
        "version": "2025.0.0"
      }
    ],
    "package": {
      "name": "openvino-tokenizers-split",
      "version": "2025.0.0"
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "001-system-protobuf-abseil.patch"
      ],
      "sha256": "61c9ad45c4df92f1845b29f2215d96a9cccaa6a1d02b519bd8458707c5a7f173",
      "url": "https://github.com/openvinotoolkit/openvino_tokenizers/archive/refs/tags/2025.0.0.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "libprotobuf"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libabseil",
        "libopenvino-dev",
        "libopenvino-python",
        "libprotobuf",
        "pip",
        "py-build-cmake",
        "python",
        "tbb-devel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libopenvino",
        "libopenvino-python",
        "libopenvino-tokenizers"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "libopenvino-dev",
        "ninja",
        "pip"
      ]
    }
  }
}