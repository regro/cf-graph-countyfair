{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "mfem",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "name": "mfem",
  "osx_64_meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "MFEM is a modular parallel C++ library for finite element methods. Its goal is\nto enable high-performance scalable finite element discretization research and\napplication development on a wide variety of platforms, ranging from laptops to\nsupercomputers.\n",
      "dev_url": "https://github.com/mfem/mfem",
      "doc_url": "https://mfem.org/serial-tutorial/",
      "home": "https://mfem.org/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Lightweight, general, scalable C++ library for finite element methods"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "mfem"
      ],
      "string": "mpi_openmpi_h1234567_0"
    },
    "extra": {
      "recipe-maintainers": [
        "matthiasdiener"
      ]
    },
    "package": {
      "name": "mfem",
      "version": "4.8"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ],
      "run": [
        "mpich",
        "hypre",
        "metis",
        "openmpi"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052",
      "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/lib/libmfem${SHLIB_EXT}"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mfem"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mfem.json"
  },
  "raw_meta_yaml": "{% set name = \"mfem\" %}\n{% set version = \"4.8\" %}\n{% set build = 0 %}\n\n{% set mpi = mpi or 'mpich' %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mfem/mfem/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 65472f732d273832c64b2c39460649dd862df674222c71bfa82cf2da76705052\n\nbuild:\n  number: {{ build }}\n  skip: true  # [win]\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\n  run_exports:\n    - {{ pin_subpackage(\"mfem\", max_pin=\"x.x\") }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - make\n    - {{ mpi }}  # [build_platform != target_platform and mpi == \"openmpi\"]\n  host:\n    - {{ mpi }}\n    - hypre\n    - metis\n  run:\n    - {{ mpi }}\n    - hypre\n    - metis\n\ntest:\n  commands:\n    - test -f $PREFIX/lib/libmfem${SHLIB_EXT}\n\nabout:\n  home: https://mfem.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Lightweight, general, scalable C++ library for finite element methods\n  description: |\n    MFEM is a modular parallel C++ library for finite element methods. Its goal is\n    to enable high-performance scalable finite element discretization research and\n    application development on a wide variety of platforms, ranging from laptops to\n    supercomputers.\n  doc_url: https://mfem.org/serial-tutorial/\n  dev_url: https://github.com/mfem/mfem\n\nextra:\n  recipe-maintainers:\n    - matthiasdiener\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "hypre",
      "make",
      "metis",
      "mpich",
      "openmpi"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "hypre",
        "metis",
        "mpich",
        "openmpi"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/mfem/mfem/archive/refs/tags/v4.8.tar.gz",
  "version": "4.8",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mfem.json"
  }
}