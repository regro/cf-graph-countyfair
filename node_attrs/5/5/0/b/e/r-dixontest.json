{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_hash": "3fd7424c78595a764c239822f34c76d3f302077d",
  "feedstock_hash_ts": 1758492404,
  "feedstock_name": "r-dixontest",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('dixonTest')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('dixonTest')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('dixonTest')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('dixonTest')\"",
        "\"%R%\" -e \"library('dixonTest')\""
      ]
    }
  },
  "name": "r-dixontest",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('dixonTest')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-dixontest"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-dixontest.json"
  },
  "raw_meta_yaml": "{% set version = '1.0.4' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-dixontest\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/dixonTest_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/dixonTest/dixonTest_{{ version }}.tar.gz\n  sha256: b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f\n\nbuild:\n  number: 3\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib(\"c\") }}                # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('fortran') }}        # [not win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('dixonTest')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('dixonTest')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=dixonTest\n  license: GPL-3.0-only\n  summary: For outlier detection in small and normally distributed samples the ratio test of\n    Dixon (Q-test) can be used. Density, distribution function, quantile function and\n    random generation for Dixon's ratio statistics are provided as wrapper functions.\n    The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use\n    Gaussian quadrature for a numerical solution.\n  license_family: GPL3\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: dixonTest\n# Type: Package\n# Title: Dixon's Ratio Test for Outlier Detection\n# Version: 1.0.4\n# Date: 2022-08-22\n# Authors@R: c(person(\"Thorsten\", \"Pohlert\", role = c(\"aut\", \"cre\"), email = \"thorsten.pohlert@gmx.de\", comment = c(ORCID = \"0000-0003-3855-3025\")), person(\"George C.\", \"McBane\", role = \"ctb\"))\n# Description: For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution.\n# License: GPL-3\n# ByteCompile: yes\n# NeedsCompilation: yes\n# Encoding: UTF-8\n# Classification/MSC-2010: 62F03, 62E17, 62Q05\n# RoxygenNote: 7.2.0\n# Packaged: 2022-08-22 19:24:55 UTC; thorsten\n# Author: Thorsten Pohlert [aut, cre] (<https://orcid.org/0000-0003-3855-3025>), George C. McBane [ctb]\n# Maintainer: Thorsten Pohlert <thorsten.pohlert@gmx.de>\n# Repository: CRAN\n# Date/Publication: 2022-08-22 19:40:02 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "fortran_compiler_stub",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_fortran_compiler_stub",
      "make",
      "r-base",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
  ],
  "version": "1.0.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-dixontest.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=dixonTest",
      "license": "GPL-3.0-only",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "For outlier detection in small and normally distributed samples the ratio test of Dixon (Q-test) can be used. Density, distribution function, quantile function and random generation for Dixon's ratio statistics are provided as wrapper functions. The core applies McBane's Fortran functions <doi:10.18637/jss.v016.i03> that use Gaussian quadrature for a numerical solution."
    },
    "build": {
      "number": "3",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-dixontest",
      "version": "1.0.4"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b8694e4c4123827f954dffd0a30fb8c7f9cf49d0ec66be4d79eba0f4834ee33f",
      "url": [
        "https://cran.r-project.org/src/contrib/dixonTest_1.0.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/dixonTest/dixonTest_1.0.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('dixonTest')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}