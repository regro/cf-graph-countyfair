{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "651f7127a7b8cd7f8434242f345f926de8ada006",
  "feedstock_hash_ts": 1730878572,
  "feedstock_name": "lda",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/ariddell/lda/tree/master",
      "doc_url": "https://lda.readthedocs.io/en/latest/",
      "home": "https://lda.readthedocs.io/en/latest/",
      "license": "MPL-2.0",
      "license_family": "MOZILLA",
      "license_file": "LICENSE",
      "summary": "lda implements latent Dirichlet allocation (LDA) using collapsed Gibbs sampling. lda is fast and is tested on Linux, OS X, and Windows."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "mxr-conda",
        "mwilson8",
        "rluria14",
        "benhuff"
      ]
    },
    "package": {
      "name": "lda",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "numpy",
        "pbr",
        "setuptools",
        "cython"
      ],
      "run": [
        "python",
        "numpy",
        "pbr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d8d7c0bc42208902a9e34261b76793a84f59e6c69cfd7ca12ce982cdaf7c3020",
      "url": "https://pypi.io/packages/source/l/lda/lda-2.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "lda",
        "lda.datasets",
        "lda.utils"
      ],
      "requires": [
        "pbr",
        "numpy"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/ariddell/lda/tree/master",
      "doc_url": "https://lda.readthedocs.io/en/latest/",
      "home": "https://lda.readthedocs.io/en/latest/",
      "license": "MPL-2.0",
      "license_family": "MOZILLA",
      "license_file": "LICENSE",
      "summary": "lda implements latent Dirichlet allocation (LDA) using collapsed Gibbs sampling. lda is fast and is tested on Linux, OS X, and Windows."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "mxr-conda",
        "mwilson8",
        "rluria14",
        "benhuff"
      ]
    },
    "package": {
      "name": "lda",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "numpy",
        "pbr",
        "setuptools",
        "cython"
      ],
      "run": [
        "python",
        "numpy",
        "pbr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d8d7c0bc42208902a9e34261b76793a84f59e6c69cfd7ca12ce982cdaf7c3020",
      "url": "https://pypi.io/packages/source/l/lda/lda-2.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "lda",
        "lda.datasets",
        "lda.utils"
      ],
      "requires": [
        "pbr",
        "numpy"
      ]
    }
  },
  "name": "lda",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/ariddell/lda/tree/master",
      "doc_url": "https://lda.readthedocs.io/en/latest/",
      "home": "https://lda.readthedocs.io/en/latest/",
      "license": "MPL-2.0",
      "license_family": "MOZILLA",
      "license_file": "LICENSE",
      "summary": "lda implements latent Dirichlet allocation (LDA) using collapsed Gibbs sampling. lda is fast and is tested on Linux, OS X, and Windows."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "mxr-conda",
        "mwilson8",
        "rluria14",
        "benhuff"
      ]
    },
    "package": {
      "name": "lda",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "numpy",
        "pbr",
        "setuptools",
        "cython"
      ],
      "run": [
        "python",
        "numpy",
        "pbr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d8d7c0bc42208902a9e34261b76793a84f59e6c69cfd7ca12ce982cdaf7c3020",
      "url": "https://pypi.io/packages/source/l/lda/lda-2.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "lda",
        "lda.datasets",
        "lda.utils"
      ],
      "requires": [
        "pbr",
        "numpy"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "lda"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/lda.json"
  },
  "raw_meta_yaml": "{% set name = \"lda\" %}\n{% set version = \"2.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d8d7c0bc42208902a9e34261b76793a84f59e6c69cfd7ca12ce982cdaf7c3020\n\nbuild:\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n  skip: true  # [py>=37]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n\n\n  host:\n    - pip\n    - python\n    - numpy\n    - pbr\n    - setuptools\n    - cython\n\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - pbr\n\ntest:\n  imports:\n    - lda\n    - lda.datasets\n    - lda.utils\n\n  requires:\n    - pbr\n    - numpy\n\nabout:\n  home: https://lda.readthedocs.io/en/latest/\n  license: MPL-2.0\n  license_family: MOZILLA\n  license_file: LICENSE\n  summary: lda implements latent Dirichlet allocation (LDA) using collapsed Gibbs sampling. lda is fast and is tested on Linux, OS X, and Windows.\n  doc_url: https://lda.readthedocs.io/en/latest/\n  dev_url: https://github.com/ariddell/lda/tree/master\n\nextra:\n  recipe-maintainers:\n    - mxr-conda\n    - mwilson8\n    - rluria14\n    - benhuff\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cython",
      "numpy",
      "pbr",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cython",
        "numpy",
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "numpy",
        "pbr",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/l/lda/lda-2.0.0.tar.gz",
  "version": "2.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/lda.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/ariddell/lda/tree/master",
      "doc_url": "https://lda.readthedocs.io/en/latest/",
      "home": "https://lda.readthedocs.io/en/latest/",
      "license": "MPL-2.0",
      "license_family": "MOZILLA",
      "license_file": "LICENSE",
      "summary": "lda implements latent Dirichlet allocation (LDA) using collapsed Gibbs sampling. lda is fast and is tested on Linux, OS X, and Windows."
    },
    "build": {
      "number": "1",
      "script": "PYTHON -m pip install . -vv",
      "skip": true
    },
    "extra": {
      "recipe-maintainers": [
        "mxr-conda",
        "mwilson8",
        "rluria14",
        "benhuff"
      ]
    },
    "package": {
      "name": "lda",
      "version": "2.0.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub"
      ],
      "host": [
        "pip",
        "python",
        "numpy",
        "pbr",
        "setuptools",
        "cython"
      ],
      "run": [
        "python",
        "numpy",
        "pbr"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "d8d7c0bc42208902a9e34261b76793a84f59e6c69cfd7ca12ce982cdaf7c3020",
      "url": "https://pypi.io/packages/source/l/lda/lda-2.0.0.tar.gz"
    },
    "test": {
      "imports": [
        "lda",
        "lda.datasets",
        "lda.utils"
      ],
      "requires": [
        "pbr",
        "numpy"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "numpy",
        "pbr",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "numpy",
        "pbr"
      ]
    }
  }
}