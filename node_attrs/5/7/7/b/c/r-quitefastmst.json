{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "error_overlinking": true,
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "48ca8ea03f1679929533304a5a2222ee16fdc7f0",
  "feedstock_hash_ts": 1758012060,
  "feedstock_name": "r-quitefastmst",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gagolews/quitefastmst",
      "home": "https://quitefastmst.gagolewski.com/",
      "license": "AGPL-3.0-only",
      "license_family": "AGPL",
      "license_file": [
        "/lib/R/share/licenses/AGPL-3"
      ],
      "summary": "Functions to compute Euclidean minimum spanning trees using single-, sesqui-, and dual-tree Boruvka algorithms.  Thanks to K-d trees, they are fast in spaces of low intrinsic dimensionality.  Mutual reachability distances (used in the definition of the 'HDBSCAN*' algorithm) are also supported.  The package also features relatively fast fallback minimum spanning tree and nearest-neighbours algorithms for spaces of higher dimensionality.  The 'Python' version of 'quitefastmst' is available via 'PyPI'."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-quitefastmst",
      "version": "0.9.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "libgomp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a252d516f942ea99fb8cb41bc799c1e0c96de6a9473d8d3950c2ad0d4335ded3",
      "url": [
        "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('quitefastmst')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gagolews/quitefastmst",
      "home": "https://quitefastmst.gagolewski.com/",
      "license": "AGPL-3.0-only",
      "license_family": "AGPL",
      "license_file": [
        "/lib/R/share/licenses/AGPL-3"
      ],
      "summary": "Functions to compute Euclidean minimum spanning trees using single-, sesqui-, and dual-tree Boruvka algorithms.  Thanks to K-d trees, they are fast in spaces of low intrinsic dimensionality.  Mutual reachability distances (used in the definition of the 'HDBSCAN*' algorithm) are also supported.  The package also features relatively fast fallback minimum spanning tree and nearest-neighbours algorithms for spaces of higher dimensionality.  The 'Python' version of 'quitefastmst' is available via 'PyPI'."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-quitefastmst",
      "version": "0.9.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "libgomp",
        "llvm-openmp"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "llvm-openmp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a252d516f942ea99fb8cb41bc799c1e0c96de6a9473d8d3950c2ad0d4335ded3",
      "url": [
        "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('quitefastmst')\"",
        "\"%R%\" -e \"library('quitefastmst')\""
      ]
    }
  },
  "name": "r-quitefastmst",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gagolews/quitefastmst",
      "home": "https://quitefastmst.gagolewski.com/",
      "license": "AGPL-3.0-only",
      "license_family": "AGPL",
      "license_file": [
        "/lib/R/share/licenses/AGPL-3"
      ],
      "summary": "Functions to compute Euclidean minimum spanning trees using single-, sesqui-, and dual-tree Boruvka algorithms.  Thanks to K-d trees, they are fast in spaces of low intrinsic dimensionality.  Mutual reachability distances (used in the definition of the 'HDBSCAN*' algorithm) are also supported.  The package also features relatively fast fallback minimum spanning tree and nearest-neighbours algorithms for spaces of higher dimensionality.  The 'Python' version of 'quitefastmst' is available via 'PyPI'."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-quitefastmst",
      "version": "0.9.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "llvm-openmp"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "llvm-openmp"
      ],
      "run": [
        "r-base",
        "r-rcpp",
        "llvm-openmp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a252d516f942ea99fb8cb41bc799c1e0c96de6a9473d8d3950c2ad0d4335ded3",
      "url": [
        "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('quitefastmst')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "llvm-openmp",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-quitefastmst"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-quitefastmst.json"
  },
  "raw_meta_yaml": "{% set version = '0.9.0' %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-quitefastmst\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/quitefastmst_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/quitefastmst/quitefastmst_{{ version }}.tar.gz\n  sha256: a252d516f942ea99fb8cb41bc799c1e0c96de6a9473d8d3950c2ad0d4335ded3\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib('c') }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib('m2w64_c') }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n    - llvm-openmp                  # [osx]\n  host:\n    - r-base\n    - r-rcpp\n    - libgomp                      # [not osx]\n    - llvm-openmp                  # [osx]\n  run:\n    - r-base\n    - r-rcpp\n    - llvm-openmp                  # [osx]\n\ntest:\n  commands:\n    - $R -e \"library('quitefastmst')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('quitefastmst')\\\"\"  # [win]\n\nabout:\n  home: https://quitefastmst.gagolewski.com/\n  dev_url: https://github.com/gagolews/quitefastmst\n  license: AGPL-3.0-only\n  summary: Functions to compute Euclidean minimum spanning trees using single-, sesqui-, and\n    dual-tree Boruvka algorithms.  Thanks to K-d trees, they are fast in spaces of low\n    intrinsic dimensionality.  Mutual reachability distances (used in the definition\n    of the 'HDBSCAN*' algorithm) are also supported.  The package also features relatively\n    fast fallback minimum spanning tree and nearest-neighbours algorithms for spaces\n    of higher dimensionality.  The 'Python' version of 'quitefastmst' is available via\n    'PyPI'.\n  license_family: AGPL\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/AGPL-3'\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "libgomp",
      "llvm-openmp",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "llvm-openmp",
        "openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "llvm-openmp",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "llvm-openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "llvm-openmp",
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz",
    "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz",
    "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz"
  ],
  "version": "0.9.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-quitefastmst.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/gagolews/quitefastmst",
      "home": "https://quitefastmst.gagolewski.com/",
      "license": "AGPL-3.0-only",
      "license_family": "AGPL",
      "license_file": [
        "/lib/R/share/licenses/AGPL-3"
      ],
      "summary": "Functions to compute Euclidean minimum spanning trees using single-, sesqui-, and dual-tree Boruvka algorithms.  Thanks to K-d trees, they are fast in spaces of low intrinsic dimensionality.  Mutual reachability distances (used in the definition of the 'HDBSCAN*' algorithm) are also supported.  The package also features relatively fast fallback minimum spanning tree and nearest-neighbours algorithms for spaces of higher dimensionality.  The 'Python' version of 'quitefastmst' is available via 'PyPI'."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-quitefastmst",
      "version": "0.9.0"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp",
        "libgomp"
      ],
      "run": [
        "r-base",
        "r-rcpp"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "a252d516f942ea99fb8cb41bc799c1e0c96de6a9473d8d3950c2ad0d4335ded3",
      "url": [
        "https://cran.r-project.org/src/contrib/quitefastmst_0.9.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/quitefastmst/quitefastmst_0.9.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('quitefastmst')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libgomp",
        "r-base",
        "r-rcpp"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}