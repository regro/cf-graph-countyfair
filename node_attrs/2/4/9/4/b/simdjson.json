{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64",
      "win_arm64": "win_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "simdjson",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/bin/simdjson.dll",
          "Library/lib/simdjson.lib",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\simdjson.h (exit 1)",
            "if not exist %LIBRARY_BIN%\\simdjson.dll (exit 1)",
            "if not exist %LIBRARY_LIB%\\simdjson.lib (exit 1)",
            "if not exist %LIBRARY_LIB%\\cmake\\simdjson\\simdjson-config.cmake (exit 1)",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/simdjson_static.lib",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/bin/simdjson.dll",
          "Library/lib/simdjson.lib",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\simdjson.h (exit 1)",
            "if not exist %LIBRARY_BIN%\\simdjson.dll (exit 1)",
            "if not exist %LIBRARY_LIB%\\simdjson.lib (exit 1)",
            "if not exist %LIBRARY_LIB%\\cmake\\simdjson\\simdjson-config.cmake (exit 1)",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/simdjson_static.lib",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "name": "simdjson-split",
  "osx_64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/lib/libsimdjson*.dll*",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "test -f \"${PREFIX}/include/simdjson.h\"",
            "test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"",
            "test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/libsimdjson_static.a",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "simdjson",
      "simdjson-static"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64",
    "win_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/simdjson.json"
  },
  "raw_meta_yaml": "{% set version = \"4.0.0\" %}\n{% set sha256 = \"ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57\" %}\n\n# For dispatching between Unix and Windows\n{% set install_prefix = \".\" %}  # [unix]\n{% set install_prefix = \"Library\" %}  # [win]\n{% set shlib_ext = \"so\" %}  # [linux]\n{% set shlib_ext = \"dylib\" %}  # [unix and not linux]\n{% set shlib_ext = \"dll\" %}  # [win]\n\npackage:\n  name: simdjson-split\n  version: {{ version }}\n\nsource:\n  url: https://github.com/simdjson/simdjson/archive/v{{ version }}.tar.gz\n  sha256: \"{{ sha256 }}\"\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n\noutputs:\n  - name: simdjson\n    files:\n      - \"{{ install_prefix }}/include/simdjson*\"\n      - \"{{ install_prefix }}/lib/libsimdjson*.{{ shlib_ext }}*\"  # [unix]\n      - \"{{ install_prefix }}/bin/simdjson.dll\"                   # [win]\n      - \"{{ install_prefix }}/lib/simdjson.lib\"                   # [win]\n      - \"{{ install_prefix }}/lib/pkgconfig/simdjson*\"\n      - \"{{ install_prefix }}/lib/cmake/simdjson/simdjsonTargets*\"\n      - \"{{ install_prefix }}/lib/cmake/simdjson/simdjson-config*\"\n    build:\n      run_exports:\n        - {{ pin_subpackage('simdjson', max_pin='x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ stdlib(\"c\") }}\n        - cmake\n        - ninja\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      files:\n        - test/*\n      commands:\n        - test -f \"${PREFIX}/include/simdjson.h\"                                    # [unix]\n        - test -f \"${PREFIX}/lib/libsimdjson${SHLIB_EXT}\"                           # [unix]\n        - test -f \"${PREFIX}/lib/cmake/simdjson/simdjson-config.cmake\"              # [unix]\n        - if not exist %LIBRARY_INC%\\simdjson.h (exit 1)                            # [win]\n        - if not exist %LIBRARY_BIN%\\simdjson.dll (exit 1)                          # [win]\n        - if not exist %LIBRARY_LIB%\\simdjson.lib (exit 1)                          # [win]\n        - if not exist %LIBRARY_LIB%\\cmake\\simdjson\\simdjson-config.cmake (exit 1)  # [win]\n        # Running a test trying to link to the library\n        - cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson ${CMAKE_ARGS}  # [unix]\n        - cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson %CMAKE_ARGS%   # [win]\n        - cmake --build build/\n        - cmake --build build --target test\n\n  - name: simdjson-static\n    files:\n      - \"{{ install_prefix }}/lib/libsimdjson_static.a\"    # [unix]\n      - \"{{ install_prefix }}/lib/simdjson_static.lib\"     # [win]\n      - \"{{ install_prefix }}/lib/cmake/simdjson/simdjson_staticTargets*\"\n    requirements:\n      run:\n        - {{ pin_subpackage('simdjson', exact='True') }}\n    test:\n      requires:\n        - {{ compiler('cxx') }}\n        - cmake\n        - ninja\n      files:\n        - test/*\n      commands:\n        # Running a test trying to link to the library\n        - cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static ${CMAKE_ARGS}  # [unix]\n        - cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static %CMAKE_ARGS%   # [win]\n        - cmake --build build/\n        - cmake --build build --target test\n\nabout:\n  home: https://simdjson.org/\n  license: Apache-2.0\n  license_file: LICENSE\n  summary: Parsing gigabytes of JSON per second\n\n  description: |\n    JSON is everywhere on the Internet.\n    Servers spend a *lot* of time parsing it. We need a fresh approach.\n    The simdjson library uses commonly available SIMD instructions and\n    microparallel algorithms to parse JSON 2.5x faster than anything else out there.\n  doc_url: https://simdjson.github.io/simdjson/\n  dev_url: https://github.com/simdjson/simdjson/\n\nextra:\n  recipe-maintainers:\n    - JohanMabille\n    - AntoinePrv\n    - elbaro\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "ninja",
      "simdjson"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz",
  "version": "4.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/simdjson.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/bin/simdjson.dll",
          "Library/lib/simdjson.lib",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\simdjson.h (exit 1)",
            "if not exist %LIBRARY_BIN%\\simdjson.dll (exit 1)",
            "if not exist %LIBRARY_LIB%\\simdjson.lib (exit 1)",
            "if not exist %LIBRARY_LIB%\\cmake\\simdjson\\simdjson-config.cmake (exit 1)",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/simdjson_static.lib",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  },
  "win_arm64_meta_yaml": {
    "about": {
      "description": "JSON is everywhere on the Internet.\nServers spend a *lot* of time parsing it. We need a fresh approach.\nThe simdjson library uses commonly available SIMD instructions and\nmicroparallel algorithms to parse JSON 2.5x faster than anything else out there.\n",
      "dev_url": "https://github.com/simdjson/simdjson/",
      "doc_url": "https://simdjson.github.io/simdjson/",
      "home": "https://simdjson.org/",
      "license": "Apache-2.0",
      "license_file": "LICENSE",
      "summary": "Parsing gigabytes of JSON per second"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JohanMabille",
        "AntoinePrv",
        "elbaro"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": [
            "simdjson"
          ]
        },
        "files": [
          "Library/include/simdjson*",
          "Library/bin/simdjson.dll",
          "Library/lib/simdjson.lib",
          "Library/lib/pkgconfig/simdjson*",
          "Library/lib/cmake/simdjson/simdjsonTargets*",
          "Library/lib/cmake/simdjson/simdjson-config*"
        ],
        "name": "simdjson",
        "requirements": {
          "build": [
            "cxx_compiler_stub",
            "c_stdlib_stub",
            "cmake",
            "ninja"
          ]
        },
        "test": {
          "commands": [
            "if not exist %LIBRARY_INC%\\simdjson.h (exit 1)",
            "if not exist %LIBRARY_BIN%\\simdjson.dll (exit 1)",
            "if not exist %LIBRARY_LIB%\\simdjson.lib (exit 1)",
            "if not exist %LIBRARY_LIB%\\cmake\\simdjson\\simdjson-config.cmake (exit 1)",
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      },
      {
        "files": [
          "Library/lib/simdjson_static.lib",
          "Library/lib/cmake/simdjson/simdjson_staticTargets*"
        ],
        "name": "simdjson-static",
        "requirements": {
          "run": [
            "simdjson"
          ]
        },
        "test": {
          "commands": [
            "cmake -G Ninja -S test/ -B build/ -D TEST_TARGET=simdjson_static %CMAKE_ARGS%",
            "cmake --build build/",
            "cmake --build build --target test"
          ],
          "files": [
            "test/*"
          ],
          "requires": [
            "cxx_compiler_stub",
            "cmake",
            "ninja"
          ]
        }
      }
    ],
    "package": {
      "name": "simdjson-split",
      "version": "4.0.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "ad238fc578a4c18d3263250d0efaacadbc6a98f9c7b6be2e70867011b627fa57",
      "url": "https://github.com/simdjson/simdjson/archive/v4.0.0.tar.gz"
    }
  },
  "win_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "simdjson"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    }
  }
}