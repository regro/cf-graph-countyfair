{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "ndvi2gif",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "NDVI2GIF allows researchers to generate multi seasonal composites based on statistical summaries of available Earth Observation indices. The package is not limited to vegetation indices and can work with any compatible remote sensing index available in GEE.\n",
      "dev_url": "https://github.com/Digdgeo/Ndvi2Gif",
      "doc_url": "https://github.com/Digdgeo/Ndvi2Gif",
      "home": "https://github.com/Digdgeo/Ndvi2Gif",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Generate seasonal composites based on statistical summaries of available indices using Google Earth Engine and Geemap"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "Digdgeo"
      ]
    },
    "package": {
      "name": "ndvi2gif",
      "version": "0.4.1"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.8",
        "setuptools"
      ],
      "run": [
        "python >=3.8",
        "numpy <2.0",
        "matplotlib-base",
        "pillow",
        "imageio",
        "tqdm",
        "geemap >=0.29.5",
        "earthengine-api >=0.1.347",
        "geopandas",
        "fiona",
        "ipyleaflet",
        "folium",
        "ipywidgets",
        "deims"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0a62c8f3f99bf0cbedba02b6e5e3b34da72de5d5520218893f61b838e8c5067f",
      "url": "https://pypi.io/packages/source/n/ndvi2gif/ndvi2gif-0.4.1.tar.gz"
    },
    "test": {
      "imports": [
        "ndvi2gif"
      ],
      "requires": [
        "python >=3.8"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "deims",
        "earthengine-api",
        "fiona",
        "folium",
        "geemap",
        "geopandas",
        "imageio",
        "ipyleaflet",
        "ipywidgets",
        "matplotlib-base",
        "numpy",
        "pillow",
        "python",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "NDVI2GIF allows researchers to generate multi seasonal composites based on statistical summaries of available Earth Observation indices. The package is not limited to vegetation indices and can work with any compatible remote sensing index available in GEE.\n",
      "dev_url": "https://github.com/Digdgeo/Ndvi2Gif",
      "doc_url": "https://github.com/Digdgeo/Ndvi2Gif",
      "home": "https://github.com/Digdgeo/Ndvi2Gif",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Generate seasonal composites based on statistical summaries of available indices using Google Earth Engine and Geemap"
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "Digdgeo"
      ]
    },
    "package": {
      "name": "ndvi2gif",
      "version": "0.4.1"
    },
    "requirements": {
      "host": [
        "pip",
        "python >=3.8",
        "setuptools"
      ],
      "run": [
        "python >=3.8",
        "numpy <2.0",
        "matplotlib-base",
        "pillow",
        "imageio",
        "tqdm",
        "geemap >=0.29.5",
        "earthengine-api >=0.1.347",
        "geopandas",
        "fiona",
        "ipyleaflet",
        "folium",
        "ipywidgets",
        "deims"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "0a62c8f3f99bf0cbedba02b6e5e3b34da72de5d5520218893f61b838e8c5067f",
      "url": "https://pypi.io/packages/source/n/ndvi2gif/ndvi2gif-0.4.1.tar.gz"
    },
    "test": {
      "imports": [
        "ndvi2gif"
      ],
      "requires": [
        "python >=3.8"
      ]
    }
  },
  "name": "ndvi2gif",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ndvi2gif"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ndvi2gif.json"
  },
  "raw_meta_yaml": "{% set name = \"ndvi2gif\" %}\n{% set version = \"0.4.1\" %}\n{% set python_min = \"3.8\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 0a62c8f3f99bf0cbedba02b6e5e3b34da72de5d5520218893f61b838e8c5067f\n\nbuild:\n  noarch: python\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >={{ python_min }}\n    - setuptools\n  run:\n    - python >={{ python_min }}\n    - numpy <2.0\n    - matplotlib-base\n    - pillow\n    - imageio\n    - tqdm\n    - geemap >=0.29.5\n    - earthengine-api >=0.1.347\n    - geopandas\n    - fiona\n    - ipyleaflet\n    - folium\n    - ipywidgets\n    - deims\n\ntest:\n  imports:\n    - ndvi2gif\n  requires:\n    - python >={{ python_min }}\n\nabout:\n  home: https://github.com/Digdgeo/Ndvi2Gif\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Generate seasonal composites based on statistical summaries of available indices using Google Earth Engine and Geemap\n  description: |\n    NDVI2GIF allows researchers to generate multi seasonal composites based on statistical summaries of available Earth Observation indices. The package is not limited to vegetation indices and can work with any compatible remote sensing index available in GEE.\n  doc_url: https://github.com/Digdgeo/Ndvi2Gif\n  dev_url: https://github.com/Digdgeo/Ndvi2Gif\n\nextra:\n  recipe-maintainers:\n    - Digdgeo\n",
  "req": {
    "__set__": true,
    "elements": [
      "deims",
      "earthengine-api",
      "fiona",
      "folium",
      "geemap",
      "geopandas",
      "imageio",
      "ipyleaflet",
      "ipywidgets",
      "matplotlib-base",
      "numpy",
      "pillow",
      "pip",
      "python",
      "setuptools",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "deims",
        "earthengine-api",
        "fiona",
        "folium",
        "geemap",
        "geopandas",
        "imageio",
        "ipyleaflet",
        "ipywidgets",
        "matplotlib-base",
        "numpy",
        "pillow",
        "python",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python >=3.8",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "deims",
        "earthengine-api >=0.1.347",
        "fiona",
        "folium",
        "geemap >=0.29.5",
        "geopandas",
        "imageio",
        "ipyleaflet",
        "ipywidgets",
        "matplotlib-base",
        "numpy <2.0",
        "pillow",
        "python >=3.8",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python >=3.8"
      ]
    }
  },
  "url": "https://pypi.io/packages/source/n/ndvi2gif/ndvi2gif-0.4.1.tar.gz",
  "version": "0.4.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ndvi2gif.json"
  }
}