{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "win": "azure"
    }
  },
  "feedstock_name": "r-future.apply",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/HenrikBengtsson/future.apply",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Implementations of apply(), eapply(), lapply(), Map(), mapply(), replicate(), sapply(), tapply(), and vapply() that can be resolved using any future-supported backend, e.g. parallel on the local machine or distributed on a compute cluster.  These future_*apply() functions come with the same pros and cons as the corresponding base-R *apply() functions but with the additional feature of being able to be processed via the future framework."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-future.apply",
      "version": "1.20.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ],
      "run": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f8cee7e7a7d61aaad9cfecc12a38e8673b1899cd789f274224f2d40c3fbfaa1e",
      "url": [
        "https://cran.r-project.org/src/contrib/future.apply_1.20.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/future.apply/future.apply_1.20.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('future.apply')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future",
        "r-globals"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future",
        "r-globals"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/HenrikBengtsson/future.apply",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2"
      ],
      "summary": "Implementations of apply(), eapply(), lapply(), Map(), mapply(), replicate(), sapply(), tapply(), and vapply() that can be resolved using any future-supported backend, e.g. parallel on the local machine or distributed on a compute cluster.  These future_*apply() functions come with the same pros and cons as the corresponding base-R *apply() functions but with the additional feature of being able to be processed via the future framework."
    },
    "build": {
      "noarch": "generic",
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-future.apply",
      "version": "1.20.0"
    },
    "requirements": {
      "build": [],
      "host": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ],
      "run": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "f8cee7e7a7d61aaad9cfecc12a38e8673b1899cd789f274224f2d40c3fbfaa1e",
      "url": [
        "https://cran.r-project.org/src/contrib/future.apply_1.20.0.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/future.apply/future.apply_1.20.0.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('future.apply')\""
      ]
    }
  },
  "name": "r-future.apply",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-future.apply"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-future.apply.json"
  },
  "raw_meta_yaml": "{% set version = \"1.20.0\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-future.apply\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/future.apply_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/future.apply/future.apply_{{ version }}.tar.gz\n  sha256: f8cee7e7a7d61aaad9cfecc12a38e8673b1899cd789f274224f2d40c3fbfaa1e\n\nbuild:\n  number: 1\n  noarch: generic\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-future >=1.28.0\n    - r-globals >=0.16.1\n  run:\n    - r-base\n    - r-future >=1.28.0\n    - r-globals >=0.16.1\n\ntest:\n  commands:\n    - $R -e \"library('future.apply')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('future.apply')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/HenrikBengtsson/future.apply\n  license: GPL-2.0-or-later\n  summary: Implementations of apply(), eapply(), lapply(), Map(), mapply(), replicate(), sapply(), tapply(), and vapply() that can be resolved using any future-supported backend, e.g. parallel on the local machine or distributed on a compute cluster.  These future_*apply() functions come with the same pros and cons as the\n    corresponding base-R *apply() functions but with the additional feature of being able to be processed via the future framework.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: future.apply\n# Version: 1.1.0\n# Title: Apply Function to Elements in Parallel using Futures\n# Depends: R (>= 3.2.0), future (>= 1.10.0)\n# Imports: globals (>= 0.12.4)\n# Suggests: datasets, stats, tools, listenv (>= 0.7.0), R.rsp, markdown\n# VignetteBuilder: R.rsp\n# Authors@R: c(person(\"Henrik\", \"Bengtsson\", role=c(\"aut\", \"cre\", \"cph\"), email = \"henrikb@braju.com\"), person(\"R Core Team\", role = c(\"cph\", \"ctb\")))\n# Description: Implementations of apply(), eapply(), lapply(), Map(), mapply(), replicate(), sapply(), tapply(), and vapply() that can be resolved using any future-supported backend, e.g. parallel on the local machine or distributed on a compute cluster.  These future_*apply() functions come with the same pros and cons as the corresponding base-R *apply() functions but with the additional feature of being able to be processed via the future framework.\n# License: GPL (>= 2)\n# LazyLoad: TRUE\n# URL: https://github.com/HenrikBengtsson/future.apply\n# BugReports: https://github.com/HenrikBengtsson/future.apply/issues\n# RoxygenNote: 6.1.1\n# NeedsCompilation: no\n# Packaged: 2019-01-17 03:43:24 UTC; hb\n# Author: Henrik Bengtsson [aut, cre, cph], R Core Team [cph, ctb]\n# Maintainer: Henrik Bengtsson <henrikb@braju.com>\n# Repository: CRAN\n# Date/Publication: 2019-01-17 05:40:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "r-base",
      "r-future",
      "r-globals"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future",
        "r-globals"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future",
        "r-globals"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-future >=1.28.0",
        "r-globals >=0.16.1"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/future.apply_1.20.0.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/future.apply/future.apply_1.20.0.tar.gz"
  ],
  "version": "1.20.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-future.apply.json"
  }
}