{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "03c2fe56cc61dd35804cdb95344a852fbe42a3aa",
  "feedstock_hash_ts": 1735936170,
  "feedstock_name": "schnetpack",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "SchNetPack aims to provide accessible atomistic neural networks\nthat can be trained and applied out-of-the-box, while still being\nextensible to custom atomistic architectures.\n",
      "dev_url": "https://github.com/atomistic-machine-learning/schnetpack",
      "doc_url": "https://schnetpack.readthedocs.io/",
      "home": "https://github.com/atomistic-machine-learning/schnetpack",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "SchNetPack - Deep Neural Networks for Atomistic Systems"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen",
        "ktschuett"
      ]
    },
    "package": {
      "name": "schnetpack",
      "version": "2.1.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10,<3.11",
        "pip",
        "pytorch >=1.1.0",
        "numpy",
        "ase >=3.18",
        "h5py",
        "tensorboardx",
        "tqdm",
        "pyyaml",
        "sympy <=1.12",
        "matscipy",
        "dirsync",
        "fasteners",
        "pytorch-lightning",
        "omegaconf",
        "torch-ema",
        "hydra-colorlog",
        "hydra-core",
        "rich",
        "black",
        "pre-commit",
        "tensorboard"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8db2224364760ad0a0fc58efe89078df7754e17e21afa88d958f2cce87c95da4",
      "url": "https://pypi.org/packages/source/s/schnetpack/schnetpack-2.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "schnetpack"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase",
        "black",
        "dirsync",
        "fasteners",
        "h5py",
        "hydra-colorlog",
        "hydra-core",
        "matscipy",
        "numpy",
        "omegaconf",
        "pip",
        "pre-commit",
        "python",
        "pytorch",
        "pytorch-lightning",
        "pyyaml",
        "rich",
        "sympy",
        "tensorboard",
        "tensorboardx",
        "torch-ema",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "SchNetPack aims to provide accessible atomistic neural networks\nthat can be trained and applied out-of-the-box, while still being\nextensible to custom atomistic architectures.\n",
      "dev_url": "https://github.com/atomistic-machine-learning/schnetpack",
      "doc_url": "https://schnetpack.readthedocs.io/",
      "home": "https://github.com/atomistic-machine-learning/schnetpack",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "SchNetPack - Deep Neural Networks for Atomistic Systems"
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "jan-janssen",
        "ktschuett"
      ]
    },
    "package": {
      "name": "schnetpack",
      "version": "2.1.1"
    },
    "requirements": {
      "host": [
        "python 3.10",
        "pip",
        "setuptools"
      ],
      "run": [
        "python >=3.10,<3.11",
        "pip",
        "pytorch >=1.1.0",
        "numpy",
        "ase >=3.18",
        "h5py",
        "tensorboardx",
        "tqdm",
        "pyyaml",
        "sympy <=1.12",
        "matscipy",
        "dirsync",
        "fasteners",
        "pytorch-lightning",
        "omegaconf",
        "torch-ema",
        "hydra-colorlog",
        "hydra-core",
        "rich",
        "black",
        "pre-commit",
        "tensorboard"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "8db2224364760ad0a0fc58efe89078df7754e17e21afa88d958f2cce87c95da4",
      "url": "https://pypi.org/packages/source/s/schnetpack/schnetpack-2.1.1.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "schnetpack"
      ],
      "requires": [
        "python 3.10"
      ]
    }
  },
  "name": "schnetpack",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "schnetpack"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/schnetpack.json"
  },
  "raw_meta_yaml": "{% set name = \"schnetpack\" %}\n{% set version = \"2.1.1\" %}\n{% set python_min = \"3.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 8db2224364760ad0a0fc58efe89078df7754e17e21afa88d958f2cce87c95da4\n\nbuild:\n  noarch: python\n  number: 1\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python {{ python_min }}  # pytorch is currently incompatible to dataclasses in 3.11\n    - pip\n    - setuptools\n  run:\n    - python >={{ python_min }},<3.11  # pytorch is currently incompatible to dataclasses in 3.11\n    - pip\n    - pytorch >=1.1.0\n    - numpy\n    - ase >=3.18\n    - h5py\n    - tensorboardx\n    - tqdm\n    - pyyaml\n    - sympy <=1.12\n    - matscipy\n    - dirsync\n    - fasteners\n    - pytorch-lightning\n    - omegaconf\n    - torch-ema\n    - hydra-colorlog\n    - hydra-core\n    - rich\n    - black\n    - pre-commit\n    - tensorboard\n\ntest:\n  requires:\n    - python {{ python_min }}\n  imports:\n    - schnetpack\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/atomistic-machine-learning/schnetpack\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: SchNetPack - Deep Neural Networks for Atomistic Systems\n\n  description: |\n    SchNetPack aims to provide accessible atomistic neural networks \n    that can be trained and applied out-of-the-box, while still being \n    extensible to custom atomistic architectures.\n  doc_url: https://schnetpack.readthedocs.io/\n  dev_url: https://github.com/atomistic-machine-learning/schnetpack\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n    - ktschuett\n",
  "req": {
    "__set__": true,
    "elements": [
      "ase",
      "black",
      "dirsync",
      "fasteners",
      "h5py",
      "hydra-colorlog",
      "hydra-core",
      "matscipy",
      "numpy",
      "omegaconf",
      "pip",
      "pre-commit",
      "python",
      "pytorch",
      "pytorch-lightning",
      "pyyaml",
      "rich",
      "setuptools",
      "sympy",
      "tensorboard",
      "tensorboardx",
      "torch-ema",
      "tqdm"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase",
        "black",
        "dirsync",
        "fasteners",
        "h5py",
        "hydra-colorlog",
        "hydra-core",
        "matscipy",
        "numpy",
        "omegaconf",
        "pip",
        "pre-commit",
        "python",
        "pytorch",
        "pytorch-lightning",
        "pyyaml",
        "rich",
        "sympy",
        "tensorboard",
        "tensorboardx",
        "torch-ema",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "ase >=3.18",
        "black",
        "dirsync",
        "fasteners",
        "h5py",
        "hydra-colorlog",
        "hydra-core",
        "matscipy",
        "numpy",
        "omegaconf",
        "pip",
        "pre-commit",
        "python >=3.10,<3.11",
        "pytorch >=1.1.0",
        "pytorch-lightning",
        "pyyaml",
        "rich",
        "sympy <=1.12",
        "tensorboard",
        "tensorboardx",
        "torch-ema",
        "tqdm"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/s/schnetpack/schnetpack-2.1.1.tar.gz",
  "version": "2.1.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/schnetpack.json"
  }
}