{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "dxfgrabber",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/mozman/dxfgrabber",
      "doc_url": "http://dxfgrabber.readthedocs.io/",
      "home": "https://github.com/mozman/dxfgrabber",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "A Python library to grab information from DXF drawings - all DXF versions supported."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "parente"
      ]
    },
    "package": {
      "name": "dxfgrabber",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "dxfgrabber-1.0.0.zip",
      "sha256": "b8586172fc8a61471d83f8a66b57442061d1690f4c801e03180a9a7128348b7f",
      "url": "https://pypi.io/packages/source/d/dxfgrabber/dxfgrabber-1.0.0.zip"
    },
    "test": {
      "imports": [
        "dxfgrabber"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/mozman/dxfgrabber",
      "doc_url": "http://dxfgrabber.readthedocs.io/",
      "home": "https://github.com/mozman/dxfgrabber",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "A Python library to grab information from DXF drawings - all DXF versions supported."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "parente"
      ]
    },
    "package": {
      "name": "dxfgrabber",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "dxfgrabber-1.0.0.zip",
      "sha256": "b8586172fc8a61471d83f8a66b57442061d1690f4c801e03180a9a7128348b7f",
      "url": "https://pypi.io/packages/source/d/dxfgrabber/dxfgrabber-1.0.0.zip"
    },
    "test": {
      "imports": [
        "dxfgrabber"
      ]
    }
  },
  "name": "dxfgrabber",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/mozman/dxfgrabber",
      "doc_url": "http://dxfgrabber.readthedocs.io/",
      "home": "https://github.com/mozman/dxfgrabber",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "A Python library to grab information from DXF drawings - all DXF versions supported."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "parente"
      ]
    },
    "package": {
      "name": "dxfgrabber",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "dxfgrabber-1.0.0.zip",
      "sha256": "b8586172fc8a61471d83f8a66b57442061d1690f4c801e03180a9a7128348b7f",
      "url": "https://pypi.io/packages/source/d/dxfgrabber/dxfgrabber-1.0.0.zip"
    },
    "test": {
      "imports": [
        "dxfgrabber"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "dxfgrabber"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "win_64",
    "osx_64",
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/dxfgrabber.json"
  },
  "raw_meta_yaml": "{% set name = \"dxfgrabber\" %}\n{% set version = \"1.0.0\" %}\n{% set sha256 = \"b8586172fc8a61471d83f8a66b57442061d1690f4c801e03180a9a7128348b7f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.zip\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - dxfgrabber\n\nabout:\n  home: https://github.com/mozman/dxfgrabber\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: A Python library to grab information from DXF drawings - all DXF versions supported.\n  doc_url: http://dxfgrabber.readthedocs.io/\n  dev_url: https://github.com/mozman/dxfgrabber\n\nextra:\n  recipe-maintainers:\n    - parente\n",
  "req": {
    "__set__": true,
    "elements": [
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://pypi.io/packages/source/d/dxfgrabber/dxfgrabber-1.0.0.zip",
  "version": "1.0.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/dxfgrabber.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/mozman/dxfgrabber",
      "doc_url": "http://dxfgrabber.readthedocs.io/",
      "home": "https://github.com/mozman/dxfgrabber",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "A Python library to grab information from DXF drawings - all DXF versions supported."
    },
    "build": {
      "noarch": "python",
      "number": "0",
      "script": "python setup.py install --single-version-externally-managed --record=record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "parente"
      ]
    },
    "package": {
      "name": "dxfgrabber",
      "version": "1.0.0"
    },
    "requirements": {
      "build": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "source": {
      "fn": "dxfgrabber-1.0.0.zip",
      "sha256": "b8586172fc8a61471d83f8a66b57442061d1690f4c801e03180a9a7128348b7f",
      "url": "https://pypi.io/packages/source/d/dxfgrabber/dxfgrabber-1.0.0.zip"
    },
    "test": {
      "imports": [
        "dxfgrabber"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}