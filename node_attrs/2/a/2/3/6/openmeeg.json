{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "4bcda8a5dfb74d4aef67d43e241e3a73f05152fa",
  "feedstock_hash_ts": 1756840951,
  "feedstock_name": "openmeeg",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://openmeeg.github.io/",
      "license": "CECILL-B",
      "license_file": "LICENSE.txt",
      "summary": "A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "agramfort",
        "larsoner"
      ]
    },
    "package": {
      "name": "openmeeg",
      "version": "2.5.15"
    },
    "requirements": {
      "build": [
        "cmake >=3.19",
        "make",
        "ninja",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "libgomp",
        "swig"
      ],
      "host": [
        "python",
        "numpy",
        "hdf5",
        "openblas",
        "zlib",
        "libmatio",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0"
      ],
      "run": [
        "python",
        "libopenblas",
        "zlib",
        "libmatio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de",
      "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz"
    },
    "test": {
      "commands": [
        "om_minverser --help",
        "python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('2.5.15'), openmeeg.__version__\"",
        "pip check",
        "pip show openmeeg"
      ],
      "imports": [
        "openmeeg"
      ],
      "requires": [
        "pytest",
        "packaging",
        "pip"
      ],
      "source_files": [
        "data"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "make",
        "ninja",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libmatio",
        "libopenblas",
        "python",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://openmeeg.github.io/",
      "license": "CECILL-B",
      "license_file": "LICENSE.txt",
      "summary": "A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "agramfort",
        "larsoner"
      ]
    },
    "package": {
      "name": "openmeeg",
      "version": "2.5.15"
    },
    "requirements": {
      "build": [
        "cmake >=3.19",
        "make",
        "ninja",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "libgomp",
        "swig",
        "llvm-openmp",
        "pthread-stubs"
      ],
      "host": [
        "python",
        "numpy",
        "hdf5",
        "openblas",
        "zlib",
        "libmatio",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0"
      ],
      "run": [
        "python",
        "libopenblas",
        "zlib",
        "libmatio",
        "ucrt"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de",
      "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz"
    },
    "test": {
      "commands": [
        "om_minverser --help",
        "python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('2.5.15'), openmeeg.__version__\"",
        "pip check",
        "pip show openmeeg"
      ],
      "imports": [
        "openmeeg"
      ],
      "requires": [
        "pytest",
        "packaging",
        "pip",
        "pytest <8"
      ],
      "source_files": [
        "data"
      ]
    }
  },
  "name": "openmeeg",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://openmeeg.github.io/",
      "license": "CECILL-B",
      "license_file": "LICENSE.txt",
      "summary": "A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "agramfort",
        "larsoner"
      ]
    },
    "package": {
      "name": "openmeeg",
      "version": "2.5.15"
    },
    "requirements": {
      "build": [
        "cmake >=3.19",
        "make",
        "ninja",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "llvm-openmp",
        "swig"
      ],
      "host": [
        "python",
        "numpy",
        "hdf5",
        "openblas",
        "zlib",
        "libmatio",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0"
      ],
      "run": [
        "python",
        "libopenblas",
        "zlib",
        "libmatio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de",
      "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz"
    },
    "test": {
      "commands": [
        "om_minverser --help",
        "python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('2.5.15'), openmeeg.__version__\"",
        "pip check",
        "pip show openmeeg"
      ],
      "imports": [
        "openmeeg"
      ],
      "requires": [
        "pytest",
        "packaging",
        "pip"
      ],
      "source_files": [
        "data"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "make",
        "ninja",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libmatio",
        "libopenblas",
        "python",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://openmeeg.github.io/",
      "license": "CECILL-B",
      "license_file": "LICENSE.txt",
      "summary": "A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "agramfort",
        "larsoner"
      ]
    },
    "package": {
      "name": "openmeeg",
      "version": "2.5.15"
    },
    "requirements": {
      "build": [
        "cmake >=3.19",
        "make",
        "ninja",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "llvm-openmp",
        "swig"
      ],
      "host": [
        "python",
        "numpy",
        "hdf5",
        "openblas",
        "zlib",
        "libmatio",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0"
      ],
      "run": [
        "python",
        "libopenblas",
        "zlib",
        "libmatio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de",
      "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz"
    },
    "test": {
      "commands": [
        "om_minverser --help",
        "python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('2.5.15'), openmeeg.__version__\"",
        "pip check",
        "pip show openmeeg"
      ],
      "imports": [
        "openmeeg"
      ],
      "requires": [
        "pytest",
        "packaging",
        "pip"
      ],
      "source_files": [
        "data"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "llvm-openmp",
        "make",
        "ninja",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libmatio",
        "libopenblas",
        "python",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "openmeeg"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/openmeeg.json"
  },
  "raw_meta_yaml": "{% set name = \"openmeeg\" %}\n{% set version = \"2.5.15\" %}\n{% set build_number = 2 %}\n{% set sha256 = \"2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/{{ name }}/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\n# https://conda-forge.org/docs/maintainer/knowledge_base.html\nbuild:\n  number: {{ build_number }}\n  # Could NOT find Python3 (missing: Python3_INCLUDE_DIRS ... so skip ppc64le for now\n  skip: true  # [py<39 or ppc64le or aarch64]]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - cmake >=3.19\n    - make\n    - ninja  # [not win]\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}  # just for OpenBLAS to link properly\n    - {{ stdlib(\"c\") }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux]\n    - pthread-stubs  # [win]\n    - swig\n\n  host:\n    - python\n    - numpy\n    - hdf5\n    - openblas\n    - zlib\n    - libmatio\n    - setuptools >=68.0.0\n    - setuptools_scm >=6.2\n    - wheel >=0.37.0\n\n  run:\n    - python\n    - ucrt  # [win]\n    - libopenblas\n    - zlib\n    - libmatio\n\ntest:\n  imports:\n    - openmeeg\n  requires:\n    - pytest  # [not win]\n    - pytest <8  # [win]\n    - packaging\n    - pip\n  source_files:\n    - data\n  commands:\n    - om_minverser --help\n    - python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('{{ version }}'), openmeeg.__version__\"\n    - pip check\n    - pip show openmeeg\n\nabout:\n  home: https://openmeeg.github.io/\n  license: CECILL-B\n  license_file: LICENSE.txt\n  summary: >\n    A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n\nextra:\n  recipe-maintainers:\n    - agramfort\n    - larsoner\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "hdf5",
      "libgomp",
      "libmatio",
      "libopenblas",
      "llvm-openmp",
      "make",
      "ninja",
      "numpy",
      "openblas",
      "pthread-stubs",
      "python",
      "setuptools",
      "setuptools_scm",
      "swig",
      "ucrt",
      "wheel",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "ninja",
        "pthread-stubs",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "openmp",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "ctng-compilers",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libmatio",
        "libopenblas",
        "openmp",
        "python",
        "ucrt",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake >=3.19",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libgomp",
        "llvm-openmp",
        "make",
        "ninja",
        "pthread-stubs",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "python",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libmatio",
        "libopenblas",
        "python",
        "ucrt",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest",
        "pytest <8"
      ]
    }
  },
  "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz",
  "version": "2.5.15",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/openmeeg.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://openmeeg.github.io/",
      "license": "CECILL-B",
      "license_file": "LICENSE.txt",
      "summary": "A C++ package for solving the forward problems of electroencephalography (EEG) and magnetoencephalography (MEG).\n"
    },
    "build": {
      "number": "2"
    },
    "extra": {
      "recipe-maintainers": [
        "agramfort",
        "larsoner"
      ]
    },
    "package": {
      "name": "openmeeg",
      "version": "2.5.15"
    },
    "requirements": {
      "build": [
        "cmake >=3.19",
        "make",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub",
        "pthread-stubs",
        "swig"
      ],
      "host": [
        "python",
        "numpy",
        "hdf5",
        "openblas",
        "zlib",
        "libmatio",
        "setuptools >=68.0.0",
        "setuptools_scm >=6.2",
        "wheel >=0.37.0"
      ],
      "run": [
        "python",
        "ucrt",
        "libopenblas",
        "zlib",
        "libmatio"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "2fc2cb0e8beb72650846f2713d6ebe85939890337777a2bbae17adf9e57a03de",
      "url": "https://github.com/openmeeg/openmeeg/archive/2.5.15.tar.gz"
    },
    "test": {
      "commands": [
        "om_minverser --help",
        "python -c \"import faulthandler; faulthandler.enable(); import warnings; warnings.simplefilter('error'); from packaging.version import parse; import openmeeg; print(openmeeg.__version__); assert parse(openmeeg.__version__) == parse('2.5.15'), openmeeg.__version__\"",
        "pip check",
        "pip show openmeeg"
      ],
      "imports": [
        "openmeeg"
      ],
      "requires": [
        "pytest <8",
        "packaging",
        "pip"
      ],
      "source_files": [
        "data"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make",
        "pthread-stubs",
        "swig"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "hdf5",
        "libmatio",
        "numpy",
        "openblas",
        "python",
        "setuptools",
        "setuptools_scm",
        "wheel",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libmatio",
        "libopenblas",
        "python",
        "ucrt",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "packaging",
        "pip",
        "pytest"
      ]
    }
  }
}