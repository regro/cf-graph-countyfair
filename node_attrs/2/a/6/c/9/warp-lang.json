{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "azure": {
      "settings_win": {
        "variables": {
          "CONDA_BLD_PATH": "C:\\\\bld\\\\",
          "MINIFORGE_HOME": "C:\\\\Miniforge",
          "SET_PAGEFILE": "True"
        }
      }
    },
    "bot": {
      "inspection": "update-grayskull"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "warp-lang",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/NVIDIA/warp",
      "license": "Apache-2.0 AND MIT AND CC0-1.0 AND LicenseRef-NvidiaProprietary",
      "license_file": [
        "LICENSE.md",
        "licenses/appdirs-LICENSE.txt",
        "licenses/fp16-LICENSE.txt",
        "licenses/Gaia-LICENSE.txt",
        "licenses/llvm-LICENSE.txt",
        "licenses/moller-LICENSE.txt",
        "licenses/nanovdb-LICENSE.txt",
        "licenses/svd-LICENSE.txt",
        "licenses/unittest_parallel-LICENSE.txt",
        "licenses/usd-LICENSE.txt"
      ],
      "summary": "A Python framework for high-performance simulation and graphics programming."
    },
    "build": {
      "number": "1",
      "string": "cpu313_h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "shi-eric",
        "flferretti",
        "traversaro"
      ]
    },
    "package": {
      "name": "warp-lang",
      "version": "1.8.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-nvrtc-dev",
        "cuda-nvrtc-static",
        "libnvjitlink-dev",
        "libnvjitlink-static",
        "libmathdx-dev",
        "libmathdx-static",
        "ninja"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "gitpython",
        "numpy"
      ],
      "run": [
        "__cuda",
        "jax",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "01-find_g++_env.patch",
        "02-add_macro_def_build.patch",
        "03-install_deps_llvm_conda.patch",
        "04-find_nvcc_env.patch"
      ],
      "sha256": "de9529505cc5e105f546f556ae7550933903a1fd81fbf9ed4fb222d43b20d187",
      "url": "https://github.com/NVIDIA/warp/archive/refs/tags/v1.8.0.zip"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m warp.tests -s autodetect -p 'test_c*.py' -p 'test_m*.py' -p 'test_s*.py'",
        "python -c \"import warp; warp.init(); exit(not warp.context.runtime.core.is_mathdx_enabled())\""
      ],
      "imports": [
        "warp"
      ],
      "requires": [
        "python",
        "pip",
        "pytest"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-nvrtc-dev",
        "cuda-nvrtc-static",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libmathdx-dev",
        "libmathdx-static",
        "libnvjitlink-dev",
        "libnvjitlink-static",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version",
        "gitpython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "jax",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/NVIDIA/warp",
      "license": "Apache-2.0 AND MIT AND CC0-1.0 AND LicenseRef-NvidiaProprietary",
      "license_file": [
        "LICENSE.md",
        "licenses/appdirs-LICENSE.txt",
        "licenses/fp16-LICENSE.txt",
        "licenses/Gaia-LICENSE.txt",
        "licenses/llvm-LICENSE.txt",
        "licenses/moller-LICENSE.txt",
        "licenses/nanovdb-LICENSE.txt",
        "licenses/svd-LICENSE.txt",
        "licenses/unittest_parallel-LICENSE.txt",
        "licenses/usd-LICENSE.txt"
      ],
      "summary": "A Python framework for high-performance simulation and graphics programming."
    },
    "build": {
      "number": "1",
      "string": "cpu313_h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "shi-eric",
        "flferretti",
        "traversaro"
      ]
    },
    "package": {
      "name": "warp-lang",
      "version": "1.8.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cuda_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-nvrtc-dev",
        "cuda-nvrtc-static",
        "libnvjitlink-dev",
        "libnvjitlink-static",
        "libmathdx-dev",
        "libmathdx-static",
        "ninja"
      ],
      "host": [
        "cuda-version 12.9",
        "python",
        "pip",
        "setuptools",
        "gitpython",
        "numpy"
      ],
      "run": [
        "__cuda",
        "jax",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "01-find_g++_env.patch",
        "02-add_macro_def_build.patch",
        "03-install_deps_llvm_conda.patch",
        "04-find_nvcc_env.patch"
      ],
      "sha256": "de9529505cc5e105f546f556ae7550933903a1fd81fbf9ed4fb222d43b20d187",
      "url": "https://github.com/NVIDIA/warp/archive/refs/tags/v1.8.0.zip"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m warp.tests -s autodetect -p 'test_c*.py' -p 'test_m*.py' -p 'test_s*.py'",
        "python -c \"import warp; warp.init(); exit(not warp.context.runtime.core.is_mathdx_enabled())\""
      ],
      "imports": [
        "warp"
      ],
      "requires": [
        "python",
        "pip",
        "pytest"
      ]
    }
  },
  "name": "warp-lang",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/NVIDIA/warp",
      "license": "Apache-2.0 AND MIT AND CC0-1.0 AND LicenseRef-NvidiaProprietary",
      "license_file": [
        "LICENSE.md",
        "licenses/appdirs-LICENSE.txt",
        "licenses/fp16-LICENSE.txt",
        "licenses/Gaia-LICENSE.txt",
        "licenses/llvm-LICENSE.txt",
        "licenses/moller-LICENSE.txt",
        "licenses/nanovdb-LICENSE.txt",
        "licenses/svd-LICENSE.txt",
        "licenses/unittest_parallel-LICENSE.txt",
        "licenses/usd-LICENSE.txt"
      ],
      "summary": "A Python framework for high-performance simulation and graphics programming."
    },
    "build": {
      "number": "1",
      "string": "cpu313_h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "shi-eric",
        "flferretti",
        "traversaro"
      ]
    },
    "package": {
      "name": "warp-lang",
      "version": "1.8.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "gitpython",
        "numpy"
      ],
      "run": [
        "jax",
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "01-find_g++_env.patch",
        "02-add_macro_def_build.patch",
        "03-install_deps_llvm_conda.patch",
        "04-find_nvcc_env.patch"
      ],
      "sha256": "de9529505cc5e105f546f556ae7550933903a1fd81fbf9ed4fb222d43b20d187",
      "url": "https://github.com/NVIDIA/warp/archive/refs/tags/v1.8.0.zip"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m warp.tests -s autodetect -p 'test_c*.py' -p 'test_m*.py' -p 'test_s*.py'"
      ],
      "imports": [
        "warp"
      ],
      "requires": [
        "python",
        "pip",
        "pytest"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gitpython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "jax",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "warp-lang"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/warp-lang.json"
  },
  "raw_meta_yaml": "{% set name = \"warp-lang\" %}\n{% set version = \"1.8.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/NVIDIA/warp/archive/refs/tags/v{{ version }}.zip\n  sha256: de9529505cc5e105f546f556ae7550933903a1fd81fbf9ed4fb222d43b20d187\n  patches:\n    - 01-find_g++_env.patch\n    - 02-add_macro_def_build.patch\n    - 03-install_deps_llvm_conda.patch\n    - 04-find_nvcc_env.patch\n\nbuild:\n  string: cpu{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  number: 1\n  skip: true  # [cuda_compiler_version == \"11.2\" or (cuda_compiler_version != \"None\" and win)]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - cuda-nvrtc-dev             # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - cuda-nvrtc-static          # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libnvjitlink-dev           # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libnvjitlink-static        # [(cuda_compiler_version or \"\").startswith(\"12\")]\n    - libmathdx-dev              # [(cuda_compiler_version or \"\").startswith(\"12\") and linux]\n    - libmathdx-static           # [(cuda_compiler_version or \"\").startswith(\"12\") and linux]\n    - ninja\n  host:\n    - cuda-cudart-dev    # [(cuda_compiler_version or \"\").startswith(\"12\") and win]\n    - cuda-nvcc          # [(cuda_compiler_version or \"\").startswith(\"12\") and win]\n    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != \"None\"]\n    - python\n    - pip\n    - setuptools\n    - gitpython\n    - numpy\n  run:\n    - __cuda   # [cuda_compiler_version != \"None\"]\n    - jax      # [not win]\n    - python\n\ntest:\n  imports:\n    - warp\n  commands:\n    - pip check\n    # Testing main functionalities to avoid OOM errors\n    - python -m warp.tests -s autodetect -p 'test_c*.py' -p 'test_m*.py' -p 'test_s*.py'\n    - python -c \"import warp; warp.init(); exit(not warp.context.runtime.core.is_mathdx_enabled())\"  # [(cuda_compiler_version or \"\").startswith(\"12\") and linux]\n  requires:\n    - python\n    - pip\n    - pytest\n\nabout:\n  home: https://github.com/NVIDIA/warp\n  summary: 'A Python framework for high-performance simulation and graphics programming.'\n  license: Apache-2.0 AND MIT AND CC0-1.0 AND LicenseRef-NvidiaProprietary\n  license_file:\n    - LICENSE.md\n    - licenses/appdirs-LICENSE.txt\n    - licenses/fp16-LICENSE.txt\n    - licenses/Gaia-LICENSE.txt\n    - licenses/llvm-LICENSE.txt\n    - licenses/moller-LICENSE.txt\n    - licenses/nanovdb-LICENSE.txt\n    - licenses/svd-LICENSE.txt\n    - licenses/unittest_parallel-LICENSE.txt\n    - licenses/usd-LICENSE.txt\n\nextra:\n  recipe-maintainers:\n    - shi-eric\n    - flferretti\n    - traversaro\n",
  "req": {
    "__set__": true,
    "elements": [
      "__cuda",
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cuda-nvrtc-dev",
      "cuda-nvrtc-static",
      "cuda-version",
      "cuda_compiler_stub",
      "cxx_compiler_stub",
      "gitpython",
      "jax",
      "libmathdx-dev",
      "libmathdx-static",
      "libnvjitlink-dev",
      "libnvjitlink-static",
      "ninja",
      "numpy",
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-nvrtc-dev",
        "cuda-nvrtc-static",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libmathdx-dev",
        "libmathdx-static",
        "libnvjitlink-dev",
        "libnvjitlink-static",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda-version",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "gitpython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "jax",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cuda-nvrtc-dev",
        "cuda-nvrtc-static",
        "cuda_compiler_stub",
        "cxx_compiler_stub",
        "libmathdx-dev",
        "libmathdx-static",
        "libnvjitlink-dev",
        "libnvjitlink-static",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cuda-version 12.9",
        "gitpython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__cuda",
        "jax",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "python"
      ]
    }
  },
  "url": "https://github.com/NVIDIA/warp/archive/refs/tags/v1.8.0.zip",
  "version": "1.8.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/warp-lang.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/NVIDIA/warp",
      "license": "Apache-2.0 AND MIT AND CC0-1.0 AND LicenseRef-NvidiaProprietary",
      "license_file": [
        "LICENSE.md",
        "licenses/appdirs-LICENSE.txt",
        "licenses/fp16-LICENSE.txt",
        "licenses/Gaia-LICENSE.txt",
        "licenses/llvm-LICENSE.txt",
        "licenses/moller-LICENSE.txt",
        "licenses/nanovdb-LICENSE.txt",
        "licenses/svd-LICENSE.txt",
        "licenses/unittest_parallel-LICENSE.txt",
        "licenses/usd-LICENSE.txt"
      ],
      "summary": "A Python framework for high-performance simulation and graphics programming."
    },
    "build": {
      "number": "1",
      "string": "cpu313_h1234567_1"
    },
    "extra": {
      "recipe-maintainers": [
        "shi-eric",
        "flferretti",
        "traversaro"
      ]
    },
    "package": {
      "name": "warp-lang",
      "version": "1.8.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "python",
        "pip",
        "setuptools",
        "gitpython",
        "numpy"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "01-find_g++_env.patch",
        "02-add_macro_def_build.patch",
        "03-install_deps_llvm_conda.patch",
        "04-find_nvcc_env.patch"
      ],
      "sha256": "de9529505cc5e105f546f556ae7550933903a1fd81fbf9ed4fb222d43b20d187",
      "url": "https://github.com/NVIDIA/warp/archive/refs/tags/v1.8.0.zip"
    },
    "test": {
      "commands": [
        "pip check",
        "python -m warp.tests -s autodetect -p 'test_c*.py' -p 'test_m*.py' -p 'test_s*.py'"
      ],
      "imports": [
        "warp"
      ],
      "requires": [
        "python",
        "pip",
        "pytest"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "gitpython",
        "numpy",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "pytest",
        "python"
      ]
    }
  }
}