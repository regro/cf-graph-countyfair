{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "793396c7655f508633153b071a896b5ee2552c21",
  "feedstock_hash_ts": 1756387873,
  "feedstock_name": "medatetime",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nmedatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. medatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to medatetime. All datetime objects created by medatetime are timezone-aware. The timezones that medatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
      "dev_url": "https://github.com/timkpaine/medatetime",
      "doc_url": "https://github.com/timkpaine/medatetime",
      "home": "https://github.com/timkpaine/medatetime",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "/LICENSE",
      "summary": "Fast RFC3339 compliant Python date-time library, fork of udatetime"
    },
    "build": {
      "number": "2",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine"
      ]
    },
    "package": {
      "name": "medatetime",
      "version": "0.0.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "medatetime-0.0.17.tar.gz",
      "sha256": "d8eecb777275939be830428c3bc3f582b4d91e30f4be8f03049714bb23e9e342",
      "url": "https://pypi.org/packages/source/m/medatetime/medatetime-0.0.17.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "medatetime",
        "medatetime.rfc3339"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nmedatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. medatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to medatetime. All datetime objects created by medatetime are timezone-aware. The timezones that medatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
      "dev_url": "https://github.com/timkpaine/medatetime",
      "doc_url": "https://github.com/timkpaine/medatetime",
      "home": "https://github.com/timkpaine/medatetime",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "/LICENSE",
      "summary": "Fast RFC3339 compliant Python date-time library, fork of udatetime"
    },
    "build": {
      "number": "2",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine"
      ]
    },
    "package": {
      "name": "medatetime",
      "version": "0.0.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "medatetime-0.0.17.tar.gz",
      "sha256": "d8eecb777275939be830428c3bc3f582b4d91e30f4be8f03049714bb23e9e342",
      "url": "https://pypi.org/packages/source/m/medatetime/medatetime-0.0.17.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "medatetime",
        "medatetime.rfc3339"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "medatetime",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nmedatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. medatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to medatetime. All datetime objects created by medatetime are timezone-aware. The timezones that medatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
      "dev_url": "https://github.com/timkpaine/medatetime",
      "doc_url": "https://github.com/timkpaine/medatetime",
      "home": "https://github.com/timkpaine/medatetime",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "/LICENSE",
      "summary": "Fast RFC3339 compliant Python date-time library, fork of udatetime"
    },
    "build": {
      "number": "2",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine"
      ]
    },
    "package": {
      "name": "medatetime",
      "version": "0.0.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "medatetime-0.0.17.tar.gz",
      "sha256": "d8eecb777275939be830428c3bc3f582b4d91e30f4be8f03049714bb23e9e342",
      "url": "https://pypi.org/packages/source/m/medatetime/medatetime-0.0.17.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "medatetime",
        "medatetime.rfc3339"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\nmedatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. medatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to medatetime. All datetime objects created by medatetime are timezone-aware. The timezones that medatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n",
      "dev_url": "https://github.com/timkpaine/medatetime",
      "doc_url": "https://github.com/timkpaine/medatetime",
      "home": "https://github.com/timkpaine/medatetime",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "/LICENSE",
      "summary": "Fast RFC3339 compliant Python date-time library, fork of udatetime"
    },
    "build": {
      "number": "2",
      "script": "PYTHON setup.py install --single-version-externally-managed --record record.txt"
    },
    "extra": {
      "recipe-maintainers": [
        "timkpaine"
      ]
    },
    "package": {
      "name": "medatetime",
      "version": "0.0.17"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python",
        "setuptools"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "medatetime-0.0.17.tar.gz",
      "sha256": "d8eecb777275939be830428c3bc3f582b4d91e30f4be8f03049714bb23e9e342",
      "url": "https://pypi.org/packages/source/m/medatetime/medatetime-0.0.17.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "medatetime",
        "medatetime.rfc3339"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "medatetime"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/medatetime.json"
  },
  "raw_meta_yaml": "{% set name = \"medatetime\" %}\n{% set version = \"0.0.17\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: d8eecb777275939be830428c3bc3f582b4d91e30f4be8f03049714bb23e9e342\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} setup.py install --single-version-externally-managed --record record.txt\n  # medatetime only supports posix platforms so we'll skip building for windows\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib('c') }}\n  host:\n    - python\n    - setuptools\n    # medatetime requires gcc and python dev tools so we require the toolchaing to be present\n  run:\n    - python\n\ntest:\n  requires:\n    - pip\n  imports:\n    - medatetime\n    - medatetime.rfc3339\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/timkpaine/medatetime\n  license: Apache-2.0\n  license_family: Apache\n  license_file: {{ environ[\"RECIPE_DIR\"] }}/LICENSE\n  summary: Fast RFC3339 compliant Python date-time library, fork of udatetime\n  description: |\n    Handling date-times is a painful act because of the sheer endless amount of formats used by people. Luckily there are a couple of specified standards out there like ISO 8601. But even ISO 8601 leaves to many options on how to define date and time. That\\'s why I encourage using the RFC3339 specified date-time format.\n    medatetime offers on average 76% faster datetime object instantiation, serialization and deserialization of RFC3339 date-time strings. medatetime is using Python\\'s datetime class under the hood and code already using datetime should be able to easily switch to medatetime. All datetime objects created by medatetime are timezone-aware. The timezones that medatetime uses are fixed-offset timezones, meaning that they don\\'t observe daylight savings time (DST), and thus return a fixed offset from UTC all year round.\n  doc_url: https://github.com/timkpaine/medatetime\n  dev_url: https://github.com/timkpaine/medatetime\n\nextra:\n  recipe-maintainers:\n    - timkpaine\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/m/medatetime/medatetime-0.0.17.tar.gz",
  "version": "0.0.17",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/medatetime.json"
  }
}