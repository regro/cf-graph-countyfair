{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "kyotocabinet",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Kyoto Cabinet is a library of routines for managing a database. The database is a simple data file containing\nrecords, each is a pair of  a key and a value. Every key and value is serial bytes with variable length. Both binary\ndata and character string can be used as a key and a value. Each key must be unique within a database. There is\nneither concept of data tables nor data types. Records are organized in hash table or B+ tree.\n\nKyoto Cabinet runs very fast. For example, elapsed time to store one million records is 0.9 seconds for hash\ndatabase, and 1.1 seconds for B+ tree database. Moreover, the size of database is very small. For example,\noverhead for a record is 16 bytes for hash database, and 4 bytes for B+ tree database. Furthermore, scalability of\nKyoto Cabinet is great. The database size can be up to 8EB (9.22e18 bytes).\n\nKyoto Cabinet is written in the C++ language, and provided as API of C++, C, Java, Python, Ruby, Perl, and\nLua. Kyoto Cabinet is available on platforms which have API conforming to C++03 with the TR1 library\nextensions. Kyoto Cabinet is a free software licensed under the GNU General Public License. On the other hand, a\ncommercial license is also provided. If you use Kyoto Cabinet within a proprietary software, the commercial\nlicense is required.\n",
      "doc_url": "http://fallabs.com/kyotocabinet/",
      "home": "http://fallabs.com/kyotocabinet/",
      "license": "GPL-3.0",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Kyoto Cabinet is a library of routines for managing a database"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "yuriy-davygora"
      ]
    },
    "package": {
      "name": "kyotocabinet",
      "version": "1.2.76"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "zlib"
      ],
      "run": [
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "kyotocabinet-1.2.76.tar.gz",
      "patches": [
        "kcdbext.patch",
        "check_poly.patch",
        "march.patch"
      ],
      "sha256": "812a2d3f29c351db4c6f1ff29d94d7135f9e601d7cc1872ec1d7eed381d0d23c",
      "url": "http://fallabs.com/kyotocabinet/pkg/kyotocabinet-1.2.76.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/include/kccommon.h",
        "test -e $PREFIX/lib/libkyotocabinet.so",
        "test -e $PREFIX/lib/libkyotocabinet.a",
        "test -e $PREFIX/lib/pkgconfig/kyotocabinet.pc",
        "kchashmgr version"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Kyoto Cabinet is a library of routines for managing a database. The database is a simple data file containing\nrecords, each is a pair of  a key and a value. Every key and value is serial bytes with variable length. Both binary\ndata and character string can be used as a key and a value. Each key must be unique within a database. There is\nneither concept of data tables nor data types. Records are organized in hash table or B+ tree.\n\nKyoto Cabinet runs very fast. For example, elapsed time to store one million records is 0.9 seconds for hash\ndatabase, and 1.1 seconds for B+ tree database. Moreover, the size of database is very small. For example,\noverhead for a record is 16 bytes for hash database, and 4 bytes for B+ tree database. Furthermore, scalability of\nKyoto Cabinet is great. The database size can be up to 8EB (9.22e18 bytes).\n\nKyoto Cabinet is written in the C++ language, and provided as API of C++, C, Java, Python, Ruby, Perl, and\nLua. Kyoto Cabinet is available on platforms which have API conforming to C++03 with the TR1 library\nextensions. Kyoto Cabinet is a free software licensed under the GNU General Public License. On the other hand, a\ncommercial license is also provided. If you use Kyoto Cabinet within a proprietary software, the commercial\nlicense is required.\n",
      "doc_url": "http://fallabs.com/kyotocabinet/",
      "home": "http://fallabs.com/kyotocabinet/",
      "license": "GPL-3.0",
      "license_family": "GPL",
      "license_file": "COPYING",
      "summary": "Kyoto Cabinet is a library of routines for managing a database"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "yuriy-davygora"
      ]
    },
    "package": {
      "name": "kyotocabinet",
      "version": "1.2.76"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "zlib"
      ],
      "run": [
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "kyotocabinet-1.2.76.tar.gz",
      "patches": [
        "kcdbext.patch",
        "check_poly.patch",
        "march.patch"
      ],
      "sha256": "812a2d3f29c351db4c6f1ff29d94d7135f9e601d7cc1872ec1d7eed381d0d23c",
      "url": "http://fallabs.com/kyotocabinet/pkg/kyotocabinet-1.2.76.tar.gz"
    },
    "test": {
      "commands": [
        "test -e $PREFIX/include/kccommon.h",
        "test -e $PREFIX/lib/libkyotocabinet.so",
        "test -e $PREFIX/lib/libkyotocabinet.a",
        "test -e $PREFIX/lib/pkgconfig/kyotocabinet.pc",
        "kchashmgr version"
      ]
    }
  },
  "name": "kyotocabinet",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "kyotocabinet"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/kyotocabinet.json"
  },
  "raw_meta_yaml": "{% set name = \"kyotocabinet\" %}\n{% set version = \"1.2.76\" %}\n{% set sha256 = \"812a2d3f29c351db4c6f1ff29d94d7135f9e601d7cc1872ec1d7eed381d0d23c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: http://fallabs.com/kyotocabinet/pkg/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    # This patch is need for compatibility with newer compiler versions (GCC version > 4).\n    # Without it, the code will not compile.\n    - kcdbext.patch\n    # This patch has nothing to do with the code. It deactivates one of the check tasks in\n    # the Makefile, which keeps failing on *circleci* with and error that could not be\n    # reproduced locally.\n    - check_poly.patch\n    # In the original source, the -march=native flag is set manually in the configure script,\n    # which overrides the -march=nocona flag set by the conda build environment.\n    # This patch removes a section of the configure script, responsible for local system\n    # optimizations.\n    - march.patch\n\nbuild:\n  number: 1\n  skip: True  # [win or osx]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - zlib\n  run:\n    - zlib\n\ntest:\n  commands:\n    - test -e $PREFIX/include/kccommon.h\n    - test -e $PREFIX/lib/libkyotocabinet.so\n    - test -e $PREFIX/lib/libkyotocabinet.a\n    - test -e $PREFIX/lib/pkgconfig/kyotocabinet.pc\n    - kchashmgr version\n\nabout:\n  home: http://fallabs.com/kyotocabinet/\n  license: GPL-3.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Kyoto Cabinet is a library of routines for managing a database'\n\n  description: |\n    Kyoto Cabinet is a library of routines for managing a database. The database is a simple data file containing\n    records, each is a pair of  a key and a value. Every key and value is serial bytes with variable length. Both binary\n    data and character string can be used as a key and a value. Each key must be unique within a database. There is\n    neither concept of data tables nor data types. Records are organized in hash table or B+ tree.\n\n    Kyoto Cabinet runs very fast. For example, elapsed time to store one million records is 0.9 seconds for hash\n    database, and 1.1 seconds for B+ tree database. Moreover, the size of database is very small. For example,\n    overhead for a record is 16 bytes for hash database, and 4 bytes for B+ tree database. Furthermore, scalability of\n    Kyoto Cabinet is great. The database size can be up to 8EB (9.22e18 bytes).\n\n    Kyoto Cabinet is written in the C++ language, and provided as API of C++, C, Java, Python, Ruby, Perl, and\n    Lua. Kyoto Cabinet is available on platforms which have API conforming to C++03 with the TR1 library\n    extensions. Kyoto Cabinet is a free software licensed under the GNU General Public License. On the other hand, a\n    commercial license is also provided. If you use Kyoto Cabinet within a proprietary software, the commercial\n    license is required.\n  doc_url: http://fallabs.com/kyotocabinet/\n\nextra:\n  recipe-maintainers:\n    - yuriy-davygora\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "cxx_compiler_stub",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub",
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "zlib"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "http://fallabs.com/kyotocabinet/pkg/kyotocabinet-1.2.76.tar.gz",
  "version": "1.2.76",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/kyotocabinet.json"
  }
}