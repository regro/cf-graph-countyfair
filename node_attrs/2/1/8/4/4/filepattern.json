{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "filepattern",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The filepattern utility is used to store files that follow a pattern, where the pattern is analogous\nto a simplified regular expression. The need for filepattern arises in situations where large amounts\nof data with a systematic naming convention needs to be filtered by patterns in the naming.\nFor example, one may have a directory containing segmented images where the name contains information\nsuch as the channel, the column value, and the row value. filepattern provides the ability to extract\nall images containing such a naming pattern, filter by the row or column value, or group files by one\nor more of the aforementioned variables.\n",
      "dev_url": "https://github.com/PolusAI/filepattern",
      "doc_url": "https://filepattern.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/filepattern",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python library to store and filter files with systematic naming conventions using simplified regular expression-like patterns"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JesseMckinzie",
        "sameeul"
      ]
    },
    "package": {
      "name": "filepattern",
      "version": "2.1.4"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "pybind11",
        "libfilepattern ==2.1.4"
      ],
      "run": [
        "python",
        "pydantic"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b30dff1972c101ee3f50a4647637a42fac3cb72c87c78f308cf2749879b0e4b5",
      "url": "https://github.com/PolusAI/filepattern/archive/v2.1.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "filepattern"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfilepattern",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pydantic",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The filepattern utility is used to store files that follow a pattern, where the pattern is analogous\nto a simplified regular expression. The need for filepattern arises in situations where large amounts\nof data with a systematic naming convention needs to be filtered by patterns in the naming.\nFor example, one may have a directory containing segmented images where the name contains information\nsuch as the channel, the column value, and the row value. filepattern provides the ability to extract\nall images containing such a naming pattern, filter by the row or column value, or group files by one\nor more of the aforementioned variables.\n",
      "dev_url": "https://github.com/PolusAI/filepattern",
      "doc_url": "https://filepattern.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/filepattern",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python library to store and filter files with systematic naming conventions using simplified regular expression-like patterns"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JesseMckinzie",
        "sameeul"
      ]
    },
    "package": {
      "name": "filepattern",
      "version": "2.1.4"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "pybind11",
        "libfilepattern ==2.1.4"
      ],
      "run": [
        "python",
        "pydantic"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b30dff1972c101ee3f50a4647637a42fac3cb72c87c78f308cf2749879b0e4b5",
      "url": "https://github.com/PolusAI/filepattern/archive/v2.1.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "filepattern"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "filepattern",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The filepattern utility is used to store files that follow a pattern, where the pattern is analogous\nto a simplified regular expression. The need for filepattern arises in situations where large amounts\nof data with a systematic naming convention needs to be filtered by patterns in the naming.\nFor example, one may have a directory containing segmented images where the name contains information\nsuch as the channel, the column value, and the row value. filepattern provides the ability to extract\nall images containing such a naming pattern, filter by the row or column value, or group files by one\nor more of the aforementioned variables.\n",
      "dev_url": "https://github.com/PolusAI/filepattern",
      "doc_url": "https://filepattern.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/filepattern",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python library to store and filter files with systematic naming conventions using simplified regular expression-like patterns"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JesseMckinzie",
        "sameeul"
      ]
    },
    "package": {
      "name": "filepattern",
      "version": "2.1.4"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "pybind11",
        "libfilepattern ==2.1.4"
      ],
      "run": [
        "python",
        "pydantic"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b30dff1972c101ee3f50a4647637a42fac3cb72c87c78f308cf2749879b0e4b5",
      "url": "https://github.com/PolusAI/filepattern/archive/v2.1.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "filepattern"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfilepattern",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pydantic",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "filepattern"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/filepattern.json"
  },
  "raw_meta_yaml": "{% set name = \"filepattern\" %}\n{% set version = \"2.1.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/PolusAI/filepattern/archive/v{{ version }}.tar.gz\n  sha256: b30dff1972c101ee3f50a4647637a42fac3cb72c87c78f308cf2749879b0e4b5\n\nbuild:\n  skip: true  # [py2k]\n  number: 0\n\nrequirements:\n  build:\n    - cmake\n    - make  # [not win]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n    - git\n  host:\n    - python\n    - setuptools\n    - pip\n    - pybind11\n    - libfilepattern =={{ version }}\n  run:\n    - python\n    - pydantic\n\ntest:\n  imports:\n    - filepattern\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/PolusAI/filepattern\n  summary: Python library to store and filter files with systematic naming conventions using simplified regular expression-like patterns\n  description: |\n    The filepattern utility is used to store files that follow a pattern, where the pattern is analogous \n    to a simplified regular expression. The need for filepattern arises in situations where large amounts \n    of data with a systematic naming convention needs to be filtered by patterns in the naming. \n    For example, one may have a directory containing segmented images where the name contains information \n    such as the channel, the column value, and the row value. filepattern provides the ability to extract \n    all images containing such a naming pattern, filter by the row or column value, or group files by one\n    or more of the aforementioned variables.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://filepattern.readthedocs.io/en/latest/\n  dev_url: https://github.com/PolusAI/filepattern\n\nextra:\n  recipe-maintainers:\n    - JesseMckinzie\n    - sameeul\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "git",
      "libfilepattern",
      "make",
      "pip",
      "pybind11",
      "pydantic",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libfilepattern",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "pydantic",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfilepattern ==2.1.4",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pydantic",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/PolusAI/filepattern/archive/v2.1.4.tar.gz",
  "version": "2.1.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/filepattern.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The filepattern utility is used to store files that follow a pattern, where the pattern is analogous\nto a simplified regular expression. The need for filepattern arises in situations where large amounts\nof data with a systematic naming convention needs to be filtered by patterns in the naming.\nFor example, one may have a directory containing segmented images where the name contains information\nsuch as the channel, the column value, and the row value. filepattern provides the ability to extract\nall images containing such a naming pattern, filter by the row or column value, or group files by one\nor more of the aforementioned variables.\n",
      "dev_url": "https://github.com/PolusAI/filepattern",
      "doc_url": "https://filepattern.readthedocs.io/en/latest/",
      "home": "https://github.com/PolusAI/filepattern",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Python library to store and filter files with systematic naming conventions using simplified regular expression-like patterns"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "JesseMckinzie",
        "sameeul"
      ]
    },
    "package": {
      "name": "filepattern",
      "version": "2.1.4"
    },
    "requirements": {
      "build": [
        "cmake",
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "git"
      ],
      "host": [
        "python",
        "setuptools",
        "pip",
        "pybind11",
        "libfilepattern ==2.1.4"
      ],
      "run": [
        "python",
        "pydantic"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b30dff1972c101ee3f50a4647637a42fac3cb72c87c78f308cf2749879b0e4b5",
      "url": "https://github.com/PolusAI/filepattern/archive/v2.1.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "filepattern"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "git"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libfilepattern",
        "pip",
        "pybind11",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "pydantic",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}