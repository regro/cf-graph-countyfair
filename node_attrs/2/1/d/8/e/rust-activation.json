{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "linter": {
      "skip": [
        "lint_stdlib"
      ]
    },
    "test": "native"
  },
  "feedstock_name": "rust-activation",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_osx-64",
        "clang_osx-arm64",
        "clang_win-64",
        "cmake",
        "gcc_linux-64",
        "gcc_linux-aarch64",
        "gcc_linux-ppc64le",
        "m2w64-toolchain",
        "macosx_deployment_target_osx-64",
        "macosx_deployment_target_osx-arm64",
        "ninja",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-unknown-linux-gnu"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gcc_linux-64",
        "gcc_linux-aarch64",
        "gcc_linux-ppc64le",
        "m2w64-toolchain",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-aarch64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-unknown-linux-gnu"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "gcc_linux-64",
        "gcc_linux-aarch64",
        "gcc_linux-ppc64le",
        "m2w64-toolchain",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-ppc64le"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-aarch64 >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-aarch64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-X86_64_UNKNOWN_LINUX_GNU-x86_64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-aarch64",
        "requirements": {
          "host": [
            "rust-std-aarch64-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-aarch64",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-AARCH64_UNKNOWN_LINUX_GNU-aarch64-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__glibc >=2.17"
            ]
          }
        },
        "name": "rust_linux-ppc64le",
        "requirements": {
          "host": [
            "rust-std-powerpc64le-unknown-linux-gnu"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
            "gcc_linux-ppc64le",
            "sysroot_linux-ppc64le >=2.17"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 2.17-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc-POWERPC64LE_UNKNOWN_LINUX_GNU-powerpc64le-conda-linux-gnu-cc",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_linux-ppc64le",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-64",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-64",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-arm64",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-X86_64_PC_WINDOWS_MSVC-clang-cl-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-arm64",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-X86_64_PC_WINDOWS_MSVC-clang-cl-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "vs_win-64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-pc-windows-msvc  1.88.0.*",
            "vs_win-arm64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-AARCH64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "vs_win-64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-pc-windows-msvc  1.90.0.*",
            "vs_win-arm64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-AARCH64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "name": "rust-activation",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-64",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-64",
            "ld64_osx-64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-apple-darwin",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_impl_osx-64",
        "clang_osx-64",
        "clang_osx-arm64",
        "clang_win-64",
        "cmake",
        "ld64_osx-64",
        "m2w64-toolchain",
        "macosx_deployment_target_osx-64",
        "macosx_deployment_target_osx-arm64",
        "ninja",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-apple-darwin",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-apple-darwin  1.88.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-apple-darwin  1.88.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-arm64",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-X86_64_PC_WINDOWS_MSVC-clang-cl-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=10.13"
            ]
          }
        },
        "name": "rust_osx-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-apple-darwin  1.90.0.*",
            "clang_osx-64",
            "macosx_deployment_target_osx-64 >=10.13",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 10.13-X86_64_APPLE_DARWIN-x86_64-apple-darwin13.4.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": [
              "__osx >=11.0"
            ]
          }
        },
        "name": "rust_osx-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-apple-darwin"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-apple-darwin  1.90.0.*",
            "clang_osx-arm64",
            "macosx_deployment_target_osx-arm64 >=11.0",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv",
            "file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\""
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "cmake",
            "ninja",
            "clang_win-64",
            "clang_impl_osx-arm64",
            "ld64_osx-arm64"
          ]
        },
        "script": "build.sh",
        "test": {
          "commands": [
            "echo 11.0-X86_64_PC_WINDOWS_MSVC-clang-cl-AARCH64_APPLE_DARWIN-arm64-apple-darwin20.0.0-clang",
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv",
            "file $PREFIX/.cargo/bin/xsv.exe",
            "file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64"
          ],
          "requires": [
            "file"
          ]
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_osx-arm64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "unset REQUESTS_CA_BUNDLE",
            "unset SSL_CERT_FILE",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-apple-darwin",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_impl_osx-arm64",
        "clang_osx-64",
        "clang_osx-arm64",
        "clang_win-64",
        "cmake",
        "ld64_osx-arm64",
        "m2w64-toolchain",
        "macosx_deployment_target_osx-64",
        "macosx_deployment_target_osx-arm64",
        "ninja",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-apple-darwin",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "rust-gnu_linux-64",
      "rust-gnu_linux-aarch64",
      "rust-gnu_linux-ppc64le",
      "rust-gnu_osx-64",
      "rust-gnu_osx-arm64",
      "rust-gnu_win-64",
      "rust_linux-64",
      "rust_linux-aarch64",
      "rust_linux-ppc64le",
      "rust_osx-64",
      "rust_osx-arm64",
      "rust_win-64",
      "rust_win-arm64"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/rust-activation.json"
  },
  "raw_meta_yaml": "{% if version is undefined %}\n{% set version = \"1.73.0\" %}\n{% endif %}\n\n{% if cross_target_platform is undefined %}\n{% set cross_target_platform = \"foo\" %}\n{% endif %}\n\npackage:\n  name: rust-activation\n  version: {{ version }}\n\nbuild:\n  number: 1\n\noutputs:\n  - name: rust_{{ cross_target_platform }}\n    script: build.sh  # [unix]\n    script: bld.bat  # [win]\n    build:\n      skip: True  # [win and vc<14]\n      run_exports:\n        strong_constrains:\n          {% if cross_target_platform.startswith(\"linux\") %}\n          - __glibc >={{ target_c_stdlib_version }}\n          {% endif %}\n          {% if cross_target_platform.startswith(\"osx\") %}\n          - __osx >={{ target_c_stdlib_version }}\n          {% endif %}\n    requirements:\n      host:\n        - rust-std-{{ rust_arch }}\n      run:\n        - rust {{ version }}.*\n        - rust-std-{{ rust_arch }}  {{ version }}.*\n{% if cross_target_platform.startswith(\"linux\") %}\n        - gcc_{{ cross_target_platform }}\n        - sysroot_{{ target_platform }} >={{ target_c_stdlib_version }}\n{% elif cross_target_platform.startswith(\"osx\") %}\n        - clang_{{ cross_target_platform }}\n        - macosx_deployment_target_{{ cross_target_platform }} >={{ target_c_stdlib_version }}\n{% elif cross_target_platform.startswith(\"win\") %}\n        - cmake                                # [unix]\n        - ninja                                # [unix]\n        - clang_{{ cross_target_platform }}    # [unix]\n        # TODO: remove when clang_osx-64=17 is released\n        - clang_impl_{{ target_platform }}     # [osx]\n        - vs_{{ cross_target_platform }} >=2019  # [win]\n{% endif %}\n        - ld64_{{ target_platform }}  # [osx]\n    test:\n      requires:\n        - file  # [unix]\n      commands:\n        - echo {{ target_c_stdlib_version }}-{{ rust_arch_env }}-{{ rust_default_cc }}-{{ rust_arch_env_build }}-{{ rust_default_cc_build }}\n        - set \"REQUESTS_CA_BUNDLE=\"  # [win]\n        - set \"SSL_CERT_FILE=\"       # [win]\n        - unset REQUESTS_CA_BUNDLE  # [unix]\n        - unset SSL_CERT_FILE       # [unix]\n        - rustc --help\n        - rustdoc --help\n        - cargo --help\n        - cargo install --force xsv\n        - file $PREFIX/.cargo/bin/xsv  # [unix and cross_target_platform != \"win-64\" and cross_target_platform != \"win-arm64\"]\n        - file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit arm64 executable\"  # [unix and cross_target_platform == \"osx-arm64\"]\n        - file $PREFIX/.cargo/bin/xsv | grep \"Mach-O 64-bit x86_64 executable\"  # [unix and cross_target_platform == \"osx-64\"]\n        - file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, x86-64\"  # [unix and cross_target_platform == \"linux-64\"]\n        - file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, ARM aarch64\"  # [unix and cross_target_platform == \"linux-aarch64\"]\n        - file $PREFIX/.cargo/bin/xsv | grep \"ELF 64-bit LSB pie executable, 64-bit PowerPC\"  # [unix and cross_target_platform == \"linux-ppc64le\"]\n        - file $PREFIX/.cargo/bin/xsv.exe  # [unix and cross_target_platform == \"win-64\"]\n        - file $PREFIX/.cargo/bin/xsv.exe  | grep \"PE32+ executable for MS Windows\" | grep x86-64  # [unix and cross_target_platform == \"win-64\"]\n\n  - name: rust-gnu_{{ target_platform }}\n    script: bld.bat\n    build:\n      skip: True  # [not win]\n      skip: True\n    requirements:\n      run:\n        - rust-gnu  {{ version }}.*\n        - m2w64-toolchain\n    test:\n      commands:\n        - set \"REQUESTS_CA_BUNDLE=\"  # [win]\n        - set \"SSL_CERT_FILE=\"       # [win]\n        - unset REQUESTS_CA_BUNDLE  # [unix]\n        - unset SSL_CERT_FILE       # [unix]\n        - rustc --help\n        - rustdoc --help\n        - cargo --help\n        - cargo install --force xsv\n\nabout:\n  home: https://www.rust-lang.org\n  summary: A safe systems programming language (conda activation scripts)\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  description: |\n    Rust is a systems programming language that runs blazingly fast,\n    prevents segfaults, and guarantees thread safety.\n  doc_url: https://doc.rust-lang.org/\n  doc_source_url: https://github.com/rust-lang/rust/tree/master/src/doc\n  dev_url: https://github.com/rust-lang\n\nextra:\n  recipe-maintainers:\n    - isuruf\n    - xhochy\n",
  "req": {
    "__set__": true,
    "elements": [
      "clang_impl_osx-64",
      "clang_impl_osx-arm64",
      "clang_osx-64",
      "clang_osx-arm64",
      "clang_win-64",
      "cmake",
      "gcc_linux-64",
      "gcc_linux-aarch64",
      "gcc_linux-ppc64le",
      "ld64_osx-64",
      "ld64_osx-arm64",
      "m2w64-toolchain",
      "macosx_deployment_target_osx-64",
      "macosx_deployment_target_osx-arm64",
      "ninja",
      "rust",
      "rust-gnu",
      "rust-std-aarch64-apple-darwin",
      "rust-std-aarch64-pc-windows-msvc",
      "rust-std-aarch64-unknown-linux-gnu",
      "rust-std-powerpc64le-unknown-linux-gnu",
      "rust-std-x86_64-apple-darwin",
      "rust-std-x86_64-pc-windows-msvc",
      "rust-std-x86_64-unknown-linux-gnu",
      "sysroot_linux-64",
      "sysroot_linux-aarch64",
      "sysroot_linux-ppc64le",
      "vs_win-64",
      "vs_win-arm64"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "clang-compiler-activation",
        "clang-win-activation",
        "ctng-compiler-activation",
        "linux-sysroot",
        "osx-sysroot",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "vc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang-compiler-activation",
        "clang-win-activation",
        "clang_impl_osx-64",
        "clang_impl_osx-arm64",
        "clang_osx-64",
        "clang_osx-arm64",
        "clang_win-64",
        "cmake",
        "ctng-compiler-activation",
        "gcc_linux-64",
        "gcc_linux-aarch64",
        "gcc_linux-ppc64le",
        "ld64_osx-64",
        "ld64_osx-arm64",
        "linux-sysroot",
        "m2w64-toolchain",
        "macosx_deployment_target_osx-64",
        "macosx_deployment_target_osx-arm64",
        "ninja",
        "osx-sysroot",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu",
        "sysroot_linux-64",
        "sysroot_linux-aarch64",
        "sysroot_linux-ppc64le",
        "vc",
        "vs_win-64",
        "vs_win-arm64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-apple-darwin",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-aarch64-unknown-linux-gnu",
        "rust-std-powerpc64le-unknown-linux-gnu",
        "rust-std-x86_64-apple-darwin",
        "rust-std-x86_64-pc-windows-msvc",
        "rust-std-x86_64-unknown-linux-gnu"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clang_impl_osx-64",
        "clang_impl_osx-arm64",
        "clang_osx-64",
        "clang_osx-arm64",
        "clang_win-64",
        "cmake",
        "gcc_linux-64",
        "gcc_linux-aarch64",
        "gcc_linux-ppc64le",
        "ld64_osx-64",
        "ld64_osx-arm64",
        "m2w64-toolchain",
        "macosx_deployment_target_osx-64 >=10.13",
        "macosx_deployment_target_osx-arm64 >=11.0",
        "ninja",
        "rust 1.88.0.*",
        "rust 1.90.0.*",
        "rust-gnu  1.88.0.*",
        "rust-gnu  1.90.0.*",
        "rust-std-aarch64-apple-darwin  1.88.0.*",
        "rust-std-aarch64-apple-darwin  1.90.0.*",
        "rust-std-aarch64-pc-windows-msvc  1.88.0.*",
        "rust-std-aarch64-pc-windows-msvc  1.90.0.*",
        "rust-std-aarch64-unknown-linux-gnu  1.88.0.*",
        "rust-std-aarch64-unknown-linux-gnu  1.90.0.*",
        "rust-std-powerpc64le-unknown-linux-gnu  1.88.0.*",
        "rust-std-powerpc64le-unknown-linux-gnu  1.90.0.*",
        "rust-std-x86_64-apple-darwin  1.88.0.*",
        "rust-std-x86_64-apple-darwin  1.90.0.*",
        "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
        "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
        "rust-std-x86_64-unknown-linux-gnu  1.88.0.*",
        "rust-std-x86_64-unknown-linux-gnu  1.90.0.*",
        "sysroot_linux-64 >=2.17",
        "sysroot_linux-aarch64 >=2.17",
        "sysroot_linux-ppc64le >=2.17",
        "vs_win-64 >=2019",
        "vs_win-arm64 >=2019"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "file"
      ]
    }
  },
  "version": "1.90.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/rust-activation.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Rust is a systems programming language that runs blazingly fast,\nprevents segfaults, and guarantees thread safety.\n",
      "dev_url": "https://github.com/rust-lang",
      "doc_source_url": "https://github.com/rust-lang/rust/tree/master/src/doc",
      "doc_url": "https://doc.rust-lang.org/",
      "home": "https://www.rust-lang.org",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "A safe systems programming language (conda activation scripts)"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "isuruf",
        "xhochy"
      ]
    },
    "outputs": [
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.88.0.*",
            "vs_win-64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.88.0.*",
            "rust-std-aarch64-pc-windows-msvc  1.88.0.*",
            "vs_win-arm64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-AARCH64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.88.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-64",
        "requirements": {
          "host": [
            "rust-std-x86_64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-x86_64-pc-windows-msvc  1.90.0.*",
            "vs_win-64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-X86_64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      },
      {
        "build": {
          "run_exports": {
            "strong_constrains": null
          }
        },
        "name": "rust_win-arm64",
        "requirements": {
          "host": [
            "rust-std-aarch64-pc-windows-msvc"
          ],
          "run": [
            "rust 1.90.0.*",
            "rust-std-aarch64-pc-windows-msvc  1.90.0.*",
            "vs_win-arm64 >=2019"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "echo 0-AARCH64_PC_WINDOWS_MSVC-clang-cl-X86_64_PC_WINDOWS_MSVC-clang-cl",
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ],
          "requires": null
        }
      },
      {
        "build": {
          "skip": true
        },
        "name": "rust-gnu_win-64",
        "requirements": {
          "run": [
            "rust-gnu  1.90.0.*",
            "m2w64-toolchain"
          ]
        },
        "script": "bld.bat",
        "test": {
          "commands": [
            "set \"REQUESTS_CA_BUNDLE=\"",
            "set \"SSL_CERT_FILE=\"",
            "rustc --help",
            "rustdoc --help",
            "cargo --help",
            "cargo install --force xsv"
          ]
        }
      }
    ],
    "package": {
      "name": "rust-activation",
      "version": "1.90.0"
    },
    "schema_version": 0
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-x86_64-pc-windows-msvc"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "m2w64-toolchain",
        "rust",
        "rust-gnu",
        "rust-std-aarch64-pc-windows-msvc",
        "rust-std-x86_64-pc-windows-msvc",
        "vs_win-64",
        "vs_win-arm64"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}