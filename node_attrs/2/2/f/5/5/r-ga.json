{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "azure",
      "linux_ppc64le": "azure",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "c4a9f893973c86b482608f4e5ce43996549bc611",
  "feedstock_hash_ts": 1758689688,
  "feedstock_name": "r-ga",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('GA')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('GA')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('GA')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('GA')\"",
        "\"%R%\" -e \"library('GA')\""
      ]
    }
  },
  "name": "r-ga",
  "osx_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": null,
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('GA')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-ga"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-ga.json"
  },
  "raw_meta_yaml": "{% set version = \"3.2.4\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ga\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/GA_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/GA/GA_{{ version }}.tar.gz\n  sha256: e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd\n\nbuild:\n  number: 4\n  rpaths:\n    - lib/R/lib/\n    - lib/\n  missing_dso_whitelist:\n    - '*/R.dll'        # [win]\n    - '*/Rblas.dll'    # [win]\n    - '*/Rlapack.dll'  # [win]\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}    # [build_platform != target_platform]\n    - r-cli                        # [build_platform != target_platform]\n    - r-crayon                     # [build_platform != target_platform]\n    - r-foreach                    # [build_platform != target_platform]\n    - r-iterators                  # [build_platform != target_platform]\n    - r-rcpp                       # [build_platform != target_platform]\n    - r-rcpparmadillo              # [build_platform != target_platform]\n    - {{ compiler('c') }}          # [not win]\n    - {{ stdlib(\"c\") }}            # [not win]\n    - {{ compiler('m2w64_c') }}    # [win]\n    - {{ stdlib(\"m2w64_c\") }}      # [win]\n    - {{ compiler('cxx') }}        # [not win]\n    - {{ compiler('m2w64_cxx') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n    - r-cli\n    - r-crayon\n    - r-foreach\n    - r-iterators\n    - r-rcpp\n    - r-rcpparmadillo\n  run:\n    - r-base\n    - r-cli\n    - r-crayon\n    - r-foreach\n    - r-iterators\n    - r-rcpp\n    - r-rcpparmadillo\n\ntest:\n  commands:\n    - $R -e \"library('GA')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('GA')\\\"\"  # [win]\n\nabout:\n  home: https://luca-scr.github.io/GA/\n  dev_url: https://github.com/luca-scr/GA/\n  license: GPL-2.0-or-later\n  summary: Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available\n    and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in\n    parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach.\n  license_family: GPL3\n  license_file:\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n    - {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-3\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - xhochy\n\n# Package: GA\n# Version: 3.2\n# Date: 2019-01-10\n# Title: Genetic Algorithms\n# Description: Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach.\n# Authors@R: c( person(\"Luca\", \"Scrucca\", role = c(\"aut\", \"cre\"), email = \"luca.scrucca@unipg.it\", comment = c(ORCID = \"0000-0003-3826-0484\")))\n# Depends: R (>= 3.4), methods, foreach, iterators\n# Imports: stats, graphics, grDevices, utils, cli, crayon, Rcpp\n# LinkingTo: Rcpp, RcppArmadillo\n# Suggests: parallel, doParallel, doRNG (>= 1.6), knitr (>= 1.8)\n# License: GPL (>= 2)\n# VignetteBuilder: knitr\n# URL: https://luca-scr.github.io/GA/\n# BugReports: https://github.com/luca-scr/GA/issues\n# Repository: CRAN\n# ByteCompile: true\n# LazyData: yes\n# RoxygenNote: 6.1.1\n# NeedsCompilation: yes\n# Packaged: 2019-01-10 10:53:43 UTC; luca\n# Author: Luca Scrucca [aut, cre] (<https://orcid.org/0000-0003-3826-0484>)\n# Maintainer: Luca Scrucca <luca.scrucca@unipg.it>\n# Date/Publication: 2019-01-10 12:00:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "make",
      "r-base",
      "r-cli",
      "r-crayon",
      "r-foreach",
      "r-iterators",
      "r-rcpp",
      "r-rcpparmadillo",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
  ],
  "version": "3.2.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-ga.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "dev_url": "https://github.com/luca-scr/GA/",
      "home": "https://luca-scr.github.io/GA/",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL3",
      "license_file": [
        "/lib/R/share/licenses/GPL-2",
        "/lib/R/share/licenses/GPL-3"
      ],
      "summary": "Flexible general-purpose toolbox implementing genetic algorithms (GAs) for stochastic optimisation. Binary, real-valued, and permutation representations are available to optimize a fitness function, i.e. a function provided by users depending on their objective function. Several genetic operators are available and can be combined to explore the best settings for the current task. Furthermore, users can define new genetic operators and easily evaluate their performances. Local search using general-purpose optimisation algorithms can be applied stochastically to exploit interesting regions. GAs can be run sequentially or in parallel, using an explicit master-slave parallelisation or a coarse-grain islands approach."
    },
    "build": {
      "missing_dso_whitelist": [
        "*/R.dll",
        "*/Rblas.dll",
        "*/Rlapack.dll"
      ],
      "number": "4",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "xhochy"
      ]
    },
    "package": {
      "name": "r-ga",
      "version": "3.2.4"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ],
      "run": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "e59f6638534e858eeac541efd774046ef3db130345999a374b6ce6dfbab081bd",
      "url": [
        "https://cran.r-project.org/src/contrib/GA_3.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/GA/GA_3.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('GA')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-cli",
        "r-crayon",
        "r-foreach",
        "r-iterators",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}