{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "mssql-scripter",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "mssql-scripter is the multiplatform command line equivalent of the widely\nused Generate Scripts Wizard experience in SSMS. You can use mssql-scripter\non Linux, macOS, and Windows to generate data definition language (DDL) and\ndata manipulation language (DML) T-SQL scripts for database objects in SQL\nServer running anywhere, Azure SQL Database, and Azure SQL Data Warehouse.\nYou can save the generated T-SQL script to a .sql file or pipe it to\nstandard nix utilities (for example, sed, awk, grep) for further\ntransformations. You can edit the generated script or check it into source\ncontrol and subsequently execute the script in your existing SQL database\ndeployment processes and DevOps pipelines with standard multiplatform SQL\ncommand line tools such as sqlcmd.\n",
      "dev_url": "https://github.com/microsoft/mssql-scripter",
      "home": "https://github.com/microsoft/mssql-scripter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Microsoft SQL Scripter Command-Line Tool"
    },
    "build": {
      "merge_build_host": true,
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "borchero",
        "svengiegerich",
        "maresb"
      ]
    },
    "package": {
      "name": "mssql-scripter",
      "version": "1.0.0a23"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "future >=0.16.0",
        "openssl =1.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "863b820f4ddd0715d01ae7c38047b9396d35fb705222bbaeae5f59e708c0cfa0",
      "url": "https://github.com/microsoft/mssql-scripter/archive/v1.0.0a23.tar.gz"
    },
    "test": {
      "commands": [
        "mssql-scripter --version",
        "pip check"
      ],
      "imports": [
        "mssqlscripter"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "future",
        "openssl",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "mssql-scripter is the multiplatform command line equivalent of the widely\nused Generate Scripts Wizard experience in SSMS. You can use mssql-scripter\non Linux, macOS, and Windows to generate data definition language (DDL) and\ndata manipulation language (DML) T-SQL scripts for database objects in SQL\nServer running anywhere, Azure SQL Database, and Azure SQL Data Warehouse.\nYou can save the generated T-SQL script to a .sql file or pipe it to\nstandard nix utilities (for example, sed, awk, grep) for further\ntransformations. You can edit the generated script or check it into source\ncontrol and subsequently execute the script in your existing SQL database\ndeployment processes and DevOps pipelines with standard multiplatform SQL\ncommand line tools such as sqlcmd.\n",
      "dev_url": "https://github.com/microsoft/mssql-scripter",
      "home": "https://github.com/microsoft/mssql-scripter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Microsoft SQL Scripter Command-Line Tool"
    },
    "build": {
      "merge_build_host": true,
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "borchero",
        "svengiegerich",
        "maresb"
      ]
    },
    "package": {
      "name": "mssql-scripter",
      "version": "1.0.0a23"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "future >=0.16.0",
        "openssl =1.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "863b820f4ddd0715d01ae7c38047b9396d35fb705222bbaeae5f59e708c0cfa0",
      "url": "https://github.com/microsoft/mssql-scripter/archive/v1.0.0a23.tar.gz"
    },
    "test": {
      "commands": [
        "mssql-scripter --version",
        "pip check"
      ],
      "imports": [
        "mssqlscripter"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "mssql-scripter",
  "osx_64_meta_yaml": {
    "about": {
      "description": "mssql-scripter is the multiplatform command line equivalent of the widely\nused Generate Scripts Wizard experience in SSMS. You can use mssql-scripter\non Linux, macOS, and Windows to generate data definition language (DDL) and\ndata manipulation language (DML) T-SQL scripts for database objects in SQL\nServer running anywhere, Azure SQL Database, and Azure SQL Data Warehouse.\nYou can save the generated T-SQL script to a .sql file or pipe it to\nstandard nix utilities (for example, sed, awk, grep) for further\ntransformations. You can edit the generated script or check it into source\ncontrol and subsequently execute the script in your existing SQL database\ndeployment processes and DevOps pipelines with standard multiplatform SQL\ncommand line tools such as sqlcmd.\n",
      "dev_url": "https://github.com/microsoft/mssql-scripter",
      "home": "https://github.com/microsoft/mssql-scripter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Microsoft SQL Scripter Command-Line Tool"
    },
    "build": {
      "merge_build_host": true,
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "borchero",
        "svengiegerich",
        "maresb"
      ]
    },
    "package": {
      "name": "mssql-scripter",
      "version": "1.0.0a23"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "future >=0.16.0",
        "openssl =1.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "863b820f4ddd0715d01ae7c38047b9396d35fb705222bbaeae5f59e708c0cfa0",
      "url": "https://github.com/microsoft/mssql-scripter/archive/v1.0.0a23.tar.gz"
    },
    "test": {
      "commands": [
        "mssql-scripter --version",
        "pip check"
      ],
      "imports": [
        "mssqlscripter"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "future",
        "openssl",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "mssql-scripter"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/mssql-scripter.json"
  },
  "raw_meta_yaml": "{% set name = \"mssql-scripter\" %}\n{% set version = \"1.0.0a23\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/microsoft/mssql-scripter/archive/v{{ version }}.tar.gz\n  sha256: 863b820f4ddd0715d01ae7c38047b9396d35fb705222bbaeae5f59e708c0cfa0\n\nbuild:\n  number: 5\n  merge_build_host: true  # workaround conda-build bug on windows\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - future >=0.16.0\n    - openssl =1.0\n\ntest:\n  imports:\n    - mssqlscripter\n  requires:\n    - pip\n  commands:\n    - mssql-scripter --version\n    - pip check\n\nabout:\n  home: https://github.com/microsoft/mssql-scripter\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Microsoft SQL Scripter Command-Line Tool'\n  description: |\n    mssql-scripter is the multiplatform command line equivalent of the widely\n    used Generate Scripts Wizard experience in SSMS. You can use mssql-scripter\n    on Linux, macOS, and Windows to generate data definition language (DDL) and\n    data manipulation language (DML) T-SQL scripts for database objects in SQL\n    Server running anywhere, Azure SQL Database, and Azure SQL Data Warehouse.\n    You can save the generated T-SQL script to a .sql file or pipe it to\n    standard nix utilities (for example, sed, awk, grep) for further\n    transformations. You can edit the generated script or check it into source\n    control and subsequently execute the script in your existing SQL database\n    deployment processes and DevOps pipelines with standard multiplatform SQL\n    command line tools such as sqlcmd.\n  dev_url: https://github.com/microsoft/mssql-scripter\n\nextra:\n  recipe-maintainers:\n    - borchero\n    - svengiegerich\n    - maresb\n",
  "req": {
    "__set__": true,
    "elements": [
      "future",
      "openssl",
      "pip",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "future",
        "openssl",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "future >=0.16.0",
        "openssl =1.0",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://github.com/microsoft/mssql-scripter/archive/v1.0.0a23.tar.gz",
  "version": "1.0.0a23",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/mssql-scripter.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "mssql-scripter is the multiplatform command line equivalent of the widely\nused Generate Scripts Wizard experience in SSMS. You can use mssql-scripter\non Linux, macOS, and Windows to generate data definition language (DDL) and\ndata manipulation language (DML) T-SQL scripts for database objects in SQL\nServer running anywhere, Azure SQL Database, and Azure SQL Data Warehouse.\nYou can save the generated T-SQL script to a .sql file or pipe it to\nstandard nix utilities (for example, sed, awk, grep) for further\ntransformations. You can edit the generated script or check it into source\ncontrol and subsequently execute the script in your existing SQL database\ndeployment processes and DevOps pipelines with standard multiplatform SQL\ncommand line tools such as sqlcmd.\n",
      "dev_url": "https://github.com/microsoft/mssql-scripter",
      "home": "https://github.com/microsoft/mssql-scripter",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE.txt",
      "summary": "Microsoft SQL Scripter Command-Line Tool"
    },
    "build": {
      "merge_build_host": true,
      "number": "5"
    },
    "extra": {
      "recipe-maintainers": [
        "borchero",
        "svengiegerich",
        "maresb"
      ]
    },
    "package": {
      "name": "mssql-scripter",
      "version": "1.0.0a23"
    },
    "requirements": {
      "host": [
        "python",
        "pip"
      ],
      "run": [
        "python",
        "future >=0.16.0",
        "openssl =1.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "863b820f4ddd0715d01ae7c38047b9396d35fb705222bbaeae5f59e708c0cfa0",
      "url": "https://github.com/microsoft/mssql-scripter/archive/v1.0.0a23.tar.gz"
    },
    "test": {
      "commands": [
        "mssql-scripter --version",
        "pip check"
      ],
      "imports": [
        "mssqlscripter"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "future",
        "openssl",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}