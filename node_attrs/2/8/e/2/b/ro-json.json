{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "509168930fbb202323269cc75b5ef0f5c05f08cb",
  "feedstock_hash_ts": 1736616733,
  "feedstock_name": "ro-json",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The pyjson-tricks package brings several pieces of functionality to python handling of json files:\n(1) store and load numpy arrays in human-readable format;\n(2) store and load class instances both generic and customized;\n(3) store and load date/times as a dictionary (including timezone);\n(4) preserve map order {} using OrderedDict;\n(5) allow for comments in json files by starting lines with #;\n(6) sets, complex numbers, decimal, fraction, enums, compression, duplicate keys, etc.\nAs well as compression and disallowing duplicate keys.\n",
      "home": "https://github.com/ramonaoptics/ro-json",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extra features for Python's JSON: comments, order, numpy, pandas, datetimes, and many more! Simple but customizable."
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "claydugo"
      ]
    },
    "package": {
      "name": "ro-json",
      "version": "1.0.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10",
        "setuptools"
      ],
      "run": [
        "python >=3.10"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "731fd958231083b11497f6cabb187f80cbac7ce8b186718a5513b89bb1e5f1b2",
      "url": "https://pypi.org/packages/source/r/ro-json/ro_json-1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -c \"import ro_json; print(ro_json.__version__)\""
      ],
      "imports": [
        "ro_json"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The pyjson-tricks package brings several pieces of functionality to python handling of json files:\n(1) store and load numpy arrays in human-readable format;\n(2) store and load class instances both generic and customized;\n(3) store and load date/times as a dictionary (including timezone);\n(4) preserve map order {} using OrderedDict;\n(5) allow for comments in json files by starting lines with #;\n(6) sets, complex numbers, decimal, fraction, enums, compression, duplicate keys, etc.\nAs well as compression and disallowing duplicate keys.\n",
      "home": "https://github.com/ramonaoptics/ro-json",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE.txt",
      "summary": "Extra features for Python's JSON: comments, order, numpy, pandas, datetimes, and many more! Simple but customizable."
    },
    "build": {
      "noarch": "python",
      "number": "1",
      "script": "PYTHON -m pip install . --no-deps -vv"
    },
    "extra": {
      "recipe-maintainers": [
        "claydugo"
      ]
    },
    "package": {
      "name": "ro-json",
      "version": "1.0.4"
    },
    "requirements": {
      "host": [
        "pip",
        "python 3.10",
        "setuptools"
      ],
      "run": [
        "python >=3.10"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "731fd958231083b11497f6cabb187f80cbac7ce8b186718a5513b89bb1e5f1b2",
      "url": "https://pypi.org/packages/source/r/ro-json/ro_json-1.0.4.tar.gz"
    },
    "test": {
      "commands": [
        "pip check",
        "python -c \"import ro_json; print(ro_json.__version__)\""
      ],
      "imports": [
        "ro_json"
      ],
      "requires": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "name": "ro-json",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "ro-json"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/ro-json.json"
  },
  "raw_meta_yaml": "{% set python_min = '3.10' %}\n{% set name = \"ro-json\" %}\n{% set version = \"1.0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  # We initially released ro-json as ro_json first and it seems that pypi remembered that name?\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name | replace(\"-\", \"_\") }}-{{ version }}.tar.gz\n  sha256: 731fd958231083b11497f6cabb187f80cbac7ce8b186718a5513b89bb1e5f1b2\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  number: 1\n\nrequirements:\n  host:\n    - pip\n    - python {{ python_min }}\n    - setuptools\n  run:\n    - python >={{ python_min }}\n\ntest:\n  imports:\n    - ro_json\n  requires:\n    - pip\n    - python {{ python_min }}\n  commands:\n    - pip check\n    - python -c \"import ro_json; print(ro_json.__version__)\"\n\nabout:\n  home: https://github.com/ramonaoptics/ro-json\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.txt\n  summary: \"Extra features for Python's JSON: comments, order, numpy, pandas, datetimes, and many more! Simple but customizable.\"\n\n  description: |\n    The pyjson-tricks package brings several pieces of functionality to python handling of json files:\n    (1) store and load numpy arrays in human-readable format;\n    (2) store and load class instances both generic and customized;\n    (3) store and load date/times as a dictionary (including timezone);\n    (4) preserve map order {} using OrderedDict;\n    (5) allow for comments in json files by starting lines with #;\n    (6) sets, complex numbers, decimal, fraction, enums, compression, duplicate keys, etc.\n    As well as compression and disallowing duplicate keys.\n\nextra:\n  recipe-maintainers:\n    - claydugo\n",
  "req": {
    "__set__": true,
    "elements": [
      "pip",
      "python",
      "setuptools"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python >=3.10"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip",
        "python 3.10"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/r/ro-json/ro_json-1.0.4.tar.gz",
  "version": "1.0.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/ro-json.json"
  }
}