{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "cylc-flow",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Cylc (\"silk\") is a workflow engine for cycling systems - it orchestrates\ndistributed workflows of interdependent cycling tasks that may continue to\nrun indefinitely.\n",
      "dev_url": "https://github.com/cylc/cylc-flow",
      "doc_url": "https://cylc.github.io/cylc-doc/",
      "home": "https://cylc.org/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.txt",
      "summary": "A workflow engine for cycling systems"
    },
    "build": {
      "noarch": "python",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "MetRonnie",
        "hjoliver",
        "oliver-sanders"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python",
          "script": "python -m pip install . --no-deps --ignore-installed -vv"
        },
        "name": "cylc-flow-base",
        "requirements": {
          "host": [
            "__unix",
            "pip",
            "python 3.8",
            "setuptools"
          ],
          "run": [
            "__unix",
            "python >=3.8",
            "ansimarkup >=1.0.0",
            "async-timeout >=3.0.0",
            "colorama >=0.4,<1.0",
            "graphene >=2.1,<3",
            "jinja2 >=3.0,<3.1",
            "metomi-isodatetime >=1!3.0.0,<1!3.2.0",
            "packaging",
            "protobuf >=4.24.4,<4.25.0",
            "psutil >=5.6.0",
            "pyzmq >=22",
            "importlib-metadata >=5.0",
            "urwid >=2.2,<3,!=2.6.2,!=2.6.3",
            "rx",
            "promise",
            "tomli >=2.0"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script": "python -m pip install .[report-timings,tutorials,graph] --no-deps --ignore-installed -vv"
        },
        "name": "cylc-flow",
        "requirements": {
          "host": [
            "__unix",
            "pip",
            "python 3.8",
            "setuptools"
          ],
          "run": [
            "__unix",
            "python >=3.8",
            "cylc-flow-base",
            "graphviz",
            "pillow",
            "pandas >=1.0,<2",
            "matplotlib-base",
            "requests"
          ]
        }
      }
    ],
    "package": {
      "name": "cylc-flow",
      "version": "8.4.3"
    },
    "requirements": {
      "host": [
        "__unix",
        "pip",
        "python 3.8",
        "setuptools"
      ],
      "run": [
        "__unix",
        "python >=3.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b74a0feb9489e2a3489e8dfa81fc8593311d96b7c9d115af70e76aff63a6ac8b",
      "url": "https://pypi.org/packages/source/c/cylc-flow/cylc_flow-8.4.3.tar.gz"
    },
    "test": {
      "commands": [
        "cylc --version",
        "cylc version --long",
        "cylc get-resources job.sh",
        "cylc help licence",
        "cylc validate ./tests/simple-datetime"
      ],
      "files": [
        "tests/simple-datetime/flow.cylc"
      ],
      "imports": [
        "cylc.flow"
      ],
      "requires": [
        "python 3.8"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "__unix",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "ansimarkup",
        "async-timeout",
        "colorama",
        "cylc-flow-base",
        "graphene",
        "graphviz",
        "importlib-metadata",
        "jinja2",
        "matplotlib-base",
        "metomi-isodatetime",
        "packaging",
        "pandas",
        "pillow",
        "promise",
        "protobuf",
        "psutil",
        "python",
        "pyzmq",
        "requests",
        "rx",
        "tomli",
        "urwid"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Cylc (\"silk\") is a workflow engine for cycling systems - it orchestrates\ndistributed workflows of interdependent cycling tasks that may continue to\nrun indefinitely.\n",
      "dev_url": "https://github.com/cylc/cylc-flow",
      "doc_url": "https://cylc.github.io/cylc-doc/",
      "home": "https://cylc.org/",
      "license": "GPL-3.0-only",
      "license_family": "GPL",
      "license_file": "LICENSE.txt",
      "summary": "A workflow engine for cycling systems"
    },
    "build": {
      "noarch": "python",
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "MetRonnie",
        "hjoliver",
        "oliver-sanders"
      ]
    },
    "outputs": [
      {
        "build": {
          "noarch": "python",
          "script": "python -m pip install . --no-deps --ignore-installed -vv"
        },
        "name": "cylc-flow-base",
        "requirements": {
          "host": [
            "__unix",
            "pip",
            "python 3.8",
            "setuptools"
          ],
          "run": [
            "__unix",
            "python >=3.8",
            "ansimarkup >=1.0.0",
            "async-timeout >=3.0.0",
            "colorama >=0.4,<1.0",
            "graphene >=2.1,<3",
            "jinja2 >=3.0,<3.1",
            "metomi-isodatetime >=1!3.0.0,<1!3.2.0",
            "packaging",
            "protobuf >=4.24.4,<4.25.0",
            "psutil >=5.6.0",
            "pyzmq >=22",
            "importlib-metadata >=5.0",
            "urwid >=2.2,<3,!=2.6.2,!=2.6.3",
            "rx",
            "promise",
            "tomli >=2.0"
          ]
        }
      },
      {
        "build": {
          "noarch": "python",
          "script": "python -m pip install .[report-timings,tutorials,graph] --no-deps --ignore-installed -vv"
        },
        "name": "cylc-flow",
        "requirements": {
          "host": [
            "__unix",
            "pip",
            "python 3.8",
            "setuptools"
          ],
          "run": [
            "__unix",
            "python >=3.8",
            "cylc-flow-base",
            "graphviz",
            "pillow",
            "pandas >=1.0,<2",
            "matplotlib-base",
            "requests"
          ]
        }
      }
    ],
    "package": {
      "name": "cylc-flow",
      "version": "8.4.3"
    },
    "requirements": {
      "host": [
        "__unix",
        "pip",
        "python 3.8",
        "setuptools"
      ],
      "run": [
        "__unix",
        "python >=3.8"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b74a0feb9489e2a3489e8dfa81fc8593311d96b7c9d115af70e76aff63a6ac8b",
      "url": "https://pypi.org/packages/source/c/cylc-flow/cylc_flow-8.4.3.tar.gz"
    },
    "test": {
      "commands": [
        "cylc --version",
        "cylc version --long",
        "cylc get-resources job.sh",
        "cylc help licence",
        "cylc validate ./tests/simple-datetime"
      ],
      "files": [
        "tests/simple-datetime/flow.cylc"
      ],
      "imports": [
        "cylc.flow"
      ],
      "requires": [
        "python 3.8"
      ]
    }
  },
  "name": "cylc-flow",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cylc-flow",
      "cylc-flow-base"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cylc-flow.json"
  },
  "raw_meta_yaml": "{% set name = \"cylc-flow\" %}\n{% set version = \"8.4.3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz\n  sha256: b74a0feb9489e2a3489e8dfa81fc8593311d96b7c9d115af70e76aff63a6ac8b\n\nbuild:\n  number: 0\n  noarch: python\n\nrequirements:\n  host:\n    - __unix\n    - pip\n    - python {{ python_min }}\n    - setuptools\n  run:\n    - __unix\n    - python >={{ python_min }}\n\ntest:\n  requires:\n    - python {{ python_min }}\n  files:\n    - tests/simple-datetime/flow.cylc\n  imports:\n    - cylc.flow\n  commands:\n    - cylc --version\n    - cylc version --long\n    - cylc get-resources job.sh  # check packaging of non-python files\n    - cylc help licence  # check packaging of licence file\n    - cylc validate ./tests/simple-datetime\n\noutputs:\n  # base package with only required dependencies\n  - name: {{ name }}-base\n    build:\n      script: python -m pip install . --no-deps --ignore-installed -vv\n      noarch: python\n    requirements:\n      host:\n        - __unix\n        - pip\n        - python {{ python_min }}\n        - setuptools\n      run:\n        - __unix\n        - python >={{ python_min }}\n        - ansimarkup >=1.0.0\n        - async-timeout >=3.0.0\n        - colorama >=0.4,<1.0\n        - graphene >=2.1,<3\n        - jinja2 >=3.0,<3.1\n        - metomi-isodatetime >=1!3.0.0,<1!3.2.0\n        - packaging\n        - protobuf >=4.24.4,<4.25.0\n        - psutil >=5.6.0\n        - pyzmq >=22\n        - importlib-metadata >=5.0 # py<3.12 TODO: selectors don't work for noarch packages\n        - urwid >=2.2,<3,!=2.6.2,!=2.6.3\n\n        # non-pinned transitive dependencies used for type checking\n        - rx\n        - promise\n        - tomli >=2.0  # py<3.11 TODO: selectors don't work for noarch packages\n\n\n  # full package with all dependencies installed\n  # (excluding tests, developer extensions, etc)\n  - name: {{ name }}\n    build:\n      script: python -m pip install .[report-timings,tutorials,graph] --no-deps --ignore-installed -vv\n      noarch: python\n    requirements:\n      host:\n        - __unix\n        - pip\n        - python {{ python_min }}\n        - setuptools\n      run:\n        - __unix\n        - python >={{ python_min }}\n        - {{ pin_subpackage(name + \"-base\", exact=True) }}\n        # Dependencies for the `pip install` command above:\n        # static graphing\n        - graphviz\n        - pillow\n        # report-timings\n        - pandas >=1.0,<2\n        - matplotlib-base\n        # tutorials\n        - requests\n\nabout:\n  home: https://cylc.org/\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE.txt\n  summary: A workflow engine for cycling systems\n  description: |\n    Cylc (\"silk\") is a workflow engine for cycling systems - it orchestrates\n    distributed workflows of interdependent cycling tasks that may continue to\n    run indefinitely.\n  doc_url: https://cylc.github.io/cylc-doc/\n  dev_url: https://github.com/cylc/cylc-flow\n\nextra:\n  recipe-maintainers:\n    - MetRonnie\n    - hjoliver\n    - oliver-sanders\n",
  "req": {
    "__set__": true,
    "elements": [
      "__unix",
      "ansimarkup",
      "async-timeout",
      "colorama",
      "cylc-flow-base",
      "graphene",
      "graphviz",
      "importlib-metadata",
      "jinja2",
      "matplotlib-base",
      "metomi-isodatetime",
      "packaging",
      "pandas",
      "pillow",
      "pip",
      "promise",
      "protobuf",
      "psutil",
      "python",
      "pyzmq",
      "requests",
      "rx",
      "setuptools",
      "tomli",
      "urwid"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "__unix",
        "pip",
        "python",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "ansimarkup",
        "async-timeout",
        "colorama",
        "cylc-flow-base",
        "graphene",
        "graphviz",
        "importlib-metadata",
        "jinja2",
        "matplotlib-base",
        "metomi-isodatetime",
        "packaging",
        "pandas",
        "pillow",
        "promise",
        "protobuf",
        "psutil",
        "python",
        "pyzmq",
        "requests",
        "rx",
        "tomli",
        "urwid"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": []
    },
    "host": {
      "__set__": true,
      "elements": [
        "__unix",
        "pip",
        "python 3.8",
        "setuptools"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "__unix",
        "ansimarkup >=1.0.0",
        "async-timeout >=3.0.0",
        "colorama >=0.4,<1.0",
        "cylc-flow-base",
        "graphene >=2.1,<3",
        "graphviz",
        "importlib-metadata >=5.0",
        "jinja2 >=3.0,<3.1",
        "matplotlib-base",
        "metomi-isodatetime >=1!3.0.0,<1!3.2.0",
        "packaging",
        "pandas >=1.0,<2",
        "pillow",
        "promise",
        "protobuf >=4.24.4,<4.25.0",
        "psutil >=5.6.0",
        "python >=3.8",
        "pyzmq >=22",
        "requests",
        "rx",
        "tomli >=2.0",
        "urwid >=2.2,<3,!=2.6.2,!=2.6.3"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "python 3.8"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/c/cylc-flow/cylc_flow-8.4.3.tar.gz",
  "version": "8.4.3",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cylc-flow.json"
  }
}