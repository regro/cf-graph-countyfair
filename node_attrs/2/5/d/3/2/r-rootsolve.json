{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default",
      "win": "azure"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "r-rootsolve",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\""
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\""
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\"",
        "\"%R%\" -e \"library('rootSolve')\""
      ]
    }
  },
  "name": "r-rootsolve",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('rootSolve')\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-rootsolve"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-rootsolve.json"
  },
  "raw_meta_yaml": "{% set version = \"1.8.2.4\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-rootsolve\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  fn: rootSolve_{{ version }}.tar.gz\n  url:\n    - {{ cran_mirror }}/src/contrib/rootSolve_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/rootSolve/rootSolve_{{ version }}.tar.gz\n  sha256: e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - cross-r-base {{ r_base }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}        # [not win]\n    - {{ stdlib(\"c\") }}          # [not win]\n    - {{ compiler('fortran') }}  # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib(\"m2w64_c\") }}          # [win]\n    - {{ compiler('m2w64_fortran') }}        # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - r-base\n  run:\n    - r-base\n\ntest:\n  commands:\n    - $R -e \"library('rootSolve')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('rootSolve')\\\"\"  # [win]\n\nabout:\n  home: https://CRAN.R-project.org/package=rootSolve\n  license: GPL-2.0-or-later\n  summary: \"Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate\n    steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential\n    equations by numerical differencing (using the method-of-lines approach). Includes fortran code.\"\n  license_family: GPL2\n  license_file: {{ environ[\"PREFIX\"] }}/lib/R/share/licenses/GPL-2\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n    - MathiasHaudgaard\n    - FrodePedersen\n    - ArneKr\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "filesystem",
      "fortran_compiler_stub",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_fortran_compiler_stub",
      "make",
      "r-base",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "fortran_compiler_stub",
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
  ],
  "version": "1.8.2.4",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-rootsolve.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://CRAN.R-project.org/package=rootSolve",
      "license": "GPL-2.0-or-later",
      "license_family": "GPL2",
      "license_file": "/lib/R/share/licenses/GPL-2",
      "summary": "Routines to find the root of nonlinear functions, and to perform steady-state and equilibrium analysis of ordinary differential equations (ODE).  Includes routines that: (1) generate gradient and jacobian matrices (full and banded), (2) find roots of non-linear equations by the 'Newton-Raphson' method,  (3) estimate steady-state conditions of a system of (differential) equations in full, banded or sparse form, using the 'Newton-Raphson' method, or by dynamically running, (4) solve the steady-state conditions for uni-and multicomponent 1-D, 2-D, and 3-D partial differential equations, that have been converted to ordinary differential equations by numerical differencing (using the method-of-lines approach). Includes fortran code."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r",
        "MathiasHaudgaard",
        "FrodePedersen",
        "ArneKr"
      ]
    },
    "package": {
      "name": "r-rootsolve",
      "version": "1.8.2.4"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base"
      ],
      "run": [
        "r-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "fn": "rootSolve_1.8.2.4.tar.gz",
      "sha256": "e16a317ea494192e0a5668a18f7eb99675f8edf3b3095861d213bc2590ad385d",
      "url": [
        "https://cran.r-project.org/src/contrib/rootSolve_1.8.2.4.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/rootSolve/rootSolve_1.8.2.4.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('rootSolve')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}