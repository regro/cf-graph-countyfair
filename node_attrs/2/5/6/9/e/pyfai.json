{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "pyfai",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "name": "pyfai-base",
  "osx_64_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "pyfai",
      "pyfai-base"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/pyfai.json"
  },
  "raw_meta_yaml": "{% set name = \"pyfai\" %}\n{% set version = \"2025.3.0\" %}\n{% set sha256 = \"67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275\" %}\n\npackage:\n  name: {{ name|lower }}-base\n  version: {{ version }}\n\nsource:\n  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  skip: true  # [python_impl == \"pypy\"]\n  entry_points:\n    - check_calib = pyFAI.app.check_calib:main\n    - detector2nexus = pyFAI.app.detector2nexus:main\n    - diff_map = pyFAI.app.diff_map:main\n    - diff_tomo = pyFAI.app.diff_tomo:main\n    - eiger-mask = pyFAI.app.eiger_mask:main\n    - MX-calibrate = pyFAI.app.mx_calibrate:main\n    - pyFAI-average = pyFAI.app.average:main\n    - pyFAI-benchmark = pyFAI.app.benchmark:main\n    - pyFAI-calib = pyFAI.app.calib:main\n    - pyFAI-recalib = pyFAI.app.recalib:main\n    - pyFAI-saxs = pyFAI.app.saxs:main\n    - pyFAI-waxs = pyFAI.app.waxs:main\n    - sparsify-Bragg = pyFAI.app.sparsify:main\n    - peakfinder = pyFAI.app.peakfinder:main\n    - pyFAI-calib2 = pyFAI.app.calib2:main\n    - pyFAI-drawmask = pyFAI.app.drawmask:main\n    - pyFAI-diffmap = pyFAI.app.diff_map:main\n    - pyFAI-integrate = pyFAI.app.integrate:main\n    - pyFAI-diffmap-view = pyFAI.app.pilx:main\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - ninja                                  # [build_platform != target_platform]\n    - pkg-config                             # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ stdlib(\"c\") }}\n    - {{ compiler('cxx') }}\n\n  host:\n    - python\n    - python-build\n    - pip\n    - meson-python >=0.11\n    - meson >=0.64\n    - ninja\n    - wheel\n    - numpy\n    - cython >=0.29.31\n    - pyproject-metadata >=0.5.0\n    - tomli >=1.0.0\n\n  run:\n    - python\n    - h5py\n    - fabio\n    - silx-base >=1.1\n    - numexpr\n    - scipy\n    - matplotlib-base\n\n\ntest:\n  imports:\n    - pyFAI\n    - pyFAI.test\n    - pyFAI.third_party\n  commands:\n    - pip check\n  requires:\n    - pip\n\n\noutputs:\n  - name: pyfai-base\n\n  - name: pyfai\n    build:\n      noarch: generic\n    requirements:\n      run:\n        - {{ pin_subpackage('pyfai-base', max_pin=\"x.x.x.x\") }}\n        - matplotlib\n        - silx >=1.1\n        - hdf5plugin\n\nabout:\n  home: https://github.com/silx-kit/pyFAI/\n  license: MIT\n  license_family: MIT\n  license_file: copyright\n  summary: Python implementation of fast azimuthal integration\n\n  description: |\n    pyFAI is an azimuthal integration library that tries to be fast (as fast\n    as C and even more using OpenCL and GPU). It is based on histogramming of\n    the 2theta/Q positions of each (center of) pixel weighted by the intensity\n    of each pixel, but parallel version uses a SparseMatrix-DenseVector\n    multiplication. Neighboring output bins get also a contribution of pixels\n    next to the border thanks to pixel splitting. Finally pyFAI provides also\n    tools to calibrate the experimental setup using Debye-Scherrer rings of a\n    reference compound.\n  doc_url: http://www.silx.org/doc/pyFAI/latest/\n  dev_url: https://github.com/silx-kit/pyFAI/\n\nextra:\n  recipe-maintainers:\n    - CJ-Wright\n    - tacaswell\n    - chiahaoliu\n    - tschoonj\n    - kif\n    - t20100\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cxx_compiler_stub",
      "cython",
      "fabio",
      "h5py",
      "hdf5plugin",
      "matplotlib",
      "matplotlib-base",
      "meson",
      "meson-python",
      "ninja",
      "numexpr",
      "numpy",
      "pip",
      "pyfai-base",
      "pyproject-metadata",
      "python",
      "python-build",
      "scipy",
      "silx",
      "silx-base",
      "tomli",
      "wheel"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython >=0.29.31",
        "meson >=0.64",
        "meson-python >=0.11",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata >=0.5.0",
        "python",
        "python-build",
        "tomli >=1.0.0",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx >=1.1",
        "silx-base >=1.1"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  },
  "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz",
  "version": "2025.3.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/pyfai.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
      "dev_url": "https://github.com/silx-kit/pyFAI/",
      "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
      "home": "https://github.com/silx-kit/pyFAI/",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "copyright",
      "summary": "Python implementation of fast azimuthal integration"
    },
    "build": {
      "entry_points": [
        "check_calib = pyFAI.app.check_calib:main",
        "detector2nexus = pyFAI.app.detector2nexus:main",
        "diff_map = pyFAI.app.diff_map:main",
        "diff_tomo = pyFAI.app.diff_tomo:main",
        "eiger-mask = pyFAI.app.eiger_mask:main",
        "MX-calibrate = pyFAI.app.mx_calibrate:main",
        "pyFAI-average = pyFAI.app.average:main",
        "pyFAI-benchmark = pyFAI.app.benchmark:main",
        "pyFAI-calib = pyFAI.app.calib:main",
        "pyFAI-recalib = pyFAI.app.recalib:main",
        "pyFAI-saxs = pyFAI.app.saxs:main",
        "pyFAI-waxs = pyFAI.app.waxs:main",
        "sparsify-Bragg = pyFAI.app.sparsify:main",
        "peakfinder = pyFAI.app.peakfinder:main",
        "pyFAI-calib2 = pyFAI.app.calib2:main",
        "pyFAI-drawmask = pyFAI.app.drawmask:main",
        "pyFAI-diffmap = pyFAI.app.diff_map:main",
        "pyFAI-integrate = pyFAI.app.integrate:main",
        "pyFAI-diffmap-view = pyFAI.app.pilx:main"
      ],
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "CJ-Wright",
        "tacaswell",
        "chiahaoliu",
        "tschoonj",
        "kif",
        "t20100"
      ]
    },
    "outputs": [
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      },
      {
        "name": "pyfai-base"
      },
      {
        "build": {
          "noarch": "generic"
        },
        "name": "pyfai",
        "requirements": {
          "run": [
            "pyfai-base",
            "matplotlib",
            "silx >=1.1",
            "hdf5plugin"
          ]
        }
      }
    ],
    "package": {
      "name": "pyfai-base",
      "version": "2025.3.0"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "python",
        "python-build",
        "pip",
        "meson-python >=0.11",
        "meson >=0.64",
        "ninja",
        "wheel",
        "numpy",
        "cython >=0.29.31",
        "pyproject-metadata >=0.5.0",
        "tomli >=1.0.0"
      ],
      "run": [
        "python",
        "h5py",
        "fabio",
        "silx-base >=1.1",
        "numexpr",
        "scipy",
        "matplotlib-base"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "67b3bb7625170c63c33039c738e8aff02f0f1156f68a5eae444d56b5cdd06275",
      "url": "https://pypi.org/packages/source/p/pyfai/pyfai-2025.3.0.tar.gz"
    },
    "test": {
      "commands": [
        "pip check"
      ],
      "imports": [
        "pyFAI",
        "pyFAI.test",
        "pyFAI.third_party"
      ],
      "requires": [
        "pip"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cython",
        "meson",
        "meson-python",
        "ninja",
        "numpy",
        "pip",
        "pyproject-metadata",
        "python",
        "python-build",
        "tomli",
        "wheel"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "fabio",
        "h5py",
        "hdf5plugin",
        "matplotlib",
        "matplotlib-base",
        "numexpr",
        "pyfai-base",
        "python",
        "scipy",
        "silx",
        "silx-base"
      ]
    },
    "test": {
      "__set__": true,
      "elements": [
        "pip"
      ]
    }
  }
}