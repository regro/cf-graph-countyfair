{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    },
    "test": "native_and_emulated"
  },
  "feedstock_name": "samurai",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make",
        "ninja"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake",
        "if not exist %LIBRARY_PREFIX%\\include\\samurai\\field.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfigVersion.cmake (exit 1)"
      ]
    }
  },
  "name": "samurai",
  "osx_64_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "make"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "test -d ${PREFIX}/include/samurai",
        "test -f ${PREFIX}/include/samurai/field.hpp",
        "test -f ${PREFIX}/share/samurai/samuraiConfig.cmake",
        "test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "samurai"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/samurai.json"
  },
  "raw_meta_yaml": "{% set name = \"samurai\" %}\n{% set version = \"0.26.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/hpc-maths/samurai/archive/v{{ version }}.tar.gz\n  sha256: 66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3\n  # sha256 is the preferred checksum -- you can get it for a file with:\n  #  `openssl sha256 <file name>`.\n  # You may need the openssl package, available on conda-forge:\n  #  `conda install openssl -c conda-forge``\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - make  # [unix]\n    - ninja  # [win]\n  host:\n    - xtensor <0.26\n    - highfive\n    - fmt\n    - pugixml\n    - cli11\n  run:\n    - xtensor <0.26\n    - highfive\n    - fmt\n    - pugixml\n    - cli11\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/samurai  # [unix]\n    - test -f ${PREFIX}/include/samurai/field.hpp  # [unix]\n    - test -f ${PREFIX}/share/samurai/samuraiConfig.cmake  # [unix]\n    - test -f ${PREFIX}/share/samurai/samuraiConfigVersion.cmake  # [unix]\n    - if not exist %LIBRARY_PREFIX%\\include\\samurai\\field.hpp (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfig.cmake (exit 1)  # [win]\n    - if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfigVersion.cmake (exit 1)  # [win]\n\nabout:\n  home: https://github.com/hpc-maths/samurai\n  summary: Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it\n  description: |\n    samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\n    from the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\n    search for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\n    implement numerical methods.\n  license: BSD-3-Clause\n  license_file: LICENSE\n  doc_url: https://hpc-math-samurai.readthedocs.io\n\nextra:\n  recipe-maintainers:\n    - gouarin\n    - pmatalon\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cli11",
      "cmake",
      "cxx_compiler_stub",
      "fmt",
      "highfive",
      "make",
      "ninja",
      "pugixml",
      "xtensor"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cli11",
        "cxx_compiler_stub",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cli11",
        "cxx_compiler_stub",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "make",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor <0.26"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor <0.26"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz",
  "version": "0.26.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/samurai.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "samurai allows to implement several mesh adaptation methods (patch-based, cell-based, point-based)\nfrom the same data structure. The mesh is represented as intervals and a set algebra allows to efficiently\nsearch for subsets among these intervals. Samurai also offers a flexible and pleasant interface to easily\nimplement numerical methods.\n",
      "doc_url": "https://hpc-math-samurai.readthedocs.io",
      "home": "https://github.com/hpc-maths/samurai",
      "license": "BSD-3-Clause",
      "license_file": "LICENSE",
      "summary": "Intervals coupled with algebra of set to handle adaptive mesh refinement and operators on it"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "gouarin",
        "pmatalon"
      ]
    },
    "package": {
      "name": "samurai",
      "version": "0.26.0"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ],
      "run": [
        "xtensor <0.26",
        "highfive",
        "fmt",
        "pugixml",
        "cli11"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "66d94b787c701cb9287a63dffeff7bb129d9465bef7ec6513362b987bf3fbcd3",
      "url": "https://github.com/hpc-maths/samurai/archive/v0.26.0.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %LIBRARY_PREFIX%\\include\\samurai\\field.hpp (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfig.cmake (exit 1)",
        "if not exist %LIBRARY_PREFIX%\\share\\samurai\\samuraiConfigVersion.cmake (exit 1)"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "cli11",
        "fmt",
        "highfive",
        "pugixml",
        "xtensor"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}