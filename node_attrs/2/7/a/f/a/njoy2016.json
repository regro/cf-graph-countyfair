{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "test": "native_and_emulated"
  },
  "feedstock_hash": "139dbf979aa11568598291fe97a7d919ef8c0e29",
  "feedstock_hash_ts": 1759755845,
  "feedstock_name": "njoy2016",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "The NJOY Nuclear Data Processing System is a modular computer code designed\nto read evaluated data in ENDF format, transform the data in various ways,\nand output the results as libraries designed to be used in various applications.\nEach module performs a well defined processing task. The modules are essentially\nindependent programs, and they communicate with each other using input and\noutput files, plus a very few common variables.\n",
      "dev_url": "https://github.com/njoy/NJOY2016",
      "doc_url": "https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf",
      "home": "https://www.njoy21.io/NJOY2016/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Nuclear data processing with legacy NJOY"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "paulromano",
        "kkiesling",
        "nathangibson14",
        "whaeck"
      ]
    },
    "package": {
      "name": "njoy2016",
      "version": "2016.78"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2",
      "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.78.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import shutil; assert(shutil.which('njoy') != None)\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "The NJOY Nuclear Data Processing System is a modular computer code designed\nto read evaluated data in ENDF format, transform the data in various ways,\nand output the results as libraries designed to be used in various applications.\nEach module performs a well defined processing task. The modules are essentially\nindependent programs, and they communicate with each other using input and\noutput files, plus a very few common variables.\n",
      "dev_url": "https://github.com/njoy/NJOY2016",
      "doc_url": "https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf",
      "home": "https://www.njoy21.io/NJOY2016/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Nuclear data processing with legacy NJOY"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "paulromano",
        "kkiesling",
        "nathangibson14",
        "whaeck"
      ]
    },
    "package": {
      "name": "njoy2016",
      "version": "2016.78"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2",
      "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.78.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import shutil; assert(shutil.which('njoy') != None)\""
      ]
    }
  },
  "name": "njoy2016",
  "osx_64_meta_yaml": {
    "about": {
      "description": "The NJOY Nuclear Data Processing System is a modular computer code designed\nto read evaluated data in ENDF format, transform the data in various ways,\nand output the results as libraries designed to be used in various applications.\nEach module performs a well defined processing task. The modules are essentially\nindependent programs, and they communicate with each other using input and\noutput files, plus a very few common variables.\n",
      "dev_url": "https://github.com/njoy/NJOY2016",
      "doc_url": "https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf",
      "home": "https://www.njoy21.io/NJOY2016/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Nuclear data processing with legacy NJOY"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "paulromano",
        "kkiesling",
        "nathangibson14",
        "whaeck"
      ]
    },
    "package": {
      "name": "njoy2016",
      "version": "2016.78"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2",
      "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.78.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import shutil; assert(shutil.which('njoy') != None)\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "The NJOY Nuclear Data Processing System is a modular computer code designed\nto read evaluated data in ENDF format, transform the data in various ways,\nand output the results as libraries designed to be used in various applications.\nEach module performs a well defined processing task. The modules are essentially\nindependent programs, and they communicate with each other using input and\noutput files, plus a very few common variables.\n",
      "dev_url": "https://github.com/njoy/NJOY2016",
      "doc_url": "https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf",
      "home": "https://www.njoy21.io/NJOY2016/",
      "license": "BSD-3-Clause",
      "license_family": "BSD",
      "license_file": "LICENSE",
      "summary": "Nuclear data processing with legacy NJOY"
    },
    "build": {
      "number": "1"
    },
    "extra": {
      "recipe-maintainers": [
        "paulromano",
        "kkiesling",
        "nathangibson14",
        "whaeck"
      ]
    },
    "package": {
      "name": "njoy2016",
      "version": "2016.78"
    },
    "requirements": {
      "build": [
        "cmake",
        "make",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "c_stdlib_stub"
      ],
      "host": [
        "python"
      ],
      "run": [
        "python"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2",
      "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.78.tar.gz"
    },
    "test": {
      "commands": [
        "python -c \"import shutil; assert(shutil.which('njoy') != None)\""
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "njoy2016"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "osx_arm64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/njoy2016.json"
  },
  "raw_meta_yaml": "{% set name = \"NJOY2016\" %}\n{% set version = \"2016.78\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/njoy/{{ name }}/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 615b7ab506f64d53fcd09d3731762fa6e86d96c97497c1049417c48487a31ff2\n\nbuild:\n  number: 1\n  skip: true  # [win or py<34]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.\n    # Compilers are named 'c', 'cxx' and 'fortran'.\n    - cmake\n    - make\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - {{ stdlib(\"c\") }}\n  host:\n    - python\n  run:\n    - python\n\ntest:\n  commands:\n    - python -c \"import shutil; assert(shutil.which('njoy') != None)\"\n\nabout:\n  home: https://www.njoy21.io/NJOY2016/\n  summary: Nuclear data processing with legacy NJOY\n  description: |\n    The NJOY Nuclear Data Processing System is a modular computer code designed\n    to read evaluated data in ENDF format, transform the data in various ways,\n    and output the results as libraries designed to be used in various applications.\n    Each module performs a well defined processing task. The modules are essentially\n    independent programs, and they communicate with each other using input and\n    output files, plus a very few common variables.\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  doc_url: https://github.com/njoy/NJOY2016-manual/raw/master/njoy16.pdf\n  dev_url: https://github.com/njoy/NJOY2016\n\nextra:\n  recipe-maintainers:\n    - paulromano\n    - kkiesling\n    - nathangibson14\n    - whaeck\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "fortran_compiler_stub",
      "make",
      "python"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "python"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/njoy/NJOY2016/archive/refs/tags/2016.78.tar.gz",
  "version": "2016.78",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/njoy2016.json"
  }
}