{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "bot": {
      "automerge": true
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_name": "r-n1qn1",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/n1qn1",
      "license": "CECILL-2.0",
      "license_file": "LICENCE",
      "summary": "Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-n1qn1",
      "version": "6.0.1_12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ],
      "run": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "622c54b40d688a4ca9c0c8580a678bfbf0ed9320696432c5024ce5cd55ddf5e5",
      "url": [
        "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('n1qn1')\""
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/n1qn1",
      "license": "CECILL-2.0",
      "license_file": "LICENCE",
      "summary": "Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-n1qn1",
      "version": "6.0.1_12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ],
      "run": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "622c54b40d688a4ca9c0c8580a678bfbf0ed9320696432c5024ce5cd55ddf5e5",
      "url": [
        "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('n1qn1')\"",
        "\"%R%\" -e \"library('n1qn1')\""
      ]
    }
  },
  "name": "r-n1qn1",
  "osx_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/n1qn1",
      "license": "CECILL-2.0",
      "license_file": "LICENCE",
      "summary": "Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-n1qn1",
      "version": "6.0.1_12"
    },
    "requirements": {
      "build": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ],
      "host": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ],
      "run": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "622c54b40d688a4ca9c0c8580a678bfbf0ed9320696432c5024ce5cd55ddf5e5",
      "url": [
        "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "$R -e \"library('n1qn1')\""
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "make"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "r-n1qn1"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "osx_64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/r-n1qn1.json"
  },
  "raw_meta_yaml": "{% set version = \"6.0.1-12\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-n1qn1\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/n1qn1_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/n1qn1/n1qn1_{{ version }}.tar.gz\n  sha256: 622c54b40d688a4ca9c0c8580a678bfbf0ed9320696432c5024ce5cd55ddf5e5\n\nbuild:\n  number: 1\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ stdlib('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ stdlib('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{ compiler('fortran') }}        # [not win]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ posix }}filesystem        # [win]\n    - {{ posix }}make\n    - {{ posix }}sed               # [win]\n    - {{ posix }}coreutils         # [win]\n    - {{ posix }}zip               # [win]\n  host:\n    - libblas                # [unix]\n    - r-base\n    - r-rcpp >=0.12.3\n    - r-rcpparmadillo >=0.5.600.2.0\n  run:\n    - libblas                # [unix]\n    - r-base\n    - r-rcpp >=0.12.3\n    - r-rcpparmadillo >=0.5.600.2.0\n\ntest:\n  commands:\n    - $R -e \"library('n1qn1')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('n1qn1')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/nlmixrdevelopment/n1qn1\n  license: CECILL-2.0\n  license_file: LICENCE\n  summary: Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed\n    up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>.\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: n1qn1\n# Title: Port of the 'Scilab' 'n1qn1' and 'qnbd' Modules for (Un)constrained BFGS Optimization\n# Version: 6.0.1-3\n# Authors@R: c(person(\"Matthew\", \"Fidler\", role=c(\"aut\",\"cre\"), email= \"matthew.fidler@gmail.com\"), person(\"Wenping\", \"Wang\", role = \"aut\", email = \"wwang8198@gmail.com\"), person(\"Claude\",\"Lemarechal\", role=c(\"aut\",\"ctb\")), person(\"Joseph\", \"Bonnans\", role=c(\"ctb\")), person(\"Jean-Charles\", \"Gilbert\", role=c(\"ctb\")), person(\"Claudia\",\"Sagastizabal\",role=c(\"ctb\")), person(\"Stephen L.\", \"Campbell,\", role=c(\"ctb\")), person(\"Jean-Philippe\", \"Chancelier\", role=c(\"ctb\")), person(\"Ramine\", \"Nikoukhah\", role=c(\"ctb\")), person(\"Dirk\", \"Eddelbuettel\", role=\"ctb\"), person(\"Bruno\", \"Jofret\", role=\"ctb\"), person(\"INRIA\", role=\"cph\") )\n# Maintainer: Matthew Fidler <matthew.fidler@gmail.com>\n# Description: Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>.\n# URL: https://github.com/nlmixrdevelopment/n1qn1\n# BugReports: https://github.com/nlmixrdevelopment/n1qn1/issues\n# Depends: R (>= 3.2)\n# Imports: Rcpp (>= 0.12.3)\n# Suggests: testthat, covr\n# License: CeCILL-2\n# NeedsCompilation: yes\n# LinkingTo: RcppArmadillo (>= 0.5.600.2.0), Rcpp (>= 0.12.3)\n# LazyData: true\n# RoxygenNote: 6.0.1\n# Packaged: 2018-09-17 02:34:39 UTC; FIDLEMA3\n# Author: Matthew Fidler [aut, cre], Wenping Wang [aut], Claude Lemarechal [aut, ctb], Joseph Bonnans [ctb], Jean-Charles Gilbert [ctb], Claudia Sagastizabal [ctb], Stephen L. Campbell, [ctb], Jean-Philippe Chancelier [ctb], Ramine Nikoukhah [ctb], Dirk Eddelbuettel [ctb], Bruno Jofret [ctb], INRIA [cph]\n# Repository: CRAN\n# Date/Publication: 2018-09-17 09:00:03 UTC\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "coreutils",
      "cxx_compiler_stub",
      "filesystem",
      "fortran_compiler_stub",
      "libblas",
      "m2w64_c_compiler_stub",
      "m2w64_c_stdlib_stub",
      "m2w64_cxx_compiler_stub",
      "m2w64_fortran_compiler_stub",
      "make",
      "r-base",
      "r-rcpp",
      "r-rcpparmadillo",
      "sed",
      "zip"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "fortran_compiler_stub",
        "libblas",
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "coreutils",
        "cxx_compiler_stub",
        "filesystem",
        "fortran_compiler_stub",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "libblas",
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": [
    "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz",
    "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz",
    "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
    "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz"
  ],
  "version": "6.0.1_12",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/r-n1qn1.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "home": "https://github.com/nlmixrdevelopment/n1qn1",
      "license": "CECILL-2.0",
      "license_file": "LICENCE",
      "summary": "Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS \"qn\" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>."
    },
    "build": {
      "number": "1",
      "rpaths": [
        "lib/R/lib/",
        "lib/"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "conda-forge/r"
      ]
    },
    "package": {
      "name": "r-n1qn1",
      "version": "6.0.1_12"
    },
    "requirements": {
      "build": [
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "filesystem",
        "make",
        "sed",
        "coreutils",
        "zip"
      ],
      "host": [
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ],
      "run": [
        "r-base",
        "r-rcpp >=0.12.3",
        "r-rcpparmadillo >=0.5.600.2.0"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "622c54b40d688a4ca9c0c8580a678bfbf0ed9320696432c5024ce5cd55ddf5e5",
      "url": [
        "https://cran.r-project.org/src/contrib/n1qn1_6.0.1-12.tar.gz",
        "https://cran.r-project.org/src/contrib/Archive/n1qn1/n1qn1_6.0.1-12.tar.gz"
      ]
    },
    "test": {
      "commands": [
        "\"%R%\" -e \"library('n1qn1')\""
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "coreutils",
        "filesystem",
        "m2w64_c_compiler_stub",
        "m2w64_c_stdlib_stub",
        "m2w64_cxx_compiler_stub",
        "m2w64_fortran_compiler_stub",
        "make",
        "sed",
        "zip"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "r-base",
        "r-rcpp",
        "r-rcpparmadillo"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}