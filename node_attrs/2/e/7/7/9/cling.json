{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "remote_ci_setup": [
      "conda-forge-ci-setup=4",
      "conda-build>=24.1",
      "libmamba>2.0.5"
    ],
    "test": "native_and_emulated"
  },
  "feedstock_name": "cling",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "cxx_compiler_stub",
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "cxx_compiler_stub",
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "cxx_compiler_stub",
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "cxx_compiler_stub",
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'",
        "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
        "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)"
      ]
    }
  },
  "name": "cling",
  "osx_64_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "test -f $PREFIX/bin/cling",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "cling"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/cling.json"
  },
  "raw_meta_yaml": "{% set version = \"1.2\" %}\n{% set build_number = 1 %}\n{% set clang_version = \"18.1.8\" %}\n\npackage:\n  name: cling\n  version: {{ version }}\n\nsource:\n  url: https://github.com/root-project/cling/archive/v{{ version }}.tar.gz\n  sha256: beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb\n  patches:\n    # Export all symbols on windows to generate import library\n    - patches/0001-Export-all-symbols-on-windows.patch\n    # Do not build Jupyter kernel - use xeus-cling instead\n    - patches/0002-remove-jupyter.patch\n    # Prevent setting sysroot include directory on OS X\n    - patches/0003-Drop-compile-time-sysroot.patch\n    # Enable redefinitions\n    - patches/0004-enable-redefinition-allowed.patch\n    # LLVM_REQUIES_EH\n    - patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch\n\n\nbuild:\n  number: {{ build_number }}\n  run_exports:\n    - {{ pin_subpackage(\"cling\", max_pin='x.x') }}\n\nrequirements:\n  build:\n    - cmake\n    - ninja\n    - {{ stdlib('c') }}\n    - {{ compiler('cxx') }}\n    - llvmdev {{ clang_version }}   # [build_platform != target_platform]\n    - libxml2                       # [build_platform != target_platform]\n    - zlib                          # [build_platform != target_platform]\n    - zstd                          # [build_platform != target_platform]\n  host:\n    - clangdev {{ clang_version }} cling_{{ version }}*\n    - llvmdev\n    - llvm\n    - zlib\n    - zstd\n  run:\n    # We really depend on the host compiler at runtime:\n    #  - the host compiler STL is one to be used.\n    #  - it is used by cling's runtime compatibility check.\n    - {{ compiler('cxx') }}  # [linux]\n    - clangdev {{ clang_version }} cling_{{ version }}*\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/cling  # [unix]\n    - if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)  # [win]\n    - cling '2+3; 0'\n    - cling '#include <vector>'\n\nabout:\n  dev_url: https://github.com/root-project/cling\n  doc_url: https://root.cern.ch/cling\n  home: https://root.cern.ch/cling\n  license: NCSA OR LGPL-2.1-only\n  license_file: LICENSE.TXT\n  summary: Cling - The Interactive C++ Interpreter\n  description: Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.\n\nextra:\n  recipe-maintainers:\n    - martinRenou\n    - SylvainCorlay\n    - JohanMabille\n    - gouarin\n    - chrisburr\n    - h-vetinari\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "clangdev",
      "cmake",
      "cxx_compiler_stub",
      "llvm",
      "llvmdev",
      "ninja",
      "zlib",
      "zstd"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clangdev",
        "cxx_compiler_stub",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "clangdev",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev 18.1.8 cling_1.2*",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev 18.1.8 cling_1.2*",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz",
  "version": "1.2",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/cling.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.",
      "dev_url": "https://github.com/root-project/cling",
      "doc_url": "https://root.cern.ch/cling",
      "home": "https://root.cern.ch/cling",
      "license": "NCSA OR LGPL-2.1-only",
      "license_file": "LICENSE.TXT",
      "summary": "Cling - The Interactive C++ Interpreter"
    },
    "build": {
      "number": "1",
      "run_exports": [
        "cling"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "martinRenou",
        "SylvainCorlay",
        "JohanMabille",
        "gouarin",
        "chrisburr",
        "h-vetinari"
      ]
    },
    "package": {
      "name": "cling",
      "version": "1.2"
    },
    "requirements": {
      "build": [
        "cmake",
        "ninja",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ],
      "host": [
        "clangdev 18.1.8 cling_1.2*",
        "llvmdev",
        "llvm",
        "zlib",
        "zstd"
      ],
      "run": [
        "clangdev 18.1.8 cling_1.2*"
      ]
    },
    "schema_version": 0,
    "source": {
      "patches": [
        "patches/0001-Export-all-symbols-on-windows.patch",
        "patches/0002-remove-jupyter.patch",
        "patches/0003-Drop-compile-time-sysroot.patch",
        "patches/0004-enable-redefinition-allowed.patch",
        "patches/0005-Set-LLVM_REQUIRES_EH-for-Cling.patch"
      ],
      "sha256": "beee8e461424d267ee2dec88b3de57326bc8e3470b4ceae2744de7d3d3aba1eb",
      "url": "https://github.com/root-project/cling/archive/v1.2.tar.gz"
    },
    "test": {
      "commands": [
        "if exist %LIBRARY_PREFIX%\\\\bin\\\\libcling.dll (exit 0) else (exit 1)",
        "if exist %LIBRARY_PREFIX%\\\\lib\\\\libcling.lib (exit 0) else (exit 1)",
        "cling '2+3; 0'",
        "cling '#include <vector>'"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "clangdev",
        "llvm",
        "llvmdev",
        "zlib",
        "zstd"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "clangdev"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}