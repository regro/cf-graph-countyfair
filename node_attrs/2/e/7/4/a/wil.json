{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "conda_build": {
      "error_overlinking": true
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    }
  },
  "feedstock_hash": "b32d9147810500a32992e068dde040adefeb2fc2",
  "feedstock_hash_ts": 1742930932,
  "feedstock_name": "wil",
  "hash_type": "sha256",
  "meta_yaml": {
    "about": {
      "description": "The Windows Implementation Libraries (WIL) is a header-only C++ library created to make life easier for developers on Windows through readable type-safe C++ interfaces for common Windows coding patterns.",
      "dev_url": "https://github.com/microsoft/wil",
      "doc_url": "https://github.com/Microsoft/wil/wiki",
      "home": "https://github.com/microsoft/wil",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Windows Implementation Libraries (WIL)"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "teo-tsirpanis",
        "jdblischak",
        "Shelnutt2"
      ]
    },
    "package": {
      "name": "wil",
      "version": "1.0.250325.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c9e667d5f86ded43d17b5669d243e95ca7b437e3a167c170805ffd4aa8a9a786",
      "url": "https://github.com/microsoft/wil/archive/refs/tags/v1.0.250325.1.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\WIL\\\\wilConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\wil\\\\com.h exit 1"
      ]
    }
  },
  "name": "wil",
  "outputs_names": {
    "__set__": true,
    "elements": [
      "wil"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/wil.json"
  },
  "raw_meta_yaml": "{% set name = \"wil\" %}\n{% set version = \"1.0.250325.1\" %}\n{% set sha256 = \"c9e667d5f86ded43d17b5669d243e95ca7b437e3a167c170805ffd4aa8a9a786\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/microsoft/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  skip: true  # [not win]\n\nrequirements:\n  build:\n    - {{ compiler(\"cxx\") }}\n    - {{ stdlib(\"c\") }}\n    - cmake\n    - ninja\n\ntest:\n  commands:\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\WIL\\\\wilConfig.cmake exit 1\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\wil\\\\com.h exit 1\n\nabout:\n  home: https://github.com/microsoft/wil\n  summary: Windows Implementation Libraries (WIL)\n  description: >-\n    The Windows Implementation Libraries (WIL) is a header-only C++ library created to make life easier for developers on Windows through readable type-safe C++ interfaces for common Windows coding patterns.\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  doc_url: https://github.com/Microsoft/wil/wiki\n  dev_url: https://github.com/microsoft/wil\n\nextra:\n  recipe-maintainers:\n    - teo-tsirpanis\n    - jdblischak\n    - Shelnutt2\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "ninja"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/microsoft/wil/archive/refs/tags/v1.0.250325.1.tar.gz",
  "version": "1.0.250325.1",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/wil.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "The Windows Implementation Libraries (WIL) is a header-only C++ library created to make life easier for developers on Windows through readable type-safe C++ interfaces for common Windows coding patterns.",
      "dev_url": "https://github.com/microsoft/wil",
      "doc_url": "https://github.com/Microsoft/wil/wiki",
      "home": "https://github.com/microsoft/wil",
      "license": "MIT",
      "license_family": "MIT",
      "license_file": "LICENSE",
      "summary": "Windows Implementation Libraries (WIL)"
    },
    "build": {
      "number": "0"
    },
    "extra": {
      "recipe-maintainers": [
        "teo-tsirpanis",
        "jdblischak",
        "Shelnutt2"
      ]
    },
    "package": {
      "name": "wil",
      "version": "1.0.250325.1"
    },
    "requirements": {
      "build": [
        "cxx_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "ninja"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "c9e667d5f86ded43d17b5669d243e95ca7b437e3a167c170805ffd4aa8a9a786",
      "url": "https://github.com/microsoft/wil/archive/refs/tags/v1.0.250325.1.tar.gz"
    },
    "test": {
      "commands": [
        "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\WIL\\\\wilConfig.cmake exit 1",
        "if not exist %PREFIX%\\\\Library\\\\include\\\\wil\\\\com.h exit 1"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": []
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}