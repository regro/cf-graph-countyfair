{
  "archived": false,
  "branch": "main",
  "conda-forge.yml": {
    "build_platform": {
      "linux_aarch64": "linux_64",
      "linux_ppc64le": "linux_64",
      "osx_arm64": "osx_64"
    },
    "conda_build": {
      "error_overlinking": true,
      "pkg_format": "2"
    },
    "conda_forge_output_validation": true,
    "github": {
      "branch_name": "main",
      "tooling_branch_name": "main"
    },
    "provider": {
      "linux_aarch64": "default",
      "linux_ppc64le": "default"
    }
  },
  "feedstock_hash": "667ba7e2fd3a41fa6b69071e33ea503fe071280f",
  "feedstock_hash_ts": 1747139034,
  "feedstock_name": "qpdf",
  "hash_type": "sha256",
  "linux_64_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help"
      ]
    }
  },
  "linux_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_aarch64_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help"
      ]
    }
  },
  "linux_aarch64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "linux_ppc64le_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help"
      ]
    }
  },
  "linux_ppc64le_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help",
        "where qpdf"
      ]
    }
  },
  "name": "qpdf",
  "osx_64_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help"
      ]
    }
  },
  "osx_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "osx_arm64_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "which qpdf",
        "qpdf --help"
      ]
    }
  },
  "osx_arm64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "outputs_names": {
    "__set__": true,
    "elements": [
      "qpdf"
    ]
  },
  "parsing_error": false,
  "platforms": [
    "linux_64",
    "linux_aarch64",
    "linux_ppc64le",
    "osx_64",
    "osx_arm64",
    "win_64"
  ],
  "pr_info": {
    "__lazy_json__": "pr_info/qpdf.json"
  },
  "raw_meta_yaml": "{% set name = \"qpdf\" %}\n{% set version = \"12.2.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/qpdf/qpdf/releases/download/v{{ version }}/qpdf-{{ version }}.tar.gz\n  sha256: b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('qpdf') }}\n\nrequirements:\n  build:\n    - {{ stdlib(\"c\") }}\n    - {{ compiler(\"c\") }}\n    - {{ compiler(\"cxx\") }}\n    - cmake\n    - ninja\n  host:\n    - libjpeg-turbo\n    - openssl\n    - zlib\n\ntest:\n  commands:\n    - which qpdf     # [unix]\n    - where qpdf     # [win]\n    - qpdf --help    # [build_platform == target_platform]\n\nabout:\n  home: https://qpdf.sourceforge.io/\n  license: Apache-2.0\n  license_family: Apache\n  license_file: LICENSE.txt\n  summary: >-\n    Command-line program that does structural, content-preserving transformations on PDF files\n  description: |\n    With QPDF, it is possible to copy objects from one PDF file into another\n    and to manipulate the list of pages in a PDF file.  This makes it possible\n    to merge and split PDF files. The QPDF library also makes it possible for\n    you to create PDF files from scratch.  In this mode, you are responsible\n    for supplying all the contents of the file, while the QPDF library takes\n    care off all the syntactical representation of the objects, creation of\n    cross references tables and, if you use them, object streams, encryption,\n    linearization, and other syntactic details.\n  doc_url: https://qpdf.readthedocs.io/\n  dev_url: https://github.com/qpdf/qpdf\n\nextra:\n  recipe-maintainers:\n    - jenzopr\n    - carlodri\n",
  "req": {
    "__set__": true,
    "elements": [
      "c_compiler_stub",
      "c_stdlib_stub",
      "cmake",
      "cxx_compiler_stub",
      "libjpeg-turbo",
      "ninja",
      "openssl",
      "zlib"
    ]
  },
  "requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub",
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cxx_compiler_stub"
      ]
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "strong_exports": false,
  "total_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  },
  "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz",
  "version": "12.2.0",
  "version_pr_info": {
    "__lazy_json__": "version_pr_info/qpdf.json"
  },
  "win_64_meta_yaml": {
    "about": {
      "description": "With QPDF, it is possible to copy objects from one PDF file into another\nand to manipulate the list of pages in a PDF file.  This makes it possible\nto merge and split PDF files. The QPDF library also makes it possible for\nyou to create PDF files from scratch.  In this mode, you are responsible\nfor supplying all the contents of the file, while the QPDF library takes\ncare off all the syntactical representation of the objects, creation of\ncross references tables and, if you use them, object streams, encryption,\nlinearization, and other syntactic details.\n",
      "dev_url": "https://github.com/qpdf/qpdf",
      "doc_url": "https://qpdf.readthedocs.io/",
      "home": "https://qpdf.sourceforge.io/",
      "license": "Apache-2.0",
      "license_family": "Apache",
      "license_file": "LICENSE.txt",
      "summary": "Command-line program that does structural, content-preserving transformations on PDF files"
    },
    "build": {
      "number": "0",
      "run_exports": [
        "qpdf"
      ]
    },
    "extra": {
      "recipe-maintainers": [
        "jenzopr",
        "carlodri"
      ]
    },
    "package": {
      "name": "qpdf",
      "version": "12.2.0"
    },
    "requirements": {
      "build": [
        "c_stdlib_stub",
        "c_compiler_stub",
        "cxx_compiler_stub",
        "cmake",
        "ninja"
      ],
      "host": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "schema_version": 0,
    "source": {
      "sha256": "b3d1575b2218badc3549d6977524bb0f8c468c6528eebc8967bbe3078cf2cace",
      "url": "https://github.com/qpdf/qpdf/releases/download/v12.2.0/qpdf-12.2.0.tar.gz"
    },
    "test": {
      "commands": [
        "where qpdf",
        "qpdf --help"
      ]
    }
  },
  "win_64_requirements": {
    "build": {
      "__set__": true,
      "elements": [
        "c_compiler_stub",
        "c_stdlib_stub",
        "cmake",
        "cxx_compiler_stub",
        "ninja"
      ]
    },
    "host": {
      "__set__": true,
      "elements": [
        "libjpeg-turbo",
        "openssl",
        "zlib"
      ]
    },
    "run": {
      "__set__": true,
      "elements": []
    },
    "test": {
      "__set__": true,
      "elements": []
    }
  }
}